
	.section	".text",#alloc,#execinstr
	.align	8
	.skip	16

	! block 0

	.global	OSMesaCreateContext
	.type	OSMesaCreateContext,#function
OSMesaCreateContext:
	save	%sp,-208,%sp

	! block 1
.L13:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]

	! block 2
.L14:
.L16:

! File osmesa.c:
!    1	/* $Id: osmesa.c,v 1.19 1997/07/24 01:24:11 brianp Exp $ */
!    2	
!    3	/*
!    4	 * Mesa 3-D graphics library
!    5	 * Version:  2.4
!    6	 * Copyright (C) 1995-1997  Brian Paul
!    7	 *
!    8	 * This library is free software; you can redistribute it and/or
!    9	 * modify it under the terms of the GNU Library General Public
!   10	 * License as published by the Free Software Foundation; either
!   11	 * version 2 of the License, or (at your option) any later version.
!   12	 *
!   13	 * This library is distributed in the hope that it will be useful,
!   14	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
!   15	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
!   16	 * Library General Public License for more details.
!   17	 *
!   18	 * You should have received a copy of the GNU Library General Public
!   19	 * License along with this library; if not, write to the Free
!   20	 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
!   21	 */
!   22	
!   24	/*
!   25	 * $Log: osmesa.c,v $
!   26	 * Revision 1.19  1997/07/24 01:24:11  brianp
!   27	 * changed precompiled header symbol from PCH to PC_HEADER
!   28	 *
!   29	 * Revision 1.18  1997/07/16 03:07:28  brianp
!   30	 * added optimized blended lines (Randy Frank)
!   31	 *
!   32	 * Revision 1.17  1997/07/11 23:08:15  brianp
!   33	 * added OSMesaGetDepthBuffer() function (Randy Frank)
!   34	 *
!   35	 * Revision 1.16  1997/06/20 02:48:54  brianp
!   36	 * changed color components from GLfixed to GLubyte
!   37	 * fixed bug involving rowlength in OSMesaMakeCurrent()
!   38	 *
!   39	 * Revision 1.15  1997/05/28 03:25:43  brianp
!   40	 * added precompiled header (PCH) support
!   41	 *
!   42	 * Revision 1.14  1997/05/26 21:15:37  brianp
!   43	 * now pass red/green/blue/alpha bits to gl_create_visual()
!   44	 *
!   45	 * Revision 1.13  1997/03/21 01:57:49  brianp
!   46	 * added RendererString() function
!   47	 *
!   48	 * Revision 1.12  1997/03/16 02:41:20  brianp
!   49	 * did some clean-up in osmesa_setup_DD_pointers()
!   50	 *
!   51	 * Revision 1.11  1997/03/16 02:37:05  brianp
!   52	 * changed line functions to use linetemp.h
!   53	 *
!   54	 * Revision 1.10  1997/03/06 01:10:29  brianp
!   55	 * added Randy Frank's optimized line drawing code
!   56	 *
!   57	 * Revision 1.9  1997/02/10 20:34:33  brianp
!   58	 * added OSMESA_RGB and OSMESA_BGR, per Randy Frank
!   59	 *
!   60	 * Revision 1.8  1996/10/25 00:09:45  brianp
!   61	 * pass DEPTH_BITS, STENCIL_BITS, and ACCUM_BITS to gl_create_visual()
!   62	 *
!   63	 * Revision 1.7  1996/10/01 03:30:48  brianp
!   64	 * use new FixedToDepth() macro
!   65	 *
!   66	 * Revision 1.6  1996/10/01 01:43:21  brianp
!   67	 * added extra braces to the INNER_LOOP triangle macros
!   68	 *
!   69	 * Revision 1.5  1996/09/27 01:32:37  brianp
!   70	 * removed unused variables
!   71	 *
!   72	 * Revision 1.4  1996/09/19 03:17:28  brianp
!   73	 * now just one parameter to gl_create_framebuffer()
!   74	 *
!   75	 * Revision 1.3  1996/09/15 14:28:16  brianp
!   76	 * now use GLframebuffer and GLvisual
!   77	 *
!   78	 * Revision 1.2  1996/09/14 20:20:11  brianp
!   79	 * misc bug fixes from Randy Frank
!   80	 *
!   81	 * Revision 1.1  1996/09/13 01:38:16  brianp
!   82	 * Initial revision
!   83	 *
!   84	 */
!   85	
!   88	/*
!   89	 * Off-Screen Mesa rendering / Rendering into client memory space
!   90	 */
!   91	
!   93	#ifdef PC_HEADER
!   94	#include "all.h"
!   95	#else
!   96	#include <stdlib.h>
!   97	#include <string.h>
!   98	#include "GL/osmesa.h"
!   99	#include "context.h"
!  100	#include "depth.h"
!  101	#include "macros.h"
!  102	#include "matrix.h"
!  103	#include "types.h"
!  104	#include "vb.h"
!  105	#endif
!  106	
!  108	struct osmesa_context {
!  109	   GLcontext *gl_ctx;		/* The core GL/Mesa context */
!  110	   GLvisual *gl_visual;		/* Describes the buffers */
!  111	   GLframebuffer *gl_buffer;	/* Depth, stencil, accum, etc buffers */
!  112	   GLenum format;		/* either GL_RGBA or GL_COLOR_INDEX */
!  113	   void *buffer;		/* the image buffer */
!  114	   GLint width, height;		/* size of image buffer */
!  115	   GLuint pixel;		/* current color index or RGBA pixel value */
!  116	   GLuint clearpixel;		/* pixel for clearing the color buffer */
!  117	   GLint rowlength;		/* number of pixels per row */
!  118	   GLint userRowLength;		/* user-specified number of pixels per row */
!  119	   GLint rshift, gshift;	/* bit shifts for RGBA formats */
!  120	   GLint bshift, ashift;
!  121	   GLint rind, gind, bind;	/* index offsets for RGBA formats */
!  122	   void *rowaddr[MAX_HEIGHT];	/* address of first pixel in each image row */
!  123	   GLboolean yup;		/* TRUE  -> Y increases upward */
!  124					/* FALSE -> Y increases downward */
!  125	};
!  126	
!  129	#ifdef THREADS
!  130	   /* A context handle for each thread */
!  131	   /* TODO: an array/table of contexts indexed by thread IDs */
!  132	#else
!  133	   /* One current context for address space, all threads */
!  134	   static OSMesaContext Current = NULL;
!  135	#endif
!  136	
!  139	/* A forward declaration: */
!  140	static void osmesa_setup_DD_pointers( GLcontext *ctx );
!  141	
!  144	/**********************************************************************/
!  145	/*****                    Public Functions                        *****/
!  146	/**********************************************************************/
!  147	
!  149	/*
!  150	 * Create an Off-Screen Mesa rendering context.  The only attribute needed is
!  151	 * an RGBA vs Color-Index mode flag.
!  152	 *
!  153	 * Input:  format - either GL_RGBA or GL_COLOR_INDEX
!  154	 *         sharelist - specifies another OSMesaContext with which to share
!  155	 *                     display lists.  NULL indicates no sharing.
!  156	 * Return:  an OSMesaContext or 0 if error
!  157	 */
!  158	OSMesaContext OSMesaCreateContext( GLenum format, OSMesaContext sharelist )
!  159	{
!  160	   OSMesaContext osmesa;
!  161	   GLfloat rscale, gscale, bscale, ascale;
!  162	   GLint rshift, gshift, bshift, ashift;
!  163	   GLint rind, gind, bind;
!  164	   GLint index_bits;
!  165	   GLboolean rgbmode;
!  166	   GLboolean swalpha;
!  167	   GLuint i4 = 1;

	mov	1,%l0
	st	%l0,[%fp-64]

	! block 3
.L17:

!  168	   GLubyte *i1 = (GLubyte *) &i4;

	add	%fp,-64,%l0
	st	%l0,[%fp-68]

	! block 4
.L18:

!  169	   GLint little_endian = *i1;

	ld	[%fp-68],%l0
	ldub	[%l0+0],%l0
	st	%l0,[%fp-72]

	! block 5
.L19:

!  171	   swalpha = GL_FALSE;

	stb	%g0,[%fp-58]

	! block 6
.L20:

!  172	   rind = gind = bind = 0;

	st	%g0,[%fp-52]
	st	%g0,[%fp-48]
	st	%g0,[%fp-44]

	! block 7
.L21:
.L23:

!  173	   if (format==OSMESA_COLOR_INDEX) {

	ld	[%fp+68],%l1
	sethi	%hi(0x1900),%l0
	or	%l0,%lo(0x1900),%l0
	cmp	%l1,%l0
	bne	.L22
	nop

	! block 8
.L24:
.L25:
.L26:
.L27:

!  174	      rscale = gscale = bscale = ascale = 0.0;

	sethi	%hi(.L_cseg0),%l0
	ldd	[%l0+%lo(.L_cseg0)],%f4
	fdtos	%f4,%f4
	st	%f4,[%fp-24]
	ld	[%fp-24],%f4
	st	%f4,[%fp-20]
	ld	[%fp-20],%f4
	st	%f4,[%fp-16]
	ld	[%fp-16],%f4
	st	%f4,[%fp-12]

	! block 9
.L28:

!  175	      index_bits = 8;

	mov	8,%l0
	st	%l0,[%fp-56]

	! block 10
.L29:

!  176	      rshift = gshift = bshift = ashift = 0;

	st	%g0,[%fp-40]
	st	%g0,[%fp-36]
	st	%g0,[%fp-32]
	st	%g0,[%fp-28]

	! block 11
.L30:

!  177	      rgbmode = GL_FALSE;

	stb	%g0,[%fp-57]

	! block 12
.L31:
.L32:
	ba	.L33
	nop

	! block 13
.L22:
.L34:
.L35:
.L37:

!  178	   }
!  179	   else if (format==OSMESA_RGBA) {

	ld	[%fp+68],%l1
	sethi	%hi(0x1908),%l0
	or	%l0,%lo(0x1908),%l0
	cmp	%l1,%l0
	bne	.L36
	nop

	! block 14
.L38:
.L39:
.L40:
.L41:

!  180	      rscale = gscale = bscale = ascale = 255.0;

	sethi	%hi(.L_cseg1),%l0
	ldd	[%l0+%lo(.L_cseg1)],%f4
	fdtos	%f4,%f4
	st	%f4,[%fp-24]
	ld	[%fp-24],%f4
	st	%f4,[%fp-20]
	ld	[%fp-20],%f4
	st	%f4,[%fp-16]
	ld	[%fp-16],%f4
	st	%f4,[%fp-12]

	! block 15
.L42:

!  181	      index_bits = 0;

	st	%g0,[%fp-56]

	! block 16
.L43:
.L45:

!  182	      if (little_endian) {

	ld	[%fp-72],%l0
	cmp	%l0,%g0
	be	.L44
	nop

	! block 17
.L46:
.L47:
.L48:
.L49:

!  183	         rshift = 0;

	st	%g0,[%fp-28]

	! block 18
.L50:

!  184	         gshift = 8;

	mov	8,%l0
	st	%l0,[%fp-32]

	! block 19
.L51:

!  185	         bshift = 16;

	mov	16,%l0
	st	%l0,[%fp-36]

	! block 20
.L52:

!  186	         ashift = 24;

	mov	24,%l0
	st	%l0,[%fp-40]

	! block 21
.L53:
.L54:
	ba	.L55
	nop

	! block 22
.L44:
.L56:
.L57:
.L58:

!  187	      }
!  188	      else {
!  189	         rshift = 24;

	mov	24,%l0
	st	%l0,[%fp-28]

	! block 23
.L59:

!  190	         gshift = 16;

	mov	16,%l0
	st	%l0,[%fp-32]

	! block 24
.L60:

!  191	         bshift = 8;

	mov	8,%l0
	st	%l0,[%fp-36]

	! block 25
.L61:

!  192	         ashift = 0;

	st	%g0,[%fp-40]

	! block 26
.L62:
.L63:
.L55:
.L64:
.L65:

!  193	      }
!  194	      rgbmode = GL_TRUE;

	mov	1,%l0
	stb	%l0,[%fp-57]

	! block 27
.L66:
.L67:
	ba	.L68
	nop

	! block 28
.L36:
.L69:
.L70:
.L72:

!  195	   }
!  196	   else if (format==OSMESA_BGRA) {

	ld	[%fp+68],%l0
	cmp	%l0,1
	bne	.L71
	nop

	! block 29
.L73:
.L74:
.L75:
.L76:

!  197	      rscale = gscale = bscale = ascale = 255.0;

	sethi	%hi(.L_cseg1),%l0
	ldd	[%l0+%lo(.L_cseg1)],%f4
	fdtos	%f4,%f4
	st	%f4,[%fp-24]
	ld	[%fp-24],%f4
	st	%f4,[%fp-20]
	ld	[%fp-20],%f4
	st	%f4,[%fp-16]
	ld	[%fp-16],%f4
	st	%f4,[%fp-12]

	! block 30
.L77:

!  198	      index_bits = 0;

	st	%g0,[%fp-56]

	! block 31
.L78:
.L80:

!  199	      if (little_endian) {

	ld	[%fp-72],%l0
	cmp	%l0,%g0
	be	.L79
	nop

	! block 32
.L81:
.L82:
.L83:
.L84:

!  200	         ashift = 0;

	st	%g0,[%fp-40]

	! block 33
.L85:

!  201	         rshift = 8;

	mov	8,%l0
	st	%l0,[%fp-28]

	! block 34
.L86:

!  202	         gshift = 16;

	mov	16,%l0
	st	%l0,[%fp-32]

	! block 35
.L87:

!  203	         bshift = 24;

	mov	24,%l0
	st	%l0,[%fp-36]

	! block 36
.L88:
.L89:
	ba	.L90
	nop

	! block 37
.L79:
.L91:
.L92:
.L93:

!  204	      }
!  205	      else {
!  206	         bshift = 24;

	mov	24,%l0
	st	%l0,[%fp-36]

	! block 38
.L94:

!  207	         gshift = 16;

	mov	16,%l0
	st	%l0,[%fp-32]

	! block 39
.L95:

!  208	         rshift = 8;

	mov	8,%l0
	st	%l0,[%fp-28]

	! block 40
.L96:

!  209	         ashift = 0;

	st	%g0,[%fp-40]

	! block 41
.L97:
.L98:
.L90:
.L99:
.L100:

!  210	      }
!  211	      rgbmode = GL_TRUE;

	mov	1,%l0
	stb	%l0,[%fp-57]

	! block 42
.L101:
.L102:
	ba	.L103
	nop

	! block 43
.L71:
.L104:
.L105:
.L107:

!  212	   }
!  213	   else if (format==OSMESA_ARGB) {

	ld	[%fp+68],%l0
	cmp	%l0,2
	bne	.L106
	nop

	! block 44
.L108:
.L109:
.L110:
.L111:

!  214	      rscale = gscale = bscale = ascale = 255.0;

	sethi	%hi(.L_cseg1),%l0
	ldd	[%l0+%lo(.L_cseg1)],%f4
	fdtos	%f4,%f4
	st	%f4,[%fp-24]
	ld	[%fp-24],%f4
	st	%f4,[%fp-20]
	ld	[%fp-20],%f4
	st	%f4,[%fp-16]
	ld	[%fp-16],%f4
	st	%f4,[%fp-12]

	! block 45
.L112:

!  215	      index_bits = 0;

	st	%g0,[%fp-56]

	! block 46
.L113:
.L115:

!  216	      if (little_endian) {

	ld	[%fp-72],%l0
	cmp	%l0,%g0
	be	.L114
	nop

	! block 47
.L116:
.L117:
.L118:
.L119:

!  217	         bshift = 0;

	st	%g0,[%fp-36]

	! block 48
.L120:

!  218	         gshift = 8;

	mov	8,%l0
	st	%l0,[%fp-32]

	! block 49
.L121:

!  219	         rshift = 16;

	mov	16,%l0
	st	%l0,[%fp-28]

	! block 50
.L122:

!  220	         ashift = 24;

	mov	24,%l0
	st	%l0,[%fp-40]

	! block 51
.L123:
.L124:
	ba	.L125
	nop

	! block 52
.L114:
.L126:
.L127:
.L128:

!  221	      }
!  222	      else {
!  223	         ashift = 24;

	mov	24,%l0
	st	%l0,[%fp-40]

	! block 53
.L129:

!  224	         rshift = 16;

	mov	16,%l0
	st	%l0,[%fp-28]

	! block 54
.L130:

!  225	         gshift = 8;

	mov	8,%l0
	st	%l0,[%fp-32]

	! block 55
.L131:

!  226	         bshift = 0;

	st	%g0,[%fp-36]

	! block 56
.L132:
.L133:
.L125:
.L134:
.L135:

!  227	      }
!  228	      rgbmode = GL_TRUE;

	mov	1,%l0
	stb	%l0,[%fp-57]

	! block 57
.L136:
.L137:
	ba	.L138
	nop

	! block 58
.L106:
.L139:
.L140:
.L142:

!  229	   }
!  230	   else if (format==OSMESA_RGB) {

	ld	[%fp+68],%l1
	sethi	%hi(0x1907),%l0
	or	%l0,%lo(0x1907),%l0
	cmp	%l1,%l0
	bne	.L141
	nop

	! block 59
.L143:
.L144:
.L145:
.L146:

!  231	      rscale = gscale = bscale = ascale = 255.0;

	sethi	%hi(.L_cseg1),%l0
	ldd	[%l0+%lo(.L_cseg1)],%f4
	fdtos	%f4,%f4
	st	%f4,[%fp-24]
	ld	[%fp-24],%f4
	st	%f4,[%fp-20]
	ld	[%fp-20],%f4
	st	%f4,[%fp-16]
	ld	[%fp-16],%f4
	st	%f4,[%fp-12]

	! block 60
.L147:

!  232	      index_bits = 0;

	st	%g0,[%fp-56]

	! block 61
.L148:

!  233	      bshift = 0;

	st	%g0,[%fp-36]

	! block 62
.L149:

!  234	      gshift = 8;

	mov	8,%l0
	st	%l0,[%fp-32]

	! block 63
.L150:

!  235	      rshift = 16;

	mov	16,%l0
	st	%l0,[%fp-28]

	! block 64
.L151:

!  236	      ashift = 24;

	mov	24,%l0
	st	%l0,[%fp-40]

	! block 65
.L152:

!  237	      bind = 2;

	mov	2,%l0
	st	%l0,[%fp-52]

	! block 66
.L153:

!  238	      gind = 1;

	mov	1,%l0
	st	%l0,[%fp-48]

	! block 67
.L154:

!  239	      rind = 0;

	st	%g0,[%fp-44]

	! block 68
.L155:

!  240	      rgbmode = GL_TRUE;

	mov	1,%l0
	stb	%l0,[%fp-57]

	! block 69
.L156:

!  241	      swalpha = GL_TRUE;

	mov	1,%l0
	stb	%l0,[%fp-58]

	! block 70
.L157:
.L158:
	ba	.L159
	nop

	! block 71
.L141:
.L160:
.L161:
.L163:

!  242	   }
!  243	   else if (format==OSMESA_BGR) {

	ld	[%fp+68],%l0
	cmp	%l0,4
	bne	.L162
	nop

	! block 72
.L164:
.L165:
.L166:
.L167:

!  244	      rscale = gscale = bscale = ascale = 255.0;

	sethi	%hi(.L_cseg1),%l0
	ldd	[%l0+%lo(.L_cseg1)],%f4
	fdtos	%f4,%f4
	st	%f4,[%fp-24]
	ld	[%fp-24],%f4
	st	%f4,[%fp-20]
	ld	[%fp-20],%f4
	st	%f4,[%fp-16]
	ld	[%fp-16],%f4
	st	%f4,[%fp-12]

	! block 73
.L168:

!  245	      index_bits = 0;

	st	%g0,[%fp-56]

	! block 74
.L169:

!  246	      bshift = 0;

	st	%g0,[%fp-36]

	! block 75
.L170:

!  247	      gshift = 8;

	mov	8,%l0
	st	%l0,[%fp-32]

	! block 76
.L171:

!  248	      rshift = 16;

	mov	16,%l0
	st	%l0,[%fp-28]

	! block 77
.L172:

!  249	      ashift = 24;

	mov	24,%l0
	st	%l0,[%fp-40]

	! block 78
.L173:

!  250	      bind = 0;

	st	%g0,[%fp-52]

	! block 79
.L174:

!  251	      gind = 1;

	mov	1,%l0
	st	%l0,[%fp-48]

	! block 80
.L175:

!  252	      rind = 2;

	mov	2,%l0
	st	%l0,[%fp-44]

	! block 81
.L176:

!  253	      rgbmode = GL_TRUE;

	mov	1,%l0
	stb	%l0,[%fp-57]

	! block 82
.L177:

!  254	      swalpha = GL_TRUE;

	mov	1,%l0
	stb	%l0,[%fp-58]

	! block 83
.L178:
.L179:
	ba	.L180
	nop

	! block 84
.L162:
.L181:
.L182:
.L183:

!  255	   }
!  256	   else {
!  257	      return NULL;

	ba	.L12
	st	%g0,[%fp-4]

	! block 85
.L184:
.L185:
.L180:
.L186:
.L187:
.L159:
.L188:
.L189:
.L138:
.L190:
.L191:
.L103:
.L192:
.L193:
.L68:
.L194:
.L195:
.L33:
.L196:
.L197:

!  258	   }
!  259	
!  261	   osmesa = (OSMesaContext) calloc( 1, sizeof(struct osmesa_context) );

	mov	1,%o0
	sethi	%hi(0x130c),%o1
	or	%o1,%lo(0x130c),%o1
	call	calloc
	nop
	st	%o0,[%fp-8]

	! block 86
.L198:
.L200:

!  262	   if (osmesa) {

	ld	[%fp-8],%l0
	cmp	%l0,%g0
	be	.L199
	nop

	! block 87
.L201:
.L202:
.L203:
.L204:

!  263	      osmesa->gl_visual = gl_create_visual( rgbmode,
!  264						    swalpha,    /* software alpha */
!  265	                                            GL_FALSE,	/* db_flag */
!  266	                                            DEPTH_BITS,
!  267	                                            STENCIL_BITS,
!  268	                                            ACCUM_BITS,
!  269	                                            index_bits,
!  270	                                            rscale, gscale, bscale, ascale,
!  271	                                            8, 8, 8, 0 );

	ldub	[%fp-57],%l0
	ldub	[%fp-58],%l1
	ld	[%fp-56],%l2
	ld	[%fp-12],%f4
	ld	[%fp-16],%f5
	ld	[%fp-20],%f6
	ld	[%fp-24],%f7
	mov	8,%l3
	mov	8,%l5
	mov	8,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%g0,%o2
	mov	16,%o3
	mov	8,%o4
	mov	16,%o5
	st	%l2,[%sp+92]
	st	%f4,[%sp+96]
	st	%f5,[%sp+100]
	st	%f6,[%sp+104]
	st	%f7,[%sp+108]
	st	%l3,[%sp+112]
	st	%l5,[%sp+116]
	st	%l4,[%sp+120]
	call	gl_create_visual
	st	%g0,[%sp+124]
	ld	[%fp-8],%l0
	st	%o0,[%l0+4]

	! block 88
.L205:
.L207:

!  272	      if (!osmesa->gl_visual) {

	ld	[%fp-8],%l0
	ld	[%l0+4],%l0
	cmp	%l0,%g0
	bne	.L206
	nop

	! block 89
.L208:
.L209:
.L210:
.L211:

!  273	         return NULL;

	ba	.L12
	st	%g0,[%fp-4]

	! block 90
.L212:
.L213:
.L206:
.L214:
.L215:

!  274	      }
!  275	
!  276	      osmesa->gl_ctx = gl_create_context( osmesa->gl_visual,
!  277	                                          sharelist ? sharelist->gl_ctx : NULL,
!  278	                                          (void *) osmesa );

	ld	[%fp+72],%l0
	cmp	%l0,%g0
	be	.L216
	nop

	! block 91
.L217:
	ld	[%fp+72],%l0
	ld	[%l0+0],%l0
	ba	.L218
	st	%l0,[%fp-76]

	! block 92
.L216:
	st	%g0,[%fp-76]

	! block 93
.L218:
	ld	[%fp-8],%l2
	ld	[%l2+4],%l0
	ld	[%fp-76],%l1
	mov	%l0,%o0
	mov	%l1,%o1
	call	gl_create_context
	mov	%l2,%o2
	ld	[%fp-8],%l0
	st	%o0,[%l0+0]

	! block 94
.L219:
.L221:

!  279	      if (!osmesa->gl_ctx) {

	ld	[%fp-8],%l0
	ld	[%l0+0],%l0
	cmp	%l0,%g0
	bne	.L220
	nop

	! block 95
.L222:
.L223:
.L224:
.L225:

!  280	         gl_destroy_visual( osmesa->gl_visual );

	ld	[%fp-8],%l0
	ld	[%l0+4],%l0
	call	gl_destroy_visual
	mov	%l0,%o0

	! block 96
.L226:

!  281	         free(osmesa);

	ld	[%fp-8],%l0
	call	free
	mov	%l0,%o0

	! block 97
.L227:

!  282	         return NULL;

	ba	.L12
	st	%g0,[%fp-4]

	! block 98
.L228:
.L229:
.L220:
.L230:
.L231:

!  283	      }
!  284	      osmesa->gl_buffer = gl_create_framebuffer( osmesa->gl_visual );

	ld	[%fp-8],%l0
	ld	[%l0+4],%l0
	call	gl_create_framebuffer
	mov	%l0,%o0
	ld	[%fp-8],%l0
	st	%o0,[%l0+8]

	! block 99
.L232:
.L234:

!  285	      if (!osmesa->gl_buffer) {

	ld	[%fp-8],%l0
	ld	[%l0+8],%l0
	cmp	%l0,%g0
	bne	.L233
	nop

	! block 100
.L235:
.L236:
.L237:
.L238:

!  286	         gl_destroy_visual( osmesa->gl_visual );

	ld	[%fp-8],%l0
	ld	[%l0+4],%l0
	call	gl_destroy_visual
	mov	%l0,%o0

	! block 101
.L239:

!  287	         gl_destroy_context( osmesa->gl_ctx );

	ld	[%fp-8],%l0
	ld	[%l0+0],%l0
	call	gl_destroy_context
	mov	%l0,%o0

	! block 102
.L240:

!  288	         free(osmesa);

	ld	[%fp-8],%l0
	call	free
	mov	%l0,%o0

	! block 103
.L241:

!  289	         return NULL;

	ba	.L12
	st	%g0,[%fp-4]

	! block 104
.L242:
.L243:
.L233:
.L244:
.L245:

!  290	      }
!  291	      osmesa->format = format;

	ld	[%fp+68],%l1
	ld	[%fp-8],%l0
	st	%l1,[%l0+12]

	! block 105
.L246:

!  292	      osmesa->buffer = NULL;

	ld	[%fp-8],%l0
	st	%g0,[%l0+16]

	! block 106
.L247:

!  293	      osmesa->width = 0;

	ld	[%fp-8],%l0
	st	%g0,[%l0+20]

	! block 107
.L248:

!  294	      osmesa->height = 0;

	ld	[%fp-8],%l0
	st	%g0,[%l0+24]

	! block 108
.L249:

!  295	      osmesa->pixel = 0;

	ld	[%fp-8],%l0
	st	%g0,[%l0+28]

	! block 109
.L250:

!  296	      osmesa->clearpixel = 0;

	ld	[%fp-8],%l0
	st	%g0,[%l0+32]

	! block 110
.L251:

!  297	      osmesa->userRowLength = 0;

	ld	[%fp-8],%l0
	st	%g0,[%l0+40]

	! block 111
.L252:

!  298	      osmesa->rowlength = 0;

	ld	[%fp-8],%l0
	st	%g0,[%l0+36]

	! block 112
.L253:

!  299	      osmesa->yup = GL_TRUE;

	mov	1,%l2
	ld	[%fp-8],%l0
	sethi	%hi(0x1308),%l1
	or	%l1,%lo(0x1308),%l1
	stb	%l2,[%l0+%l1]

	! block 113
.L254:

!  300	      osmesa->rshift = rshift;

	ld	[%fp-28],%l1
	ld	[%fp-8],%l0
	st	%l1,[%l0+44]

	! block 114
.L255:

!  301	      osmesa->gshift = gshift;

	ld	[%fp-32],%l1
	ld	[%fp-8],%l0
	st	%l1,[%l0+48]

	! block 115
.L256:

!  302	      osmesa->bshift = bshift;

	ld	[%fp-36],%l1
	ld	[%fp-8],%l0
	st	%l1,[%l0+52]

	! block 116
.L257:

!  303	      osmesa->ashift = ashift;

	ld	[%fp-40],%l1
	ld	[%fp-8],%l0
	st	%l1,[%l0+56]

	! block 117
.L258:

!  304	      osmesa->rind = rind;

	ld	[%fp-44],%l1
	ld	[%fp-8],%l0
	st	%l1,[%l0+60]

	! block 118
.L259:

!  305	      osmesa->gind = gind;

	ld	[%fp-48],%l1
	ld	[%fp-8],%l0
	st	%l1,[%l0+64]

	! block 119
.L260:

!  306	      osmesa->bind = bind;

	ld	[%fp-52],%l1
	ld	[%fp-8],%l0
	st	%l1,[%l0+68]

	! block 120
.L261:
.L262:
.L199:
.L263:
.L264:

!  307	   }
!  308	   return osmesa;

	ld	[%fp-8],%l0
	ba	.L12
	st	%l0,[%fp-4]

	! block 121

	! block 122
.L265:
.L266:
.L12:
	ld	[%fp-4],%l0
	mov	%l0,%i0
	jmp	%i7+8
	restore
	.size	OSMesaCreateContext,(.-OSMesaCreateContext)
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	OSMesaDestroyContext
	.type	OSMesaDestroyContext,#function
OSMesaDestroyContext:
	save	%sp,-96,%sp

	! block 1
.L269:
	st	%i0,[%fp+68]

	! block 2
.L270:
.L272:
.L274:

! File osmesa.c:
!  309	}
!  310	
!  313	/*
!  314	 * Destroy an Off-Screen Mesa rendering context.
!  315	 *
!  316	 * Input:  ctx - the context to destroy
!  317	 */
!  318	void OSMesaDestroyContext( OSMesaContext ctx )
!  319	{
!  320	   if (ctx) {

	ld	[%fp+68],%l0
	cmp	%l0,%g0
	be	.L273
	nop

	! block 3
.L275:
.L276:
.L277:
.L278:

!  321	      gl_destroy_visual( ctx->gl_visual );

	ld	[%fp+68],%l0
	ld	[%l0+4],%l0
	call	gl_destroy_visual
	mov	%l0,%o0

	! block 4
.L279:

!  322	      gl_destroy_framebuffer( ctx->gl_buffer );

	ld	[%fp+68],%l0
	ld	[%l0+8],%l0
	call	gl_destroy_framebuffer
	mov	%l0,%o0

	! block 5
.L280:

!  323	      gl_destroy_context( ctx->gl_ctx );

	ld	[%fp+68],%l0
	ld	[%l0+0],%l0
	call	gl_destroy_context
	mov	%l0,%o0

	! block 6
.L281:

!  324	      free( ctx );

	ld	[%fp+68],%l0
	call	free
	mov	%l0,%o0

	! block 7
.L282:
.L283:
.L273:
.L284:

	! block 8
.L285:
.L286:
.L268:
	jmp	%i7+8
	restore
	.size	OSMesaDestroyContext,(.-OSMesaDestroyContext)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	compute_row_addresses,#function
compute_row_addresses:
	save	%sp,-104,%sp

	! block 1
.L289:
	st	%i0,[%fp+68]

	! block 2
.L290:
.L292:
.L294:

! File osmesa.c:
!  325	   }
!  326	}
!  327	
!  330	/*
!  331	 * Recompute the values of the context's rowaddr array.
!  332	 */
!  333	static void compute_row_addresses( OSMesaContext ctx )
!  334	{
!  335	   GLint i;
!  336	
!  337	   if (ctx->yup) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1308),%l1
	or	%l1,%lo(0x1308),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L293
	nop

	! block 3
.L295:
.L296:
.L297:
.L298:
.L300:

!  338	      /* Y=0 is bottom line of window */
!  339	      if (ctx->format==OSMESA_COLOR_INDEX) {

	ld	[%fp+68],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1900),%l0
	or	%l0,%lo(0x1900),%l0
	cmp	%l1,%l0
	bne	.L299
	nop

	! block 4
.L301:
.L302:
.L303:
.L304:

!  340	         /* 1-byte CI mode */
!  341	         GLubyte *origin = (GLubyte *) ctx->buffer;

	ld	[%fp+68],%l0
	ld	[%l0+16],%l0
	st	%l0,[%fp-8]

	! block 5
.L305:
.L306:

!  342	         for (i=0;i<MAX_HEIGHT;i++) {

	st	%g0,[%fp-4]

	! block 6
.L310:
.L307:
.L311:
.L312:
.L313:

!  343	            ctx->rowaddr[i] = origin + i * ctx->rowlength;

	ld	[%fp-8],%l2
	ld	[%fp-4],%l3
	ld	[%fp+68],%l0
	ld	[%l0+36],%l1
	smul	%l3,%l1,%l1
	add	%l2,%l1,%l2
	sll	%l3,2,%l1
	add	%l0,%l1,%l0
	st	%l2,[%l0+72]

	! block 7
.L314:
.L315:
.L316:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l0
	cmp	%l0,1200
	bl	.L307
	nop

	! block 8
.L317:
.L309:
.L318:
.L319:
.L320:
	ba	.L321
	nop

	! block 9
.L299:
.L322:
.L323:
.L324:
.L326:

!  344	         }
!  345	      }
!  346	      else {
!  347	         if ((ctx->format==OSMESA_RGB) || (ctx->format==OSMESA_BGR)) {

	ld	[%fp+68],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1907),%l0
	or	%l0,%lo(0x1907),%l0
	cmp	%l1,%l0
	be	.L327
	nop

	! block 10
.L328:
	ld	[%fp+68],%l0
	ld	[%l0+12],%l0
	cmp	%l0,4
	bne	.L325
	nop

	! block 11
.L329:
.L327:
.L330:
.L331:
.L332:

!  348	            /* 3-byte RGB mode */
!  349	            GLubyte *origin = (GLubyte *) ctx->buffer;

	ld	[%fp+68],%l0
	ld	[%l0+16],%l0
	st	%l0,[%fp-8]

	! block 12
.L333:
.L334:

!  350	            for (i=0;i<MAX_HEIGHT;i++) {

	st	%g0,[%fp-4]

	! block 13
.L338:
.L335:
.L339:
.L340:
.L341:

!  351	               ctx->rowaddr[i] = origin + (i * (ctx->rowlength*3));

	ld	[%fp-8],%l2
	ld	[%fp-4],%l3
	ld	[%fp+68],%l5
	ld	[%l5+36],%l0
	sll	%l0,1,%l1
	add	%l0,%l1,%l1
	smul	%l3,%l1,%l1
	add	%l2,%l1,%l2
	sll	%l3,2,%l1
	add	%l5,%l1,%l0
	st	%l2,[%l0+72]

	! block 14
.L342:
.L343:
.L344:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l0
	cmp	%l0,1200
	bl	.L335
	nop

	! block 15
.L345:
.L337:
.L346:
.L347:
.L348:
	ba	.L349
	nop

	! block 16
.L325:
.L350:
.L351:
.L352:

!  352	            }
!  353	         } else {
!  354	            /* 4-byte RGBA mode */
!  355	            GLuint *origin = (GLuint *) ctx->buffer;

	ld	[%fp+68],%l0
	ld	[%l0+16],%l0
	st	%l0,[%fp-8]

	! block 17
.L353:
.L354:

!  356	            for (i=0;i<MAX_HEIGHT;i++) {

	st	%g0,[%fp-4]

	! block 18
.L358:
.L355:
.L359:
.L360:
.L361:

!  357	               ctx->rowaddr[i] = origin + i * ctx->rowlength;

	ld	[%fp-8],%l2
	ld	[%fp-4],%l3
	ld	[%fp+68],%l5
	ld	[%l5+36],%l1
	smul	%l3,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	sll	%l3,2,%l1
	add	%l5,%l1,%l0
	st	%l2,[%l0+72]

	! block 19
.L362:
.L363:
.L364:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l0
	cmp	%l0,1200
	bl	.L355
	nop

	! block 20
.L365:
.L357:
.L366:
.L367:
.L368:
.L349:
.L369:
.L370:
.L371:
.L321:
.L372:
.L373:
.L374:
	ba	.L375
	nop

	! block 21
.L293:
.L376:
.L377:
.L378:
.L380:

!  358	            }
!  359	         }
!  360	      }
!  361	   }
!  362	   else {
!  363	      /* Y=0 is top line of window */
!  364	      if (ctx->format==OSMESA_COLOR_INDEX) {

	ld	[%fp+68],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1900),%l0
	or	%l0,%lo(0x1900),%l0
	cmp	%l1,%l0
	bne	.L379
	nop

	! block 22
.L381:
.L382:
.L383:
.L384:

!  365	         /* 1-byte CI mode */
!  366	         GLubyte *origin = (GLubyte *) ctx->buffer;

	ld	[%fp+68],%l0
	ld	[%l0+16],%l0
	st	%l0,[%fp-8]

	! block 23
.L385:
.L386:

!  367	         for (i=0;i<MAX_HEIGHT;i++) {

	st	%g0,[%fp-4]

	! block 24
.L390:
.L387:
.L391:
.L392:
.L393:

!  368	            ctx->rowaddr[i] = origin + (ctx->height-i-1) * ctx->rowlength;

	ld	[%fp-8],%l3
	ld	[%fp+68],%l6
	ld	[%l6+24],%l0
	ld	[%fp-4],%l5
	sub	%l0,%l5,%l0
	sub	%l0,1,%l2
	ld	[%l6+36],%l1
	smul	%l2,%l1,%l1
	add	%l3,%l1,%l2
	sll	%l5,2,%l1
	add	%l6,%l1,%l0
	st	%l2,[%l0+72]

	! block 25
.L394:
.L395:
.L396:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l0
	cmp	%l0,1200
	bl	.L387
	nop

	! block 26
.L397:
.L389:
.L398:
.L399:
.L400:
	ba	.L401
	nop

	! block 27
.L379:
.L402:
.L403:
.L404:
.L406:

!  369	         }
!  370	      }
!  371	      else {
!  372	         if ((ctx->format==OSMESA_RGB) || (ctx->format==OSMESA_BGR)) {

	ld	[%fp+68],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1907),%l0
	or	%l0,%lo(0x1907),%l0
	cmp	%l1,%l0
	be	.L407
	nop

	! block 28
.L408:
	ld	[%fp+68],%l0
	ld	[%l0+12],%l0
	cmp	%l0,4
	bne	.L405
	nop

	! block 29
.L409:
.L407:
.L410:
.L411:
.L412:

!  373	            /* 3-byte RGB mode */
!  374	            GLubyte *origin = (GLubyte *) ctx->buffer;

	ld	[%fp+68],%l0
	ld	[%l0+16],%l0
	st	%l0,[%fp-8]

	! block 30
.L413:
.L414:

!  375	            for (i=0;i<MAX_HEIGHT;i++) {

	st	%g0,[%fp-4]

	! block 31
.L418:
.L415:
.L419:
.L420:
.L421:

!  376	               ctx->rowaddr[i] = origin + ((ctx->height-i-1) * (ctx->rowlength*3));

	ld	[%fp-8],%l3
	ld	[%fp+68],%l6
	ld	[%l6+24],%l0
	ld	[%fp-4],%l5
	sub	%l0,%l5,%l0
	sub	%l0,1,%l2
	ld	[%l6+36],%l0
	sll	%l0,1,%l1
	add	%l0,%l1,%l1
	smul	%l2,%l1,%l1
	add	%l3,%l1,%l2
	sll	%l5,2,%l1
	add	%l6,%l1,%l0
	st	%l2,[%l0+72]

	! block 32
.L422:
.L423:
.L424:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l0
	cmp	%l0,1200
	bl	.L415
	nop

	! block 33
.L425:
.L417:
.L426:
.L427:
.L428:
	ba	.L429
	nop

	! block 34
.L405:
.L430:
.L431:
.L432:

!  377	            }
!  378	         } else {
!  379	            /* 4-byte RGBA mode */
!  380	            GLuint *origin = (GLuint *) ctx->buffer;

	ld	[%fp+68],%l0
	ld	[%l0+16],%l0
	st	%l0,[%fp-8]

	! block 35
.L433:
.L434:

!  381	            for (i=0;i<MAX_HEIGHT;i++) {

	st	%g0,[%fp-4]

	! block 36
.L438:
.L435:
.L439:
.L440:
.L441:

!  382	               ctx->rowaddr[i] = origin + (ctx->height-i-1) * ctx->rowlength;

	ld	[%fp-8],%l3
	ld	[%fp+68],%l6
	ld	[%l6+24],%l0
	ld	[%fp-4],%l5
	sub	%l0,%l5,%l0
	sub	%l0,1,%l2
	ld	[%l6+36],%l1
	smul	%l2,%l1,%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l2
	sll	%l5,2,%l1
	add	%l6,%l1,%l0
	st	%l2,[%l0+72]

	! block 37
.L442:
.L443:
.L444:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l0
	cmp	%l0,1200
	bl	.L435
	nop

	! block 38
.L445:
.L437:
.L446:
.L447:
.L448:
.L429:
.L449:
.L450:
.L451:
.L401:
.L452:
.L453:
.L454:
.L375:
.L455:

	! block 39
.L456:
.L457:
.L288:
	jmp	%i7+8
	restore
	.size	compute_row_addresses,(.-compute_row_addresses)
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	OSMesaMakeCurrent
	.type	OSMesaMakeCurrent,#function
OSMesaMakeCurrent:
	save	%sp,-104,%sp

	! block 1
.L460:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L461:
.L463:
.L465:

! File osmesa.c:
!  383	            }
!  384	         }
!  385	      }
!  386	   }
!  387	}
!  388	
!  390	/*
!  391	 * Bind an OSMesaContext to an image buffer.  The image buffer is just a
!  392	 * block of memory which the client provides.  Its size must be at least
!  393	 * as large as width*height*sizeof(type).  Its address should be a multiple
!  394	 * of 4 if using RGBA mode.
!  395	 *
!  396	 * Image data is stored in the order of glDrawPixels:  row-major order
!  397	 * with the lower-left image pixel stored in the first array position
!  398	 * (ie. bottom-to-top).
!  399	 *
!  400	 * Since the only type initially supported is GL_UNSIGNED_BYTE, if the
!  401	 * context is in RGBA mode, each pixel will be stored as a 4-byte RGBA
!  402	 * value.  If the context is in color indexed mode, each pixel will be
!  403	 * stored as a 1-byte value.
!  404	 *
!  405	 * If the context's viewport hasn't been initialized yet, it will now be
!  406	 * initialized to (0,0,width,height).
!  407	 *
!  408	 * Input:  ctx - the rendering context
!  409	 *         buffer - the image buffer memory
!  410	 *         type - data type for pixel components, only GL_UNSIGNED_BYTE
!  411	 *                supported now
!  412	 *         width, height - size of image buffer in pixels, at least 1
!  413	 * Return:  GL_TRUE if success, GL_FALSE if error because of invalid ctx,
!  414	 *          invalid buffer address, type!=GL_UNSIGNED_BYTE, width<1, height<1,
!  415	 *          width>internal limit or height>internal limit.
!  416	 */
!  417	GLboolean OSMesaMakeCurrent( OSMesaContext ctx, void *buffer, GLenum type,
!  418	                             GLsizei width, GLsizei height )
!  419	{
!  420	   if (!ctx || !buffer || type!=GL_UNSIGNED_BYTE
!  421	       || width<1 || height<1 || width>MAX_WIDTH || height>MAX_HEIGHT) {

	ld	[%fp+68],%l0
	cmp	%l0,%g0
	be	.L466
	nop

	! block 3
.L467:
	ld	[%fp+72],%l0
	cmp	%l0,%g0
	be	.L466
	nop

	! block 4
.L468:
	ld	[%fp+76],%l1
	sethi	%hi(0x1401),%l0
	or	%l0,%lo(0x1401),%l0
	cmp	%l1,%l0
	bne	.L466
	nop

	! block 5
.L469:
	ld	[%fp+80],%l0
	cmp	%l0,1
	bl	.L466
	nop

	! block 6
.L470:
	ld	[%fp+84],%l0
	cmp	%l0,1
	bl	.L466
	nop

	! block 7
.L471:
	ld	[%fp+80],%l0
	cmp	%l0,1600
	bg	.L466
	nop

	! block 8
.L472:
	ld	[%fp+84],%l0
	cmp	%l0,1200
	ble	.L464
	nop

	! block 9
.L473:
.L466:
.L474:
.L475:
.L476:

!  422	      return GL_FALSE;

	ba	.L459
	stb	%g0,[%fp-1]

	! block 10
.L477:
.L478:
.L464:
.L479:
.L480:

!  423	   }
!  424	
!  425	   gl_make_current( ctx->gl_ctx, ctx->gl_buffer );

	ld	[%fp+68],%l0
	ld	[%l0+0],%l1
	ld	[%l0+8],%l0
	mov	%l1,%o0
	call	gl_make_current
	mov	%l0,%o1

	! block 11
.L481:

!  427	   ctx->buffer = buffer;

	ld	[%fp+72],%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+16]

	! block 12
.L482:

!  428	   ctx->width = width;

	ld	[%fp+80],%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+20]

	! block 13
.L483:

!  429	   ctx->height = height;

	ld	[%fp+84],%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+24]

	! block 14
.L484:
.L486:

!  430	   if (ctx->userRowLength)

	ld	[%fp+68],%l0
	ld	[%l0+40],%l0
	cmp	%l0,%g0
	be	.L485
	nop

	! block 15
.L487:
.L488:
.L489:

!  431	      ctx->rowlength = ctx->userRowLength;

	ld	[%fp+68],%l0
	ld	[%l0+40],%l1
	st	%l1,[%l0+36]

	! block 16
.L490:
	ba	.L491
	nop

	! block 17
.L485:
.L492:
.L493:

!  432	   else
!  433	      ctx->rowlength = width;

	ld	[%fp+80],%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+36]

	! block 18
.L494:
.L491:
.L495:
.L496:

!  435	   osmesa_setup_DD_pointers( ctx->gl_ctx );

	ld	[%fp+68],%l0
	ld	[%l0+0],%l0
	call	osmesa_setup_DD_pointers
	mov	%l0,%o0

	! block 19
.L497:

!  437	#ifdef THREADS
!  438	   /* Set current context for the calling thread */
!  439	   /* TODO */
!  440	#else
!  441	   /* Set current context for the address space, all threads */
!  442	   Current = ctx;

	ld	[%fp+68],%l1
	sethi	%hi($XAa59JCSsd3LG_K.Current),%l0
	st	%l1,[%l0+%lo($XAa59JCSsd3LG_K.Current)]

	! block 20
.L498:

!  443	#endif
!  444	
!  445	   compute_row_addresses( ctx );

	ld	[%fp+68],%l0
	call	compute_row_addresses
	mov	%l0,%o0

	! block 21
.L499:
.L501:

!  447	   /* init viewport */
!  448	   if (ctx->gl_ctx->Viewport.Width==0) {

	ld	[%fp+68],%l0
	ld	[%l0+0],%l0
	sethi	%hi(0xdcc0),%l1
	or	%l1,%lo(0xdcc0),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	bne	.L500
	nop

	! block 22
.L502:
.L503:
.L504:
.L505:

!  449	      /* initialize viewport and scissor box to buffer size */
!  450	      gl_Viewport( ctx->gl_ctx, 0, 0, width, height );

	ld	[%fp+68],%l0
	ld	[%l0+0],%l0
	ld	[%fp+80],%l1
	ld	[%fp+84],%l2
	mov	%l0,%o0
	mov	%g0,%o1
	mov	%g0,%o2
	mov	%l1,%o3
	call	gl_Viewport
	mov	%l2,%o4

	! block 23
.L506:

!  451	      ctx->gl_ctx->Scissor.Width = width;

	ld	[%fp+80],%l2
	ld	[%fp+68],%l0
	ld	[%l0+0],%l0
	sethi	%hi(0xd754),%l1
	or	%l1,%lo(0xd754),%l1
	st	%l2,[%l0+%l1]

	! block 24
.L507:

!  452	      ctx->gl_ctx->Scissor.Height = height;

	ld	[%fp+84],%l2
	ld	[%fp+68],%l0
	ld	[%l0+0],%l0
	sethi	%hi(0xd758),%l1
	or	%l1,%lo(0xd758),%l1
	st	%l2,[%l0+%l1]

	! block 25
.L508:
.L509:
.L500:
.L510:
.L511:

!  453	   }
!  454	
!  455	   return GL_TRUE;

	mov	1,%l0
	ba	.L459
	stb	%l0,[%fp-1]

	! block 26

	! block 27
.L512:
.L513:
.L459:
	ldub	[%fp-1],%l0
	mov	%l0,%i0
	jmp	%i7+8
	restore
	.size	OSMesaMakeCurrent,(.-OSMesaMakeCurrent)
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	OSMesaGetCurrentContext
	.type	OSMesaGetCurrentContext,#function
OSMesaGetCurrentContext:
	save	%sp,-104,%sp

	! block 1
.L516:
.L517:
.L519:

! File osmesa.c:
!  456	}
!  457	
!  461	OSMesaContext OSMesaGetCurrentContext( void )
!  462	{
!  463	#ifdef THREADS
!  464	   /* Return current handle for the calling thread */
!  465	#else
!  466	   /* Return current handle for the address space, all threads */
!  467	   return Current;

	sethi	%hi($XAa59JCSsd3LG_K.Current),%l0
	ld	[%l0+%lo($XAa59JCSsd3LG_K.Current)],%l0
	ba	.L515
	st	%l0,[%fp-4]

	! block 2

	! block 3
.L520:
.L521:
.L515:
	ld	[%fp-4],%l0
	mov	%l0,%i0
	jmp	%i7+8
	restore
	.size	OSMesaGetCurrentContext,(.-OSMesaGetCurrentContext)
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	OSMesaPixelStore
	.type	OSMesaPixelStore,#function
OSMesaPixelStore:
	save	%sp,-104,%sp

	! block 1
.L524:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]

	! block 2
.L525:
.L527:

! File osmesa.c:
!  468	#endif
!  469	}
!  470	
!  473	void OSMesaPixelStore( GLint pname, GLint value )
!  474	{
!  475	   OSMesaContext ctx = OSMesaGetCurrentContext();

	call	OSMesaGetCurrentContext
	nop
	st	%o0,[%fp-4]

	! block 3
.L528:
.L531:

!  477	   switch (pname) {

	ba	.L530
	nop

	! block 4
.L532:
.L533:
.L534:
.L535:
.L537:

!  478	      case OSMESA_ROW_LENGTH:
!  479	         if (value<0) {

	ld	[%fp+72],%l0
	cmp	%l0,0
	bge	.L536
	nop

	! block 5
.L538:
.L539:
.L540:
.L541:

!  480	            gl_error( ctx->gl_ctx, GL_INVALID_VALUE,
!  481	                      "OSMesaPixelStore(value)" );

	ld	[%fp-4],%l0
	ld	[%l0+0],%l0
	sethi	%hi(.L542),%l1
	or	%l1,%lo(.L542),%l1
	mov	%l0,%o0
	mov	1281,%o1
	call	gl_error
	mov	%l1,%o2

	! block 6
.L543:

!  482	            return;

	ba	.L523
	nop

	! block 7
.L544:
.L545:
.L536:
.L546:
.L547:

!  483	         }
!  484	         ctx->userRowLength = value;

	ld	[%fp+72],%l1
	ld	[%fp-4],%l0
	st	%l1,[%l0+40]

	! block 8
.L548:

!  485	         ctx->rowlength = value;

	ld	[%fp+72],%l1
	ld	[%fp-4],%l0
	st	%l1,[%l0+36]

	! block 9
.L549:

!  486	         break;

	ba	.L529
	nop

	! block 10
.L550:
.L551:

!  487	      case OSMESA_Y_UP:
!  488	         ctx->yup = value ? GL_TRUE : GL_FALSE;

	ld	[%fp+72],%l0
	cmp	%g0,%l0

	! block 11
.L553:

	! block 12
.L552:

	! block 13
.L554:
	addx	%g0,0,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l2
	ld	[%fp-4],%l0
	sethi	%hi(0x1308),%l1
	or	%l1,%lo(0x1308),%l1
	stb	%l2,[%l0+%l1]

	! block 14
.L555:

!  489	         break;

	ba	.L529
	nop

	! block 15
.L556:
.L557:

!  490	      default:
!  491	         gl_error( ctx->gl_ctx, GL_INVALID_ENUM, "OSMesaPixelStore(pname)" );

	ld	[%fp-4],%l0
	ld	[%l0+0],%l0
	sethi	%hi(.L558),%l1
	or	%l1,%lo(.L558),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 16
.L559:

!  492	         return;

	ba	.L523
	nop

	! block 17
.L560:
.L561:
.L530:
.L562:
	ld	[%fp+68],%l0
	cmp	%l0,16
	be	.L534
	nop

	! block 18
	cmp	%l0,17
	be	.L550
	nop

	! block 19
	ba	.L556
	nop

	! block 20
.L563:
.L529:
.L564:
.L565:

!  493	   }
!  494	
!  495	   compute_row_addresses( ctx );

	ld	[%fp-4],%l0
	call	compute_row_addresses
	mov	%l0,%o0

	! block 21
.L566:
.L567:
.L523:
	jmp	%i7+8
	restore
	.size	OSMesaPixelStore,(.-OSMesaPixelStore)
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	OSMesaGetIntegerv
	.type	OSMesaGetIntegerv,#function
OSMesaGetIntegerv:
	save	%sp,-104,%sp

	! block 1
.L570:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]

	! block 2
.L571:
.L573:

! File osmesa.c:
!  496	}
!  497	
!  499	void OSMesaGetIntegerv( GLint pname, GLint *value )
!  500	{
!  501	   OSMesaContext ctx = OSMesaGetCurrentContext();

	call	OSMesaGetCurrentContext
	nop
	st	%o0,[%fp-4]

	! block 3
.L574:
.L577:

!  503	   switch (pname) {

	ba	.L576
	nop

	! block 4
.L578:
.L579:
.L580:
.L581:

!  504	      case OSMESA_WIDTH:
!  505	         *value = ctx->width;

	ld	[%fp-4],%l0
	ld	[%l0+20],%l1
	ld	[%fp+72],%l0
	st	%l1,[%l0+0]

	! block 5
.L582:

!  506	         return;

	ba	.L569
	nop

	! block 6
.L583:
.L584:

!  507	      case OSMESA_HEIGHT:
!  508	         *value = ctx->height;

	ld	[%fp-4],%l0
	ld	[%l0+24],%l1
	ld	[%fp+72],%l0
	st	%l1,[%l0+0]

	! block 7
.L585:

!  509	         return;

	ba	.L569
	nop

	! block 8
.L586:
.L587:

!  510	      case OSMESA_FORMAT:
!  511	         *value = ctx->format;

	ld	[%fp-4],%l0
	ld	[%l0+12],%l1
	ld	[%fp+72],%l0
	st	%l1,[%l0+0]

	! block 9
.L588:

!  512	         return;

	ba	.L569
	nop

	! block 10
.L589:
.L590:

!  513	      case OSMESA_TYPE:
!  514	         *value = GL_UNSIGNED_BYTE;

	sethi	%hi(0x1401),%l1
	or	%l1,%lo(0x1401),%l1
	ld	[%fp+72],%l0
	st	%l1,[%l0+0]

	! block 11
.L591:

!  515	         return;

	ba	.L569
	nop

	! block 12
.L592:
.L593:

!  516	      case OSMESA_ROW_LENGTH:
!  517	         *value = ctx->rowlength;

	ld	[%fp-4],%l0
	ld	[%l0+36],%l1
	ld	[%fp+72],%l0
	st	%l1,[%l0+0]

	! block 13
.L594:

!  518	         return;

	ba	.L569
	nop

	! block 14
.L595:
.L596:

!  519	      case OSMESA_Y_UP:
!  520	         *value = ctx->yup;

	ld	[%fp-4],%l0
	sethi	%hi(0x1308),%l1
	or	%l1,%lo(0x1308),%l1
	ldub	[%l0+%l1],%l1
	ld	[%fp+72],%l0
	st	%l1,[%l0+0]

	! block 15
.L597:

!  521	         return;

	ba	.L569
	nop

	! block 16
.L598:
.L599:

!  522	      default:
!  523	         gl_error( ctx->gl_ctx, GL_INVALID_ENUM, "OSMesaGetIntergerv(pname)" );

	ld	[%fp-4],%l0
	ld	[%l0+0],%l0
	sethi	%hi(.L600),%l1
	or	%l1,%lo(.L600),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 17
.L601:

!  524	         return;

	ba	.L569
	nop

	! block 18
.L602:
.L603:
.L576:
.L604:
	ld	[%fp+68],%l0
	cmp	%l0,32
	bge	.L_y0
	nop

	! block 19
	cmp	%l0,16
	be	.L592
	nop

	! block 20
	cmp	%l0,17
	be	.L595
	nop

	! block 21
	ba	.L598
	nop

	! block 22
.L_y0:
	sub	%l0,32,%l0
	cmp	%l0,3
	bgu	.L598
	nop

	! block 23
	sll	%l0,2,%l1
	sethi	%hi(.L_y1-16),%l0
	or	%l0,%lo(.L_y1-16),%l0
	ld	[%l0+%l1],%l0
	jmp	%l0
	nop

	! block 24
.L605:
.L606:

	! block 25
.L607:
.L608:
.L569:
	jmp	%i7+8
	restore
	.size	OSMesaGetIntegerv,(.-OSMesaGetIntegerv)

	.word	.L580
	.word	.L583
	.word	.L586
	.word	.L589
.L_y1:
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	OSMesaGetDepthBuffer
	.type	OSMesaGetDepthBuffer,#function
OSMesaGetDepthBuffer:
	save	%sp,-104,%sp

	! block 1
.L611:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L612:
.L614:
.L616:

! File osmesa.c:
!  525	   }
!  526	}
!  527	
!  530	/*
!  531	 * Return the depth buffer associated with an OSMesa context.
!  532	 * Input:  c - the OSMesa context
!  533	 * Output:  width, height - size of buffer in pixels
!  534	 *          bytesPerValue - bytes per depth value (2 or 4)
!  535	 *          buffer - pointer to depth buffer values
!  536	 * Return:  GL_TRUE or GL_FALSE to indicate success or failure.
!  537	 */
!  538	GLboolean OSMesaGetDepthBuffer( OSMesaContext c, GLint *width, GLint *height,
!  539	                                GLint *bytesPerValue, void **buffer )
!  540	{
!  541	   if ((!c->gl_buffer) || (!c->gl_buffer->Depth)) {

	ld	[%fp+68],%l0
	ld	[%l0+8],%l0
	cmp	%l0,%g0
	be	.L617
	nop

	! block 3
.L618:
	ld	[%fp+68],%l0
	ld	[%l0+8],%l0
	ld	[%l0+12],%l0
	cmp	%l0,%g0
	bne	.L615
	nop

	! block 4
.L619:
.L617:
.L620:
.L621:
.L622:

!  542	      *width = 0;

	ld	[%fp+72],%l0
	st	%g0,[%l0+0]

	! block 5
.L623:

!  543	      *height = 0;

	ld	[%fp+76],%l0
	st	%g0,[%l0+0]

	! block 6
.L624:

!  544	      *bytesPerValue = 0;

	ld	[%fp+80],%l0
	st	%g0,[%l0+0]

	! block 7
.L625:

!  545	      *buffer = 0;

	ld	[%fp+84],%l0
	st	%g0,[%l0+0]

	! block 8
.L626:

!  546	      return GL_FALSE;

	ba	.L610
	stb	%g0,[%fp-1]

	! block 9
.L627:
.L628:
.L615:
.L629:
.L630:
.L631:

!  547	   }
!  548	   else {
!  549	      *width = c->gl_buffer->Width;

	ld	[%fp+68],%l0
	ld	[%l0+8],%l0
	ld	[%l0+4],%l1
	ld	[%fp+72],%l0
	st	%l1,[%l0+0]

	! block 10
.L632:

!  550	      *height = c->gl_buffer->Height;

	ld	[%fp+68],%l0
	ld	[%l0+8],%l0
	ld	[%l0+8],%l1
	ld	[%fp+76],%l0
	st	%l1,[%l0+0]

	! block 11
.L633:

!  551	      *bytesPerValue = sizeof(GLdepth);

	mov	2,%l1
	ld	[%fp+80],%l0
	st	%l1,[%l0+0]

	! block 12
.L634:

!  552	      *buffer = c->gl_buffer->Depth;

	ld	[%fp+68],%l0
	ld	[%l0+8],%l0
	ld	[%l0+12],%l1
	ld	[%fp+84],%l0
	st	%l1,[%l0+0]

	! block 13
.L635:

!  553	      return GL_TRUE;

	mov	1,%l0
	ba	.L610
	stb	%l0,[%fp-1]

	! block 14
.L636:
.L637:
.L638:

	! block 15
.L639:
.L640:
.L610:
	ldub	[%fp-1],%l0
	mov	%l0,%i0
	jmp	%i7+8
	restore
	.size	OSMesaGetDepthBuffer,(.-OSMesaGetDepthBuffer)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	set_buffer,#function
set_buffer:
	save	%sp,-104,%sp

	! block 1
.L643:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]

	! block 2
.L644:
.L646:
.L648:

! File osmesa.c:
!  554	   }
!  555	}
!  556	
!  560	/**********************************************************************/
!  561	/*** Device Driver Functions                                        ***/
!  562	/**********************************************************************/
!  563	
!  565	/*
!  566	 * Useful macros:
!  567	 */
!  568	#define PACK_RGBA(R,G,B,A)  (  ((R) << osmesa->rshift) \
!  569	                             | ((G) << osmesa->gshift) \
!  570	                             | ((B) << osmesa->bshift) \
!  571	                             | ((A) << osmesa->ashift) )
!  572	
!  573	#define PACK_RGBA2(R,G,B,A)  (  ((R) << rshift) \
!  574	                              | ((G) << gshift) \
!  575	                              | ((B) << bshift) \
!  576	                              | ((A) << ashift) )
!  577	
!  578	#define UNPACK_RED(P)      (((P) >> osmesa->rshift) & 0xff)
!  579	#define UNPACK_GREEN(P)    (((P) >> osmesa->gshift) & 0xff)
!  580	#define UNPACK_BLUE(P)     (((P) >> osmesa->bshift) & 0xff)
!  581	#define UNPACK_ALPHA(P)    (((P) >> osmesa->ashift) & 0xff)
!  582	
!  583	#define PIXELADDR1(X,Y)  ((GLubyte *) osmesa->rowaddr[Y] + (X))
!  584	#define PIXELADDR3(X,Y)  ((GLubyte *) osmesa->rowaddr[Y] + ((X)*3))
!  585	#define PIXELADDR4(X,Y)  ((GLuint *)  osmesa->rowaddr[Y] + (X))
!  586	
!  590	static GLboolean set_buffer( GLcontext *ctx, GLenum mode )
!  591	{
!  592	   if (mode==GL_FRONT) {

	ld	[%fp+72],%l0
	cmp	%l0,1028
	bne	.L647
	nop

	! block 3
.L649:
.L650:
.L651:
.L652:

!  593	      return GL_TRUE;

	mov	1,%l0
	ba	.L642
	stb	%l0,[%fp-1]

	! block 4
.L653:
.L654:
.L647:
.L655:
.L656:
.L657:

!  594	   }
!  595	   else {
!  596	      return GL_FALSE;

	ba	.L642
	stb	%g0,[%fp-1]

	! block 5
.L658:
.L659:
.L660:

	! block 6
.L661:
.L662:
.L642:
	ldub	[%fp-1],%l0
	mov	%l0,%i0
	jmp	%i7+8
	restore
	.size	set_buffer,(.-set_buffer)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	clear_index,#function
clear_index:
	save	%sp,-104,%sp

	! block 1
.L665:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]

	! block 2
.L666:
.L668:

! File osmesa.c:
!  597	   }
!  598	}
!  599	
!  601	static void clear_index( GLcontext *ctx, GLuint index )
!  602	{
!  603	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L669:

!  604	   osmesa->clearpixel = index;

	ld	[%fp+72],%l1
	ld	[%fp-4],%l0
	st	%l1,[%l0+32]

	! block 4
.L670:
.L671:
.L664:
	jmp	%i7+8
	restore
	.size	clear_index,(.-clear_index)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	clear_color,#function
clear_color:
	save	%sp,-104,%sp

	! block 1
.L674:
	st	%i0,[%fp+68]
	stb	%i1,[%fp+75]
	stb	%i2,[%fp+79]
	stb	%i3,[%fp+83]
	stb	%i4,[%fp+87]

	! block 2
.L675:
.L677:

! File osmesa.c:
!  605	}
!  606	
!  609	static void clear_color( GLcontext *ctx,
!  610	                         GLubyte r, GLubyte g, GLubyte b, GLubyte a )
!  611	{
!  612	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L678:

!  613	   osmesa->clearpixel = PACK_RGBA( r, g, b, a );

	ldub	[%fp+75],%l2
	ld	[%fp-4],%l0
	ld	[%l0+44],%l1
	sll	%l2,%l1,%l3
	ldub	[%fp+79],%l2
	ld	[%l0+48],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l3
	ldub	[%fp+83],%l2
	ld	[%l0+52],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l3
	ldub	[%fp+87],%l2
	ld	[%l0+56],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l1
	st	%l1,[%l0+32]

	! block 4
.L679:
.L680:
.L673:
	jmp	%i7+8
	restore
	.size	clear_color,(.-clear_color)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	clear,#function
clear:
	save	%sp,-128,%sp

	! block 1
.L683:
	st	%i0,[%fp+68]
	stb	%i1,[%fp+75]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]

	! block 2
.L684:
.L686:

! File osmesa.c:
!  614	}
!  615	
!  618	static void clear( GLcontext *ctx,
!  619	                   GLboolean all, GLint x, GLint y, GLint width, GLint height )
!  620	{
!  621	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L687:
.L689:

!  622	   if (osmesa->format==OSMESA_COLOR_INDEX) {

	ld	[%fp-4],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1900),%l0
	or	%l0,%lo(0x1900),%l0
	cmp	%l1,%l0
	bne	.L688
	nop

	! block 4
.L690:
.L691:
.L692:
.L693:
.L695:

!  623	      if (all) {

	ldub	[%fp+75],%l0
	cmp	%l0,%g0
	be	.L694
	nop

	! block 5
.L696:
.L697:
.L698:
.L699:

!  624	         /* Clear whole CI buffer */
!  625	         MEMSET(osmesa->buffer, osmesa->clearpixel, osmesa->rowlength*osmesa->height);

	ld	[%fp-4],%l0
	ld	[%l0+16],%l3
	ld	[%l0+32],%l5
	ld	[%l0+36],%l2
	ld	[%l0+24],%l1
	smul	%l2,%l1,%l0
	mov	%l3,%o0
	mov	%l5,%o1
	call	memset
	mov	%l0,%o2

	! block 6
.L700:
.L701:
	ba	.L702
	nop

	! block 7
.L694:
.L703:
.L704:
.L705:
.L706:

!  626	      }
!  627	      else {
!  628	         /* Clear part of CI buffer */
!  629	         GLuint i, j;
!  630	         for (i=0;i<height;i++) {

	ld	[%fp+88],%l0
	cmp	%g0,%l0
	bgeu	.L709
	st	%g0,[%fp-8]

	! block 8
.L710:
.L707:
.L711:
.L712:
.L713:

!  631	            GLubyte *ptr1 = PIXELADDR1( x, (y+i) );

	ld	[%fp-4],%l2
	ld	[%fp+80],%l0
	ld	[%fp-8],%l1
	add	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l0
	ld	[%fp+76],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-16]

	! block 9
.L714:
.L715:

!  632	            for (j=0;j<width;j++) {

	ld	[%fp+84],%l0
	cmp	%g0,%l0
	bgeu	.L718
	st	%g0,[%fp-12]

	! block 10
.L719:
.L716:
.L720:
.L721:
.L722:

!  633	               *ptr1++ = osmesa->clearpixel;

	ld	[%fp-4],%l0
	ld	[%l0+32],%l1
	ld	[%fp-16],%l0
	stb	%l1,[%l0+0]
	ld	[%fp-16],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-16]

	! block 11
.L723:
.L724:
.L725:
	ld	[%fp-12],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-12]
	ld	[%fp-12],%l1
	ld	[%fp+84],%l0
	cmp	%l1,%l0
	blu	.L716
	nop

	! block 12
.L726:
.L718:
.L727:
.L728:
.L729:
.L730:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+88],%l0
	cmp	%l1,%l0
	blu	.L707
	nop

	! block 13
.L731:
.L709:
.L732:
.L733:
.L734:
.L702:
.L735:
.L736:
.L737:
	ba	.L738
	nop

	! block 14
.L688:
.L739:
.L740:
.L742:

!  634	            }
!  635	         }
!  636	      }
!  637	   }
!  638	   else if ((osmesa->format==OSMESA_RGB)||(osmesa->format==OSMESA_BGR)) {

	ld	[%fp-4],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1907),%l0
	or	%l0,%lo(0x1907),%l0
	cmp	%l1,%l0
	be	.L743
	nop

	! block 15
.L744:
	ld	[%fp-4],%l0
	ld	[%l0+12],%l0
	cmp	%l0,4
	bne	.L741
	nop

	! block 16
.L745:
.L743:
.L746:
.L747:
.L748:

!  639	      GLubyte rval = UNPACK_RED(osmesa->clearpixel);

	ld	[%fp-4],%l0
	ld	[%l0+32],%l2
	ld	[%l0+44],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l0
	stb	%l0,[%fp-5]

	! block 17
.L749:

!  640	      GLubyte gval = UNPACK_GREEN(osmesa->clearpixel);

	ld	[%fp-4],%l0
	ld	[%l0+32],%l2
	ld	[%l0+48],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l0
	stb	%l0,[%fp-6]

	! block 18
.L750:

!  641	      GLubyte bval = UNPACK_BLUE(osmesa->clearpixel);

	ld	[%fp-4],%l0
	ld	[%l0+32],%l2
	ld	[%l0+52],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l0
	stb	%l0,[%fp-7]

	! block 19
.L751:

!  642	      GLint   rind = osmesa->rind;

	ld	[%fp-4],%l0
	ld	[%l0+60],%l0
	st	%l0,[%fp-12]

	! block 20
.L752:

!  643	      GLint   gind = osmesa->gind;

	ld	[%fp-4],%l0
	ld	[%l0+64],%l0
	st	%l0,[%fp-16]

	! block 21
.L753:

!  644	      GLint   bind = osmesa->bind;

	ld	[%fp-4],%l0
	ld	[%l0+68],%l0
	st	%l0,[%fp-20]

	! block 22
.L754:
.L756:

!  645	      if (all) {

	ldub	[%fp+75],%l0
	cmp	%l0,%g0
	be	.L755
	nop

	! block 23
.L757:
.L758:
.L759:
.L760:

!  646	         GLuint  i, n; 
!  647	         GLubyte *ptr3 = (GLubyte *) osmesa->buffer;

	ld	[%fp-4],%l0
	ld	[%l0+16],%l0
	st	%l0,[%fp-32]

	! block 24
.L761:

!  648	         /* Clear whole RGB buffer */
!  649	         n = osmesa->rowlength * osmesa->height;

	ld	[%fp-4],%l0
	ld	[%l0+36],%l2
	ld	[%l0+24],%l1
	smul	%l2,%l1,%l0
	st	%l0,[%fp-28]

	! block 25
.L762:
.L763:

!  650	         for (i=0;i<n;i++) {

	ld	[%fp-28],%l0
	cmp	%g0,%l0
	bgeu	.L766
	st	%g0,[%fp-24]

	! block 26
.L767:
.L764:
.L768:
.L769:
.L770:

!  651	            ptr3[rind] = rval;

	ldub	[%fp-5],%l2
	ld	[%fp-32],%l0
	ld	[%fp-12],%l1
	stb	%l2,[%l0+%l1]

	! block 27
.L771:

!  652	            ptr3[gind] = gval;

	ldub	[%fp-6],%l2
	ld	[%fp-32],%l0
	ld	[%fp-16],%l1
	stb	%l2,[%l0+%l1]

	! block 28
.L772:

!  653	            ptr3[bind] = bval;

	ldub	[%fp-7],%l2
	ld	[%fp-32],%l0
	ld	[%fp-20],%l1
	stb	%l2,[%l0+%l1]

	! block 29
.L773:

!  654	            ptr3 += 3;

	ld	[%fp-32],%l0
	add	%l0,3,%l0
	st	%l0,[%fp-32]

	! block 30
.L774:
.L775:
.L776:
	ld	[%fp-24],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-24]
	ld	[%fp-24],%l1
	ld	[%fp-28],%l0
	cmp	%l1,%l0
	blu	.L764
	nop

	! block 31
.L777:
.L766:
.L778:
.L779:
.L780:
	ba	.L781
	nop

	! block 32
.L755:
.L782:
.L783:
.L784:
.L785:

!  655	         }
!  656	      }
!  657	      else {
!  658	         /* Clear part of RGB buffer */
!  659	         GLuint i, j;
!  660	         for (i=0;i<height;i++) {

	ld	[%fp+88],%l0
	cmp	%g0,%l0
	bgeu	.L788
	st	%g0,[%fp-24]

	! block 33
.L789:
.L786:
.L790:
.L791:
.L792:

!  661	            GLubyte *ptr3 = PIXELADDR3( x, (y+i) );

	ld	[%fp-4],%l2
	ld	[%fp+80],%l0
	ld	[%fp-24],%l1
	add	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp+76],%l0
	sll	%l0,1,%l1
	add	%l0,%l1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-32]

	! block 34
.L793:
.L794:

!  662	            for (j=0;j<width;j++) {

	ld	[%fp+84],%l0
	cmp	%g0,%l0
	bgeu	.L797
	st	%g0,[%fp-28]

	! block 35
.L798:
.L795:
.L799:
.L800:
.L801:

!  663	               ptr3[rind] = rval;

	ldub	[%fp-5],%l2
	ld	[%fp-32],%l0
	ld	[%fp-12],%l1
	stb	%l2,[%l0+%l1]

	! block 36
.L802:

!  664	               ptr3[gind] = gval;

	ldub	[%fp-6],%l2
	ld	[%fp-32],%l0
	ld	[%fp-16],%l1
	stb	%l2,[%l0+%l1]

	! block 37
.L803:

!  665	               ptr3[bind] = bval;

	ldub	[%fp-7],%l2
	ld	[%fp-32],%l0
	ld	[%fp-20],%l1
	stb	%l2,[%l0+%l1]

	! block 38
.L804:

!  666	               ptr3 += 3;

	ld	[%fp-32],%l0
	add	%l0,3,%l0
	st	%l0,[%fp-32]

	! block 39
.L805:
.L806:
.L807:
	ld	[%fp-28],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-28]
	ld	[%fp-28],%l1
	ld	[%fp+84],%l0
	cmp	%l1,%l0
	blu	.L795
	nop

	! block 40
.L808:
.L797:
.L809:
.L810:
.L811:
.L812:
	ld	[%fp-24],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-24]
	ld	[%fp-24],%l1
	ld	[%fp+88],%l0
	cmp	%l1,%l0
	blu	.L786
	nop

	! block 41
.L813:
.L788:
.L814:
.L815:
.L816:
.L781:
.L817:
.L818:
.L819:
	ba	.L820
	nop

	! block 42
.L741:
.L821:
.L822:
.L823:
.L825:

!  667	            }
!  668	         }
!  669	      }
!  670	   }
!  671	   else {
!  672	      if (all) {

	ldub	[%fp+75],%l0
	cmp	%l0,%g0
	be	.L824
	nop

	! block 43
.L826:
.L827:
.L828:
.L829:

!  673	         /* Clear whole RGBA buffer */
!  674	         GLuint i, n, *ptr4;
!  675	         n = osmesa->rowlength * osmesa->height;

	ld	[%fp-4],%l0
	ld	[%l0+36],%l2
	ld	[%l0+24],%l1
	smul	%l2,%l1,%l0
	st	%l0,[%fp-12]

	! block 44
.L830:

!  676	         ptr4 = (GLuint *) osmesa->buffer;

	ld	[%fp-4],%l0
	ld	[%l0+16],%l0
	st	%l0,[%fp-16]

	! block 45
.L831:
.L832:

!  677	         for (i=0;i<n;i++) {

	ld	[%fp-12],%l0
	cmp	%g0,%l0
	bgeu	.L835
	st	%g0,[%fp-8]

	! block 46
.L836:
.L833:
.L837:
.L838:
.L839:

!  678	            *ptr4++ = osmesa->clearpixel;

	ld	[%fp-4],%l0
	ld	[%l0+32],%l1
	ld	[%fp-16],%l0
	st	%l1,[%l0+0]
	ld	[%fp-16],%l0
	add	%l0,4,%l0
	st	%l0,[%fp-16]

	! block 47
.L840:
.L841:
.L842:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp-12],%l0
	cmp	%l1,%l0
	blu	.L833
	nop

	! block 48
.L843:
.L835:
.L844:
.L845:
.L846:
	ba	.L847
	nop

	! block 49
.L824:
.L848:
.L849:
.L850:
.L851:

!  679	         }
!  680	      }
!  681	      else {
!  682	         /* Clear part of RGBA buffer */
!  683	         GLuint i, j;
!  684	         for (i=0;i<height;i++) {

	ld	[%fp+88],%l0
	cmp	%g0,%l0
	bgeu	.L854
	st	%g0,[%fp-8]

	! block 50
.L855:
.L852:
.L856:
.L857:
.L858:

!  685	            GLuint *ptr4 = PIXELADDR4( x, (y+i) );

	ld	[%fp-4],%l2
	ld	[%fp+80],%l0
	ld	[%fp-8],%l1
	add	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp+76],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-16]

	! block 51
.L859:
.L860:

!  686	            for (j=0;j<width;j++) {

	ld	[%fp+84],%l0
	cmp	%g0,%l0
	bgeu	.L863
	st	%g0,[%fp-12]

	! block 52
.L864:
.L861:
.L865:
.L866:
.L867:

!  687	               *ptr4++ = osmesa->clearpixel;

	ld	[%fp-4],%l0
	ld	[%l0+32],%l1
	ld	[%fp-16],%l0
	st	%l1,[%l0+0]
	ld	[%fp-16],%l0
	add	%l0,4,%l0
	st	%l0,[%fp-16]

	! block 53
.L868:
.L869:
.L870:
	ld	[%fp-12],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-12]
	ld	[%fp-12],%l1
	ld	[%fp+84],%l0
	cmp	%l1,%l0
	blu	.L861
	nop

	! block 54
.L871:
.L863:
.L872:
.L873:
.L874:
.L875:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+88],%l0
	cmp	%l1,%l0
	blu	.L852
	nop

	! block 55
.L876:
.L854:
.L877:
.L878:
.L879:
.L847:
.L880:
.L881:
.L882:
.L820:
.L883:
.L884:
.L738:
.L885:

	! block 56
.L886:
.L887:
.L682:
	jmp	%i7+8
	restore
	.size	clear,(.-clear)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	set_index,#function
set_index:
	save	%sp,-104,%sp

	! block 1
.L890:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]

	! block 2
.L891:
.L893:

! File osmesa.c:
!  688	            }
!  689	         }
!  690	      }
!  691	   }
!  692	}
!  693	
!  696	static void set_index( GLcontext *ctx, GLuint index )
!  697	{
!  698	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L894:

!  699	   osmesa->pixel = index;

	ld	[%fp+72],%l1
	ld	[%fp-4],%l0
	st	%l1,[%l0+28]

	! block 4
.L895:
.L896:
.L889:
	jmp	%i7+8
	restore
	.size	set_index,(.-set_index)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	set_color,#function
set_color:
	save	%sp,-104,%sp

	! block 1
.L899:
	st	%i0,[%fp+68]
	stb	%i1,[%fp+75]
	stb	%i2,[%fp+79]
	stb	%i3,[%fp+83]
	stb	%i4,[%fp+87]

	! block 2
.L900:
.L902:

! File osmesa.c:
!  700	}
!  701	
!  704	static void set_color( GLcontext *ctx,
!  705	                       GLubyte r, GLubyte g, GLubyte b, GLubyte a )
!  706	{
!  707	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L903:

!  708	   osmesa->pixel = PACK_RGBA( r, g, b, a );

	ldub	[%fp+75],%l2
	ld	[%fp-4],%l0
	ld	[%l0+44],%l1
	sll	%l2,%l1,%l3
	ldub	[%fp+79],%l2
	ld	[%l0+48],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l3
	ldub	[%fp+83],%l2
	ld	[%l0+52],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l3
	ldub	[%fp+87],%l2
	ld	[%l0+56],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l1
	st	%l1,[%l0+28]

	! block 4
.L904:
.L905:
.L898:
	jmp	%i7+8
	restore
	.size	set_color,(.-set_color)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	buffer_size,#function
buffer_size:
	save	%sp,-104,%sp

	! block 1
.L908:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]

	! block 2
.L909:
.L911:

! File osmesa.c:
!  709	}
!  710	
!  713	static void buffer_size( GLcontext *ctx, GLuint *width, GLuint *height )
!  714	{
!  715	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L912:

!  716	   *width = osmesa->width;

	ld	[%fp-4],%l0
	ld	[%l0+20],%l1
	ld	[%fp+72],%l0
	st	%l1,[%l0+0]

	! block 4
.L913:

!  717	   *height = osmesa->height;

	ld	[%fp-4],%l0
	ld	[%l0+24],%l1
	ld	[%fp+76],%l0
	st	%l1,[%l0+0]

	! block 5
.L914:
.L915:
.L907:
	jmp	%i7+8
	restore
	.size	buffer_size,(.-buffer_size)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	write_color_span,#function
write_color_span:
	save	%sp,-128,%sp

	! block 1
.L918:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]
	ld	[%fp+100],%l0
	st	%l0,[%fp+100]

	! block 2
.L919:
.L921:

! File osmesa.c:
!  718	}
!  719	
!  721	/**********************************************************************/
!  722	/*****        4 byte RGB and 1 byte CI pixel support funcs        *****/
!  723	/**********************************************************************/
!  724	
!  725	static void write_color_span( GLcontext *ctx,
!  726	                              GLuint n, GLint x, GLint y,
!  727	                              const GLubyte red[], const GLubyte green[],
!  728				      const GLubyte blue[], const GLubyte alpha[],
!  729				      const GLubyte mask[] )
!  730	{
!  731	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L922:

!  732	   GLuint *ptr4 = PIXELADDR4( x, y );

	ld	[%fp-4],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp+76],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-8]

	! block 4
.L923:

!  733	   GLuint i;
!  734	   GLint rshift = osmesa->rshift;

	ld	[%fp-4],%l0
	ld	[%l0+44],%l0
	st	%l0,[%fp-16]

	! block 5
.L924:

!  735	   GLint gshift = osmesa->gshift;

	ld	[%fp-4],%l0
	ld	[%l0+48],%l0
	st	%l0,[%fp-20]

	! block 6
.L925:

!  736	   GLint bshift = osmesa->bshift;

	ld	[%fp-4],%l0
	ld	[%l0+52],%l0
	st	%l0,[%fp-24]

	! block 7
.L926:

!  737	   GLint ashift = osmesa->ashift;

	ld	[%fp-4],%l0
	ld	[%l0+56],%l0
	st	%l0,[%fp-28]

	! block 8
.L927:
.L929:

!  738	   if (mask) {

	ld	[%fp+100],%l0
	cmp	%l0,%g0
	be	.L928
	nop

	! block 9
.L930:
.L931:
.L932:
.L933:
.L934:

!  739	      for (i=0;i<n;i++,ptr4++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L937
	st	%g0,[%fp-12]

	! block 10
.L938:
.L935:
.L939:
.L940:
.L941:
.L943:

!  740	         if (mask[i]) {

	ld	[%fp+100],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L942
	nop

	! block 11
.L944:
.L945:
.L946:
.L947:

!  741	            *ptr4 = PACK_RGBA2( red[i], green[i], blue[i], alpha[i] );

	ld	[%fp+84],%l0
	ld	[%fp-12],%l2
	ldub	[%l0+%l2],%l0
	ld	[%fp-16],%l1
	sll	%l0,%l1,%l3
	ld	[%fp+88],%l0
	ldub	[%l0+%l2],%l0
	ld	[%fp-20],%l1
	sll	%l0,%l1,%l1
	or	%l3,%l1,%l3
	ld	[%fp+92],%l0
	ldub	[%l0+%l2],%l0
	ld	[%fp-24],%l1
	sll	%l0,%l1,%l1
	or	%l3,%l1,%l3
	ld	[%fp+96],%l0
	ldub	[%l0+%l2],%l0
	ld	[%fp-28],%l1
	sll	%l0,%l1,%l1
	or	%l3,%l1,%l1
	ld	[%fp-8],%l0
	st	%l1,[%l0+0]

	! block 12
.L948:
.L949:
.L942:
.L950:
.L951:
.L952:
.L953:
	ld	[%fp-12],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-12]
	ld	[%fp-8],%l0
	st	%l0,[%fp-32]
	ld	[%fp-8],%l0
	add	%l0,4,%l0
	st	%l0,[%fp-8]
	ld	[%fp-12],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L935
	nop

	! block 13
.L954:
.L937:
.L955:
.L956:
.L957:
	ba	.L958
	nop

	! block 14
.L928:
.L959:
.L960:
.L961:
.L962:

!  742	         }
!  743	      }
!  744	   }
!  745	   else {
!  746	      for (i=0;i<n;i++,ptr4++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L965
	st	%g0,[%fp-12]

	! block 15
.L966:
.L963:
.L967:
.L968:
.L969:

!  747	         *ptr4 = PACK_RGBA2( red[i], green[i], blue[i], alpha[i] );

	ld	[%fp+84],%l0
	ld	[%fp-12],%l2
	ldub	[%l0+%l2],%l0
	ld	[%fp-16],%l1
	sll	%l0,%l1,%l3
	ld	[%fp+88],%l0
	ldub	[%l0+%l2],%l0
	ld	[%fp-20],%l1
	sll	%l0,%l1,%l1
	or	%l3,%l1,%l3
	ld	[%fp+92],%l0
	ldub	[%l0+%l2],%l0
	ld	[%fp-24],%l1
	sll	%l0,%l1,%l1
	or	%l3,%l1,%l3
	ld	[%fp+96],%l0
	ldub	[%l0+%l2],%l0
	ld	[%fp-28],%l1
	sll	%l0,%l1,%l1
	or	%l3,%l1,%l1
	ld	[%fp-8],%l0
	st	%l1,[%l0+0]

	! block 16
.L970:
.L971:
.L972:
	ld	[%fp-12],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-12]
	ld	[%fp-8],%l0
	st	%l0,[%fp-32]
	ld	[%fp-8],%l0
	add	%l0,4,%l0
	st	%l0,[%fp-8]
	ld	[%fp-12],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L963
	nop

	! block 17
.L973:
.L965:
.L974:
.L975:
.L976:
.L958:
.L977:

	! block 18
.L978:
.L979:
.L917:
	jmp	%i7+8
	restore
	.size	write_color_span,(.-write_color_span)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	write_monocolor_span,#function
write_monocolor_span:
	save	%sp,-112,%sp

	! block 1
.L982:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L983:
.L985:

! File osmesa.c:
!  748	      }
!  749	   }
!  750	}
!  751	
!  754	static void write_monocolor_span( GLcontext *ctx,
!  755	                                  GLuint n, GLint x, GLint y,
!  756					  const GLubyte mask[] )
!  757	{
!  758	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L986:

!  759	   GLuint *ptr4 = PIXELADDR4(x,y);

	ld	[%fp-4],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp+76],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-8]

	! block 4
.L987:
.L988:

!  760	   GLuint i;
!  761	   for (i=0;i<n;i++,ptr4++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L991
	st	%g0,[%fp-12]

	! block 5
.L992:
.L989:
.L993:
.L994:
.L995:
.L997:

!  762	      if (mask[i]) {

	ld	[%fp+84],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L996
	nop

	! block 6
.L998:
.L999:
.L1000:
.L1001:

!  763	         *ptr4 = osmesa->pixel;

	ld	[%fp-4],%l0
	ld	[%l0+28],%l1
	ld	[%fp-8],%l0
	st	%l1,[%l0+0]

	! block 7
.L1002:
.L1003:
.L996:
.L1004:
.L1005:
.L1006:
.L1007:
	ld	[%fp-12],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-12]
	ld	[%fp-8],%l0
	st	%l0,[%fp-16]
	ld	[%fp-8],%l0
	add	%l0,4,%l0
	st	%l0,[%fp-8]
	ld	[%fp-12],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L989
	nop

	! block 8
.L1008:
.L991:
.L1009:

	! block 9
.L1010:
.L1011:
.L981:
	jmp	%i7+8
	restore
	.size	write_monocolor_span,(.-write_monocolor_span)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	write_color_pixels,#function
write_color_pixels:
	save	%sp,-128,%sp

	! block 1
.L1014:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]
	ld	[%fp+100],%l0
	st	%l0,[%fp+100]

	! block 2
.L1015:
.L1017:

! File osmesa.c:
!  764	      }
!  765	   }
!  766	}
!  767	
!  770	static void write_color_pixels( GLcontext *ctx,
!  771	                                GLuint n, const GLint x[], const GLint y[],
!  772	                                const GLubyte red[], const GLubyte green[],
!  773				        const GLubyte blue[], const GLubyte alpha[],
!  774				        const GLubyte mask[] )
!  775	{
!  776	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1018:

!  777	   GLuint i;
!  778	   GLint rshift = osmesa->rshift;

	ld	[%fp-4],%l0
	ld	[%l0+44],%l0
	st	%l0,[%fp-12]

	! block 4
.L1019:

!  779	   GLint gshift = osmesa->gshift;

	ld	[%fp-4],%l0
	ld	[%l0+48],%l0
	st	%l0,[%fp-16]

	! block 5
.L1020:

!  780	   GLint bshift = osmesa->bshift;

	ld	[%fp-4],%l0
	ld	[%l0+52],%l0
	st	%l0,[%fp-20]

	! block 6
.L1021:

!  781	   GLint ashift = osmesa->ashift;

	ld	[%fp-4],%l0
	ld	[%l0+56],%l0
	st	%l0,[%fp-24]

	! block 7
.L1022:
.L1023:

!  782	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1026
	st	%g0,[%fp-8]

	! block 8
.L1027:
.L1024:
.L1028:
.L1029:
.L1030:
.L1032:

!  783	      if (mask[i]) {

	ld	[%fp+100],%l0
	ld	[%fp-8],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1031
	nop

	! block 9
.L1033:
.L1034:
.L1035:
.L1036:

!  784	         GLuint *ptr4 = PIXELADDR4(x[i],y[i]);

	ld	[%fp-4],%l0
	add	%l0,72,%l3
	ld	[%fp+80],%l1
	ld	[%fp-8],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l3
	ld	[%fp+76],%l0
	ld	[%l0+%l2],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	st	%l0,[%fp-28]

	! block 10
.L1037:

!  785	         *ptr4 = PACK_RGBA2( red[i], green[i], blue[i], alpha[i] );

	ld	[%fp+84],%l0
	ld	[%fp-8],%l2
	ldub	[%l0+%l2],%l0
	ld	[%fp-12],%l1
	sll	%l0,%l1,%l3
	ld	[%fp+88],%l0
	ldub	[%l0+%l2],%l0
	ld	[%fp-16],%l1
	sll	%l0,%l1,%l1
	or	%l3,%l1,%l3
	ld	[%fp+92],%l0
	ldub	[%l0+%l2],%l0
	ld	[%fp-20],%l1
	sll	%l0,%l1,%l1
	or	%l3,%l1,%l3
	ld	[%fp+96],%l0
	ldub	[%l0+%l2],%l0
	ld	[%fp-24],%l1
	sll	%l0,%l1,%l1
	or	%l3,%l1,%l1
	ld	[%fp-28],%l0
	st	%l1,[%l0+0]

	! block 11
.L1038:
.L1039:
.L1031:
.L1040:
.L1041:
.L1042:
.L1043:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1024
	nop

	! block 12
.L1044:
.L1026:
.L1045:

	! block 13
.L1046:
.L1047:
.L1013:
	jmp	%i7+8
	restore
	.size	write_color_pixels,(.-write_color_pixels)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	write_monocolor_pixels,#function
write_monocolor_pixels:
	save	%sp,-112,%sp

	! block 1
.L1050:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L1051:
.L1053:

! File osmesa.c:
!  786	      }
!  787	   }
!  788	}
!  789	
!  792	static void write_monocolor_pixels( GLcontext *ctx,
!  793	                                    GLuint n, const GLint x[], const GLint y[],
!  794					    const GLubyte mask[] )
!  795	{
!  796	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1054:
.L1055:

!  797	   GLuint i;
!  798	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1058
	st	%g0,[%fp-8]

	! block 4
.L1059:
.L1056:
.L1060:
.L1061:
.L1062:
.L1064:

!  799	      if (mask[i]) {

	ld	[%fp+84],%l0
	ld	[%fp-8],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1063
	nop

	! block 5
.L1065:
.L1066:
.L1067:
.L1068:

!  800	         GLuint *ptr4 = PIXELADDR4(x[i],y[i]);

	ld	[%fp-4],%l0
	add	%l0,72,%l3
	ld	[%fp+80],%l1
	ld	[%fp-8],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l3
	ld	[%fp+76],%l0
	ld	[%l0+%l2],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	st	%l0,[%fp-12]

	! block 6
.L1069:

!  801	         *ptr4 = osmesa->pixel;

	ld	[%fp-4],%l0
	ld	[%l0+28],%l1
	ld	[%fp-12],%l0
	st	%l1,[%l0+0]

	! block 7
.L1070:
.L1071:
.L1063:
.L1072:
.L1073:
.L1074:
.L1075:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1056
	nop

	! block 8
.L1076:
.L1058:
.L1077:

	! block 9
.L1078:
.L1079:
.L1049:
	jmp	%i7+8
	restore
	.size	write_monocolor_pixels,(.-write_monocolor_pixels)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	write_index_span,#function
write_index_span:
	save	%sp,-112,%sp

	! block 1
.L1082:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]

	! block 2
.L1083:
.L1085:

! File osmesa.c:
!  802	      }
!  803	   }
!  804	}
!  805	
!  808	static void write_index_span( GLcontext *ctx,
!  809	                              GLuint n, GLint x, GLint y, const GLuint index[],
!  810				      const GLubyte mask[] )
!  811	{
!  812	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1086:

!  813	   GLubyte *ptr1 = PIXELADDR1(x,y);

	ld	[%fp-4],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l0
	ld	[%fp+76],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-8]

	! block 4
.L1087:
.L1088:

!  814	   GLuint i;
!  815	   for (i=0;i<n;i++,ptr1++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1091
	st	%g0,[%fp-12]

	! block 5
.L1092:
.L1089:
.L1093:
.L1094:
.L1095:
.L1097:

!  816	      if (mask[i]) {

	ld	[%fp+88],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1096
	nop

	! block 6
.L1098:
.L1099:
.L1100:
.L1101:

!  817	         *ptr1 = (GLubyte) index[i];

	ld	[%fp+84],%l2
	ld	[%fp-12],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%l1
	ld	[%fp-8],%l0
	stb	%l1,[%l0+0]

	! block 7
.L1102:
.L1103:
.L1096:
.L1104:
.L1105:
.L1106:
.L1107:
	ld	[%fp-12],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-12]
	ld	[%fp-8],%l0
	st	%l0,[%fp-16]
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-12],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1089
	nop

	! block 8
.L1108:
.L1091:
.L1109:

	! block 9
.L1110:
.L1111:
.L1081:
	jmp	%i7+8
	restore
	.size	write_index_span,(.-write_index_span)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	write_monoindex_span,#function
write_monoindex_span:
	save	%sp,-112,%sp

	! block 1
.L1114:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L1115:
.L1117:

! File osmesa.c:
!  818	      }
!  819	   }
!  820	}
!  821	
!  824	static void write_monoindex_span( GLcontext *ctx,
!  825	                                  GLuint n, GLint x, GLint y,
!  826					  const GLubyte mask[] )
!  827	{
!  828	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1118:

!  829	   GLubyte *ptr1 = PIXELADDR1(x,y);

	ld	[%fp-4],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l0
	ld	[%fp+76],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-8]

	! block 4
.L1119:
.L1120:

!  830	   GLuint i;
!  831	   for (i=0;i<n;i++,ptr1++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1123
	st	%g0,[%fp-12]

	! block 5
.L1124:
.L1121:
.L1125:
.L1126:
.L1127:
.L1129:

!  832	      if (mask[i]) {

	ld	[%fp+84],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1128
	nop

	! block 6
.L1130:
.L1131:
.L1132:
.L1133:

!  833	         *ptr1 = (GLubyte) osmesa->pixel;

	ld	[%fp-4],%l0
	ld	[%l0+28],%l1
	ld	[%fp-8],%l0
	stb	%l1,[%l0+0]

	! block 7
.L1134:
.L1135:
.L1128:
.L1136:
.L1137:
.L1138:
.L1139:
	ld	[%fp-12],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-12]
	ld	[%fp-8],%l0
	st	%l0,[%fp-16]
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-12],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1121
	nop

	! block 8
.L1140:
.L1123:
.L1141:

	! block 9
.L1142:
.L1143:
.L1113:
	jmp	%i7+8
	restore
	.size	write_monoindex_span,(.-write_monoindex_span)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	write_index_pixels,#function
write_index_pixels:
	save	%sp,-112,%sp

	! block 1
.L1146:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]

	! block 2
.L1147:
.L1149:

! File osmesa.c:
!  834	      }
!  835	   }
!  836	}
!  837	
!  840	static void write_index_pixels( GLcontext *ctx,
!  841	                                GLuint n, const GLint x[], const GLint y[],
!  842				        const GLuint index[], const GLubyte mask[] )
!  843	{
!  844	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1150:
.L1151:

!  845	   GLuint i;
!  846	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1154
	st	%g0,[%fp-8]

	! block 4
.L1155:
.L1152:
.L1156:
.L1157:
.L1158:
.L1160:

!  847	      if (mask[i]) {

	ld	[%fp+88],%l0
	ld	[%fp-8],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1159
	nop

	! block 5
.L1161:
.L1162:
.L1163:
.L1164:

!  848	         GLubyte *ptr1 = PIXELADDR1(x[i],y[i]);

	ld	[%fp-4],%l0
	add	%l0,72,%l3
	ld	[%fp+80],%l1
	ld	[%fp-8],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l3
	ld	[%fp+76],%l0
	ld	[%l0+%l2],%l1
	add	%l3,%l1,%l0
	st	%l0,[%fp-12]

	! block 6
.L1165:

!  849	         *ptr1 = (GLubyte) index[i];

	ld	[%fp+84],%l2
	ld	[%fp-8],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%l1
	ld	[%fp-12],%l0
	stb	%l1,[%l0+0]

	! block 7
.L1166:
.L1167:
.L1159:
.L1168:
.L1169:
.L1170:
.L1171:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1152
	nop

	! block 8
.L1172:
.L1154:
.L1173:

	! block 9
.L1174:
.L1175:
.L1145:
	jmp	%i7+8
	restore
	.size	write_index_pixels,(.-write_index_pixels)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	write_monoindex_pixels,#function
write_monoindex_pixels:
	save	%sp,-112,%sp

	! block 1
.L1178:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L1179:
.L1181:

! File osmesa.c:
!  850	      }
!  851	   }
!  852	}
!  853	
!  856	static void write_monoindex_pixels( GLcontext *ctx,
!  857	                                    GLuint n, const GLint x[], const GLint y[],
!  858					    const GLubyte mask[] )
!  859	{
!  860	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1182:
.L1183:

!  861	   GLuint i;
!  862	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1186
	st	%g0,[%fp-8]

	! block 4
.L1187:
.L1184:
.L1188:
.L1189:
.L1190:
.L1192:

!  863	      if (mask[i]) {

	ld	[%fp+84],%l0
	ld	[%fp-8],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1191
	nop

	! block 5
.L1193:
.L1194:
.L1195:
.L1196:

!  864	         GLubyte *ptr1 = PIXELADDR1(x[i],y[i]);

	ld	[%fp-4],%l0
	add	%l0,72,%l3
	ld	[%fp+80],%l1
	ld	[%fp-8],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l3
	ld	[%fp+76],%l0
	ld	[%l0+%l2],%l1
	add	%l3,%l1,%l0
	st	%l0,[%fp-12]

	! block 6
.L1197:

!  865	         *ptr1 = (GLubyte) osmesa->pixel;

	ld	[%fp-4],%l0
	ld	[%l0+28],%l1
	ld	[%fp-12],%l0
	stb	%l1,[%l0+0]

	! block 7
.L1198:
.L1199:
.L1191:
.L1200:
.L1201:
.L1202:
.L1203:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1184
	nop

	! block 8
.L1204:
.L1186:
.L1205:

	! block 9
.L1206:
.L1207:
.L1177:
	jmp	%i7+8
	restore
	.size	write_monoindex_pixels,(.-write_monoindex_pixels)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	read_index_span,#function
read_index_span:
	save	%sp,-112,%sp

	! block 1
.L1210:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L1211:
.L1213:

! File osmesa.c:
!  866	      }
!  867	   }
!  868	}
!  869	
!  872	static void read_index_span( GLcontext *ctx,
!  873	                             GLuint n, GLint x, GLint y, GLuint index[] )
!  874	{
!  875	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1214:

!  876	   GLuint i;
!  877	   GLubyte *ptr1 = PIXELADDR1(x,y);

	ld	[%fp-4],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l0
	ld	[%fp+76],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-12]

	! block 4
.L1215:
.L1216:

!  878	   for (i=0;i<n;i++,ptr1++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1219
	st	%g0,[%fp-8]

	! block 5
.L1220:
.L1217:
.L1221:
.L1222:
.L1223:

!  879	      index[i] = (GLuint) *ptr1;

	ld	[%fp-12],%l0
	ldub	[%l0+0],%l3
	ld	[%fp+84],%l2
	ld	[%fp-8],%l0
	sll	%l0,2,%l1
	st	%l3,[%l2+%l1]

	! block 6
.L1224:
.L1225:
.L1226:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-12],%l0
	st	%l0,[%fp-16]
	ld	[%fp-12],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-12]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1217
	nop

	! block 7
.L1227:
.L1219:
.L1228:

	! block 8
.L1229:
.L1230:
.L1209:
	jmp	%i7+8
	restore
	.size	read_index_span,(.-read_index_span)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	read_color_span,#function
read_color_span:
	save	%sp,-112,%sp

	! block 1
.L1233:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]

	! block 2
.L1234:
.L1236:

! File osmesa.c:
!  880	   }
!  881	}
!  882	
!  884	static void read_color_span( GLcontext *ctx,
!  885	                             GLuint n, GLint x, GLint y,
!  886	                             GLubyte red[], GLubyte green[],
!  887				     GLubyte blue[], GLubyte alpha[] )
!  888	{
!  889	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1237:

!  890	   GLuint i;
!  891	   GLuint *ptr4 = PIXELADDR4(x,y);

	ld	[%fp-4],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp+76],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-12]

	! block 4
.L1238:
.L1239:

!  892	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1242
	st	%g0,[%fp-8]

	! block 5
.L1243:
.L1240:
.L1244:
.L1245:
.L1246:

!  893	      GLuint pixel = *ptr4++;

	ld	[%fp-12],%l0
	ld	[%l0+0],%l0
	st	%l0,[%fp-16]
	ld	[%fp-12],%l0
	add	%l0,4,%l0
	st	%l0,[%fp-12]

	! block 6
.L1247:

!  894	      red[i]   = UNPACK_RED(pixel);

	ld	[%fp-16],%l2
	ld	[%fp-4],%l0
	ld	[%l0+44],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l2
	ld	[%fp+84],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 7
.L1248:

!  895	      green[i] = UNPACK_GREEN(pixel);

	ld	[%fp-16],%l2
	ld	[%fp-4],%l0
	ld	[%l0+48],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l2
	ld	[%fp+88],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 8
.L1249:

!  896	      blue[i]  = UNPACK_BLUE(pixel);

	ld	[%fp-16],%l2
	ld	[%fp-4],%l0
	ld	[%l0+52],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l2
	ld	[%fp+92],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 9
.L1250:

!  897	      alpha[i] = UNPACK_ALPHA(pixel);

	ld	[%fp-16],%l2
	ld	[%fp-4],%l0
	ld	[%l0+56],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l2
	ld	[%fp+96],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 10
.L1251:
.L1252:
.L1253:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1240
	nop

	! block 11
.L1254:
.L1242:
.L1255:

	! block 12
.L1256:
.L1257:
.L1232:
	jmp	%i7+8
	restore
	.size	read_color_span,(.-read_color_span)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	read_index_pixels,#function
read_index_pixels:
	save	%sp,-112,%sp

	! block 1
.L1260:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]

	! block 2
.L1261:
.L1263:

! File osmesa.c:
!  898	   }
!  899	}
!  900	
!  902	static void read_index_pixels( GLcontext *ctx,
!  903	                               GLuint n, const GLint x[], const GLint y[],
!  904				       GLuint index[], const GLubyte mask[] )
!  905	{
!  906	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1264:
.L1265:

!  907	   GLuint i;
!  908	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1268
	st	%g0,[%fp-8]

	! block 4
.L1269:
.L1266:
.L1270:
.L1271:
.L1272:
.L1274:

!  909	      if (mask[i] ) {

	ld	[%fp+88],%l0
	ld	[%fp-8],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1273
	nop

	! block 5
.L1275:
.L1276:
.L1277:
.L1278:

!  910	         GLubyte *ptr1 = PIXELADDR1(x[i],y[i]);

	ld	[%fp-4],%l0
	add	%l0,72,%l3
	ld	[%fp+80],%l1
	ld	[%fp-8],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l3
	ld	[%fp+76],%l0
	ld	[%l0+%l2],%l1
	add	%l3,%l1,%l0
	st	%l0,[%fp-12]

	! block 6
.L1279:

!  911	         index[i] = (GLuint) *ptr1;

	ld	[%fp-12],%l0
	ldub	[%l0+0],%l3
	ld	[%fp+84],%l2
	ld	[%fp-8],%l0
	sll	%l0,2,%l1
	st	%l3,[%l2+%l1]

	! block 7
.L1280:
.L1281:
.L1273:
.L1282:
.L1283:
.L1284:
.L1285:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1266
	nop

	! block 8
.L1286:
.L1268:
.L1287:

	! block 9
.L1288:
.L1289:
.L1259:
	jmp	%i7+8
	restore
	.size	read_index_pixels,(.-read_index_pixels)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	read_color_pixels,#function
read_color_pixels:
	save	%sp,-112,%sp

	! block 1
.L1292:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]
	ld	[%fp+100],%l0
	st	%l0,[%fp+100]

	! block 2
.L1293:
.L1295:

! File osmesa.c:
!  912	      }
!  913	   }
!  914	}
!  915	
!  917	static void read_color_pixels( GLcontext *ctx,
!  918	                               GLuint n, const GLint x[], const GLint y[],
!  919				       GLubyte red[], GLubyte green[],
!  920				       GLubyte blue[], GLubyte alpha[],
!  921	                               const GLubyte mask[] )
!  922	{
!  923	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1296:
.L1297:

!  924	   GLuint i;
!  925	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1300
	st	%g0,[%fp-8]

	! block 4
.L1301:
.L1298:
.L1302:
.L1303:
.L1304:
.L1306:

!  926	      if (mask[i]) {

	ld	[%fp+100],%l0
	ld	[%fp-8],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1305
	nop

	! block 5
.L1307:
.L1308:
.L1309:
.L1310:

!  927	         GLuint *ptr4 = PIXELADDR4(x[i],y[i]);

	ld	[%fp-4],%l0
	add	%l0,72,%l3
	ld	[%fp+80],%l1
	ld	[%fp-8],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l3
	ld	[%fp+76],%l0
	ld	[%l0+%l2],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	st	%l0,[%fp-12]

	! block 6
.L1311:

!  928	         GLuint pixel = *ptr4;

	ld	[%fp-12],%l0
	ld	[%l0+0],%l0
	st	%l0,[%fp-16]

	! block 7
.L1312:

!  929	         red[i]   = UNPACK_RED(pixel);

	ld	[%fp-16],%l2
	ld	[%fp-4],%l0
	ld	[%l0+44],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l2
	ld	[%fp+84],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 8
.L1313:

!  930	         green[i] = UNPACK_GREEN(pixel);

	ld	[%fp-16],%l2
	ld	[%fp-4],%l0
	ld	[%l0+48],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l2
	ld	[%fp+88],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 9
.L1314:

!  931	         blue[i]  = UNPACK_BLUE(pixel);

	ld	[%fp-16],%l2
	ld	[%fp-4],%l0
	ld	[%l0+52],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l2
	ld	[%fp+92],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 10
.L1315:

!  932	         alpha[i] = UNPACK_ALPHA(pixel);

	ld	[%fp-16],%l2
	ld	[%fp-4],%l0
	ld	[%l0+56],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l2
	ld	[%fp+96],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 11
.L1316:
.L1317:
.L1305:
.L1318:
.L1319:
.L1320:
.L1321:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1298
	nop

	! block 12
.L1322:
.L1300:
.L1323:

	! block 13
.L1324:
.L1325:
.L1291:
	jmp	%i7+8
	restore
	.size	read_color_pixels,(.-read_color_pixels)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	write_color_span3,#function
write_color_span3:
	save	%sp,-120,%sp

	! block 1
.L1328:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]
	ld	[%fp+100],%l0
	st	%l0,[%fp+100]

	! block 2
.L1329:
.L1331:

! File osmesa.c:
!  933	      }
!  934	   }
!  935	}
!  936	
!  937	/**********************************************************************/
!  938	/*****                3 byte RGB pixel support funcs              *****/
!  939	/**********************************************************************/
!  940	
!  941	static void write_color_span3( GLcontext *ctx,
!  942	                              GLuint n, GLint x, GLint y,
!  943	                              const GLubyte red[], const GLubyte green[],
!  944				      const GLubyte blue[], const GLubyte alpha[],
!  945				      const GLubyte mask[] )
!  946	{
!  947	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1332:

!  948	   GLubyte *ptr3 = PIXELADDR3( x, y);

	ld	[%fp-4],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp+76],%l0
	sll	%l0,1,%l1
	add	%l0,%l1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-8]

	! block 4
.L1333:

!  949	   GLuint i;
!  950	   GLint rind = osmesa->rind;

	ld	[%fp-4],%l0
	ld	[%l0+60],%l0
	st	%l0,[%fp-16]

	! block 5
.L1334:

!  951	   GLint gind = osmesa->gind;

	ld	[%fp-4],%l0
	ld	[%l0+64],%l0
	st	%l0,[%fp-20]

	! block 6
.L1335:

!  952	   GLint bind = osmesa->bind;

	ld	[%fp-4],%l0
	ld	[%l0+68],%l0
	st	%l0,[%fp-24]

	! block 7
.L1336:
.L1338:

!  953	   if (mask) {

	ld	[%fp+100],%l0
	cmp	%l0,%g0
	be	.L1337
	nop

	! block 8
.L1339:
.L1340:
.L1341:
.L1342:
.L1343:

!  954	      for (i=0;i<n;i++,ptr3+=3) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1346
	st	%g0,[%fp-12]

	! block 9
.L1347:
.L1344:
.L1348:
.L1349:
.L1350:
.L1352:

!  955	         if (mask[i]) {

	ld	[%fp+100],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1351
	nop

	! block 10
.L1353:
.L1354:
.L1355:
.L1356:

!  956	            ptr3[rind] = red[i];

	ld	[%fp+84],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp-8],%l0
	ld	[%fp-16],%l1
	stb	%l2,[%l0+%l1]

	! block 11
.L1357:

!  957	            ptr3[gind] = green[i];

	ld	[%fp+88],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	stb	%l2,[%l0+%l1]

	! block 12
.L1358:

!  958	            ptr3[bind] = blue[i];

	ld	[%fp+92],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp-8],%l0
	ld	[%fp-24],%l1
	stb	%l2,[%l0+%l1]

	! block 13
.L1359:
.L1360:
.L1351:
.L1361:
.L1362:
.L1363:
.L1364:
	ld	[%fp-12],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-12]
	ld	[%fp-8],%l0
	add	%l0,3,%l0
	st	%l0,[%fp-8]
	ld	[%fp-12],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1344
	nop

	! block 14
.L1365:
.L1346:
.L1366:
.L1367:
.L1368:
	ba	.L1369
	nop

	! block 15
.L1337:
.L1370:
.L1371:
.L1372:
.L1373:

!  959	         }
!  960	      }
!  961	   }
!  962	   else {
!  963	      for (i=0;i<n;i++,ptr3+=3) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1376
	st	%g0,[%fp-12]

	! block 16
.L1377:
.L1374:
.L1378:
.L1379:
.L1380:

!  964	         ptr3[rind] = red[i];

	ld	[%fp+84],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp-8],%l0
	ld	[%fp-16],%l1
	stb	%l2,[%l0+%l1]

	! block 17
.L1381:

!  965	         ptr3[gind] = green[i];

	ld	[%fp+88],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	stb	%l2,[%l0+%l1]

	! block 18
.L1382:

!  966	         ptr3[bind] = blue[i];

	ld	[%fp+92],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp-8],%l0
	ld	[%fp-24],%l1
	stb	%l2,[%l0+%l1]

	! block 19
.L1383:
.L1384:
.L1385:
	ld	[%fp-12],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-12]
	ld	[%fp-8],%l0
	add	%l0,3,%l0
	st	%l0,[%fp-8]
	ld	[%fp-12],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1374
	nop

	! block 20
.L1386:
.L1376:
.L1387:
.L1388:
.L1389:
.L1369:
.L1390:

	! block 21
.L1391:
.L1392:
.L1327:
	jmp	%i7+8
	restore
	.size	write_color_span3,(.-write_color_span3)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	write_monocolor_span3,#function
write_monocolor_span3:
	save	%sp,-128,%sp

	! block 1
.L1395:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L1396:
.L1398:

! File osmesa.c:
!  967	      }
!  968	   }
!  969	}
!  970	
!  971	static void write_monocolor_span3( GLcontext *ctx,
!  972	                                  GLuint n, GLint x, GLint y,
!  973					  const GLubyte mask[] )
!  974	{
!  975	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1399:

!  976	   
!  977	   GLubyte rval = UNPACK_RED(osmesa->pixel);

	ld	[%fp-4],%l0
	ld	[%l0+28],%l2
	ld	[%l0+44],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l0
	stb	%l0,[%fp-5]

	! block 4
.L1400:

!  978	   GLubyte gval = UNPACK_GREEN(osmesa->pixel);

	ld	[%fp-4],%l0
	ld	[%l0+28],%l2
	ld	[%l0+48],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l0
	stb	%l0,[%fp-6]

	! block 5
.L1401:

!  979	   GLubyte bval = UNPACK_BLUE(osmesa->pixel);

	ld	[%fp-4],%l0
	ld	[%l0+28],%l2
	ld	[%l0+52],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l0
	stb	%l0,[%fp-7]

	! block 6
.L1402:

!  980	   GLint   rind = osmesa->rind;

	ld	[%fp-4],%l0
	ld	[%l0+60],%l0
	st	%l0,[%fp-12]

	! block 7
.L1403:

!  981	   GLint   gind = osmesa->gind;

	ld	[%fp-4],%l0
	ld	[%l0+64],%l0
	st	%l0,[%fp-16]

	! block 8
.L1404:

!  982	   GLint   bind = osmesa->bind;

	ld	[%fp-4],%l0
	ld	[%l0+68],%l0
	st	%l0,[%fp-20]

	! block 9
.L1405:

!  985	   GLubyte *ptr3 = PIXELADDR3( x, y);

	ld	[%fp-4],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp+76],%l0
	sll	%l0,1,%l1
	add	%l0,%l1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-24]

	! block 10
.L1406:
.L1407:

!  986	   GLuint i;
!  987	   for (i=0;i<n;i++,ptr3+=3) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1410
	st	%g0,[%fp-28]

	! block 11
.L1411:
.L1408:
.L1412:
.L1413:
.L1414:
.L1416:

!  988	      if (mask[i]) {

	ld	[%fp+84],%l0
	ld	[%fp-28],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1415
	nop

	! block 12
.L1417:
.L1418:
.L1419:
.L1420:

!  989	         ptr3[rind] = rval;

	ldub	[%fp-5],%l2
	ld	[%fp-24],%l0
	ld	[%fp-12],%l1
	stb	%l2,[%l0+%l1]

	! block 13
.L1421:

!  990	         ptr3[gind] = gval;

	ldub	[%fp-6],%l2
	ld	[%fp-24],%l0
	ld	[%fp-16],%l1
	stb	%l2,[%l0+%l1]

	! block 14
.L1422:

!  991	         ptr3[bind] = bval;

	ldub	[%fp-7],%l2
	ld	[%fp-24],%l0
	ld	[%fp-20],%l1
	stb	%l2,[%l0+%l1]

	! block 15
.L1423:
.L1424:
.L1415:
.L1425:
.L1426:
.L1427:
.L1428:
	ld	[%fp-28],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-28]
	ld	[%fp-24],%l0
	add	%l0,3,%l0
	st	%l0,[%fp-24]
	ld	[%fp-28],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1408
	nop

	! block 16
.L1429:
.L1410:
.L1430:

	! block 17
.L1431:
.L1432:
.L1394:
	jmp	%i7+8
	restore
	.size	write_monocolor_span3,(.-write_monocolor_span3)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	write_color_pixels3,#function
write_color_pixels3:
	save	%sp,-120,%sp

	! block 1
.L1435:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]
	ld	[%fp+100],%l0
	st	%l0,[%fp+100]

	! block 2
.L1436:
.L1438:

! File osmesa.c:
!  992	      }
!  993	   }
!  994	}
!  995	
!  996	static void write_color_pixels3( GLcontext *ctx,
!  997	                                GLuint n, const GLint x[], const GLint y[],
!  998	                                const GLubyte red[], const GLubyte green[],
!  999				        const GLubyte blue[], const GLubyte alpha[],
! 1000				        const GLubyte mask[] )
! 1001	{
! 1002	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1439:

! 1003	   GLuint i;
! 1004	   GLint rind = osmesa->rind;

	ld	[%fp-4],%l0
	ld	[%l0+60],%l0
	st	%l0,[%fp-12]

	! block 4
.L1440:

! 1005	   GLint gind = osmesa->gind;

	ld	[%fp-4],%l0
	ld	[%l0+64],%l0
	st	%l0,[%fp-16]

	! block 5
.L1441:

! 1006	   GLint bind = osmesa->bind;

	ld	[%fp-4],%l0
	ld	[%l0+68],%l0
	st	%l0,[%fp-20]

	! block 6
.L1442:
.L1443:

! 1008	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1446
	st	%g0,[%fp-8]

	! block 7
.L1447:
.L1444:
.L1448:
.L1449:
.L1450:
.L1452:

! 1009	      if (mask[i]) {

	ld	[%fp+100],%l0
	ld	[%fp-8],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1451
	nop

	! block 8
.L1453:
.L1454:
.L1455:
.L1456:

! 1010	         GLubyte *ptr3 = PIXELADDR3(x[i],y[i]);

	ld	[%fp-4],%l0
	add	%l0,72,%l3
	ld	[%fp+80],%l1
	ld	[%fp-8],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l3
	ld	[%fp+76],%l0
	ld	[%l0+%l2],%l0
	sll	%l0,1,%l1
	add	%l0,%l1,%l1
	add	%l3,%l1,%l0
	st	%l0,[%fp-24]

	! block 9
.L1457:

! 1011	         ptr3[rind] = red[i];

	ld	[%fp+84],%l0
	ld	[%fp-8],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp-24],%l0
	ld	[%fp-12],%l1
	stb	%l2,[%l0+%l1]

	! block 10
.L1458:

! 1012	         ptr3[gind] = green[i];

	ld	[%fp+88],%l0
	ld	[%fp-8],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp-24],%l0
	ld	[%fp-16],%l1
	stb	%l2,[%l0+%l1]

	! block 11
.L1459:

! 1013	         ptr3[bind] = blue[i];

	ld	[%fp+92],%l0
	ld	[%fp-8],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp-24],%l0
	ld	[%fp-20],%l1
	stb	%l2,[%l0+%l1]

	! block 12
.L1460:
.L1461:
.L1451:
.L1462:
.L1463:
.L1464:
.L1465:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1444
	nop

	! block 13
.L1466:
.L1446:
.L1467:

	! block 14
.L1468:
.L1469:
.L1434:
	jmp	%i7+8
	restore
	.size	write_color_pixels3,(.-write_color_pixels3)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	write_monocolor_pixels3,#function
write_monocolor_pixels3:
	save	%sp,-128,%sp

	! block 1
.L1472:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L1473:
.L1475:

! File osmesa.c:
! 1014	      }
! 1015	   }
! 1016	}
! 1017	
! 1018	static void write_monocolor_pixels3( GLcontext *ctx,
! 1019	                                    GLuint n, const GLint x[], const GLint y[],
! 1020					    const GLubyte mask[] )
! 1021	{
! 1022	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1476:

! 1023	   GLuint i;
! 1024	   GLint rind = osmesa->rind;

	ld	[%fp-4],%l0
	ld	[%l0+60],%l0
	st	%l0,[%fp-12]

	! block 4
.L1477:

! 1025	   GLint gind = osmesa->gind;

	ld	[%fp-4],%l0
	ld	[%l0+64],%l0
	st	%l0,[%fp-16]

	! block 5
.L1478:

! 1026	   GLint bind = osmesa->bind;

	ld	[%fp-4],%l0
	ld	[%l0+68],%l0
	st	%l0,[%fp-20]

	! block 6
.L1479:

! 1027	   GLubyte rval = UNPACK_RED(osmesa->pixel);

	ld	[%fp-4],%l0
	ld	[%l0+28],%l2
	ld	[%l0+44],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l0
	stb	%l0,[%fp-21]

	! block 7
.L1480:

! 1028	   GLubyte gval = UNPACK_GREEN(osmesa->pixel);

	ld	[%fp-4],%l0
	ld	[%l0+28],%l2
	ld	[%l0+48],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l0
	stb	%l0,[%fp-22]

	! block 8
.L1481:

! 1029	   GLubyte bval = UNPACK_BLUE(osmesa->pixel);

	ld	[%fp-4],%l0
	ld	[%l0+28],%l2
	ld	[%l0+52],%l1
	srl	%l2,%l1,%l0
	and	%l0,255,%l0
	stb	%l0,[%fp-23]

	! block 9
.L1482:
.L1483:

! 1030	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1486
	st	%g0,[%fp-8]

	! block 10
.L1487:
.L1484:
.L1488:
.L1489:
.L1490:
.L1492:

! 1031	      if (mask[i]) {

	ld	[%fp+84],%l0
	ld	[%fp-8],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1491
	nop

	! block 11
.L1493:
.L1494:
.L1495:
.L1496:

! 1032	         GLubyte *ptr3 = PIXELADDR3(x[i],y[i]);

	ld	[%fp-4],%l0
	add	%l0,72,%l3
	ld	[%fp+80],%l1
	ld	[%fp-8],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l3
	ld	[%fp+76],%l0
	ld	[%l0+%l2],%l0
	sll	%l0,1,%l1
	add	%l0,%l1,%l1
	add	%l3,%l1,%l0
	st	%l0,[%fp-28]

	! block 12
.L1497:

! 1033	         ptr3[rind] = rval;

	ldub	[%fp-21],%l2
	ld	[%fp-28],%l0
	ld	[%fp-12],%l1
	stb	%l2,[%l0+%l1]

	! block 13
.L1498:

! 1034	         ptr3[gind] = gval;

	ldub	[%fp-22],%l2
	ld	[%fp-28],%l0
	ld	[%fp-16],%l1
	stb	%l2,[%l0+%l1]

	! block 14
.L1499:

! 1035	         ptr3[bind] = bval;

	ldub	[%fp-23],%l2
	ld	[%fp-28],%l0
	ld	[%fp-20],%l1
	stb	%l2,[%l0+%l1]

	! block 15
.L1500:
.L1501:
.L1491:
.L1502:
.L1503:
.L1504:
.L1505:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1484
	nop

	! block 16
.L1506:
.L1486:
.L1507:

	! block 17
.L1508:
.L1509:
.L1471:
	jmp	%i7+8
	restore
	.size	write_monocolor_pixels3,(.-write_monocolor_pixels3)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	read_color_span3,#function
read_color_span3:
	save	%sp,-120,%sp

	! block 1
.L1512:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]

	! block 2
.L1513:
.L1515:

! File osmesa.c:
! 1036	      }
! 1037	   }
! 1038	}
! 1039	
! 1040	static void read_color_span3( GLcontext *ctx,
! 1041	                             GLuint n, GLint x, GLint y,
! 1042	                             GLubyte red[], GLubyte green[],
! 1043				     GLubyte blue[], GLubyte alpha[] )
! 1044	{
! 1045	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1516:

! 1046	   GLuint i;
! 1047	   GLint rind = osmesa->rind;

	ld	[%fp-4],%l0
	ld	[%l0+60],%l0
	st	%l0,[%fp-12]

	! block 4
.L1517:

! 1048	   GLint gind = osmesa->gind;

	ld	[%fp-4],%l0
	ld	[%l0+64],%l0
	st	%l0,[%fp-16]

	! block 5
.L1518:

! 1049	   GLint bind = osmesa->bind;

	ld	[%fp-4],%l0
	ld	[%l0+68],%l0
	st	%l0,[%fp-20]

	! block 6
.L1519:

! 1050	   GLubyte *ptr3 = PIXELADDR3( x, y);

	ld	[%fp-4],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp+76],%l0
	sll	%l0,1,%l1
	add	%l0,%l1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-24]

	! block 7
.L1520:
.L1521:

! 1051	   for (i=0;i<n;i++,ptr3+=3) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1524
	st	%g0,[%fp-8]

	! block 8
.L1525:
.L1522:
.L1526:
.L1527:
.L1528:

! 1052	      red[i]   = ptr3[rind];

	ld	[%fp-24],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp+84],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 9
.L1529:

! 1053	      green[i] = ptr3[gind];

	ld	[%fp-24],%l0
	ld	[%fp-16],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp+88],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 10
.L1530:

! 1054	      blue[i]  = ptr3[bind];

	ld	[%fp-24],%l0
	ld	[%fp-20],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp+92],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 11
.L1531:

! 1055	      alpha[i] = 0;

	ld	[%fp+96],%l0
	ld	[%fp-8],%l1
	stb	%g0,[%l0+%l1]

	! block 12
.L1532:
.L1533:
.L1534:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-24],%l0
	add	%l0,3,%l0
	st	%l0,[%fp-24]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1522
	nop

	! block 13
.L1535:
.L1524:
.L1536:

	! block 14
.L1537:
.L1538:
.L1511:
	jmp	%i7+8
	restore
	.size	read_color_span3,(.-read_color_span3)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	read_color_pixels3,#function
read_color_pixels3:
	save	%sp,-120,%sp

	! block 1
.L1541:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]
	ld	[%fp+100],%l0
	st	%l0,[%fp+100]

	! block 2
.L1542:
.L1544:

! File osmesa.c:
! 1056	   }
! 1057	}
! 1058	
! 1059	static void read_color_pixels3( GLcontext *ctx,
! 1060	                               GLuint n, const GLint x[], const GLint y[],
! 1061				       GLubyte red[], GLubyte green[],
! 1062				       GLubyte blue[], GLubyte alpha[],
! 1063	                               const GLubyte mask[] )
! 1064	{
! 1065	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1545:

! 1066	   GLuint i;
! 1067	   GLint rind = osmesa->rind;

	ld	[%fp-4],%l0
	ld	[%l0+60],%l0
	st	%l0,[%fp-12]

	! block 4
.L1546:

! 1068	   GLint gind = osmesa->gind;

	ld	[%fp-4],%l0
	ld	[%l0+64],%l0
	st	%l0,[%fp-16]

	! block 5
.L1547:

! 1069	   GLint bind = osmesa->bind;

	ld	[%fp-4],%l0
	ld	[%l0+68],%l0
	st	%l0,[%fp-20]

	! block 6
.L1548:
.L1549:

! 1070	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1552
	st	%g0,[%fp-8]

	! block 7
.L1553:
.L1550:
.L1554:
.L1555:
.L1556:
.L1558:

! 1071	      if (mask[i]) {

	ld	[%fp+100],%l0
	ld	[%fp-8],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1557
	nop

	! block 8
.L1559:
.L1560:
.L1561:
.L1562:

! 1072	         GLubyte *ptr3 = PIXELADDR3(x[i],y[i]);

	ld	[%fp-4],%l0
	add	%l0,72,%l3
	ld	[%fp+80],%l1
	ld	[%fp-8],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l3
	ld	[%fp+76],%l0
	ld	[%l0+%l2],%l0
	sll	%l0,1,%l1
	add	%l0,%l1,%l1
	add	%l3,%l1,%l0
	st	%l0,[%fp-24]

	! block 9
.L1563:

! 1073	         red[i]   = ptr3[rind];

	ld	[%fp-24],%l0
	ld	[%fp-12],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp+84],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 10
.L1564:

! 1074	         green[i] = ptr3[gind];

	ld	[%fp-24],%l0
	ld	[%fp-16],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp+88],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 11
.L1565:

! 1075	         blue[i]  = ptr3[bind];

	ld	[%fp-24],%l0
	ld	[%fp-20],%l1
	ldub	[%l0+%l1],%l2
	ld	[%fp+92],%l0
	ld	[%fp-8],%l1
	stb	%l2,[%l0+%l1]

	! block 12
.L1566:

! 1076	         alpha[i] = 0;

	ld	[%fp+96],%l0
	ld	[%fp-8],%l1
	stb	%g0,[%l0+%l1]

	! block 13
.L1567:
.L1568:
.L1557:
.L1569:
.L1570:
.L1571:
.L1572:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1550
	nop

	! block 14
.L1573:
.L1552:
.L1574:

	! block 15
.L1575:
.L1576:
.L1540:
	jmp	%i7+8
	restore
	.size	read_color_pixels3,(.-read_color_pixels3)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	flat_color_line,#function
flat_color_line:
	save	%sp,-168,%sp

	! block 1
.L1579:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]

	! block 2
.L1580:
.L1582:

! File osmesa.c:
! 1077	      }
! 1078	   }
! 1079	}
! 1080	
! 1082	/**********************************************************************/
! 1083	/*****                   Optimized line rendering                 *****/
! 1084	/**********************************************************************/
! 1085	
! 1087	/*
! 1088	 * Draw a flat-shaded, RGB line into an osmesa buffer.
! 1089	 */
! 1090	static void flat_color_line( GLcontext *ctx,
! 1091	                             GLuint vert0, GLuint vert1, GLuint pvert )
! 1092	{
! 1093	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1583:

! 1094	   GLubyte *color = ctx->VB->Color[pvert];

	ld	[%fp+68],%l0
	sethi	%hi(0xe134),%l1
	or	%l1,%lo(0xe134),%l1
	ld	[%l0+%l1],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-8]

	! block 4
.L1584:

! 1095	   unsigned long pixel = PACK_RGBA( color[0], color[1], color[2], color[3] );

	ld	[%fp-8],%l5
	ldub	[%l5+0],%l2
	ld	[%fp-4],%l0
	ld	[%l0+44],%l1
	sll	%l2,%l1,%l3
	ldub	[%l5+1],%l2
	ld	[%l0+48],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l3
	ldub	[%l5+2],%l2
	ld	[%l0+52],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l3
	ldub	[%l5+3],%l2
	ld	[%l0+56],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-12]

	! block 5
.L1585:
.L1586:

! File linetemp.h:
!    1	/* $Id: linetemp.h,v 1.3 1997/06/20 02:49:53 brianp Exp $ */
!    2	
!    3	/*
!    4	 * Mesa 3-D graphics library
!    5	 * Version:  2.3
!    6	 * Copyright (C) 1995-1997  Brian Paul
!    7	 *
!    8	 * This library is free software; you can redistribute it and/or
!    9	 * modify it under the terms of the GNU Library General Public
!   10	 * License as published by the Free Software Foundation; either
!   11	 * version 2 of the License, or (at your option) any later version.
!   12	 *
!   13	 * This library is distributed in the hope that it will be useful,
!   14	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
!   15	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
!   16	 * Library General Public License for more details.
!   17	 *
!   18	 * You should have received a copy of the GNU Library General Public
!   19	 * License along with this library; if not, write to the Free
!   20	 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
!   21	 */
!   22	
!   24	/*
!   25	 * $Log: linetemp.h,v $
!   26	 * Revision 1.3  1997/06/20 02:49:53  brianp
!   27	 * changed color components from GLfixed to GLubyte
!   28	 *
!   29	 * Revision 1.2  1997/05/16 01:54:54  brianp
!   30	 * zPtrYstep calculation was negated!
!   31	 *
!   32	 * Revision 1.1  1997/03/16 02:07:56  brianp
!   33	 * Initial revision
!   34	 *
!   35	 */
!   36	
!   38	/*
!   39	 * Line Rasterizer Template
!   40	 *
!   41	 * This file is #include'd to generate custom line rasterizers.
!   42	 *
!   43	 * The following macros may be defined to indicate what auxillary information
!   44	 * must be interplated along the line:
!   45	 *    INTERP_Z      - if defined, interpolate Z values
!   46	 *    INTERP_RGB    - if defined, interpolate RGB values
!   47	 *    INTERP_ALPHA  - if defined, interpolate Alpha values
!   48	 *    INTERP_INDEX  - if defined, interpolate color index values
!   49	 *    INTERP_ST     - if defined, interpolate integer ST texcoords
!   50	 *                         (fast, simple 2-D texture mapping)
!   51	 *    INTERP_STW    - if defined, interpolate float ST texcoords and W
!   52	 *                         (2-D texture maps with perspective correction)
!   53	 *    INTERP_UV     - if defined, interpolate float UV texcoords too
!   54	 *                         (for 3-D, 4-D? texture maps)
!   55	 *
!   56	 * When one can directly address pixels in the color buffer the following
!   57	 * macros can be defined and used to directly compute pixel addresses during
!   58	 * rasterization (see pixelPtr):
!   59	 *    PIXEL_TYPE          - the datatype of a pixel (GLubyte, GLushort, GLuint)
!   60	 *    BYTES_PER_ROW       - number of bytes per row in the color buffer
!   61	 *    PIXEL_ADDRESS(X,Y)  - returns the address of pixel at (X,Y) where
!   62	 *                          Y==0 at bottom of screen and increases upward.
!   63	 *
!   64	 * Optionally, one may provide one-time setup code
!   65	 *    SETUP_CODE    - code which is to be executed once per line
!   66	 *
!   67	 * To enable line stippling define STIPPLE = 1
!   68	 * To enable wide lines define WIDE = 1
!   69	 * 
!   70	 * To actually "plot" each pixel either the PLOT macro or
!   71	 * (XMAJOR_PLOT and YMAJOR_PLOT macros) must be defined...
!   72	 *    PLOT(X,Y) - code to plot a pixel.  Example:
!   73	 *                if (Z < *zPtr) {
!   74	 *                   *zPtr = Z;
!   75	 *                   color = pack_rgb( FixedToInt(r0), FixedToInt(g0),
!   76	 *                                     FixedToInt(b0) );
!   77	 *                   put_pixel( X, Y, color );
!   78	 *                }
!   79	 *
!   80	 * This code was designed for the origin to be in the lower-left corner.
!   81	 *
!   82	 */
!   83	
!   85	/*void line( GLcontext *ctx, GLuint vert0, GLuint vert1, GLuint pvert )*/
!   86	{
!   87	   struct vertex_buffer *VB = ctx->VB;

	ld	[%fp+68],%l0
	sethi	%hi(0xe134),%l1
	or	%l1,%lo(0xe134),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-16]

	! block 6
.L1587:

!   88	/*
!   89	   GLint x0 = (GLint) VB->Win[vert0][0], dx = (GLint) VB->Win[vert1][0] - x0;
!   90	   GLint y0 = (GLint) VB->Win[vert0][1], dy = (GLint) VB->Win[vert1][1] - y0;
!   91	*/
!   92	   GLint x0 = (GLint) VB->Win[vert0][0], x1 = (GLint) VB->Win[vert1][0];

	ld	[%fp-16],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l5
	or	%l5,%lo(0x5e80),%l5
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-72]
	ld	[%fp-72],%l0
	st	%l0,[%fp-20]
	ld	[%fp-16],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-72]
	ld	[%fp-72],%l0
	st	%l0,[%fp-24]

	! block 7
.L1588:

!   93	   GLint y0 = (GLint) VB->Win[vert0][1], y1 = (GLint) VB->Win[vert1][1];

	ld	[%fp-16],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l5
	or	%l5,%lo(0x5e84),%l5
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-72]
	ld	[%fp-72],%l0
	st	%l0,[%fp-28]
	ld	[%fp-16],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-72]
	ld	[%fp-72],%l0
	st	%l0,[%fp-32]

	! block 8
.L1589:
.L1590:

!   94	   GLint dx, dy;
!   95	#if INTERP_XY
!   96	   GLint xstep, ystep;
!   97	#endif
!   98	#if INTERP_Z
!   99	   GLint z0, z1, dz, zPtrXstep, zPtrYstep;
!  100	   GLdepth *zPtr;
!  101	#endif
!  102	#if INTERP_RGB
!  103	   GLfixed r0 = IntToFixed(VB->Color[vert0][0]);
!  104	   GLfixed dr = IntToFixed(VB->Color[vert1][0]) - r0;
!  105	   GLfixed g0 = IntToFixed(VB->Color[vert0][1]);
!  106	   GLfixed dg = IntToFixed(VB->Color[vert1][1]) - g0;
!  107	   GLfixed b0 = IntToFixed(VB->Color[vert0][2]);
!  108	   GLfixed db = IntToFixed(VB->Color[vert1][2]) - b0;
!  109	#endif
!  110	#if INTERP_ALPHA
!  111	   GLfixed a0 = IntToFixed(VB->Color[vert0][3]);
!  112	   GLfixed da = IntToFixed(VB->Color[vert1][3]) - a0;
!  113	#endif
!  114	#if INTERP_INDEX
!  115	   GLint i0 = VB->Index[vert0] << 8,  di = (GLint) (VB->Index[vert1] << 8)-i0;
!  116	#endif
!  117	#if INTERP_ST
!  118	   GLfixed s0 = FloatToFixed(VB->TexCoord[vert0][0] * S_SCALE);
!  119	   GLfixed ds = FloatToFixed(VB->TexCoord[vert1][0] * S_SCALE) - s0;
!  120	   GLfixed t0 = FloatToFixed(VB->TexCoord[vert0][1] * T_SCALE);
!  121	   GLfixed dt = FloatToFixed(VB->TexCoord[vert1][1] * T_SCALE) - t0;
!  122	#endif
!  123	#if INTERP_STW
!  124	   GLfloat s0 = VB->TexCoord[vert0][0], ds = VB->TexCoord[vert1][0] - s0;
!  125	   GLfloat t0 = VB->TexCoord[vert0][1], dt = VB->TexCoord[vert1][1] - t0;
!  126	   GLfloat w0 = 1.0F / VB->Clip[vert0][3], dw = 1.0F / VB->Clip[vert1][3] - w0;
!  127	#endif
!  128	#if INTERP_UV
!  129	   GLfloat u0 = VB->TexCoord[vert0][2], du = VB->TexCoord[vert1][2] - u0;
!  130	   GLfloat v0 = VB->TexCoord[vert0][3], dv = VB->TexCoord[vert1][3] - v0;
!  131	#endif
!  132	#ifdef PIXEL_ADDRESS
!  133	   PIXEL_TYPE *pixelPtr;
!  134	   GLint pixelXstep, pixelYstep;
!  135	#endif
!  136	
!  137	#if WIDE
!  138	   GLint width, min, max;
!  139	   width = (GLint) CLAMP( ctx->Line.Width, MIN_LINE_WIDTH, MAX_LINE_WIDTH );
!  140	   min = -width / 2;
!  141	   max = min + width - 1;
!  142	#endif
!  143	
!  144	/*
!  145	 * Despite being clipped to the view volume, the line's window coordinates
!  146	 * may just lie outside the window bounds.  That is, if the legal window
!  147	 * coordinates are [0,W-1][0,H-1], it's possible for x==W and/or y==H.
!  148	 * This quick and dirty code nudges the endpoints inside the window if
!  149	 * necessary.
!  150	 */
!  151	#if CLIP_HACK
!  152	   {
!  153	      GLint w = ctx->Buffer->Width;

	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	st	%l0,[%fp-52]

	! block 9
.L1591:

!  154	      GLint h = ctx->Buffer->Height;

	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+8],%l0
	st	%l0,[%fp-56]

	! block 10
.L1592:
.L1594:

!  155	      if ((x0==w) | (x1==w)) {

	ld	[%fp-20],%l0
	ld	[%fp-52],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-24],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	orcc	%l2,%l1,%l0
	be	.L1593
	nop

	! block 11
.L1595:
.L1596:
.L1597:
.L1598:
.L1600:

!  156	         if ((x0==w) & (x1==w))

	ld	[%fp-20],%l0
	ld	[%fp-52],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-24],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	andcc	%l2,%l1,%l0
	be	.L1599
	nop

	! block 12
.L1601:
.L1602:
.L1603:

!  157	           return;

	ba	.L1578
	nop

	! block 13
.L1604:
.L1599:
.L1605:
.L1606:

!  158	         x0 -= x0==w;

	ld	[%fp-20],%l0
	ld	[%fp-52],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-20]

	! block 14
.L1607:

!  159	         x1 -= x1==w;

	ld	[%fp-24],%l0
	ld	[%fp-52],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-24]

	! block 15
.L1608:
.L1609:
.L1593:
.L1610:
.L1611:
.L1613:

!  160	      }
!  161	      if ((y0==h) | (y1==h)) {

	ld	[%fp-28],%l0
	ld	[%fp-56],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-32],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	orcc	%l2,%l1,%l0
	be	.L1612
	nop

	! block 16
.L1614:
.L1615:
.L1616:
.L1617:
.L1619:

!  162	         if ((y0==h) & (y1==h))

	ld	[%fp-28],%l0
	ld	[%fp-56],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-32],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	andcc	%l2,%l1,%l0
	be	.L1618
	nop

	! block 17
.L1620:
.L1621:
.L1622:

!  163	           return;

	ba	.L1578
	nop

	! block 18
.L1623:
.L1618:
.L1624:
.L1625:

!  164	         y0 -= y0==h;

	ld	[%fp-28],%l0
	ld	[%fp-56],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-28]

	! block 19
.L1626:

!  165	         y1 -= y1==h;

	ld	[%fp-32],%l0
	ld	[%fp-56],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-32]

	! block 20
.L1627:
.L1628:
.L1612:
.L1629:
.L1630:
.L1631:

!  166	      }
!  167	   }
!  168	#endif
!  169	   dx = x1 - x0;

	ld	[%fp-24],%l0
	ld	[%fp-20],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-36]

	! block 21
.L1632:

!  170	   dy = y1 - y0;

	ld	[%fp-32],%l0
	ld	[%fp-28],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-40]

	! block 22
.L1633:
.L1635:

!  171	   if (dx==0 && dy==0) {

	ld	[%fp-36],%l0
	cmp	%l0,0
	bne	.L1634
	nop

	! block 23
.L1636:
	ld	[%fp-40],%l0
	cmp	%l0,0
	bne	.L1634
	nop

	! block 24
.L1637:
.L1638:
.L1639:
.L1640:

!  172	      return;

	ba	.L1578
	nop

	! block 25
.L1641:
.L1642:
.L1634:
.L1643:
.L1644:
.L1646:

!  173	   }
!  174	
!  175	   /*
!  176	    * Setup
!  177	    */
!  178	#ifdef SETUP_CODE
!  179	   SETUP_CODE
!  180	#endif
!  181	
!  182	#if INTERP_Z
!  183	   zPtr = Z_ADDRESS(ctx,x0,y0);
!  184	#  if DEPTH_BITS==16
!  185	      z0 = FloatToFixed(VB->Win[vert0][2]);
!  186	      z1 = FloatToFixed(VB->Win[vert1][2]);
!  187	#  else
!  188	      z0 = (int) VB->Win[vert0][2];
!  189	      z1 = (int) VB->Win[vert1][2];
!  190	#  endif
!  191	#endif
!  192	#ifdef PIXEL_ADDRESS
!  193	   pixelPtr = (PIXEL_TYPE *) PIXEL_ADDRESS(x0,y0);
!  194	#endif
!  195	
!  196	   if (dx<0) {

	ld	[%fp-36],%l0
	cmp	%l0,0
	bge	.L1645
	nop

	! block 26
.L1647:
.L1648:
.L1649:
.L1650:

!  197	      dx = -dx;   /* make positive */

	ld	[%fp-36],%l0
	neg	%l0,%l0
	st	%l0,[%fp-36]

	! block 27
.L1651:

!  198	#if INTERP_XY
!  199	      xstep = -1;

	mov	-1,%l0
	st	%l0,[%fp-44]

	! block 28
.L1652:
.L1653:
	ba	.L1654
	nop

	! block 29
.L1645:
.L1655:
.L1656:
.L1657:

!  200	#endif
!  201	#ifdef INTERP_Z
!  202	      zPtrXstep = -sizeof(GLdepth);
!  203	#endif
!  204	#ifdef PIXEL_ADDRESS
!  205	      pixelXstep = -sizeof(PIXEL_TYPE);
!  206	#endif
!  207	   }
!  208	   else {
!  209	#if INTERP_XY
!  210	      xstep = 1;

	mov	1,%l0
	st	%l0,[%fp-44]

	! block 30
.L1658:
.L1659:
.L1654:
.L1660:
.L1661:
.L1663:

!  211	#endif
!  212	#if INTERP_Z
!  213	      zPtrXstep = sizeof(GLdepth);
!  214	#endif
!  215	#ifdef PIXEL_ADDRESS
!  216	      pixelXstep = sizeof(PIXEL_TYPE);
!  217	#endif
!  218	   }
!  219	
!  220	   if (dy<0) {

	ld	[%fp-40],%l0
	cmp	%l0,0
	bge	.L1662
	nop

	! block 31
.L1664:
.L1665:
.L1666:
.L1667:

!  221	      dy = -dy;   /* make positive */

	ld	[%fp-40],%l0
	neg	%l0,%l0
	st	%l0,[%fp-40]

	! block 32
.L1668:

!  222	#if INTERP_XY
!  223	      ystep = -1;

	mov	-1,%l0
	st	%l0,[%fp-48]

	! block 33
.L1669:
.L1670:
	ba	.L1671
	nop

	! block 34
.L1662:
.L1672:
.L1673:
.L1674:

!  224	#endif
!  225	#if INTERP_Z
!  226	      zPtrYstep = -ctx->Buffer->Width * sizeof(GLdepth);
!  227	#endif
!  228	#ifdef PIXEL_ADDRESS
!  229	      pixelYstep = BYTES_PER_ROW;
!  230	#endif
!  231	   }
!  232	   else {
!  233	#if INTERP_XY
!  234	      ystep = 1;

	mov	1,%l0
	st	%l0,[%fp-48]

	! block 35
.L1675:
.L1676:
.L1671:
.L1677:
.L1678:
.L1680:

!  235	#endif
!  236	#if INTERP_Z
!  237	      zPtrYstep = ctx->Buffer->Width * sizeof(GLdepth);
!  238	#endif
!  239	#ifdef PIXEL_ADDRESS
!  240	      pixelYstep = -(BYTES_PER_ROW);
!  241	#endif
!  242	   }
!  243	
!  244	   /*
!  245	    * Draw
!  246	    */
!  247	
!  248	   if (dx>dy) {

	ld	[%fp-36],%l1
	ld	[%fp-40],%l0
	cmp	%l1,%l0
	ble	.L1679
	nop

	! block 36
.L1681:
.L1682:
.L1683:
.L1684:

!  249	      /*
!  250	       * X-major line
!  251	       */
!  252	      GLint i;
!  253	      GLint errorInc = dy+dy;

	ld	[%fp-40],%l0
	add	%l0,%l0,%l0
	st	%l0,[%fp-56]

	! block 37
.L1685:

!  254	      GLint error = errorInc-dx;

	ld	[%fp-56],%l0
	ld	[%fp-36],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-60]

	! block 38
.L1686:

!  255	      GLint errorDec = error-dx;

	ld	[%fp-60],%l0
	ld	[%fp-36],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-64]

	! block 39
.L1687:
.L1688:

!  256	#if INTERP_Z
!  257	      dz = (z1-z0) / dx;
!  258	#endif
!  259	#if INTERP_RGB
!  260	      dr /= dx;   /* convert from whole line delta to per-pixel delta */
!  261	      dg /= dx;
!  262	      db /= dx;
!  263	#endif
!  264	#if INTERP_ALPHA
!  265	      da /= dx;
!  266	#endif
!  267	#if INTERP_INDEX
!  268	      di /= dx;
!  269	#endif
!  270	#if INTERP_ST
!  271	      ds /= dx;
!  272	      dt /= dx;
!  273	#endif
!  274	#if INTERP_STW
!  275	      {
!  276	         GLfloat fdxinv = 1.0F / (GLfloat) dx;
!  277	         ds *= fdxinv;
!  278	         dt *= fdxinv;
!  279	         dw *= fdxinv;
!  280	#if INTERP_UV
!  281	         du *= fdxinv;
!  282	         dv *= fdxinv;
!  283	#endif
!  284	      }
!  285	#endif
!  286	      for (i=0;i<dx;i++) {

	ld	[%fp-36],%l0
	cmp	%g0,%l0
	bge	.L1691
	st	%g0,[%fp-52]

	! block 40
.L1692:
.L1689:
.L1693:
.L1694:
.L1695:
.L1696:

!  287	#if STIPPLE
!  288	         GLushort m;
!  289	         m = 1 << ((ctx->StippleCounter/ctx->Line.StippleFactor) & 0xf);
!  290	         if (ctx->Line.StipplePattern & m) {
!  291	#endif
!  292	#if INTERP_Z
!  293	#  if DEPTH_BITS==16
!  294	            GLdepth Z = FixedToInt(z0);
!  295	#  else
!  296	            GLdepth Z = z0;
!  297	#  endif
!  298	#endif
!  299	#if INTERP_INDEX
!  300	            GLint I = i0 >> 8;
!  301	#endif
!  302	#if WIDE
!  303	            GLint yy;
!  304	            GLint ymin = y0 + min;
!  305	            GLint ymax = y0 + max;
!  306	            for (yy=ymin;yy<=ymax;yy++) {
!  307	               PLOT( x0, yy );
!  308	            }
!  309	#else
!  310	#  ifdef XMAJOR_PLOT
!  311	            XMAJOR_PLOT( x0, y0 );
!  312	#  else
!  313	            PLOT( x0, y0 );

	ld	[%fp-4],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp-20],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-68]
	ld	[%fp-12],%l1
	ld	[%fp-68],%l0
	st	%l1,[%l0+0]

	! block 41
.L1697:
.L1698:

!  314	#  endif
!  315	#endif /*WIDE*/
!  316	#if STIPPLE
!  317	        }
!  318		ctx->StippleCounter++;
!  319	#endif
!  320	#if INTERP_XY
!  321	         x0 += xstep;

	ld	[%fp-20],%l0
	ld	[%fp-44],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-20]

	! block 42
.L1699:
.L1701:

!  322	#endif
!  323	#if INTERP_Z
!  324	         zPtr = (GLdepth *) ((GLubyte*) zPtr + zPtrXstep);
!  325	         z0 += dz;
!  326	#endif
!  327	#if INTERP_RGB
!  328	         r0 += dr;
!  329	         g0 += dg;
!  330	         b0 += db;
!  331	#endif
!  332	#if INTERP_ALPHA
!  333	         a0 += da;
!  334	#endif
!  335	#if INTERP_INDEX
!  336	         i0 += di;
!  337	#endif
!  338	#if INTERP_ST
!  339	         s0 += ds;
!  340	         t0 += dt;
!  341	#endif
!  342	#if INTERP_STW
!  343	         s0 += ds;
!  344	         t0 += dt;
!  345	         w0 += dw;
!  346	#endif
!  347	#if INTERP_UV
!  348	         u0 += du;
!  349	         v0 += dv;
!  350	#endif
!  351	#ifdef PIXEL_ADDRESS
!  352	         pixelPtr = (PIXEL_TYPE*) ((GLubyte*) pixelPtr + pixelXstep);
!  353	#endif
!  354	         if (error<0) {

	ld	[%fp-60],%l0
	cmp	%l0,0
	bge	.L1700
	nop

	! block 43
.L1702:
.L1703:
.L1704:
.L1705:

!  355	            error += errorInc;

	ld	[%fp-60],%l0
	ld	[%fp-56],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-60]

	! block 44
.L1706:
.L1707:
	ba	.L1708
	nop

	! block 45
.L1700:
.L1709:
.L1710:
.L1711:

!  356	         }
!  357	         else {
!  358	            error += errorDec;

	ld	[%fp-60],%l0
	ld	[%fp-64],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-60]

	! block 46
.L1712:

!  359	#if INTERP_XY
!  360	            y0 += ystep;

	ld	[%fp-28],%l0
	ld	[%fp-48],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-28]

	! block 47
.L1713:
.L1714:
.L1708:
.L1715:
.L1716:
.L1717:
.L1718:
	ld	[%fp-52],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-52]
	ld	[%fp-52],%l1
	ld	[%fp-36],%l0
	cmp	%l1,%l0
	bl	.L1689
	nop

	! block 48
.L1719:
.L1691:
.L1720:
.L1721:
.L1722:
	ba	.L1723
	nop

	! block 49
.L1679:
.L1724:
.L1725:
.L1726:

!  361	#endif
!  362	#if INTERP_Z
!  363	            zPtr = (GLdepth *) ((GLubyte*) zPtr + zPtrYstep);
!  364	#endif
!  365	#ifdef PIXEL_ADDRESS
!  366	            pixelPtr = (PIXEL_TYPE*) ((GLubyte*) pixelPtr + pixelYstep);
!  367	#endif
!  368	         }
!  369	      }
!  370	   }
!  371	   else {
!  372	      /*
!  373	       * Y-major line
!  374	       */
!  375	      GLint i;
!  376	      GLint errorInc = dx+dx;

	ld	[%fp-36],%l0
	add	%l0,%l0,%l0
	st	%l0,[%fp-56]

	! block 50
.L1727:

!  377	      GLint error = errorInc-dy;

	ld	[%fp-56],%l0
	ld	[%fp-40],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-60]

	! block 51
.L1728:

!  378	      GLint errorDec = error-dy;

	ld	[%fp-60],%l0
	ld	[%fp-40],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-64]

	! block 52
.L1729:
.L1730:

!  379	#if INTERP_Z
!  380	      dz = (z1-z0) / dy;
!  381	#endif
!  382	#if INTERP_RGB
!  383	      dr /= dy;   /* convert from whole line delta to per-pixel delta */
!  384	      dg /= dy;
!  385	      db /= dy;
!  386	#endif
!  387	#if INTERP_ALPHA
!  388	      da /= dy;
!  389	#endif
!  390	#if INTERP_INDEX
!  391	      di /= dy;
!  392	#endif
!  393	#if INTERP_ST
!  394	      ds /= dy;
!  395	      dt /= dy;
!  396	#endif
!  397	#if INTERP_STW
!  398	      {
!  399	         GLfloat fdyinv = 1.0F / (GLfloat) dy;
!  400	         ds *= fdyinv;
!  401	         dt *= fdyinv;
!  402	         dw *= fdyinv;
!  403	#if INTERP_UV
!  404	         du *= fdyinv;
!  405	         dv *= fdyinv;
!  406	#endif
!  407	      }
!  408	#endif
!  409	      for (i=0;i<dy;i++) {

	ld	[%fp-40],%l0
	cmp	%g0,%l0
	bge	.L1733
	st	%g0,[%fp-52]

	! block 53
.L1734:
.L1731:
.L1735:
.L1736:
.L1737:
.L1738:

!  410	#if STIPPLE
!  411	         GLushort m;
!  412	         m = 1 << ((ctx->StippleCounter/ctx->Line.StippleFactor) & 0xf);
!  413	         if (ctx->Line.StipplePattern & m) {
!  414	#endif
!  415	#if INTERP_Z
!  416	#  if DEPTH_BITS==16
!  417	            GLdepth Z = FixedToInt(z0);
!  418	#  else
!  419	            GLdepth Z = z0;
!  420	#  endif
!  421	#endif
!  422	#if INTERP_INDEX
!  423	            GLint I = i0 >> 8;
!  424	#endif
!  425	#if WIDE
!  426	            GLint xx;
!  427	            GLint xmin = x0 + min;
!  428	            GLint xmax = x0 + max;
!  429	            for (xx=xmin;xx<=xmax;xx++) {
!  430	               PLOT( xx, y0 );
!  431	            }
!  432	#else
!  433	#  ifdef YMAJOR_PLOT
!  434	            YMAJOR_PLOT( x0, y0 );
!  435	#  else
!  436	            PLOT( x0, y0 );

	ld	[%fp-4],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp-20],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-68]
	ld	[%fp-12],%l1
	ld	[%fp-68],%l0
	st	%l1,[%l0+0]

	! block 54
.L1739:
.L1740:

!  437	#  endif
!  438	#endif /*WIDE*/
!  439	#if STIPPLE
!  440	        }
!  441		ctx->StippleCounter++;
!  442	#endif
!  443	#if INTERP_XY
!  444	         y0 += ystep;

	ld	[%fp-28],%l0
	ld	[%fp-48],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-28]

	! block 55
.L1741:
.L1743:

!  445	#endif
!  446	#if INTERP_Z
!  447	         zPtr = (GLdepth *) ((GLubyte*) zPtr + zPtrYstep);
!  448	         z0 += dz;
!  449	#endif
!  450	#if INTERP_RGB
!  451	         r0 += dr;
!  452	         g0 += dg;
!  453	         b0 += db;
!  454	#endif
!  455	#if INTERP_ALPHA
!  456	         a0 += da;
!  457	#endif
!  458	#if INTERP_INDEX
!  459	         i0 += di;
!  460	#endif
!  461	#if INTERP_ST
!  462	         s0 += ds;
!  463	         t0 += dt;
!  464	#endif
!  465	#if INTERP_STW
!  466	         s0 += ds;
!  467	         t0 += dt;
!  468	         w0 += dw;
!  469	#endif
!  470	#if INTERP_UV
!  471	         u0 += du;
!  472	         v0 += dv;
!  473	#endif
!  474	#ifdef PIXEL_ADDRESS
!  475	         pixelPtr = (PIXEL_TYPE*) ((GLubyte*) pixelPtr + pixelYstep);
!  476	#endif
!  477	         if (error<0) {

	ld	[%fp-60],%l0
	cmp	%l0,0
	bge	.L1742
	nop

	! block 56
.L1744:
.L1745:
.L1746:
.L1747:

!  478	            error += errorInc;

	ld	[%fp-60],%l0
	ld	[%fp-56],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-60]

	! block 57
.L1748:
.L1749:
	ba	.L1750
	nop

	! block 58
.L1742:
.L1751:
.L1752:
.L1753:

!  479	         }
!  480	         else {
!  481	            error += errorDec;

	ld	[%fp-60],%l0
	ld	[%fp-64],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-60]

	! block 59
.L1754:

!  482	#if INTERP_XY
!  483	            x0 += xstep;

	ld	[%fp-20],%l0
	ld	[%fp-44],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-20]

	! block 60
.L1755:
.L1756:
.L1750:
.L1757:
.L1758:
.L1759:
.L1760:
	ld	[%fp-52],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-52]
	ld	[%fp-52],%l1
	ld	[%fp-40],%l0
	cmp	%l1,%l0
	bl	.L1731
	nop

	! block 61
.L1761:
.L1733:
.L1762:
.L1763:
.L1764:
.L1723:
.L1765:
.L1766:

	! block 62
.L1767:
.L1768:
.L1578:
	jmp	%i7+8
	restore
	.size	flat_color_line,(.-flat_color_line)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	flat_color_z_line,#function
flat_color_z_line:
	save	%sp,-200,%sp

	! block 1
.L1771:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]

	! block 2
.L1772:
.L1774:

! File osmesa.c:
! 1097	#define INTERP_XY 1
! 1098	#define CLIP_HACK 1
! 1099	#define PLOT(X,Y) { GLuint *ptr4 = PIXELADDR4(X,Y); *ptr4 = pixel; }
! 1100	
! 1101	#include "linetemp.h"
! 1102	}
! 1103	
! 1105	/*
! 1106	 * Draw a flat-shaded, Z-less, RGB line into an osmesa buffer.
! 1107	 */
! 1108	static void flat_color_z_line( GLcontext *ctx,
! 1109	                               GLuint vert0, GLuint vert1, GLuint pvert )
! 1110	{
! 1111	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1775:

! 1112	   GLubyte *color = ctx->VB->Color[pvert];

	ld	[%fp+68],%l0
	sethi	%hi(0xe134),%l1
	or	%l1,%lo(0xe134),%l1
	ld	[%l0+%l1],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-8]

	! block 4
.L1776:

! 1113	   unsigned long pixel = PACK_RGBA( color[0], color[1], color[2], color[3] );

	ld	[%fp-8],%l5
	ldub	[%l5+0],%l2
	ld	[%fp-4],%l0
	ld	[%l0+44],%l1
	sll	%l2,%l1,%l3
	ldub	[%l5+1],%l2
	ld	[%l0+48],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l3
	ldub	[%l5+2],%l2
	ld	[%l0+52],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l3
	ldub	[%l5+3],%l2
	ld	[%l0+56],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-12]

	! block 5
.L1777:
.L1778:

! File linetemp.h:

	ld	[%fp+68],%l0
	sethi	%hi(0xe134),%l1
	or	%l1,%lo(0xe134),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-16]

	! block 6
.L1779:
	ld	[%fp-16],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l5
	or	%l5,%lo(0x5e80),%l5
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-100]
	ld	[%fp-100],%l0
	st	%l0,[%fp-20]
	ld	[%fp-16],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-100]
	ld	[%fp-100],%l0
	st	%l0,[%fp-24]

	! block 7
.L1780:
	ld	[%fp-16],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l5
	or	%l5,%lo(0x5e84),%l5
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-100]
	ld	[%fp-100],%l0
	st	%l0,[%fp-28]
	ld	[%fp-16],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-100]
	ld	[%fp-100],%l0
	st	%l0,[%fp-32]

	! block 8
.L1781:
.L1782:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	st	%l0,[%fp-76]

	! block 9
.L1783:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+8],%l0
	st	%l0,[%fp-80]

	! block 10
.L1784:
.L1786:
	ld	[%fp-20],%l0
	ld	[%fp-76],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-24],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	orcc	%l2,%l1,%l0
	be	.L1785
	nop

	! block 11
.L1787:
.L1788:
.L1789:
.L1790:
.L1792:
	ld	[%fp-20],%l0
	ld	[%fp-76],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-24],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	andcc	%l2,%l1,%l0
	be	.L1791
	nop

	! block 12
.L1793:
.L1794:
.L1795:
	ba	.L1770
	nop

	! block 13
.L1796:
.L1791:
.L1797:
.L1798:
	ld	[%fp-20],%l0
	ld	[%fp-76],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-20]

	! block 14
.L1799:
	ld	[%fp-24],%l0
	ld	[%fp-76],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-24]

	! block 15
.L1800:
.L1801:
.L1785:
.L1802:
.L1803:
.L1805:
	ld	[%fp-28],%l0
	ld	[%fp-80],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-32],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	orcc	%l2,%l1,%l0
	be	.L1804
	nop

	! block 16
.L1806:
.L1807:
.L1808:
.L1809:
.L1811:
	ld	[%fp-28],%l0
	ld	[%fp-80],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-32],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	andcc	%l2,%l1,%l0
	be	.L1810
	nop

	! block 17
.L1812:
.L1813:
.L1814:
	ba	.L1770
	nop

	! block 18
.L1815:
.L1810:
.L1816:
.L1817:
	ld	[%fp-28],%l0
	ld	[%fp-80],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-28]

	! block 19
.L1818:
	ld	[%fp-32],%l0
	ld	[%fp-80],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-32]

	! block 20
.L1819:
.L1820:
.L1804:
.L1821:
.L1822:
.L1823:
	ld	[%fp-24],%l0
	ld	[%fp-20],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-36]

	! block 21
.L1824:
	ld	[%fp-32],%l0
	ld	[%fp-28],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-40]

	! block 22
.L1825:
.L1827:
	ld	[%fp-36],%l0
	cmp	%l0,0
	bne	.L1826
	nop

	! block 23
.L1828:
	ld	[%fp-40],%l0
	cmp	%l0,0
	bne	.L1826
	nop

	! block 24
.L1829:
.L1830:
.L1831:
.L1832:
	ba	.L1770
	nop

	! block 25
.L1833:
.L1834:
.L1826:
.L1835:
.L1836:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+12],%l2
	ld	[%l0+4],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-20],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-72]

	! block 26
.L1837:
	ld	[%fp-16],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e88),%l1
	or	%l1,%lo(0x5e88),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-100]
	ld	[%fp-100],%l0
	st	%l0,[%fp-52]

	! block 27
.L1838:
	ld	[%fp-16],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e88),%l1
	or	%l1,%lo(0x5e88),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-100]
	ld	[%fp-100],%l0
	st	%l0,[%fp-56]

	! block 28
.L1839:
.L1841:
	ld	[%fp-36],%l0
	cmp	%l0,0
	bge	.L1840
	nop

	! block 29
.L1842:
.L1843:
.L1844:
.L1845:
	ld	[%fp-36],%l0
	neg	%l0,%l0
	st	%l0,[%fp-36]

	! block 30
.L1846:
	mov	-1,%l0
	st	%l0,[%fp-44]

	! block 31
.L1847:
	mov	-2,%l0
	st	%l0,[%fp-64]

	! block 32
.L1848:
.L1849:
	ba	.L1850
	nop

	! block 33
.L1840:
.L1851:
.L1852:
.L1853:
	mov	1,%l0
	st	%l0,[%fp-44]

	! block 34
.L1854:
	mov	2,%l0
	st	%l0,[%fp-64]

	! block 35
.L1855:
.L1856:
.L1850:
.L1857:
.L1858:
.L1860:
	ld	[%fp-40],%l0
	cmp	%l0,0
	bge	.L1859
	nop

	! block 36
.L1861:
.L1862:
.L1863:
.L1864:
	ld	[%fp-40],%l0
	neg	%l0,%l0
	st	%l0,[%fp-40]

	! block 37
.L1865:
	mov	-1,%l0
	st	%l0,[%fp-48]

	! block 38
.L1866:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	neg	%l0,%l0
	sll	%l0,1,%l0
	st	%l0,[%fp-68]

	! block 39
.L1867:
.L1868:
	ba	.L1869
	nop

	! block 40
.L1859:
.L1870:
.L1871:
.L1872:
	mov	1,%l0
	st	%l0,[%fp-48]

	! block 41
.L1873:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	sll	%l0,1,%l0
	st	%l0,[%fp-68]

	! block 42
.L1874:
.L1875:
.L1869:
.L1876:
.L1877:
.L1879:
	ld	[%fp-36],%l1
	ld	[%fp-40],%l0
	cmp	%l1,%l0
	ble	.L1878
	nop

	! block 43
.L1880:
.L1881:
.L1882:
.L1883:
	ld	[%fp-40],%l0
	add	%l0,%l0,%l0
	st	%l0,[%fp-80]

	! block 44
.L1884:
	ld	[%fp-80],%l0
	ld	[%fp-36],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-84]

	! block 45
.L1885:
	ld	[%fp-84],%l0
	ld	[%fp-36],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-88]

	! block 46
.L1886:
	ld	[%fp-56],%l0
	ld	[%fp-52],%l1
	sub	%l0,%l1,%l0
	ld	[%fp-36],%l1
	sra	%l0,31,%g1
	wr	%g0,%g1,%y
	nop
	nop
	nop
	sdivcc	%l0,%l1,%l0
	bvs,a	.+8
	sethi	%hi(0x80000000),%l0
	st	%l0,[%fp-60]

	! block 47
.L1887:
.L1888:
	ld	[%fp-36],%l0
	cmp	%g0,%l0
	bge	.L1891
	st	%g0,[%fp-76]

	! block 48
.L1892:
.L1889:
.L1893:
.L1894:
.L1895:
	ld	[%fp-52],%l0
	sra	%l0,11,%l0
	sth	%l0,[%fp-90]

	! block 49
.L1896:
.L1898:
	lduh	[%fp-90],%l1
	ld	[%fp-72],%l0
	lduh	[%l0+0],%l0
	cmp	%l1,%l0
	bge	.L1897
	nop

	! block 50
.L1899:
.L1900:
.L1901:
	ld	[%fp-4],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp-20],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-96]
	ld	[%fp-12],%l1
	ld	[%fp-96],%l0
	st	%l1,[%l0+0]
	lduh	[%fp-90],%l1
	ld	[%fp-72],%l0
	sth	%l1,[%l0+0]

	! block 51
.L1902:
.L1903:
.L1897:
.L1904:
.L1905:
	ld	[%fp-20],%l0
	ld	[%fp-44],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-20]

	! block 52
.L1906:
	ld	[%fp-72],%l0
	ld	[%fp-64],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-72]

	! block 53
.L1907:
	ld	[%fp-52],%l0
	ld	[%fp-60],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-52]

	! block 54
.L1908:
.L1910:
	ld	[%fp-84],%l0
	cmp	%l0,0
	bge	.L1909
	nop

	! block 55
.L1911:
.L1912:
.L1913:
.L1914:
	ld	[%fp-84],%l0
	ld	[%fp-80],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-84]

	! block 56
.L1915:
.L1916:
	ba	.L1917
	nop

	! block 57
.L1909:
.L1918:
.L1919:
.L1920:
	ld	[%fp-84],%l0
	ld	[%fp-88],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-84]

	! block 58
.L1921:
	ld	[%fp-28],%l0
	ld	[%fp-48],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-28]

	! block 59
.L1922:
	ld	[%fp-72],%l0
	ld	[%fp-68],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-72]

	! block 60
.L1923:
.L1924:
.L1917:
.L1925:
.L1926:
.L1927:
.L1928:
	ld	[%fp-76],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-76]
	ld	[%fp-76],%l1
	ld	[%fp-36],%l0
	cmp	%l1,%l0
	bl	.L1889
	nop

	! block 61
.L1929:
.L1891:
.L1930:
.L1931:
.L1932:
	ba	.L1933
	nop

	! block 62
.L1878:
.L1934:
.L1935:
.L1936:
	ld	[%fp-36],%l0
	add	%l0,%l0,%l0
	st	%l0,[%fp-80]

	! block 63
.L1937:
	ld	[%fp-80],%l0
	ld	[%fp-40],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-84]

	! block 64
.L1938:
	ld	[%fp-84],%l0
	ld	[%fp-40],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-88]

	! block 65
.L1939:
	ld	[%fp-56],%l0
	ld	[%fp-52],%l1
	sub	%l0,%l1,%l0
	ld	[%fp-40],%l1
	sra	%l0,31,%g1
	wr	%g0,%g1,%y
	nop
	nop
	nop
	sdivcc	%l0,%l1,%l0
	bvs,a	.+8
	sethi	%hi(0x80000000),%l0
	st	%l0,[%fp-60]

	! block 66
.L1940:
.L1941:
	ld	[%fp-40],%l0
	cmp	%g0,%l0
	bge	.L1944
	st	%g0,[%fp-76]

	! block 67
.L1945:
.L1942:
.L1946:
.L1947:
.L1948:
	ld	[%fp-52],%l0
	sra	%l0,11,%l0
	sth	%l0,[%fp-90]

	! block 68
.L1949:
.L1951:
	lduh	[%fp-90],%l1
	ld	[%fp-72],%l0
	lduh	[%l0+0],%l0
	cmp	%l1,%l0
	bge	.L1950
	nop

	! block 69
.L1952:
.L1953:
.L1954:
	ld	[%fp-4],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp-20],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-96]
	ld	[%fp-12],%l1
	ld	[%fp-96],%l0
	st	%l1,[%l0+0]
	lduh	[%fp-90],%l1
	ld	[%fp-72],%l0
	sth	%l1,[%l0+0]

	! block 70
.L1955:
.L1956:
.L1950:
.L1957:
.L1958:
	ld	[%fp-28],%l0
	ld	[%fp-48],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-28]

	! block 71
.L1959:
	ld	[%fp-72],%l0
	ld	[%fp-68],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-72]

	! block 72
.L1960:
	ld	[%fp-52],%l0
	ld	[%fp-60],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-52]

	! block 73
.L1961:
.L1963:
	ld	[%fp-84],%l0
	cmp	%l0,0
	bge	.L1962
	nop

	! block 74
.L1964:
.L1965:
.L1966:
.L1967:
	ld	[%fp-84],%l0
	ld	[%fp-80],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-84]

	! block 75
.L1968:
.L1969:
	ba	.L1970
	nop

	! block 76
.L1962:
.L1971:
.L1972:
.L1973:
	ld	[%fp-84],%l0
	ld	[%fp-88],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-84]

	! block 77
.L1974:
	ld	[%fp-20],%l0
	ld	[%fp-44],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-20]

	! block 78
.L1975:

!  484	#endif
!  485	#if INTERP_Z
!  486	            zPtr = (GLdepth *) ((GLubyte*) zPtr + zPtrXstep);

	ld	[%fp-72],%l0
	ld	[%fp-64],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-72]

	! block 79
.L1976:
.L1977:
.L1970:
.L1978:
.L1979:
.L1980:
.L1981:
	ld	[%fp-76],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-76]
	ld	[%fp-76],%l1
	ld	[%fp-40],%l0
	cmp	%l1,%l0
	bl	.L1942
	nop

	! block 80
.L1982:
.L1944:
.L1983:
.L1984:
.L1985:
.L1933:
.L1986:
.L1987:

	! block 81
.L1988:
.L1989:
.L1770:
	jmp	%i7+8
	restore
	.size	flat_color_z_line,(.-flat_color_z_line)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	flat_blend_color_line,#function
flat_blend_color_line:
	save	%sp,-200,%sp

	! block 1
.L1992:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]

	! block 2
.L1993:
.L1995:

! File osmesa.c:
! 1115	#define INTERP_XY 1
! 1116	#define INTERP_Z 1
! 1117	#define CLIP_HACK 1
! 1118	#define PLOT(X,Y)				\
! 1119		if (Z < *zPtr) {			\
! 1120		   GLuint *ptr4 = PIXELADDR4(X,Y);	\
! 1121		   *ptr4 = pixel;			\
! 1122		   *zPtr = Z;				\
! 1123		}
! 1124	
! 1125	#include "linetemp.h"
! 1126	}
! 1127	
! 1129	/*
! 1130	 * Draw a flat-shaded, alpha-blended, RGB line into an osmesa buffer.
! 1131	 */
! 1132	static void flat_blend_color_line( GLcontext *ctx,
! 1133	                                 GLuint vert0, GLuint vert1, GLuint pvert )
! 1134	{
! 1135	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L1996:

! 1136	   struct vertex_buffer *VB = ctx->VB;

	ld	[%fp+68],%l0
	sethi	%hi(0xe134),%l1
	or	%l1,%lo(0xe134),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-8]

	! block 4
.L1997:

! 1137	   GLint rshift = osmesa->rshift;

	ld	[%fp-4],%l0
	ld	[%l0+44],%l0
	st	%l0,[%fp-12]

	! block 5
.L1998:

! 1138	   GLint gshift = osmesa->gshift;

	ld	[%fp-4],%l0
	ld	[%l0+48],%l0
	st	%l0,[%fp-16]

	! block 6
.L1999:

! 1139	   GLint bshift = osmesa->bshift;

	ld	[%fp-4],%l0
	ld	[%l0+52],%l0
	st	%l0,[%fp-20]

	! block 7
.L2000:

! 1140	   GLint avalue = VB->Color[pvert][3];

	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+3],%l0
	st	%l0,[%fp-24]

	! block 8
.L2001:

! 1141	   GLint msavalue = 255 - avalue;

	ld	[%fp-24],%l0
	neg	%l0,%l0
	add	%l0,255,%l0
	st	%l0,[%fp-28]

	! block 9
.L2002:

! 1142	   GLint rvalue = VB->Color[pvert][0]*avalue;

	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	ldub	[%l2+%l1],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-32]

	! block 10
.L2003:

! 1143	   GLint gvalue = VB->Color[pvert][1]*avalue;

	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+1],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-36]

	! block 11
.L2004:

! 1144	   GLint bvalue = VB->Color[pvert][2]*avalue;

	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+2],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-40]

	! block 12
.L2005:
.L2006:

! File linetemp.h:

	ld	[%fp+68],%l0
	sethi	%hi(0xe134),%l1
	or	%l1,%lo(0xe134),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-44]

	! block 13
.L2007:
	ld	[%fp-44],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l5
	or	%l5,%lo(0x5e80),%l5
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-104]
	ld	[%fp-104],%l0
	st	%l0,[%fp-48]
	ld	[%fp-44],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-104]
	ld	[%fp-104],%l0
	st	%l0,[%fp-52]

	! block 14
.L2008:
	ld	[%fp-44],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l5
	or	%l5,%lo(0x5e84),%l5
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-104]
	ld	[%fp-104],%l0
	st	%l0,[%fp-56]
	ld	[%fp-44],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-104]
	ld	[%fp-104],%l0
	st	%l0,[%fp-60]

	! block 15
.L2009:
.L2010:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	st	%l0,[%fp-80]

	! block 16
.L2011:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+8],%l0
	st	%l0,[%fp-84]

	! block 17
.L2012:
.L2014:
	ld	[%fp-48],%l0
	ld	[%fp-80],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-52],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	orcc	%l2,%l1,%l0
	be	.L2013
	nop

	! block 18
.L2015:
.L2016:
.L2017:
.L2018:
.L2020:
	ld	[%fp-48],%l0
	ld	[%fp-80],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-52],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	andcc	%l2,%l1,%l0
	be	.L2019
	nop

	! block 19
.L2021:
.L2022:
.L2023:
	ba	.L1991
	nop

	! block 20
.L2024:
.L2019:
.L2025:
.L2026:
	ld	[%fp-48],%l0
	ld	[%fp-80],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-48]

	! block 21
.L2027:
	ld	[%fp-52],%l0
	ld	[%fp-80],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-52]

	! block 22
.L2028:
.L2029:
.L2013:
.L2030:
.L2031:
.L2033:
	ld	[%fp-56],%l0
	ld	[%fp-84],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-60],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	orcc	%l2,%l1,%l0
	be	.L2032
	nop

	! block 23
.L2034:
.L2035:
.L2036:
.L2037:
.L2039:
	ld	[%fp-56],%l0
	ld	[%fp-84],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-60],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	andcc	%l2,%l1,%l0
	be	.L2038
	nop

	! block 24
.L2040:
.L2041:
.L2042:
	ba	.L1991
	nop

	! block 25
.L2043:
.L2038:
.L2044:
.L2045:
	ld	[%fp-56],%l0
	ld	[%fp-84],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-56]

	! block 26
.L2046:
	ld	[%fp-60],%l0
	ld	[%fp-84],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-60]

	! block 27
.L2047:
.L2048:
.L2032:
.L2049:
.L2050:
.L2051:
	ld	[%fp-52],%l0
	ld	[%fp-48],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-64]

	! block 28
.L2052:
	ld	[%fp-60],%l0
	ld	[%fp-56],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-68]

	! block 29
.L2053:
.L2055:
	ld	[%fp-64],%l0
	cmp	%l0,0
	bne	.L2054
	nop

	! block 30
.L2056:
	ld	[%fp-68],%l0
	cmp	%l0,0
	bne	.L2054
	nop

	! block 31
.L2057:
.L2058:
.L2059:
.L2060:
	ba	.L1991
	nop

	! block 32
.L2061:
.L2062:
.L2054:
.L2063:
.L2064:
.L2066:
	ld	[%fp-64],%l0
	cmp	%l0,0
	bge	.L2065
	nop

	! block 33
.L2067:
.L2068:
.L2069:
.L2070:
	ld	[%fp-64],%l0
	neg	%l0,%l0
	st	%l0,[%fp-64]

	! block 34
.L2071:
	mov	-1,%l0
	st	%l0,[%fp-72]

	! block 35
.L2072:
.L2073:
	ba	.L2074
	nop

	! block 36
.L2065:
.L2075:
.L2076:
.L2077:
	mov	1,%l0
	st	%l0,[%fp-72]

	! block 37
.L2078:
.L2079:
.L2074:
.L2080:
.L2081:
.L2083:
	ld	[%fp-68],%l0
	cmp	%l0,0
	bge	.L2082
	nop

	! block 38
.L2084:
.L2085:
.L2086:
.L2087:
	ld	[%fp-68],%l0
	neg	%l0,%l0
	st	%l0,[%fp-68]

	! block 39
.L2088:
	mov	-1,%l0
	st	%l0,[%fp-76]

	! block 40
.L2089:
.L2090:
	ba	.L2091
	nop

	! block 41
.L2082:
.L2092:
.L2093:
.L2094:
	mov	1,%l0
	st	%l0,[%fp-76]

	! block 42
.L2095:
.L2096:
.L2091:
.L2097:
.L2098:
.L2100:
	ld	[%fp-64],%l1
	ld	[%fp-68],%l0
	cmp	%l1,%l0
	ble	.L2099
	nop

	! block 43
.L2101:
.L2102:
.L2103:
.L2104:
	ld	[%fp-68],%l0
	add	%l0,%l0,%l0
	st	%l0,[%fp-84]

	! block 44
.L2105:
	ld	[%fp-84],%l0
	ld	[%fp-64],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-88]

	! block 45
.L2106:
	ld	[%fp-88],%l0
	ld	[%fp-64],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-92]

	! block 46
.L2107:
.L2108:
	ld	[%fp-64],%l0
	cmp	%g0,%l0
	bge	.L2111
	st	%g0,[%fp-80]

	! block 47
.L2112:
.L2109:
.L2113:
.L2114:
.L2115:
.L2116:
	ld	[%fp-4],%l2
	ld	[%fp-56],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp-48],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-96]
	st	%g0,[%fp-100]
	ld	[%fp-96],%l0
	ld	[%l0+0],%l0
	ld	[%fp-12],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-32],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l0
	or	%l0,0,%l0
	st	%l0,[%fp-100]
	ld	[%fp-100],%l3
	ld	[%fp-96],%l0
	ld	[%l0+0],%l0
	ld	[%fp-16],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-36],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-100]
	ld	[%fp-100],%l3
	ld	[%fp-96],%l0
	ld	[%l0+0],%l0
	ld	[%fp-20],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-40],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-100]
	ld	[%fp-100],%l1
	ld	[%fp-96],%l0
	st	%l1,[%l0+0]

	! block 48
.L2117:
.L2118:
	ld	[%fp-48],%l0
	ld	[%fp-72],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-48]

	! block 49
.L2119:
.L2121:
	ld	[%fp-88],%l0
	cmp	%l0,0
	bge	.L2120
	nop

	! block 50
.L2122:
.L2123:
.L2124:
.L2125:
	ld	[%fp-88],%l0
	ld	[%fp-84],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-88]

	! block 51
.L2126:
.L2127:
	ba	.L2128
	nop

	! block 52
.L2120:
.L2129:
.L2130:
.L2131:
	ld	[%fp-88],%l0
	ld	[%fp-92],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-88]

	! block 53
.L2132:
	ld	[%fp-56],%l0
	ld	[%fp-76],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-56]

	! block 54
.L2133:
.L2134:
.L2128:
.L2135:
.L2136:
.L2137:
.L2138:
	ld	[%fp-80],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-80]
	ld	[%fp-80],%l1
	ld	[%fp-64],%l0
	cmp	%l1,%l0
	bl	.L2109
	nop

	! block 55
.L2139:
.L2111:
.L2140:
.L2141:
.L2142:
	ba	.L2143
	nop

	! block 56
.L2099:
.L2144:
.L2145:
.L2146:
	ld	[%fp-64],%l0
	add	%l0,%l0,%l0
	st	%l0,[%fp-84]

	! block 57
.L2147:
	ld	[%fp-84],%l0
	ld	[%fp-68],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-88]

	! block 58
.L2148:
	ld	[%fp-88],%l0
	ld	[%fp-68],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-92]

	! block 59
.L2149:
.L2150:
	ld	[%fp-68],%l0
	cmp	%g0,%l0
	bge	.L2153
	st	%g0,[%fp-80]

	! block 60
.L2154:
.L2151:
.L2155:
.L2156:
.L2157:
.L2158:
	ld	[%fp-4],%l2
	ld	[%fp-56],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp-48],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-96]
	st	%g0,[%fp-100]
	ld	[%fp-96],%l0
	ld	[%l0+0],%l0
	ld	[%fp-12],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-32],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l0
	or	%l0,0,%l0
	st	%l0,[%fp-100]
	ld	[%fp-100],%l3
	ld	[%fp-96],%l0
	ld	[%l0+0],%l0
	ld	[%fp-16],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-36],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-100]
	ld	[%fp-100],%l3
	ld	[%fp-96],%l0
	ld	[%l0+0],%l0
	ld	[%fp-20],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-40],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-100]
	ld	[%fp-100],%l1
	ld	[%fp-96],%l0
	st	%l1,[%l0+0]

	! block 61
.L2159:
.L2160:
	ld	[%fp-56],%l0
	ld	[%fp-76],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-56]

	! block 62
.L2161:
.L2163:
	ld	[%fp-88],%l0
	cmp	%l0,0
	bge	.L2162
	nop

	! block 63
.L2164:
.L2165:
.L2166:
.L2167:
	ld	[%fp-88],%l0
	ld	[%fp-84],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-88]

	! block 64
.L2168:
.L2169:
	ba	.L2170
	nop

	! block 65
.L2162:
.L2171:
.L2172:
.L2173:
	ld	[%fp-88],%l0
	ld	[%fp-92],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-88]

	! block 66
.L2174:
	ld	[%fp-48],%l0
	ld	[%fp-72],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-48]

	! block 67
.L2175:
.L2176:
.L2170:
.L2177:
.L2178:
.L2179:
.L2180:
	ld	[%fp-80],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-80]
	ld	[%fp-80],%l1
	ld	[%fp-68],%l0
	cmp	%l1,%l0
	bl	.L2151
	nop

	! block 68
.L2181:
.L2153:
.L2182:
.L2183:
.L2184:
.L2143:
.L2185:
.L2186:

	! block 69
.L2187:
.L2188:
.L1991:
	jmp	%i7+8
	restore
	.size	flat_blend_color_line,(.-flat_blend_color_line)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	flat_blend_color_z_line,#function
flat_blend_color_z_line:
	save	%sp,-232,%sp

	! block 1
.L2191:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]

	! block 2
.L2192:
.L2194:

! File osmesa.c:
! 1146	#define INTERP_XY 1
! 1147	#define CLIP_HACK 1
! 1148	#define PLOT(X,Y)					\
! 1149	   { GLuint *ptr4 = PIXELADDR4(X,Y); \
! 1150	     GLuint  pixel = 0; \
! 1151	     pixel |=((((((*ptr4) >> rshift) & 0xff)*msavalue+rvalue)>>8) << rshift);\
! 1152	     pixel |=((((((*ptr4) >> gshift) & 0xff)*msavalue+gvalue)>>8) << gshift);\
! 1153	     pixel |=((((((*ptr4) >> bshift) & 0xff)*msavalue+bvalue)>>8) << bshift);\
! 1154	     *ptr4 = pixel; \
! 1155	   }
! 1156	   
! 1157	#include "linetemp.h"
! 1158	}
! 1159	
! 1160	/*
! 1161	 * Draw a flat-shaded, Z-less, alpha-blended, RGB line into an osmesa buffer.
! 1162	 */
! 1163	static void flat_blend_color_z_line( GLcontext *ctx,
! 1164	                                   GLuint vert0, GLuint vert1, GLuint pvert )
! 1165	{
! 1166	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L2195:

! 1167	   struct vertex_buffer *VB = ctx->VB;

	ld	[%fp+68],%l0
	sethi	%hi(0xe134),%l1
	or	%l1,%lo(0xe134),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-8]

	! block 4
.L2196:

! 1168	   GLint rshift = osmesa->rshift;

	ld	[%fp-4],%l0
	ld	[%l0+44],%l0
	st	%l0,[%fp-12]

	! block 5
.L2197:

! 1169	   GLint gshift = osmesa->gshift;

	ld	[%fp-4],%l0
	ld	[%l0+48],%l0
	st	%l0,[%fp-16]

	! block 6
.L2198:

! 1170	   GLint bshift = osmesa->bshift;

	ld	[%fp-4],%l0
	ld	[%l0+52],%l0
	st	%l0,[%fp-20]

	! block 7
.L2199:

! 1171	   GLint avalue = VB->Color[pvert][3];

	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+3],%l0
	st	%l0,[%fp-24]

	! block 8
.L2200:

! 1172	   GLint msavalue = 256 - avalue;

	ld	[%fp-24],%l0
	neg	%l0,%l0
	add	%l0,256,%l0
	st	%l0,[%fp-28]

	! block 9
.L2201:

! 1173	   GLint rvalue = VB->Color[pvert][0]*avalue;

	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	ldub	[%l2+%l1],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-32]

	! block 10
.L2202:

! 1174	   GLint gvalue = VB->Color[pvert][1]*avalue;

	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+1],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-36]

	! block 11
.L2203:

! 1175	   GLint bvalue = VB->Color[pvert][2]*avalue;

	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+2],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-40]

	! block 12
.L2204:
.L2205:

! File linetemp.h:

	ld	[%fp+68],%l0
	sethi	%hi(0xe134),%l1
	or	%l1,%lo(0xe134),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-44]

	! block 13
.L2206:
	ld	[%fp-44],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l5
	or	%l5,%lo(0x5e80),%l5
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-132]
	ld	[%fp-132],%l0
	st	%l0,[%fp-48]
	ld	[%fp-44],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-132]
	ld	[%fp-132],%l0
	st	%l0,[%fp-52]

	! block 14
.L2207:
	ld	[%fp-44],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l5
	or	%l5,%lo(0x5e84),%l5
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-132]
	ld	[%fp-132],%l0
	st	%l0,[%fp-56]
	ld	[%fp-44],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-132]
	ld	[%fp-132],%l0
	st	%l0,[%fp-60]

	! block 15
.L2208:
.L2209:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	st	%l0,[%fp-104]

	! block 16
.L2210:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+8],%l0
	st	%l0,[%fp-108]

	! block 17
.L2211:
.L2213:
	ld	[%fp-48],%l0
	ld	[%fp-104],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-52],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	orcc	%l2,%l1,%l0
	be	.L2212
	nop

	! block 18
.L2214:
.L2215:
.L2216:
.L2217:
.L2219:
	ld	[%fp-48],%l0
	ld	[%fp-104],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-52],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	andcc	%l2,%l1,%l0
	be	.L2218
	nop

	! block 19
.L2220:
.L2221:
.L2222:
	ba	.L2190
	nop

	! block 20
.L2223:
.L2218:
.L2224:
.L2225:
	ld	[%fp-48],%l0
	ld	[%fp-104],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-48]

	! block 21
.L2226:
	ld	[%fp-52],%l0
	ld	[%fp-104],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-52]

	! block 22
.L2227:
.L2228:
.L2212:
.L2229:
.L2230:
.L2232:
	ld	[%fp-56],%l0
	ld	[%fp-108],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-60],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	orcc	%l2,%l1,%l0
	be	.L2231
	nop

	! block 23
.L2233:
.L2234:
.L2235:
.L2236:
.L2238:
	ld	[%fp-56],%l0
	ld	[%fp-108],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-60],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	andcc	%l2,%l1,%l0
	be	.L2237
	nop

	! block 24
.L2239:
.L2240:
.L2241:
	ba	.L2190
	nop

	! block 25
.L2242:
.L2237:
.L2243:
.L2244:
	ld	[%fp-56],%l0
	ld	[%fp-108],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-56]

	! block 26
.L2245:
	ld	[%fp-60],%l0
	ld	[%fp-108],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-60]

	! block 27
.L2246:
.L2247:
.L2231:
.L2248:
.L2249:
.L2250:
	ld	[%fp-52],%l0
	ld	[%fp-48],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-64]

	! block 28
.L2251:
	ld	[%fp-60],%l0
	ld	[%fp-56],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-68]

	! block 29
.L2252:
.L2254:
	ld	[%fp-64],%l0
	cmp	%l0,0
	bne	.L2253
	nop

	! block 30
.L2255:
	ld	[%fp-68],%l0
	cmp	%l0,0
	bne	.L2253
	nop

	! block 31
.L2256:
.L2257:
.L2258:
.L2259:
	ba	.L2190
	nop

	! block 32
.L2260:
.L2261:
.L2253:
.L2262:
.L2263:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+12],%l2
	ld	[%l0+4],%l0
	ld	[%fp-56],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-48],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-100]

	! block 33
.L2264:
	ld	[%fp-44],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e88),%l1
	or	%l1,%lo(0x5e88),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-132]
	ld	[%fp-132],%l0
	st	%l0,[%fp-80]

	! block 34
.L2265:
	ld	[%fp-44],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e88),%l1
	or	%l1,%lo(0x5e88),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-132]
	ld	[%fp-132],%l0
	st	%l0,[%fp-84]

	! block 35
.L2266:
.L2268:
	ld	[%fp-64],%l0
	cmp	%l0,0
	bge	.L2267
	nop

	! block 36
.L2269:
.L2270:
.L2271:
.L2272:
	ld	[%fp-64],%l0
	neg	%l0,%l0
	st	%l0,[%fp-64]

	! block 37
.L2273:
	mov	-1,%l0
	st	%l0,[%fp-72]

	! block 38
.L2274:
	mov	-2,%l0
	st	%l0,[%fp-92]

	! block 39
.L2275:
.L2276:
	ba	.L2277
	nop

	! block 40
.L2267:
.L2278:
.L2279:
.L2280:
	mov	1,%l0
	st	%l0,[%fp-72]

	! block 41
.L2281:
	mov	2,%l0
	st	%l0,[%fp-92]

	! block 42
.L2282:
.L2283:
.L2277:
.L2284:
.L2285:
.L2287:
	ld	[%fp-68],%l0
	cmp	%l0,0
	bge	.L2286
	nop

	! block 43
.L2288:
.L2289:
.L2290:
.L2291:
	ld	[%fp-68],%l0
	neg	%l0,%l0
	st	%l0,[%fp-68]

	! block 44
.L2292:
	mov	-1,%l0
	st	%l0,[%fp-76]

	! block 45
.L2293:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	neg	%l0,%l0
	sll	%l0,1,%l0
	st	%l0,[%fp-96]

	! block 46
.L2294:
.L2295:
	ba	.L2296
	nop

	! block 47
.L2286:
.L2297:
.L2298:
.L2299:
	mov	1,%l0
	st	%l0,[%fp-76]

	! block 48
.L2300:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	sll	%l0,1,%l0
	st	%l0,[%fp-96]

	! block 49
.L2301:
.L2302:
.L2296:
.L2303:
.L2304:
.L2306:
	ld	[%fp-64],%l1
	ld	[%fp-68],%l0
	cmp	%l1,%l0
	ble	.L2305
	nop

	! block 50
.L2307:
.L2308:
.L2309:
.L2310:
	ld	[%fp-68],%l0
	add	%l0,%l0,%l0
	st	%l0,[%fp-108]

	! block 51
.L2311:
	ld	[%fp-108],%l0
	ld	[%fp-64],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-112]

	! block 52
.L2312:
	ld	[%fp-112],%l0
	ld	[%fp-64],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-116]

	! block 53
.L2313:
	ld	[%fp-84],%l0
	ld	[%fp-80],%l1
	sub	%l0,%l1,%l0
	ld	[%fp-64],%l1
	sra	%l0,31,%g1
	wr	%g0,%g1,%y
	nop
	nop
	nop
	sdivcc	%l0,%l1,%l0
	bvs,a	.+8
	sethi	%hi(0x80000000),%l0
	st	%l0,[%fp-88]

	! block 54
.L2314:
.L2315:
	ld	[%fp-64],%l0
	cmp	%g0,%l0
	bge	.L2318
	st	%g0,[%fp-104]

	! block 55
.L2319:
.L2316:
.L2320:
.L2321:
.L2322:
	ld	[%fp-80],%l0
	sra	%l0,11,%l0
	sth	%l0,[%fp-118]

	! block 56
.L2323:
.L2325:
	lduh	[%fp-118],%l1
	ld	[%fp-100],%l0
	lduh	[%l0+0],%l0
	cmp	%l1,%l0
	bge	.L2324
	nop

	! block 57
.L2326:
.L2327:
.L2328:
.L2329:
	ld	[%fp-4],%l2
	ld	[%fp-56],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp-48],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-124]
	st	%g0,[%fp-128]
	ld	[%fp-124],%l0
	ld	[%l0+0],%l0
	ld	[%fp-12],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-32],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l0
	or	%l0,0,%l0
	st	%l0,[%fp-128]
	ld	[%fp-128],%l3
	ld	[%fp-124],%l0
	ld	[%l0+0],%l0
	ld	[%fp-16],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-36],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-128]
	ld	[%fp-128],%l3
	ld	[%fp-124],%l0
	ld	[%l0+0],%l0
	ld	[%fp-20],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-40],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-128]
	ld	[%fp-128],%l1
	ld	[%fp-124],%l0
	st	%l1,[%l0+0]

	! block 58
.L2330:
.L2331:
.L2332:
.L2324:
.L2333:
.L2334:
	ld	[%fp-48],%l0
	ld	[%fp-72],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-48]

	! block 59
.L2335:
	ld	[%fp-100],%l0
	ld	[%fp-92],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-100]

	! block 60
.L2336:
	ld	[%fp-80],%l0
	ld	[%fp-88],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-80]

	! block 61
.L2337:
.L2339:
	ld	[%fp-112],%l0
	cmp	%l0,0
	bge	.L2338
	nop

	! block 62
.L2340:
.L2341:
.L2342:
.L2343:
	ld	[%fp-112],%l0
	ld	[%fp-108],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-112]

	! block 63
.L2344:
.L2345:
	ba	.L2346
	nop

	! block 64
.L2338:
.L2347:
.L2348:
.L2349:
	ld	[%fp-112],%l0
	ld	[%fp-116],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-112]

	! block 65
.L2350:
	ld	[%fp-56],%l0
	ld	[%fp-76],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-56]

	! block 66
.L2351:
	ld	[%fp-100],%l0
	ld	[%fp-96],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-100]

	! block 67
.L2352:
.L2353:
.L2346:
.L2354:
.L2355:
.L2356:
.L2357:
	ld	[%fp-104],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-104]
	ld	[%fp-104],%l1
	ld	[%fp-64],%l0
	cmp	%l1,%l0
	bl	.L2316
	nop

	! block 68
.L2358:
.L2318:
.L2359:
.L2360:
.L2361:
	ba	.L2362
	nop

	! block 69
.L2305:
.L2363:
.L2364:
.L2365:
	ld	[%fp-64],%l0
	add	%l0,%l0,%l0
	st	%l0,[%fp-108]

	! block 70
.L2366:
	ld	[%fp-108],%l0
	ld	[%fp-68],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-112]

	! block 71
.L2367:
	ld	[%fp-112],%l0
	ld	[%fp-68],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-116]

	! block 72
.L2368:
	ld	[%fp-84],%l0
	ld	[%fp-80],%l1
	sub	%l0,%l1,%l0
	ld	[%fp-68],%l1
	sra	%l0,31,%g1
	wr	%g0,%g1,%y
	nop
	nop
	nop
	sdivcc	%l0,%l1,%l0
	bvs,a	.+8
	sethi	%hi(0x80000000),%l0
	st	%l0,[%fp-88]

	! block 73
.L2369:
.L2370:
	ld	[%fp-68],%l0
	cmp	%g0,%l0
	bge	.L2373
	st	%g0,[%fp-104]

	! block 74
.L2374:
.L2371:
.L2375:
.L2376:
.L2377:
	ld	[%fp-80],%l0
	sra	%l0,11,%l0
	sth	%l0,[%fp-118]

	! block 75
.L2378:
.L2380:
	lduh	[%fp-118],%l1
	ld	[%fp-100],%l0
	lduh	[%l0+0],%l0
	cmp	%l1,%l0
	bge	.L2379
	nop

	! block 76
.L2381:
.L2382:
.L2383:
.L2384:
	ld	[%fp-4],%l2
	ld	[%fp-56],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp-48],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-124]
	st	%g0,[%fp-128]
	ld	[%fp-124],%l0
	ld	[%l0+0],%l0
	ld	[%fp-12],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-32],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l0
	or	%l0,0,%l0
	st	%l0,[%fp-128]
	ld	[%fp-128],%l3
	ld	[%fp-124],%l0
	ld	[%l0+0],%l0
	ld	[%fp-16],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-36],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-128]
	ld	[%fp-128],%l3
	ld	[%fp-124],%l0
	ld	[%l0+0],%l0
	ld	[%fp-20],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-40],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-128]
	ld	[%fp-128],%l1
	ld	[%fp-124],%l0
	st	%l1,[%l0+0]

	! block 77
.L2385:
.L2386:
.L2387:
.L2379:
.L2388:
.L2389:
	ld	[%fp-56],%l0
	ld	[%fp-76],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-56]

	! block 78
.L2390:
	ld	[%fp-100],%l0
	ld	[%fp-96],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-100]

	! block 79
.L2391:
	ld	[%fp-80],%l0
	ld	[%fp-88],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-80]

	! block 80
.L2392:
.L2394:
	ld	[%fp-112],%l0
	cmp	%l0,0
	bge	.L2393
	nop

	! block 81
.L2395:
.L2396:
.L2397:
.L2398:
	ld	[%fp-112],%l0
	ld	[%fp-108],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-112]

	! block 82
.L2399:
.L2400:
	ba	.L2401
	nop

	! block 83
.L2393:
.L2402:
.L2403:
.L2404:
	ld	[%fp-112],%l0
	ld	[%fp-116],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-112]

	! block 84
.L2405:
	ld	[%fp-48],%l0
	ld	[%fp-72],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-48]

	! block 85
.L2406:
	ld	[%fp-100],%l0
	ld	[%fp-92],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-100]

	! block 86
.L2407:
.L2408:
.L2401:
.L2409:
.L2410:
.L2411:
.L2412:
	ld	[%fp-104],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-104]
	ld	[%fp-104],%l1
	ld	[%fp-68],%l0
	cmp	%l1,%l0
	bl	.L2371
	nop

	! block 87
.L2413:
.L2373:
.L2414:
.L2415:
.L2416:
.L2362:
.L2417:
.L2418:

	! block 88
.L2419:
.L2420:
.L2190:
	jmp	%i7+8
	restore
	.size	flat_blend_color_z_line,(.-flat_blend_color_z_line)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	flat_blend_color_z_line_write,#function
flat_blend_color_z_line_write:
	save	%sp,-232,%sp

	! block 1
.L2423:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]

	! block 2
.L2424:
.L2426:

! File osmesa.c:
! 1177	#define INTERP_XY 1
! 1178	#define INTERP_Z 1
! 1179	#define CLIP_HACK 1
! 1180	#define PLOT(X,Y)				\
! 1181		if (Z < *zPtr) {			\
! 1182	   { GLuint *ptr4 = PIXELADDR4(X,Y); \
! 1183	     GLuint  pixel = 0; \
! 1184	     pixel |=((((((*ptr4) >> rshift) & 0xff)*msavalue+rvalue)>>8) << rshift);\
! 1185	     pixel |=((((((*ptr4) >> gshift) & 0xff)*msavalue+gvalue)>>8) << gshift);\
! 1186	     pixel |=((((((*ptr4) >> bshift) & 0xff)*msavalue+bvalue)>>8) << bshift);\
! 1187	     *ptr4 = pixel; \
! 1188	   } \
! 1189		}
! 1190	
! 1191	#include "linetemp.h"
! 1192	}
! 1193	
! 1194	/*
! 1195	 * Draw a flat-shaded, Z-less, alpha-blended, RGB line into an osmesa buffer.
! 1196	 */
! 1197	static void flat_blend_color_z_line_write( GLcontext *ctx,
! 1198	                                   GLuint vert0, GLuint vert1, GLuint pvert )
! 1199	{
! 1200	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L2427:

! 1201	   struct vertex_buffer *VB = ctx->VB;

	ld	[%fp+68],%l0
	sethi	%hi(0xe134),%l1
	or	%l1,%lo(0xe134),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-8]

	! block 4
.L2428:

! 1202	   GLint rshift = osmesa->rshift;

	ld	[%fp-4],%l0
	ld	[%l0+44],%l0
	st	%l0,[%fp-12]

	! block 5
.L2429:

! 1203	   GLint gshift = osmesa->gshift;

	ld	[%fp-4],%l0
	ld	[%l0+48],%l0
	st	%l0,[%fp-16]

	! block 6
.L2430:

! 1204	   GLint bshift = osmesa->bshift;

	ld	[%fp-4],%l0
	ld	[%l0+52],%l0
	st	%l0,[%fp-20]

	! block 7
.L2431:

! 1205	   GLint avalue = VB->Color[pvert][3];

	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+3],%l0
	st	%l0,[%fp-24]

	! block 8
.L2432:

! 1206	   GLint msavalue = 256 - avalue;

	ld	[%fp-24],%l0
	neg	%l0,%l0
	add	%l0,256,%l0
	st	%l0,[%fp-28]

	! block 9
.L2433:

! 1207	   GLint rvalue = VB->Color[pvert][0]*avalue;

	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	ldub	[%l2+%l1],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-32]

	! block 10
.L2434:

! 1208	   GLint gvalue = VB->Color[pvert][1]*avalue;

	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+1],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-36]

	! block 11
.L2435:

! 1209	   GLint bvalue = VB->Color[pvert][2]*avalue;

	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp+80],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+2],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-40]

	! block 12
.L2436:
.L2437:

! File linetemp.h:

	ld	[%fp+68],%l0
	sethi	%hi(0xe134),%l1
	or	%l1,%lo(0xe134),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-44]

	! block 13
.L2438:
	ld	[%fp-44],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l5
	or	%l5,%lo(0x5e80),%l5
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-132]
	ld	[%fp-132],%l0
	st	%l0,[%fp-48]
	ld	[%fp-44],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-132]
	ld	[%fp-132],%l0
	st	%l0,[%fp-52]

	! block 14
.L2439:
	ld	[%fp-44],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l5
	or	%l5,%lo(0x5e84),%l5
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-132]
	ld	[%fp-132],%l0
	st	%l0,[%fp-56]
	ld	[%fp-44],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-132]
	ld	[%fp-132],%l0
	st	%l0,[%fp-60]

	! block 15
.L2440:
.L2441:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	st	%l0,[%fp-104]

	! block 16
.L2442:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+8],%l0
	st	%l0,[%fp-108]

	! block 17
.L2443:
.L2445:
	ld	[%fp-48],%l0
	ld	[%fp-104],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-52],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	orcc	%l2,%l1,%l0
	be	.L2444
	nop

	! block 18
.L2446:
.L2447:
.L2448:
.L2449:
.L2451:
	ld	[%fp-48],%l0
	ld	[%fp-104],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-52],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	andcc	%l2,%l1,%l0
	be	.L2450
	nop

	! block 19
.L2452:
.L2453:
.L2454:
	ba	.L2422
	nop

	! block 20
.L2455:
.L2450:
.L2456:
.L2457:
	ld	[%fp-48],%l0
	ld	[%fp-104],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-48]

	! block 21
.L2458:
	ld	[%fp-52],%l0
	ld	[%fp-104],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-52]

	! block 22
.L2459:
.L2460:
.L2444:
.L2461:
.L2462:
.L2464:
	ld	[%fp-56],%l0
	ld	[%fp-108],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-60],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	orcc	%l2,%l1,%l0
	be	.L2463
	nop

	! block 23
.L2465:
.L2466:
.L2467:
.L2468:
.L2470:
	ld	[%fp-56],%l0
	ld	[%fp-108],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l2
	ld	[%fp-60],%l0
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	andcc	%l2,%l1,%l0
	be	.L2469
	nop

	! block 24
.L2471:
.L2472:
.L2473:
	ba	.L2422
	nop

	! block 25
.L2474:
.L2469:
.L2475:
.L2476:
	ld	[%fp-56],%l0
	ld	[%fp-108],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-56]

	! block 26
.L2477:
	ld	[%fp-60],%l0
	ld	[%fp-108],%l1
	xor	%l0,%l1,%g1
	cmp	%g0,%g1
	subx	%g0,-1,%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-60]

	! block 27
.L2478:
.L2479:
.L2463:
.L2480:
.L2481:
.L2482:
	ld	[%fp-52],%l0
	ld	[%fp-48],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-64]

	! block 28
.L2483:
	ld	[%fp-60],%l0
	ld	[%fp-56],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-68]

	! block 29
.L2484:
.L2486:
	ld	[%fp-64],%l0
	cmp	%l0,0
	bne	.L2485
	nop

	! block 30
.L2487:
	ld	[%fp-68],%l0
	cmp	%l0,0
	bne	.L2485
	nop

	! block 31
.L2488:
.L2489:
.L2490:
.L2491:
	ba	.L2422
	nop

	! block 32
.L2492:
.L2493:
.L2485:
.L2494:
.L2495:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+12],%l2
	ld	[%l0+4],%l0
	ld	[%fp-56],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-48],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-100]

	! block 33
.L2496:
	ld	[%fp-44],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e88),%l1
	or	%l1,%lo(0x5e88),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-132]
	ld	[%fp-132],%l0
	st	%l0,[%fp-80]

	! block 34
.L2497:
	ld	[%fp-44],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e88),%l1
	or	%l1,%lo(0x5e88),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-132]
	ld	[%fp-132],%l0
	st	%l0,[%fp-84]

	! block 35
.L2498:
.L2500:
	ld	[%fp-64],%l0
	cmp	%l0,0
	bge	.L2499
	nop

	! block 36
.L2501:
.L2502:
.L2503:
.L2504:
	ld	[%fp-64],%l0
	neg	%l0,%l0
	st	%l0,[%fp-64]

	! block 37
.L2505:
	mov	-1,%l0
	st	%l0,[%fp-72]

	! block 38
.L2506:
	mov	-2,%l0
	st	%l0,[%fp-92]

	! block 39
.L2507:
.L2508:
	ba	.L2509
	nop

	! block 40
.L2499:
.L2510:
.L2511:
.L2512:
	mov	1,%l0
	st	%l0,[%fp-72]

	! block 41
.L2513:
	mov	2,%l0
	st	%l0,[%fp-92]

	! block 42
.L2514:
.L2515:
.L2509:
.L2516:
.L2517:
.L2519:
	ld	[%fp-68],%l0
	cmp	%l0,0
	bge	.L2518
	nop

	! block 43
.L2520:
.L2521:
.L2522:
.L2523:
	ld	[%fp-68],%l0
	neg	%l0,%l0
	st	%l0,[%fp-68]

	! block 44
.L2524:
	mov	-1,%l0
	st	%l0,[%fp-76]

	! block 45
.L2525:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	neg	%l0,%l0
	sll	%l0,1,%l0
	st	%l0,[%fp-96]

	! block 46
.L2526:
.L2527:
	ba	.L2528
	nop

	! block 47
.L2518:
.L2529:
.L2530:
.L2531:
	mov	1,%l0
	st	%l0,[%fp-76]

	! block 48
.L2532:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	sll	%l0,1,%l0
	st	%l0,[%fp-96]

	! block 49
.L2533:
.L2534:
.L2528:
.L2535:
.L2536:
.L2538:
	ld	[%fp-64],%l1
	ld	[%fp-68],%l0
	cmp	%l1,%l0
	ble	.L2537
	nop

	! block 50
.L2539:
.L2540:
.L2541:
.L2542:
	ld	[%fp-68],%l0
	add	%l0,%l0,%l0
	st	%l0,[%fp-108]

	! block 51
.L2543:
	ld	[%fp-108],%l0
	ld	[%fp-64],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-112]

	! block 52
.L2544:
	ld	[%fp-112],%l0
	ld	[%fp-64],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-116]

	! block 53
.L2545:
	ld	[%fp-84],%l0
	ld	[%fp-80],%l1
	sub	%l0,%l1,%l0
	ld	[%fp-64],%l1
	sra	%l0,31,%g1
	wr	%g0,%g1,%y
	nop
	nop
	nop
	sdivcc	%l0,%l1,%l0
	bvs,a	.+8
	sethi	%hi(0x80000000),%l0
	st	%l0,[%fp-88]

	! block 54
.L2546:
.L2547:
	ld	[%fp-64],%l0
	cmp	%g0,%l0
	bge	.L2550
	st	%g0,[%fp-104]

	! block 55
.L2551:
.L2548:
.L2552:
.L2553:
.L2554:
	ld	[%fp-80],%l0
	sra	%l0,11,%l0
	sth	%l0,[%fp-118]

	! block 56
.L2555:
.L2557:
	lduh	[%fp-118],%l1
	ld	[%fp-100],%l0
	lduh	[%l0+0],%l0
	cmp	%l1,%l0
	bge	.L2556
	nop

	! block 57
.L2558:
.L2559:
.L2560:
.L2561:
	ld	[%fp-4],%l2
	ld	[%fp-56],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp-48],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-124]
	st	%g0,[%fp-128]
	ld	[%fp-124],%l0
	ld	[%l0+0],%l0
	ld	[%fp-12],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-32],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l0
	or	%l0,0,%l0
	st	%l0,[%fp-128]
	ld	[%fp-128],%l3
	ld	[%fp-124],%l0
	ld	[%l0+0],%l0
	ld	[%fp-16],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-36],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-128]
	ld	[%fp-128],%l3
	ld	[%fp-124],%l0
	ld	[%l0+0],%l0
	ld	[%fp-20],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-40],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-128]
	ld	[%fp-128],%l1
	ld	[%fp-124],%l0
	st	%l1,[%l0+0]

	! block 58
.L2562:
	lduh	[%fp-118],%l1
	ld	[%fp-100],%l0
	sth	%l1,[%l0+0]

	! block 59
.L2563:
.L2564:
.L2556:
.L2565:
.L2566:
	ld	[%fp-48],%l0
	ld	[%fp-72],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-48]

	! block 60
.L2567:
	ld	[%fp-100],%l0
	ld	[%fp-92],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-100]

	! block 61
.L2568:
	ld	[%fp-80],%l0
	ld	[%fp-88],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-80]

	! block 62
.L2569:
.L2571:
	ld	[%fp-112],%l0
	cmp	%l0,0
	bge	.L2570
	nop

	! block 63
.L2572:
.L2573:
.L2574:
.L2575:
	ld	[%fp-112],%l0
	ld	[%fp-108],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-112]

	! block 64
.L2576:
.L2577:
	ba	.L2578
	nop

	! block 65
.L2570:
.L2579:
.L2580:
.L2581:
	ld	[%fp-112],%l0
	ld	[%fp-116],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-112]

	! block 66
.L2582:
	ld	[%fp-56],%l0
	ld	[%fp-76],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-56]

	! block 67
.L2583:
	ld	[%fp-100],%l0
	ld	[%fp-96],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-100]

	! block 68
.L2584:
.L2585:
.L2578:
.L2586:
.L2587:
.L2588:
.L2589:
	ld	[%fp-104],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-104]
	ld	[%fp-104],%l1
	ld	[%fp-64],%l0
	cmp	%l1,%l0
	bl	.L2548
	nop

	! block 69
.L2590:
.L2550:
.L2591:
.L2592:
.L2593:
	ba	.L2594
	nop

	! block 70
.L2537:
.L2595:
.L2596:
.L2597:
	ld	[%fp-64],%l0
	add	%l0,%l0,%l0
	st	%l0,[%fp-108]

	! block 71
.L2598:
	ld	[%fp-108],%l0
	ld	[%fp-68],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-112]

	! block 72
.L2599:
	ld	[%fp-112],%l0
	ld	[%fp-68],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-116]

	! block 73
.L2600:
	ld	[%fp-84],%l0
	ld	[%fp-80],%l1
	sub	%l0,%l1,%l0
	ld	[%fp-68],%l1
	sra	%l0,31,%g1
	wr	%g0,%g1,%y
	nop
	nop
	nop
	sdivcc	%l0,%l1,%l0
	bvs,a	.+8
	sethi	%hi(0x80000000),%l0
	st	%l0,[%fp-88]

	! block 74
.L2601:
.L2602:
	ld	[%fp-68],%l0
	cmp	%g0,%l0
	bge	.L2605
	st	%g0,[%fp-104]

	! block 75
.L2606:
.L2603:
.L2607:
.L2608:
.L2609:
	ld	[%fp-80],%l0
	sra	%l0,11,%l0
	sth	%l0,[%fp-118]

	! block 76
.L2610:
.L2612:
	lduh	[%fp-118],%l1
	ld	[%fp-100],%l0
	lduh	[%l0+0],%l0
	cmp	%l1,%l0
	bge	.L2611
	nop

	! block 77
.L2613:
.L2614:
.L2615:
.L2616:
	ld	[%fp-4],%l2
	ld	[%fp-56],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp-48],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-124]
	st	%g0,[%fp-128]
	ld	[%fp-124],%l0
	ld	[%l0+0],%l0
	ld	[%fp-12],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-32],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l0
	or	%l0,0,%l0
	st	%l0,[%fp-128]
	ld	[%fp-128],%l3
	ld	[%fp-124],%l0
	ld	[%l0+0],%l0
	ld	[%fp-16],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-36],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-128]
	ld	[%fp-128],%l3
	ld	[%fp-124],%l0
	ld	[%l0+0],%l0
	ld	[%fp-20],%l2
	srl	%l0,%l2,%l0
	and	%l0,255,%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-40],%l1
	add	%l0,%l1,%l0
	srl	%l0,8,%l0
	sll	%l0,%l2,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-128]
	ld	[%fp-128],%l1
	ld	[%fp-124],%l0
	st	%l1,[%l0+0]

	! block 78
.L2617:
	lduh	[%fp-118],%l1
	ld	[%fp-100],%l0
	sth	%l1,[%l0+0]

	! block 79
.L2618:
.L2619:
.L2611:
.L2620:
.L2621:
	ld	[%fp-56],%l0
	ld	[%fp-76],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-56]

	! block 80
.L2622:
	ld	[%fp-100],%l0
	ld	[%fp-96],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-100]

	! block 81
.L2623:
	ld	[%fp-80],%l0
	ld	[%fp-88],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-80]

	! block 82
.L2624:
.L2626:
	ld	[%fp-112],%l0
	cmp	%l0,0
	bge	.L2625
	nop

	! block 83
.L2627:
.L2628:
.L2629:
.L2630:
	ld	[%fp-112],%l0
	ld	[%fp-108],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-112]

	! block 84
.L2631:
.L2632:
	ba	.L2633
	nop

	! block 85
.L2625:
.L2634:
.L2635:
.L2636:
	ld	[%fp-112],%l0
	ld	[%fp-116],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-112]

	! block 86
.L2637:
	ld	[%fp-48],%l0
	ld	[%fp-72],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-48]

	! block 87
.L2638:
	ld	[%fp-100],%l0
	ld	[%fp-92],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-100]

	! block 88
.L2639:
.L2640:
.L2633:
.L2641:
.L2642:
.L2643:
.L2644:
	ld	[%fp-104],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-104]
	ld	[%fp-104],%l1
	ld	[%fp-68],%l0
	cmp	%l1,%l0
	bl	.L2603
	nop

	! block 89
.L2645:
.L2605:
.L2646:
.L2647:
.L2648:
.L2594:
.L2649:
.L2650:

	! block 90
.L2651:
.L2652:
.L2422:
	jmp	%i7+8
	restore
	.size	flat_blend_color_z_line_write,(.-flat_blend_color_z_line_write)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	choose_line_function,#function
choose_line_function:
	save	%sp,-104,%sp

	! block 1
.L2655:
	st	%i0,[%fp+68]

	! block 2
.L2656:
.L2658:

! File osmesa.c:
! 1211	#define INTERP_XY 1
! 1212	#define INTERP_Z 1
! 1213	#define CLIP_HACK 1
! 1214	#define PLOT(X,Y)				\
! 1215		if (Z < *zPtr) {			\
! 1216	   { GLuint *ptr4 = PIXELADDR4(X,Y); \
! 1217	     GLuint  pixel = 0; \
! 1218	     pixel |=((((((*ptr4) >> rshift) & 0xff)*msavalue+rvalue)>>8) << rshift);\
! 1219	     pixel |=((((((*ptr4) >> gshift) & 0xff)*msavalue+gvalue)>>8) << gshift);\
! 1220	     pixel |=((((((*ptr4) >> bshift) & 0xff)*msavalue+bvalue)>>8) << bshift);\
! 1221	     *ptr4 = pixel; \
! 1222	   } \
! 1223		   *zPtr = Z;				\
! 1224		}
! 1225	
! 1226	#include "linetemp.h"
! 1227	}
! 1228	
! 1230	/*
! 1231	 * Analyze context state to see if we can provide a fast line drawing
! 1232	 * function, like those in lines.c.  Otherwise, return NULL.
! 1233	 */
! 1234	static line_func choose_line_function( GLcontext *ctx )
! 1235	{
! 1236	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-8]

	! block 3
.L2659:
.L2661:

! 1237	   
! 1238	   if (ctx->Line.SmoothFlag)              return NULL;

	ld	[%fp+68],%l0
	sethi	%hi(0xae08),%l1
	or	%l1,%lo(0xae08),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L2660
	nop

	! block 4
.L2662:
.L2663:
	ba	.L2654
	st	%g0,[%fp-4]

	! block 5
.L2664:
.L2660:
.L2665:
.L2666:
.L2668:

! 1239	   if (ctx->Texture.Enabled)              return NULL;

	ld	[%fp+68],%l0
	sethi	%hi(0xd774),%l1
	or	%l1,%lo(0xd774),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L2667
	nop

	! block 6
.L2669:
.L2670:
	ba	.L2654
	st	%g0,[%fp-4]

	! block 7
.L2671:
.L2667:
.L2672:
.L2673:
.L2675:

! 1240	   if (ctx->Light.ShadeModel!=GL_FLAT)    return NULL;

	ld	[%fp+68],%l0
	sethi	%hi(0xadcc),%l1
	or	%l1,%lo(0xadcc),%l1
	ld	[%l0+%l1],%l1
	sethi	%hi(0x1d00),%l0
	or	%l0,%lo(0x1d00),%l0
	cmp	%l1,%l0
	be	.L2674
	nop

	! block 8
.L2676:
.L2677:
	ba	.L2654
	st	%g0,[%fp-4]

	! block 9
.L2678:
.L2674:
.L2679:
.L2680:
.L2682:

! 1242	   if (ctx->Line.Width==1.0F
! 1243	       && ctx->Line.StippleFlag==GL_FALSE) {

	ld	[%fp+68],%l0
	sethi	%hi(0xae10),%l1
	or	%l1,%lo(0xae10),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f4
	fcmps	%f5,%f4
	fbne	.L2681
	nop

	! block 10
.L2683:
	ld	[%fp+68],%l0
	sethi	%hi(0xae09),%l1
	or	%l1,%lo(0xae09),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,0
	bne	.L2681
	nop

	! block 11
.L2684:
.L2685:
.L2686:
.L2687:
.L2689:

! 1245	       if (ctx->RasterMask==DEPTH_BIT
! 1246	           && ctx->Depth.Func==GL_LESS
! 1247	           && ctx->Depth.Mask==GL_TRUE) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,4
	bne	.L2688
	nop

	! block 12
.L2690:
	ld	[%fp+68],%l0
	sethi	%hi(0x1f34),%l1
	or	%l1,%lo(0x1f34),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,513
	bne	.L2688
	nop

	! block 13
.L2691:
	ld	[%fp+68],%l0
	sethi	%hi(0x1f3d),%l1
	or	%l1,%lo(0x1f3d),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,1
	bne	.L2688
	nop

	! block 14
.L2692:
.L2693:
.L2694:
.L2695:
.L2698:

! 1248	           switch(osmesa->format) {

	ba	.L2697
	nop

	! block 15
.L2699:
.L2700:
.L2701:
.L2702:
.L2703:
.L2704:

! 1249	       		case OSMESA_RGBA:
! 1250	       		case OSMESA_BGRA:
! 1251	       		case OSMESA_ARGB:
! 1252	       			return flat_color_z_line;

	sethi	%hi(flat_color_z_line),%l0
	or	%l0,%lo(flat_color_z_line),%l0
	ba	.L2654
	st	%l0,[%fp-4]

	! block 16
.L2705:
.L2706:

! 1253	       			break;
! 1254	       		default:
! 1255	       			return NULL;

	ba	.L2654
	st	%g0,[%fp-4]

	! block 17
.L2707:
.L2708:
.L2697:
.L2709:
	ld	[%fp-8],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1908),%l0
	or	%l0,%lo(0x1908),%l0
	cmp	%l1,%l0
	bge	.L_y2
	nop

	! block 18
	cmp	%l1,1
	be	.L2702
	nop

	! block 19
	cmp	%l1,2
	be	.L2703
	nop

	! block 20
	ba	.L2705
	nop

	! block 21
.L_y2:
	sethi	%hi(0x1908),%l0
	or	%l0,%lo(0x1908),%l0
	cmp	%l1,%l0
	be	.L2701
	nop

	! block 22
	ba	.L2705
	nop

	! block 23
.L2710:
.L2711:
.L2712:
.L2713:
.L2688:
.L2714:
.L2715:
.L2717:

! 1256	       			break;
! 1257	           }
! 1258	       }
! 1259	
! 1260	       if (ctx->RasterMask==0) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	bne	.L2716
	nop

	! block 24
.L2718:
.L2719:
.L2720:
.L2721:
.L2724:

! 1261	           switch(osmesa->format) {

	ba	.L2723
	nop

	! block 25
.L2725:
.L2726:
.L2727:
.L2728:
.L2729:
.L2730:

! 1262	       		case OSMESA_RGBA:
! 1263	       		case OSMESA_BGRA:
! 1264	       		case OSMESA_ARGB:
! 1265	       			return flat_color_line;

	sethi	%hi(flat_color_line),%l0
	or	%l0,%lo(flat_color_line),%l0
	ba	.L2654
	st	%l0,[%fp-4]

	! block 26
.L2731:
.L2732:

! 1266	       			break;
! 1267	       		default:
! 1268	       			return NULL;

	ba	.L2654
	st	%g0,[%fp-4]

	! block 27
.L2733:
.L2734:
.L2723:
.L2735:
	ld	[%fp-8],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1908),%l0
	or	%l0,%lo(0x1908),%l0
	cmp	%l1,%l0
	bge	.L_y3
	nop

	! block 28
	cmp	%l1,1
	be	.L2728
	nop

	! block 29
	cmp	%l1,2
	be	.L2729
	nop

	! block 30
	ba	.L2731
	nop

	! block 31
.L_y3:
	sethi	%hi(0x1908),%l0
	or	%l0,%lo(0x1908),%l0
	cmp	%l1,%l0
	be	.L2727
	nop

	! block 32
	ba	.L2731
	nop

	! block 33
.L2736:
.L2737:
.L2738:
.L2739:
.L2716:
.L2740:
.L2741:
.L2743:

! 1269	       			break;
! 1270	           }
! 1271	       }
! 1272	
! 1273	       if (ctx->RasterMask==(DEPTH_BIT|BLEND_BIT)
! 1274	           && ctx->Depth.Func==GL_LESS
! 1275	           && ctx->Depth.Mask==GL_TRUE
! 1276	           && ctx->Color.BlendSrc==GL_SRC_ALPHA
! 1277	           && ctx->Color.BlendDst==GL_ONE_MINUS_SRC_ALPHA
! 1278	           && ctx->Color.BlendEquation==GL_FUNC_ADD_EXT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,6
	bne	.L2742
	nop

	! block 34
.L2744:
	ld	[%fp+68],%l0
	sethi	%hi(0x1f34),%l1
	or	%l1,%lo(0x1f34),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,513
	bne	.L2742
	nop

	! block 35
.L2745:
	ld	[%fp+68],%l0
	sethi	%hi(0x1f3d),%l1
	or	%l1,%lo(0x1f3d),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,1
	bne	.L2742
	nop

	! block 36
.L2746:
	ld	[%fp+68],%l0
	sethi	%hi(0x1eb0),%l1
	or	%l1,%lo(0x1eb0),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,770
	bne	.L2742
	nop

	! block 37
.L2747:
	ld	[%fp+68],%l0
	sethi	%hi(0x1eb4),%l1
	or	%l1,%lo(0x1eb4),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,771
	bne	.L2742
	nop

	! block 38
.L2748:
	ld	[%fp+68],%l0
	sethi	%hi(0x1eb8),%l1
	or	%l1,%lo(0x1eb8),%l1
	ld	[%l0+%l1],%l1
	sethi	%hi(0x8006),%l0
	or	%l0,%lo(0x8006),%l0
	cmp	%l1,%l0
	bne	.L2742
	nop

	! block 39
.L2749:
.L2750:
.L2751:
.L2752:
.L2755:

! 1279	           switch(osmesa->format) {

	ba	.L2754
	nop

	! block 40
.L2756:
.L2757:
.L2758:
.L2759:
.L2760:
.L2761:

! 1280	       		case OSMESA_RGBA:
! 1281	       		case OSMESA_BGRA:
! 1282	       		case OSMESA_ARGB:
! 1283	       			return flat_blend_color_z_line_write;

	sethi	%hi(flat_blend_color_z_line_write),%l0
	or	%l0,%lo(flat_blend_color_z_line_write),%l0
	ba	.L2654
	st	%l0,[%fp-4]

	! block 41
.L2762:
.L2763:

! 1284	       			break;
! 1285	       		default:
! 1286	       			return NULL;

	ba	.L2654
	st	%g0,[%fp-4]

	! block 42
.L2764:
.L2765:
.L2754:
.L2766:
	ld	[%fp-8],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1908),%l0
	or	%l0,%lo(0x1908),%l0
	cmp	%l1,%l0
	bge	.L_y4
	nop

	! block 43
	cmp	%l1,1
	be	.L2759
	nop

	! block 44
	cmp	%l1,2
	be	.L2760
	nop

	! block 45
	ba	.L2762
	nop

	! block 46
.L_y4:
	sethi	%hi(0x1908),%l0
	or	%l0,%lo(0x1908),%l0
	cmp	%l1,%l0
	be	.L2758
	nop

	! block 47
	ba	.L2762
	nop

	! block 48
.L2767:
.L2768:
.L2769:
.L2770:
.L2742:
.L2771:
.L2772:
.L2774:

! 1287	       			break;
! 1288	           }
! 1289	       }
! 1290	
! 1291	       if (ctx->RasterMask==(DEPTH_BIT|BLEND_BIT)
! 1292	           && ctx->Depth.Func==GL_LESS
! 1293	           && ctx->Depth.Mask==GL_FALSE
! 1294	           && ctx->Color.BlendSrc==GL_SRC_ALPHA
! 1295	           && ctx->Color.BlendDst==GL_ONE_MINUS_SRC_ALPHA
! 1296	           && ctx->Color.BlendEquation==GL_FUNC_ADD_EXT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,6
	bne	.L2773
	nop

	! block 49
.L2775:
	ld	[%fp+68],%l0
	sethi	%hi(0x1f34),%l1
	or	%l1,%lo(0x1f34),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,513
	bne	.L2773
	nop

	! block 50
.L2776:
	ld	[%fp+68],%l0
	sethi	%hi(0x1f3d),%l1
	or	%l1,%lo(0x1f3d),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,0
	bne	.L2773
	nop

	! block 51
.L2777:
	ld	[%fp+68],%l0
	sethi	%hi(0x1eb0),%l1
	or	%l1,%lo(0x1eb0),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,770
	bne	.L2773
	nop

	! block 52
.L2778:
	ld	[%fp+68],%l0
	sethi	%hi(0x1eb4),%l1
	or	%l1,%lo(0x1eb4),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,771
	bne	.L2773
	nop

	! block 53
.L2779:
	ld	[%fp+68],%l0
	sethi	%hi(0x1eb8),%l1
	or	%l1,%lo(0x1eb8),%l1
	ld	[%l0+%l1],%l1
	sethi	%hi(0x8006),%l0
	or	%l0,%lo(0x8006),%l0
	cmp	%l1,%l0
	bne	.L2773
	nop

	! block 54
.L2780:
.L2781:
.L2782:
.L2783:
.L2786:

! 1297	           switch(osmesa->format) {

	ba	.L2785
	nop

	! block 55
.L2787:
.L2788:
.L2789:
.L2790:
.L2791:
.L2792:

! 1298	       		case OSMESA_RGBA:
! 1299	       		case OSMESA_BGRA:
! 1300	       		case OSMESA_ARGB:
! 1301	       			return flat_blend_color_z_line;

	sethi	%hi(flat_blend_color_z_line),%l0
	or	%l0,%lo(flat_blend_color_z_line),%l0
	ba	.L2654
	st	%l0,[%fp-4]

	! block 56
.L2793:
.L2794:

! 1302	       			break;
! 1303	       		default:
! 1304	       			return NULL;

	ba	.L2654
	st	%g0,[%fp-4]

	! block 57
.L2795:
.L2796:
.L2785:
.L2797:
	ld	[%fp-8],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1908),%l0
	or	%l0,%lo(0x1908),%l0
	cmp	%l1,%l0
	bge	.L_y5
	nop

	! block 58
	cmp	%l1,1
	be	.L2790
	nop

	! block 59
	cmp	%l1,2
	be	.L2791
	nop

	! block 60
	ba	.L2793
	nop

	! block 61
.L_y5:
	sethi	%hi(0x1908),%l0
	or	%l0,%lo(0x1908),%l0
	cmp	%l1,%l0
	be	.L2789
	nop

	! block 62
	ba	.L2793
	nop

	! block 63
.L2798:
.L2799:
.L2800:
.L2801:
.L2773:
.L2802:
.L2803:
.L2805:

! 1305	       			break;
! 1306	           }
! 1307	       }
! 1308	
! 1309	       if (ctx->RasterMask==BLEND_BIT
! 1310	           && ctx->Color.BlendSrc==GL_SRC_ALPHA
! 1311	           && ctx->Color.BlendDst==GL_ONE_MINUS_SRC_ALPHA
! 1312	           && ctx->Color.BlendEquation==GL_FUNC_ADD_EXT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,2
	bne	.L2804
	nop

	! block 64
.L2806:
	ld	[%fp+68],%l0
	sethi	%hi(0x1eb0),%l1
	or	%l1,%lo(0x1eb0),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,770
	bne	.L2804
	nop

	! block 65
.L2807:
	ld	[%fp+68],%l0
	sethi	%hi(0x1eb4),%l1
	or	%l1,%lo(0x1eb4),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,771
	bne	.L2804
	nop

	! block 66
.L2808:
	ld	[%fp+68],%l0
	sethi	%hi(0x1eb8),%l1
	or	%l1,%lo(0x1eb8),%l1
	ld	[%l0+%l1],%l1
	sethi	%hi(0x8006),%l0
	or	%l0,%lo(0x8006),%l0
	cmp	%l1,%l0
	bne	.L2804
	nop

	! block 67
.L2809:
.L2810:
.L2811:
.L2812:
.L2815:

! 1313	           switch(osmesa->format) {

	ba	.L2814
	nop

	! block 68
.L2816:
.L2817:
.L2818:
.L2819:
.L2820:
.L2821:

! 1314	       		case OSMESA_RGBA:
! 1315	       		case OSMESA_BGRA:
! 1316	       		case OSMESA_ARGB:
! 1317	       			return flat_blend_color_line;

	sethi	%hi(flat_blend_color_line),%l0
	or	%l0,%lo(flat_blend_color_line),%l0
	ba	.L2654
	st	%l0,[%fp-4]

	! block 69
.L2822:
.L2823:

! 1318	       			break;
! 1319	       		default:
! 1320	       			return NULL;

	ba	.L2654
	st	%g0,[%fp-4]

	! block 70
.L2824:
.L2825:
.L2814:
.L2826:
	ld	[%fp-8],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1908),%l0
	or	%l0,%lo(0x1908),%l0
	cmp	%l1,%l0
	bge	.L_y6
	nop

	! block 71
	cmp	%l1,1
	be	.L2819
	nop

	! block 72
	cmp	%l1,2
	be	.L2820
	nop

	! block 73
	ba	.L2822
	nop

	! block 74
.L_y6:
	sethi	%hi(0x1908),%l0
	or	%l0,%lo(0x1908),%l0
	cmp	%l1,%l0
	be	.L2818
	nop

	! block 75
	ba	.L2822
	nop

	! block 76
.L2827:
.L2828:
.L2829:
.L2830:
.L2804:
.L2831:
.L2832:
.L2833:
.L2681:
.L2834:
.L2835:

! 1321	       			break;
! 1322	           }
! 1323	       }
! 1324	
! 1325	   }
! 1326	   return NULL;

	ba	.L2654
	st	%g0,[%fp-4]

	! block 77

	! block 78
.L2836:
.L2837:
.L2654:
	ld	[%fp-4],%l0
	mov	%l0,%i0
	jmp	%i7+8
	restore
	.size	choose_line_function,(.-choose_line_function)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	smooth_color_z_triangle,#function
smooth_color_z_triangle:
	save	%sp,-528,%sp

	! block 1
.L2840:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L2841:
.L2843:

! File osmesa.c:
! 1327	}
! 1328	
! 1330	/**********************************************************************/
! 1331	/*****                 Optimized triangle rendering               *****/
! 1332	/**********************************************************************/
! 1333	
! 1335	/*
! 1336	 * Smooth-shaded, z-less triangle, RGBA color.
! 1337	 */
! 1338	static void smooth_color_z_triangle( GLcontext *ctx, GLuint v0, GLuint v1,
! 1339	                                     GLuint v2, GLuint pv )
! 1340	{
! 1341	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L2844:

! 1342	   GLint rshift = osmesa->rshift;

	ld	[%fp-4],%l0
	ld	[%l0+44],%l0
	st	%l0,[%fp-8]

	! block 4
.L2845:

! 1343	   GLint gshift = osmesa->gshift;

	ld	[%fp-4],%l0
	ld	[%l0+48],%l0
	st	%l0,[%fp-12]

	! block 5
.L2846:

! 1344	   GLint bshift = osmesa->bshift;

	ld	[%fp-4],%l0
	ld	[%l0+52],%l0
	st	%l0,[%fp-16]

	! block 6
.L2847:

! 1345	   GLint ashift = osmesa->ashift;

	ld	[%fp-4],%l0
	ld	[%l0+56],%l0
	st	%l0,[%fp-20]

	! block 7
.L2848:
.L2849:

! File tritemp.h:
!    1	/* $Id: tritemp.h,v 1.16 1997/09/18 01:08:10 brianp Exp $ */
!    2	
!    3	/*
!    4	 * Mesa 3-D graphics library
!    5	 * Version:  2.4
!    6	 * Copyright (C) 1995-1997  Brian Paul
!    7	 *
!    8	 * This library is free software; you can redistribute it and/or
!    9	 * modify it under the terms of the GNU Library General Public
!   10	 * License as published by the Free Software Foundation; either
!   11	 * version 2 of the License, or (at your option) any later version.
!   12	 *
!   13	 * This library is distributed in the hope that it will be useful,
!   14	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
!   15	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
!   16	 * Library General Public License for more details.
!   17	 *
!   18	 * You should have received a copy of the GNU Library General Public
!   19	 * License along with this library; if not, write to the Free
!   20	 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
!   21	 */
!   22	
!   24	/*
!   25	 * $Log: tritemp.h,v $
!   26	 * Revision 1.16  1997/09/18 01:08:10  brianp
!   27	 * fixed S_SCALE / T_SCALE mix-up
!   28	 *
!   29	 * Revision 1.15  1997/08/22 01:53:03  brianp
!   30	 * another attempt at fixing under/overflow errors
!   31	 *
!   32	 * Revision 1.14  1997/08/13 02:10:13  brianp
!   33	 * added code to prevent over/underflow (Guido Jansen, Magnus Lundin)
!   34	 *
!   35	 * Revision 1.13  1997/06/20 02:52:49  brianp
!   36	 * changed color components from GLfixed to GLubyte
!   37	 *
!   38	 * Revision 1.12  1997/03/14 00:25:02  brianp
!   39	 * fixed unitialized memory read, contributed by Tom Schmidt
!   40	 *
!   41	 * Revision 1.11  1997/02/09 18:51:10  brianp
!   42	 * fixed typo in texture R interpolation code
!   43	 *
!   44	 * Revision 1.10  1996/12/20 23:12:23  brianp
!   45	 * another attempt at preventing color interpolation over/underflow
!   46	 *
!   47	 * Revision 1.9  1996/12/18 20:38:25  brianp
!   48	 * commented out unused zp declaration
!   49	 *
!   50	 * Revision 1.8  1996/12/12 22:37:49  brianp
!   51	 * projective textures didn't work right
!   52	 *
!   53	 * Revision 1.7  1996/11/02 06:17:37  brianp
!   54	 * fixed some float/int roundoff and over/underflow errors (hopefully)
!   55	 *
!   56	 * Revision 1.6  1996/10/01 04:13:09  brianp
!   57	 * fixed Z interpolation for >16-bit depth buffer
!   58	 * added color underflow error check
!   59	 *
!   60	 * Revision 1.5  1996/09/27 01:32:59  brianp
!   61	 * removed unused variables
!   62	 *
!   63	 * Revision 1.4  1996/09/18 01:03:43  brianp
!   64	 * tightened threshold for culling by area
!   65	 *
!   66	 * Revision 1.3  1996/09/15 14:19:16  brianp
!   67	 * now use GLframebuffer and GLvisual
!   68	 *
!   69	 * Revision 1.2  1996/09/14 06:41:38  brianp
!   70	 * perspective correct texture code wasn't sub-pixel accurate (Doug Rabson)
!   71	 *
!   72	 * Revision 1.1  1996/09/13 01:38:16  brianp
!   73	 * Initial revision
!   74	 *
!   75	 */
!   76	
!   78	/*
!   79	 * Triangle Rasterizer Template
!   80	 *
!   81	 * This file is #include'd to generate custom triangle rasterizers.
!   82	 *
!   83	 * The following macros may be defined to indicate what auxillary information
!   84	 * must be interplated across the triangle:
!   85	 *    INTERP_Z      - if defined, interpolate Z values
!   86	 *    INTERP_RGB    - if defined, interpolate RGB values
!   87	 *    INTERP_ALPHA  - if defined, interpolate Alpha values
!   88	 *    INTERP_INDEX  - if defined, interpolate color index values
!   89	 *    INTERP_ST     - if defined, interpolate integer ST texcoords
!   90	 *                         (fast, simple 2-D texture mapping)
!   91	 *    INTERP_STW    - if defined, interpolate float ST texcoords and W
!   92	 *                         (2-D texture maps with perspective correction)
!   93	 *    INTERP_UV     - if defined, interpolate float UV texcoords too
!   94	 *                         (for 3-D, 4-D? texture maps)
!   95	 *
!   96	 * When one can directly address pixels in the color buffer the following
!   97	 * macros can be defined and used to compute pixel addresses during
!   98	 * rasterization (see pRow):
!   99	 *    PIXEL_TYPE          - the datatype of a pixel (GLubyte, GLushort, GLuint)
!  100	 *    BYTES_PER_ROW       - number of bytes per row in the color buffer
!  101	 *    PIXEL_ADDRESS(X,Y)  - returns the address of pixel at (X,Y) where
!  102	 *                          Y==0 at bottom of screen and increases upward.
!  103	 *
!  104	 * Optionally, one may provide one-time setup code per triangle:
!  105	 *    SETUP_CODE    - code which is to be executed once per triangle
!  106	 * 
!  107	 * The following macro MUST be defined:
!  108	 *    INNER_LOOP(LEFT,RIGHT,Y) - code to write a span of pixels.
!  109	 *        Something like:
!  110	 *
!  111	 *                    for (x=LEFT; x<RIGHT;x++) {
!  112	 *                       put_pixel(x,Y);
!  113	 *                       // increment fixed point interpolants
!  114	 *                    }
!  115	 *
!  116	 * This code was designed for the origin to be in the lower-left corner.
!  117	 *
!  118	 * Inspired by triangle rasterizer code written by Allen Akin.  Thanks Allen!
!  119	 */
!  120	
!  122	/*void triangle( GLcontext *ctx, GLuint v0, GLuint v1, GLuint v2, GLuint pv )*/
!  123	{
!  124	   typedef struct {
!  125	        GLint v0, v1;     /* Y(v0) < Y(v1) */
!  126		GLfloat dx;	/* X(v1) - X(v0) */
!  127		GLfloat dy;	/* Y(v1) - Y(v0) */
!  128		GLfixed fdxdy;	/* dx/dy in fixed-point */
!  129		GLfixed fsx;	/* first sample point x coord */
!  130		GLfixed fsy;
!  131		GLfloat adjy;	/* adjust from v[0]->fy to fsy, scaled */
!  132		GLint lines;	/* number of lines to be sampled on this edge */
!  133		GLfixed fx0;	/* fixed pt X of lower endpoint */
!  134	   } EdgeT;
!  135	
!  136	   struct vertex_buffer *VB = ctx->VB;

	ld	[%fp+68],%l0
	sethi	%hi(0xe134),%l1
	or	%l1,%lo(0xe134),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-24]

	! block 8
.L2850:
.L2851:

!  137	   EdgeT eMaj, eTop, eBot;
!  138	   GLfloat oneOverArea;
!  139	   int vMin, vMid, vMax;       /* vertex indexes:  Y(vMin)<=Y(vMid)<=Y(vMax) */
!  140	
!  141	   /* find the order of the 3 vertices along the Y axis */
!  142	   {
!  143	      GLfloat y0 = VB->Win[v0][1];

	ld	[%fp-24],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l1
	or	%l1,%lo(0x5e84),%l1
	ld	[%l0+%l1],%f4
	st	%f4,[%fp-164]

	! block 9
.L2852:

!  144	      GLfloat y1 = VB->Win[v1][1];

	ld	[%fp-24],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l1
	or	%l1,%lo(0x5e84),%l1
	ld	[%l0+%l1],%f4
	st	%f4,[%fp-168]

	! block 10
.L2853:

!  145	      GLfloat y2 = VB->Win[v2][1];

	ld	[%fp-24],%l3
	ld	[%fp+80],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l1
	or	%l1,%lo(0x5e84),%l1
	ld	[%l0+%l1],%f4
	st	%f4,[%fp-172]

	! block 11
.L2854:
.L2856:

!  147	      if (y0<=y1) {

	ld	[%fp-164],%f5
	ld	[%fp-168],%f4
	fcmpes	%f5,%f4
	fbug	.L2855
	nop

	! block 12
.L2857:
.L2858:
.L2859:
.L2860:
.L2862:

!  148		 if (y1<=y2) {

	ld	[%fp-168],%f5
	ld	[%fp-172],%f4
	fcmpes	%f5,%f4
	fbug	.L2861
	nop

	! block 13
.L2863:
.L2864:
.L2865:
.L2866:

!  149		    vMin = v0;   vMid = v1;   vMax = v2;   /* y0<=y1<=y2 */

	ld	[%fp+72],%l0
	st	%l0,[%fp-152]
	ld	[%fp+76],%l0
	st	%l0,[%fp-156]
	ld	[%fp+80],%l0
	st	%l0,[%fp-160]

	! block 14
.L2867:
.L2868:
	ba	.L2869
	nop

	! block 15
.L2861:
.L2870:
.L2871:
.L2873:

!  150		 }
!  151		 else if (y2<=y0) {

	ld	[%fp-172],%f5
	ld	[%fp-164],%f4
	fcmpes	%f5,%f4
	fbug	.L2872
	nop

	! block 16
.L2874:
.L2875:
.L2876:
.L2877:

!  152		    vMin = v2;   vMid = v0;   vMax = v1;   /* y2<=y0<=y1 */

	ld	[%fp+80],%l0
	st	%l0,[%fp-152]
	ld	[%fp+72],%l0
	st	%l0,[%fp-156]
	ld	[%fp+76],%l0
	st	%l0,[%fp-160]

	! block 17
.L2878:
.L2879:
	ba	.L2880
	nop

	! block 18
.L2872:
.L2881:
.L2882:
.L2883:

!  153		 }
!  154		 else {
!  155		    vMin = v0;   vMid = v2;   vMax = v1;   /* y0<=y2<=y1 */

	ld	[%fp+72],%l0
	st	%l0,[%fp-152]
	ld	[%fp+80],%l0
	st	%l0,[%fp-156]
	ld	[%fp+76],%l0
	st	%l0,[%fp-160]

	! block 19
.L2884:
.L2885:
.L2880:
.L2886:
.L2887:
.L2869:
.L2888:
.L2889:
.L2890:
	ba	.L2891
	nop

	! block 20
.L2855:
.L2892:
.L2893:
.L2894:
.L2896:

!  156		 }
!  157	      }
!  158	      else {
!  159		 if (y0<=y2) {

	ld	[%fp-164],%f5
	ld	[%fp-172],%f4
	fcmpes	%f5,%f4
	fbug	.L2895
	nop

	! block 21
.L2897:
.L2898:
.L2899:
.L2900:

!  160		    vMin = v1;   vMid = v0;   vMax = v2;   /* y1<=y0<=y2 */

	ld	[%fp+76],%l0
	st	%l0,[%fp-152]
	ld	[%fp+72],%l0
	st	%l0,[%fp-156]
	ld	[%fp+80],%l0
	st	%l0,[%fp-160]

	! block 22
.L2901:
.L2902:
	ba	.L2903
	nop

	! block 23
.L2895:
.L2904:
.L2905:
.L2907:

!  161		 }
!  162		 else if (y2<=y1) {

	ld	[%fp-172],%f5
	ld	[%fp-168],%f4
	fcmpes	%f5,%f4
	fbug	.L2906
	nop

	! block 24
.L2908:
.L2909:
.L2910:
.L2911:

!  163		    vMin = v2;   vMid = v1;   vMax = v0;   /* y2<=y1<=y0 */

	ld	[%fp+80],%l0
	st	%l0,[%fp-152]
	ld	[%fp+76],%l0
	st	%l0,[%fp-156]
	ld	[%fp+72],%l0
	st	%l0,[%fp-160]

	! block 25
.L2912:
.L2913:
	ba	.L2914
	nop

	! block 26
.L2906:
.L2915:
.L2916:
.L2917:

!  164		 }
!  165		 else {
!  166		    vMin = v1;   vMid = v2;   vMax = v0;   /* y1<=y2<=y0 */

	ld	[%fp+76],%l0
	st	%l0,[%fp-152]
	ld	[%fp+80],%l0
	st	%l0,[%fp-156]
	ld	[%fp+72],%l0
	st	%l0,[%fp-160]

	! block 27
.L2918:
.L2919:
.L2914:
.L2920:
.L2921:
.L2903:
.L2922:
.L2923:
.L2924:
.L2891:
.L2925:
.L2926:
.L2927:

!  167		 }
!  168	      }
!  169	   }
!  170	
!  171	   /* vertex/edge relationship */
!  172	   eMaj.v0 = vMin;   eMaj.v1 = vMax;   /*TODO: .v1's not needed */

	ld	[%fp-152],%l0
	st	%l0,[%fp-64]
	ld	[%fp-160],%l0
	st	%l0,[%fp-60]

	! block 28
.L2928:

!  173	   eTop.v0 = vMid;   eTop.v1 = vMax;

	ld	[%fp-156],%l0
	st	%l0,[%fp-104]
	ld	[%fp-160],%l0
	st	%l0,[%fp-100]

	! block 29
.L2929:

!  174	   eBot.v0 = vMin;   eBot.v1 = vMid;

	ld	[%fp-152],%l0
	st	%l0,[%fp-144]
	ld	[%fp-156],%l0
	st	%l0,[%fp-140]

	! block 30
.L2930:

!  176	   /* compute deltas for each edge:  vertex[v1] - vertex[v0] */
!  177	   eMaj.dx = VB->Win[vMax][0] - VB->Win[vMin][0];

	ld	[%fp-24],%l3
	ld	[%fp-160],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l5
	or	%l5,%lo(0x5e80),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-152],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-56]

	! block 31
.L2931:

!  178	   eMaj.dy = VB->Win[vMax][1] - VB->Win[vMin][1];

	ld	[%fp-24],%l3
	ld	[%fp-160],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l5
	or	%l5,%lo(0x5e84),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-152],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-52]

	! block 32
.L2932:

!  179	   eTop.dx = VB->Win[vMax][0] - VB->Win[vMid][0];

	ld	[%fp-24],%l3
	ld	[%fp-160],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l5
	or	%l5,%lo(0x5e80),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-156],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-96]

	! block 33
.L2933:

!  180	   eTop.dy = VB->Win[vMax][1] - VB->Win[vMid][1];

	ld	[%fp-24],%l3
	ld	[%fp-160],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l5
	or	%l5,%lo(0x5e84),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-156],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-92]

	! block 34
.L2934:

!  181	   eBot.dx = VB->Win[vMid][0] - VB->Win[vMin][0];

	ld	[%fp-24],%l3
	ld	[%fp-156],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l5
	or	%l5,%lo(0x5e80),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-152],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-136]

	! block 35
.L2935:

!  182	   eBot.dy = VB->Win[vMid][1] - VB->Win[vMin][1];

	ld	[%fp-24],%l3
	ld	[%fp-156],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l5
	or	%l5,%lo(0x5e84),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-152],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-132]

	! block 36
.L2936:
.L2937:

!  184	   /* compute oneOverArea */
!  185	   {
!  186	      GLfloat area = eMaj.dx * eBot.dy - eBot.dx * eMaj.dy;

	ld	[%fp-56],%f5
	ld	[%fp-132],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-136],%f5
	ld	[%fp-52],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	st	%f4,[%fp-164]

	! block 37
.L2938:
.L2940:

!  187	      if (area>-0.05f && area<0.05f) {

	ld	[%fp-164],%f5
	sethi	%hi(.L_cseg4),%l0
	ld	[%l0+%lo(.L_cseg4)],%f4
	fnegs	%f4,%f4
	fcmpes	%f5,%f4
	fbule	.L2939
	nop

	! block 38
.L2941:
	ld	[%fp-164],%f5
	sethi	%hi(.L_cseg4),%l0
	ld	[%l0+%lo(.L_cseg4)],%f4
	fcmpes	%f5,%f4
	fbuge	.L2939
	nop

	! block 39
.L2942:
.L2943:
.L2944:
.L2945:

!  188	         return;  /* very small; CULLED */

	ba	.L2839
	nop

	! block 40
.L2946:
.L2947:
.L2939:
.L2948:
.L2949:

!  189	      }
!  190	      oneOverArea = 1.0F / area;

	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f5
	ld	[%fp-164],%f4
	fdivs	%f5,%f4,%f4
	st	%f4,[%fp-148]

	! block 41
.L2950:
.L2951:
.L2952:

!  191	   }
!  192	
!  193	   /* Edge setup.  For a triangle strip these could be reused... */
!  194	   {
!  195	      /* fixed point Y coordinates */
!  196	      GLfixed vMin_fx = FloatToFixed(VB->Win[vMin][0] + 0.5F);

	ld	[%fp-24],%l3
	ld	[%fp-152],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l1
	or	%l1,%lo(0x5e80),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg5),%l0
	ld	[%l0+%lo(.L_cseg5)],%f4
	fadds	%f5,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-164]

	! block 42
.L2953:

!  197	      GLfixed vMin_fy = FloatToFixed(VB->Win[vMin][1] - 0.5F);

	ld	[%fp-24],%l3
	ld	[%fp-152],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l1
	or	%l1,%lo(0x5e84),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fadds	%f5,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-168]

	! block 43
.L2954:

!  198	      GLfixed vMid_fx = FloatToFixed(VB->Win[vMid][0] + 0.5F);

	ld	[%fp-24],%l3
	ld	[%fp-156],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l1
	or	%l1,%lo(0x5e80),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg5),%l0
	ld	[%l0+%lo(.L_cseg5)],%f4
	fadds	%f5,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-172]

	! block 44
.L2955:

!  199	      GLfixed vMid_fy = FloatToFixed(VB->Win[vMid][1] - 0.5F);

	ld	[%fp-24],%l3
	ld	[%fp-156],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l1
	or	%l1,%lo(0x5e84),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fadds	%f5,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-176]

	! block 45
.L2956:

!  200	      GLfixed vMax_fy = FloatToFixed(VB->Win[vMax][1] - 0.5F);

	ld	[%fp-24],%l3
	ld	[%fp-160],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l1
	or	%l1,%lo(0x5e84),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fadds	%f5,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-180]

	! block 46
.L2957:

!  202	      eMaj.fsy = FixedCeil(vMin_fy);

	ld	[%fp-168],%l0
	add	%l0,2047,%l0
	and	%l0,-2048,%l0
	st	%l0,[%fp-40]

	! block 47
.L2958:

!  203	      eMaj.lines = FixedToInt(vMax_fy + FIXED_ONE - FIXED_EPSILON - eMaj.fsy);

	ld	[%fp-180],%l2
	ld	[%fp-40],%l0
	neg	%l0,%l1
	add	%l2,%l1,%l0
	add	%l0,2047,%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-32]

	! block 48
.L2959:
.L2961:

!  204	      if (eMaj.lines > 0) {

	ld	[%fp-32],%l0
	cmp	%l0,0
	ble	.L2960
	nop

	! block 49
.L2962:
.L2963:
.L2964:
.L2965:

!  205	         GLfloat dxdy = eMaj.dx / eMaj.dy;

	ld	[%fp-56],%f5
	ld	[%fp-52],%f4
	fdivs	%f5,%f4,%f4
	st	%f4,[%fp-184]

	! block 50
.L2966:

!  206	         eMaj.fdxdy = SignedFloatToFixed(dxdy);

	ld	[%fp-184],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-48]

	! block 51
.L2967:

!  207	         eMaj.adjy = (GLfloat) (eMaj.fsy - vMin_fy);  /* SCALED! */

	ld	[%fp-40],%l0
	ld	[%fp-168],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-36]

	! block 52
.L2968:

!  208	         eMaj.fx0 = vMin_fx;

	ld	[%fp-164],%l0
	st	%l0,[%fp-28]

	! block 53
.L2969:

!  209	         eMaj.fsx = eMaj.fx0 + (GLfixed) (eMaj.adjy * dxdy);

	ld	[%fp-28],%l0
	ld	[%fp-36],%f5
	ld	[%fp-184],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-44]

	! block 54
.L2970:
.L2971:
	ba	.L2972
	nop

	! block 55
.L2960:
.L2973:
.L2974:
.L2975:

!  210	      }
!  211	      else {
!  212	         return;  /*CULLED*/

	ba	.L2839
	nop

	! block 56
.L2976:
.L2977:
.L2972:
.L2978:
.L2979:

!  213	      }
!  214	
!  215	      eTop.fsy = FixedCeil(vMid_fy);

	ld	[%fp-176],%l0
	add	%l0,2047,%l0
	and	%l0,-2048,%l0
	st	%l0,[%fp-80]

	! block 57
.L2980:

!  216	      eTop.lines = FixedToInt(vMax_fy + FIXED_ONE - FIXED_EPSILON - eTop.fsy);

	ld	[%fp-180],%l2
	ld	[%fp-80],%l0
	neg	%l0,%l1
	add	%l2,%l1,%l0
	add	%l0,2047,%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-72]

	! block 58
.L2981:
.L2983:

!  217	      if (eTop.lines > 0) {

	ld	[%fp-72],%l0
	cmp	%l0,0
	ble	.L2982
	nop

	! block 59
.L2984:
.L2985:
.L2986:
.L2987:

!  218	         GLfloat dxdy = eTop.dx / eTop.dy;

	ld	[%fp-96],%f5
	ld	[%fp-92],%f4
	fdivs	%f5,%f4,%f4
	st	%f4,[%fp-184]

	! block 60
.L2988:

!  219	         eTop.fdxdy = SignedFloatToFixed(dxdy);

	ld	[%fp-184],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-88]

	! block 61
.L2989:

!  220	         eTop.adjy = (GLfloat) (eTop.fsy - vMid_fy); /* SCALED! */

	ld	[%fp-80],%l0
	ld	[%fp-176],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-76]

	! block 62
.L2990:

!  221	         eTop.fx0 = vMid_fx;

	ld	[%fp-172],%l0
	st	%l0,[%fp-68]

	! block 63
.L2991:

!  222	         eTop.fsx = eTop.fx0 + (GLfixed) (eTop.adjy * dxdy);

	ld	[%fp-68],%l0
	ld	[%fp-76],%f5
	ld	[%fp-184],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-84]

	! block 64
.L2992:
.L2993:
.L2982:
.L2994:
.L2995:

!  223	      }
!  224	
!  225	      eBot.fsy = FixedCeil(vMin_fy);

	ld	[%fp-168],%l0
	add	%l0,2047,%l0
	and	%l0,-2048,%l0
	st	%l0,[%fp-120]

	! block 65
.L2996:

!  226	      eBot.lines = FixedToInt(vMid_fy + FIXED_ONE - FIXED_EPSILON - eBot.fsy);

	ld	[%fp-176],%l2
	ld	[%fp-120],%l0
	neg	%l0,%l1
	add	%l2,%l1,%l0
	add	%l0,2047,%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-112]

	! block 66
.L2997:
.L2999:

!  227	      if (eBot.lines > 0) {

	ld	[%fp-112],%l0
	cmp	%l0,0
	ble	.L2998
	nop

	! block 67
.L3000:
.L3001:
.L3002:
.L3003:

!  228	         GLfloat dxdy = eBot.dx / eBot.dy;

	ld	[%fp-136],%f5
	ld	[%fp-132],%f4
	fdivs	%f5,%f4,%f4
	st	%f4,[%fp-184]

	! block 68
.L3004:

!  229	         eBot.fdxdy = SignedFloatToFixed(dxdy);

	ld	[%fp-184],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-128]

	! block 69
.L3005:

!  230	         eBot.adjy = (GLfloat) (eBot.fsy - vMin_fy);  /* SCALED! */

	ld	[%fp-120],%l0
	ld	[%fp-168],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-116]

	! block 70
.L3006:

!  231	         eBot.fx0 = vMin_fx;

	ld	[%fp-164],%l0
	st	%l0,[%fp-108]

	! block 71
.L3007:

!  232	         eBot.fsx = eBot.fx0 + (GLfixed) (eBot.adjy * dxdy);

	ld	[%fp-108],%l0
	ld	[%fp-116],%f5
	ld	[%fp-184],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-124]

	! block 72
.L3008:
.L3009:
.L2998:
.L3010:
.L3011:
.L3012:
.L3013:

!  233	      }
!  234	   }
!  235	
!  236	   /*
!  237	    * Conceptually, we view a triangle as two subtriangles
!  238	    * separated by a perfectly horizontal line.  The edge that is
!  239	    * intersected by this line is one with maximal absolute dy; we
!  240	    * call it a ``major'' edge.  The other two edges are the
!  241	    * ``top'' edge (for the upper subtriangle) and the ``bottom''
!  242	    * edge (for the lower subtriangle).  If either of these two
!  243	    * edges is horizontal or very close to horizontal, the
!  244	    * corresponding subtriangle might cover zero sample points;
!  245	    * we take care to handle such cases, for performance as well
!  246	    * as correctness.
!  247	    *
!  248	    * By stepping rasterization parameters along the major edge,
!  249	    * we can avoid recomputing them at the discontinuity where
!  250	    * the top and bottom edges meet.  However, this forces us to
!  251	    * be able to scan both left-to-right and right-to-left. 
!  252	    * Also, we must determine whether the major edge is at the
!  253	    * left or right side of the triangle.  We do this by
!  254	    * computing the magnitude of the cross-product of the major
!  255	    * and top edges.  Since this magnitude depends on the sine of
!  256	    * the angle between the two edges, its sign tells us whether
!  257	    * we turn to the left or to the right when travelling along
!  258	    * the major edge to the top edge, and from this we infer
!  259	    * whether the major edge is on the left or the right.
!  260	    *
!  261	    * Serendipitously, this cross-product magnitude is also a
!  262	    * value we need to compute the iteration parameter
!  263	    * derivatives for the triangle, and it can be used to perform
!  264	    * backface culling because its sign tells us whether the
!  265	    * triangle is clockwise or counterclockwise.  In this code we
!  266	    * refer to it as ``area'' because it's also proportional to
!  267	    * the pixel area of the triangle.
!  268	    */
!  269	
!  270	   {
!  271	      GLint ltor;		/* true if scanning left-to-right */
!  272	#if INTERP_Z
!  273	      GLfloat dzdx, dzdy;      GLfixed fdzdx;
!  274	#endif
!  275	#if INTERP_RGB
!  276	      GLfloat drdx, drdy;      GLfixed fdrdx;
!  277	      GLfloat dgdx, dgdy;      GLfixed fdgdx;
!  278	      GLfloat dbdx, dbdy;      GLfixed fdbdx;
!  279	#endif
!  280	#if INTERP_ALPHA
!  281	      GLfloat dadx, dady;      GLfixed fdadx;
!  282	#endif
!  283	#if INTERP_INDEX
!  284	      GLfloat didx, didy;      GLfixed fdidx;
!  285	#endif
!  286	#if INTERP_ST
!  287	      GLfloat dsdx, dsdy;      GLfixed fdsdx;
!  288	      GLfloat dtdx, dtdy;      GLfixed fdtdx;
!  289	#endif
!  290	#if INTERP_STW
!  291	      GLfloat dsdx, dsdy;
!  292	      GLfloat dtdx, dtdy;
!  293	      GLfloat dwdx, dwdy;
!  294	#endif
!  295	#if INTERP_UV
!  296	      GLfloat dudx, dudy;
!  297	      GLfloat dvdx, dvdy;
!  298	#endif
!  299	
!  300	      /*
!  301	       * Execute user-supplied setup code
!  302	       */
!  303	#ifdef SETUP_CODE
!  304	      SETUP_CODE
!  305	#endif
!  306	
!  307	      ltor = (oneOverArea < 0.0F);

	ld	[%fp-148],%f5
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	fcmpes	%f5,%f4
	mov	0,%l0
	fbl,a	1f
	mov	1,%l0
1:
	st	%l0,[%fp-164]

	! block 73
.L3014:
.L3015:

!  309	      /* compute d?/dx and d?/dy derivatives */
!  310	#if INTERP_Z
!  311	      {
!  312	         GLfloat eMaj_dz, eBot_dz;
!  313	         eMaj_dz = VB->Win[vMax][2] - VB->Win[vMin][2];

	ld	[%fp-24],%l3
	ld	[%fp-160],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e88),%l5
	or	%l5,%lo(0x5e88),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-152],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-228]

	! block 74
.L3016:

!  314	         eBot_dz = VB->Win[vMid][2] - VB->Win[vMin][2];

	ld	[%fp-24],%l3
	ld	[%fp-156],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e88),%l5
	or	%l5,%lo(0x5e88),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-152],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-232]

	! block 75
.L3017:

!  315	         dzdx = oneOverArea * (eMaj_dz * eBot.dy - eMaj.dy * eBot_dz);

	ld	[%fp-148],%f7
	ld	[%fp-228],%f5
	ld	[%fp-132],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-52],%f5
	ld	[%fp-232],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	fmuls	%f7,%f4,%f4
	st	%f4,[%fp-168]

	! block 76
.L3018:
.L3020:

!  316	         if (dzdx>DEPTH_SCALE || dzdx<-DEPTH_SCALE) {

	ld	[%fp-168],%f5
	sethi	%hi(.L_cseg8),%l0
	ld	[%l0+%lo(.L_cseg8)],%f4
	fcmpes	%f5,%f4
	fbg	.L3021
	nop

	! block 77
.L3022:
	ld	[%fp-168],%f5
	sethi	%hi(.L_cseg8),%l0
	ld	[%l0+%lo(.L_cseg8)],%f4
	fnegs	%f4,%f4
	fcmpes	%f5,%f4
	fbuge	.L3019
	nop

	! block 78
.L3023:
.L3021:
.L3024:
.L3025:
.L3026:

!  317	            /* probably a sliver triangle */
!  318	            dzdx = 0.0;

	sethi	%hi(.L_cseg0),%l0
	ldd	[%l0+%lo(.L_cseg0)],%f4
	fdtos	%f4,%f4
	st	%f4,[%fp-168]

	! block 79
.L3027:

!  319	            dzdy = 0.0;

	sethi	%hi(.L_cseg0),%l0
	ldd	[%l0+%lo(.L_cseg0)],%f4
	fdtos	%f4,%f4
	st	%f4,[%fp-172]

	! block 80
.L3028:
.L3029:
	ba	.L3030
	nop

	! block 81
.L3019:
.L3031:
.L3032:
.L3033:

!  320	         }
!  321	         else {
!  322	            dzdy = oneOverArea * (eMaj.dx * eBot_dz - eMaj_dz * eBot.dx);

	ld	[%fp-148],%f7
	ld	[%fp-56],%f5
	ld	[%fp-232],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-228],%f5
	ld	[%fp-136],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	fmuls	%f7,%f4,%f4
	st	%f4,[%fp-172]

	! block 82
.L3034:
.L3035:
.L3030:
.L3036:
.L3037:

!  323	         }
!  324	#if DEPTH_BITS==16
!  325	         fdzdx = SignedFloatToFixed(dzdx);

	ld	[%fp-168],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-176]

	! block 83
.L3038:
.L3039:
.L3040:

!  326	#else
!  327	         fdzdx = (GLint) dzdx;
!  328	#endif
!  329	      }
!  330	#endif
!  331	#if INTERP_RGB
!  332	      {
!  333	         GLfloat eMaj_dr, eBot_dr;
!  334	         eMaj_dr = (GLint) VB->Color[vMax][0] - (GLint) VB->Color[vMin][0];

	ld	[%fp-24],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp-160],%l0
	sll	%l0,2,%l1
	ldub	[%l2+%l1],%l3
	ld	[%fp-152],%l0
	sll	%l0,2,%l1
	ldub	[%l2+%l1],%l1
	sub	%l3,%l1,%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-228]

	! block 84
.L3041:

!  335	         eBot_dr = (GLint) VB->Color[vMid][0] - (GLint) VB->Color[vMin][0];

	ld	[%fp-24],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp-156],%l0
	sll	%l0,2,%l1
	ldub	[%l2+%l1],%l3
	ld	[%fp-152],%l0
	sll	%l0,2,%l1
	ldub	[%l2+%l1],%l1
	sub	%l3,%l1,%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-232]

	! block 85
.L3042:

!  336	         drdx = oneOverArea * (eMaj_dr * eBot.dy - eMaj.dy * eBot_dr);

	ld	[%fp-148],%f7
	ld	[%fp-228],%f5
	ld	[%fp-132],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-52],%f5
	ld	[%fp-232],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	fmuls	%f7,%f4,%f4
	st	%f4,[%fp-180]

	! block 86
.L3043:

!  337	         fdrdx = SignedFloatToFixed(drdx);

	ld	[%fp-180],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-188]

	! block 87
.L3044:

!  338	         drdy = oneOverArea * (eMaj.dx * eBot_dr - eMaj_dr * eBot.dx);

	ld	[%fp-148],%f7
	ld	[%fp-56],%f5
	ld	[%fp-232],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-228],%f5
	ld	[%fp-136],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	fmuls	%f7,%f4,%f4
	st	%f4,[%fp-184]

	! block 88
.L3045:
.L3046:
.L3047:

!  339	      }
!  340	      {
!  341	         GLfloat eMaj_dg, eBot_dg;
!  342	         eMaj_dg = (GLint) VB->Color[vMax][1] - (GLint) VB->Color[vMin][1];

	ld	[%fp-24],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp-160],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+1],%l3
	ld	[%fp-152],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+1],%l1
	sub	%l3,%l1,%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-228]

	! block 89
.L3048:

!  343		 eBot_dg = (GLint) VB->Color[vMid][1] - (GLint) VB->Color[vMin][1];

	ld	[%fp-24],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp-156],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+1],%l3
	ld	[%fp-152],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+1],%l1
	sub	%l3,%l1,%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-232]

	! block 90
.L3049:

!  344	         dgdx = oneOverArea * (eMaj_dg * eBot.dy - eMaj.dy * eBot_dg);

	ld	[%fp-148],%f7
	ld	[%fp-228],%f5
	ld	[%fp-132],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-52],%f5
	ld	[%fp-232],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	fmuls	%f7,%f4,%f4
	st	%f4,[%fp-192]

	! block 91
.L3050:

!  345	         fdgdx = SignedFloatToFixed(dgdx);

	ld	[%fp-192],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-200]

	! block 92
.L3051:

!  346	         dgdy = oneOverArea * (eMaj.dx * eBot_dg - eMaj_dg * eBot.dx);

	ld	[%fp-148],%f7
	ld	[%fp-56],%f5
	ld	[%fp-232],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-228],%f5
	ld	[%fp-136],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	fmuls	%f7,%f4,%f4
	st	%f4,[%fp-196]

	! block 93
.L3052:
.L3053:
.L3054:

!  347	      }
!  348	      {
!  349	         GLfloat eMaj_db, eBot_db;
!  350	         eMaj_db = (GLint) VB->Color[vMax][2] - (GLint) VB->Color[vMin][2];

	ld	[%fp-24],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp-160],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+2],%l3
	ld	[%fp-152],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+2],%l1
	sub	%l3,%l1,%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-228]

	! block 94
.L3055:

!  351	         eBot_db = (GLint) VB->Color[vMid][2] - (GLint) VB->Color[vMin][2];

	ld	[%fp-24],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp-156],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+2],%l3
	ld	[%fp-152],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+2],%l1
	sub	%l3,%l1,%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-232]

	! block 95
.L3056:

!  352	         dbdx = oneOverArea * (eMaj_db * eBot.dy - eMaj.dy * eBot_db);

	ld	[%fp-148],%f7
	ld	[%fp-228],%f5
	ld	[%fp-132],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-52],%f5
	ld	[%fp-232],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	fmuls	%f7,%f4,%f4
	st	%f4,[%fp-204]

	! block 96
.L3057:

!  353	         fdbdx = SignedFloatToFixed(dbdx);

	ld	[%fp-204],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-212]

	! block 97
.L3058:

!  354		 dbdy = oneOverArea * (eMaj.dx * eBot_db - eMaj_db * eBot.dx);

	ld	[%fp-148],%f7
	ld	[%fp-56],%f5
	ld	[%fp-232],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-228],%f5
	ld	[%fp-136],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	fmuls	%f7,%f4,%f4
	st	%f4,[%fp-208]

	! block 98
.L3059:
.L3060:
.L3061:

!  355	      }
!  356	#endif
!  357	#if INTERP_ALPHA
!  358	      {
!  359	         GLfloat eMaj_da, eBot_da;
!  360	         eMaj_da = (GLint) VB->Color[vMax][3] - (GLint) VB->Color[vMin][3];

	ld	[%fp-24],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp-160],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+3],%l3
	ld	[%fp-152],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+3],%l1
	sub	%l3,%l1,%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-228]

	! block 99
.L3062:

!  361	         eBot_da = (GLint) VB->Color[vMid][3] - (GLint) VB->Color[vMin][3];

	ld	[%fp-24],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp-156],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+3],%l3
	ld	[%fp-152],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+3],%l1
	sub	%l3,%l1,%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-232]

	! block 100
.L3063:

!  362	         dadx = oneOverArea * (eMaj_da * eBot.dy - eMaj.dy * eBot_da);

	ld	[%fp-148],%f7
	ld	[%fp-228],%f5
	ld	[%fp-132],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-52],%f5
	ld	[%fp-232],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	fmuls	%f7,%f4,%f4
	st	%f4,[%fp-216]

	! block 101
.L3064:

!  363	         fdadx = SignedFloatToFixed(dadx);

	ld	[%fp-216],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-424]
	ld	[%fp-424],%l0
	st	%l0,[%fp-224]

	! block 102
.L3065:

!  364	         dady = oneOverArea * (eMaj.dx * eBot_da - eMaj_da * eBot.dx);

	ld	[%fp-148],%f7
	ld	[%fp-56],%f5
	ld	[%fp-232],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-228],%f5
	ld	[%fp-136],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	fmuls	%f7,%f4,%f4
	st	%f4,[%fp-220]

	! block 103
.L3066:
.L3067:
.L3068:
.L3069:

!  365	      }
!  366	#endif
!  367	#if INTERP_INDEX
!  368	      {
!  369	         GLfloat eMaj_di, eBot_di;
!  370	         eMaj_di = (GLint) VB->Index[vMax] - (GLint) VB->Index[vMin];
!  371	         eBot_di = (GLint) VB->Index[vMid] - (GLint) VB->Index[vMin];
!  372	         didx = oneOverArea * (eMaj_di * eBot.dy - eMaj.dy * eBot_di);
!  373	         fdidx = SignedFloatToFixed(didx);
!  374	         didy = oneOverArea * (eMaj.dx * eBot_di - eMaj_di * eBot.dx);
!  375	      }
!  376	#endif
!  377	#if INTERP_ST
!  378	      {
!  379	         GLfloat eMaj_ds, eBot_ds;
!  380	         eMaj_ds = (VB->TexCoord[vMax][0] - VB->TexCoord[vMin][0]) * S_SCALE;
!  381	         eBot_ds = (VB->TexCoord[vMid][0] - VB->TexCoord[vMin][0]) * S_SCALE;
!  382	         dsdx = oneOverArea * (eMaj_ds * eBot.dy - eMaj.dy * eBot_ds);
!  383	         fdsdx = SignedFloatToFixed(dsdx);
!  384	         dsdy = oneOverArea * (eMaj.dx * eBot_ds - eMaj_ds * eBot.dx);
!  385	      }
!  386	      {
!  387	         GLfloat eMaj_dt, eBot_dt;
!  388	         eMaj_dt = (VB->TexCoord[vMax][1] - VB->TexCoord[vMin][1]) * T_SCALE;
!  389	         eBot_dt = (VB->TexCoord[vMid][1] - VB->TexCoord[vMin][1]) * T_SCALE;
!  390	         dtdx = oneOverArea * (eMaj_dt * eBot.dy - eMaj.dy * eBot_dt);
!  391	         fdtdx = SignedFloatToFixed(dtdx);
!  392	         dtdy = oneOverArea * (eMaj.dx * eBot_dt - eMaj_dt * eBot.dx);
!  393	      }
!  394	#endif
!  395	#if INTERP_STW
!  396	      {
!  397	         GLfloat wMax = 1.0F / VB->Clip[vMax][3];
!  398	         GLfloat wMin = 1.0F / VB->Clip[vMin][3];
!  399	         GLfloat wMid = 1.0F / VB->Clip[vMid][3];
!  400	         GLfloat eMaj_dw, eBot_dw;
!  401	         GLfloat eMaj_ds, eBot_ds;
!  402	         GLfloat eMaj_dt, eBot_dt;
!  403	#if INTERP_UV
!  404	         GLfloat eMaj_du, eBot_du;
!  405	         GLfloat eMaj_dv, eBot_dv;
!  406	#endif
!  407	         eMaj_dw = wMax - wMin;
!  408	         eBot_dw = wMid - wMin;
!  409	         dwdx = oneOverArea * (eMaj_dw * eBot.dy - eMaj.dy * eBot_dw);
!  410	         dwdy = oneOverArea * (eMaj.dx * eBot_dw - eMaj_dw * eBot.dx);
!  411	
!  412	         eMaj_ds = VB->TexCoord[vMax][0]*wMax - VB->TexCoord[vMin][0]*wMin;
!  413	         eBot_ds = VB->TexCoord[vMid][0]*wMid - VB->TexCoord[vMin][0]*wMin;
!  414	         dsdx = oneOverArea * (eMaj_ds * eBot.dy - eMaj.dy * eBot_ds);
!  415	         dsdy = oneOverArea * (eMaj.dx * eBot_ds - eMaj_ds * eBot.dx);
!  416	
!  417	         eMaj_dt = VB->TexCoord[vMax][1]*wMax - VB->TexCoord[vMin][1]*wMin;
!  418	         eBot_dt = VB->TexCoord[vMid][1]*wMid - VB->TexCoord[vMin][1]*wMin;
!  419	         dtdx = oneOverArea * (eMaj_dt * eBot.dy - eMaj.dy * eBot_dt);
!  420	         dtdy = oneOverArea * (eMaj.dx * eBot_dt - eMaj_dt * eBot.dx);
!  421	#if INTERP_UV
!  422	         eMaj_du = VB->TexCoord[vMax][2]*wMax - VB->TexCoord[vMin][2]*wMin;
!  423	         eBot_du = VB->TexCoord[vMid][2]*wMid - VB->TexCoord[vMin][2]*wMin;
!  424	         dudx = oneOverArea * (eMaj_du * eBot.dy - eMaj.dy * eBot_du);
!  425	         dudy = oneOverArea * (eMaj.dx * eBot_du - eMaj_du * eBot.dx);
!  426	
!  427	         /* Note: don't divide V component by W */
!  428	         eMaj_dv = VB->TexCoord[vMax][3] - VB->TexCoord[vMin][3];
!  429	         eBot_dv = VB->TexCoord[vMid][3] - VB->TexCoord[vMin][3];
!  430	         dvdx = oneOverArea * (eMaj_dv * eBot.dy - eMaj.dy * eBot_dv);
!  431	         dvdy = oneOverArea * (eMaj.dx * eBot_dv - eMaj_dv * eBot.dx);
!  432	#endif
!  433	      }
!  434	#endif
!  435	
!  436	      /*
!  437	       * We always sample at pixel centers.  However, we avoid
!  438	       * explicit half-pixel offsets in this code by incorporating
!  439	       * the proper offset in each of x and y during the
!  440	       * transformation to window coordinates.
!  441	       *
!  442	       * We also apply the usual rasterization rules to prevent
!  443	       * cracks and overlaps.  A pixel is considered inside a
!  444	       * subtriangle if it meets all of four conditions: it is on or
!  445	       * to the right of the left edge, strictly to the left of the
!  446	       * right edge, on or below the top edge, and strictly above
!  447	       * the bottom edge.  (Some edges may be degenerate.)
!  448	       *
!  449	       * The following discussion assumes left-to-right scanning
!  450	       * (that is, the major edge is on the left); the right-to-left
!  451	       * case is a straightforward variation.
!  452	       *
!  453	       * We start by finding the half-integral y coordinate that is
!  454	       * at or below the top of the triangle.  This gives us the
!  455	       * first scan line that could possibly contain pixels that are
!  456	       * inside the triangle.
!  457	       *
!  458	       * Next we creep down the major edge until we reach that y,
!  459	       * and compute the corresponding x coordinate on the edge. 
!  460	       * Then we find the half-integral x that lies on or just
!  461	       * inside the edge.  This is the first pixel that might lie in
!  462	       * the interior of the triangle.  (We won't know for sure
!  463	       * until we check the other edges.)
!  464	       *
!  465	       * As we rasterize the triangle, we'll step down the major
!  466	       * edge.  For each step in y, we'll move an integer number
!  467	       * of steps in x.  There are two possible x step sizes, which
!  468	       * we'll call the ``inner'' step (guaranteed to land on the
!  469	       * edge or inside it) and the ``outer'' step (guaranteed to
!  470	       * land on the edge or outside it).  The inner and outer steps
!  471	       * differ by one.  During rasterization we maintain an error
!  472	       * term that indicates our distance from the true edge, and
!  473	       * select either the inner step or the outer step, whichever
!  474	       * gets us to the first pixel that falls inside the triangle.
!  475	       *
!  476	       * All parameters (z, red, etc.) as well as the buffer
!  477	       * addresses for color and z have inner and outer step values,
!  478	       * so that we can increment them appropriately.  This method
!  479	       * eliminates the need to adjust parameters by creeping a
!  480	       * sub-pixel amount into the triangle at each scanline.
!  481	       */
!  482	
!  483	      {
!  484	         int subTriangle;
!  485	         GLfixed fx, fxLeftEdge, fxRightEdge, fdxLeftEdge, fdxRightEdge;
!  486	         GLfixed fdxOuter;
!  487	         int idxOuter;
!  488	         float dxOuter;
!  489	         GLfixed fError, fdError;
!  490	         float adjx, adjy;
!  491	         GLfixed fy;
!  492	         int iy;
!  493	#ifdef PIXEL_ADDRESS
!  494	         PIXEL_TYPE *pRow;
!  495	         int dPRowOuter, dPRowInner;  /* offset in bytes */
!  496	#endif
!  497	#if INTERP_Z
!  498	         GLdepth *zRow;
!  499	         int dZRowOuter, dZRowInner;  /* offset in bytes */
!  500	         GLfixed fz, fdzOuter, fdzInner;
!  501	#endif
!  502	#if INTERP_RGB
!  503	         GLfixed fr, fdrOuter, fdrInner;
!  504	         GLfixed fg, fdgOuter, fdgInner;
!  505	         GLfixed fb, fdbOuter, fdbInner;
!  506	#endif
!  507	#if INTERP_ALPHA
!  508	         GLfixed fa, fdaOuter, fdaInner;
!  509	#endif
!  510	#if INTERP_INDEX
!  511	         GLfixed fi, fdiOuter, fdiInner;
!  512	#endif
!  513	#if INTERP_ST
!  514	         GLfixed fs, fdsOuter, fdsInner;
!  515	         GLfixed ft, fdtOuter, fdtInner;
!  516	#endif
!  517	#if INTERP_STW
!  518	         GLfloat sLeft, dsOuter, dsInner;
!  519	         GLfloat tLeft, dtOuter, dtInner;
!  520	         GLfloat wLeft, dwOuter, dwInner;
!  521	#endif
!  522	#if INTERP_UV
!  523	         GLfloat uLeft, duOuter, duInner;
!  524	         GLfloat vLeft, dvOuter, dvInner;
!  525	#endif
!  526	
!  527	         for (subTriangle=0; subTriangle<=1; subTriangle++) {

	st	%g0,[%fp-228]

	! block 104
.L3073:
.L3070:
.L3074:
.L3075:
.L3076:
.L3078:

!  528	            EdgeT *eLeft, *eRight;
!  529	            int setupLeft, setupRight;
!  530	            int lines;
!  531	
!  532	            if (subTriangle==0) {

	ld	[%fp-228],%l0
	cmp	%l0,0
	bne	.L3077
	nop

	! block 105
.L3079:
.L3080:
.L3081:
.L3082:
.L3084:

!  533	               /* bottom half */
!  534	               if (ltor) {

	ld	[%fp-164],%l0
	cmp	%l0,%g0
	be	.L3083
	nop

	! block 106
.L3085:
.L3086:
.L3087:
.L3088:

!  535	                  eLeft = &eMaj;

	add	%fp,-64,%l0
	st	%l0,[%fp-360]

	! block 107
.L3089:

!  536	                  eRight = &eBot;

	add	%fp,-144,%l0
	st	%l0,[%fp-364]

	! block 108
.L3090:

!  537	                  lines = eRight->lines;

	ld	[%fp-364],%l0
	ld	[%l0+32],%l0
	st	%l0,[%fp-376]

	! block 109
.L3091:

!  538	                  setupLeft = 1;

	mov	1,%l0
	st	%l0,[%fp-368]

	! block 110
.L3092:

!  539	                  setupRight = 1;

	mov	1,%l0
	st	%l0,[%fp-372]

	! block 111
.L3093:
.L3094:
	ba	.L3095
	nop

	! block 112
.L3083:
.L3096:
.L3097:
.L3098:

!  540	               }
!  541	               else {
!  542	                  eLeft = &eBot;

	add	%fp,-144,%l0
	st	%l0,[%fp-360]

	! block 113
.L3099:

!  543	                  eRight = &eMaj;

	add	%fp,-64,%l0
	st	%l0,[%fp-364]

	! block 114
.L3100:

!  544	                  lines = eLeft->lines;

	ld	[%fp-360],%l0
	ld	[%l0+32],%l0
	st	%l0,[%fp-376]

	! block 115
.L3101:

!  545	                  setupLeft = 1;

	mov	1,%l0
	st	%l0,[%fp-368]

	! block 116
.L3102:

!  546	                  setupRight = 1;

	mov	1,%l0
	st	%l0,[%fp-372]

	! block 117
.L3103:
.L3104:
.L3095:
.L3105:
.L3106:
.L3107:
	ba	.L3108
	nop

	! block 118
.L3077:
.L3109:
.L3110:
.L3111:
.L3113:

!  547	               }
!  548	            }
!  549	            else {
!  550	               /* top half */
!  551	               if (ltor) {

	ld	[%fp-164],%l0
	cmp	%l0,%g0
	be	.L3112
	nop

	! block 119
.L3114:
.L3115:
.L3116:
.L3117:

!  552	                  eLeft = &eMaj;

	add	%fp,-64,%l0
	st	%l0,[%fp-360]

	! block 120
.L3118:

!  553	                  eRight = &eTop;

	add	%fp,-104,%l0
	st	%l0,[%fp-364]

	! block 121
.L3119:

!  554	                  lines = eRight->lines;

	ld	[%fp-364],%l0
	ld	[%l0+32],%l0
	st	%l0,[%fp-376]

	! block 122
.L3120:

!  555	                  setupLeft = 0;

	st	%g0,[%fp-368]

	! block 123
.L3121:

!  556	                  setupRight = 1;

	mov	1,%l0
	st	%l0,[%fp-372]

	! block 124
.L3122:
.L3123:
	ba	.L3124
	nop

	! block 125
.L3112:
.L3125:
.L3126:
.L3127:

!  557	               }
!  558	               else {
!  559	                  eLeft = &eTop;

	add	%fp,-104,%l0
	st	%l0,[%fp-360]

	! block 126
.L3128:

!  560	                  eRight = &eMaj;

	add	%fp,-64,%l0
	st	%l0,[%fp-364]

	! block 127
.L3129:

!  561	                  lines = eLeft->lines;

	ld	[%fp-360],%l0
	ld	[%l0+32],%l0
	st	%l0,[%fp-376]

	! block 128
.L3130:

!  562	                  setupLeft = 1;

	mov	1,%l0
	st	%l0,[%fp-368]

	! block 129
.L3131:

!  563	                  setupRight = 0;

	st	%g0,[%fp-372]

	! block 130
.L3132:
.L3133:
.L3124:
.L3134:
.L3135:
.L3137:

!  564	               }
!  565	               if (lines==0) return;

	ld	[%fp-376],%l0
	cmp	%l0,0
	bne	.L3136
	nop

	! block 131
.L3138:
.L3139:
	ba	.L2839
	nop

	! block 132
.L3140:
.L3136:
.L3141:
.L3142:
.L3143:
.L3108:
.L3144:
.L3145:
.L3147:

!  566	            }
!  567	
!  568	            if (setupLeft && eLeft->lines>0) {

	ld	[%fp-368],%l0
	cmp	%l0,%g0
	be	.L3146
	nop

	! block 133
.L3148:
	ld	[%fp-360],%l0
	ld	[%l0+32],%l0
	cmp	%l0,0
	ble	.L3146
	nop

	! block 134
.L3149:
.L3150:
.L3151:
.L3152:

!  569	               GLint vLower;
!  570	               GLfixed fsx = eLeft->fsx;

	ld	[%fp-360],%l0
	ld	[%l0+20],%l0
	st	%l0,[%fp-384]

	! block 135
.L3153:

!  571	               fx = FixedCeil(fsx);

	ld	[%fp-384],%l0
	add	%l0,2047,%l0
	and	%l0,-2048,%l0
	st	%l0,[%fp-232]

	! block 136
.L3154:

!  572	               fError = fx - fsx - FIXED_ONE;

	ld	[%fp-232],%l0
	ld	[%fp-384],%l1
	sub	%l0,%l1,%l0
	sub	%l0,2048,%l0
	st	%l0,[%fp-264]

	! block 137
.L3155:

!  573	               fxLeftEdge = fsx - FIXED_EPSILON;

	ld	[%fp-384],%l0
	sub	%l0,1,%l0
	st	%l0,[%fp-236]

	! block 138
.L3156:

!  574	               fdxLeftEdge = eLeft->fdxdy;

	ld	[%fp-360],%l0
	ld	[%l0+16],%l0
	st	%l0,[%fp-244]

	! block 139
.L3157:

!  575	               fdxOuter = FixedFloor(fdxLeftEdge - FIXED_EPSILON);

	ld	[%fp-244],%l0
	sub	%l0,1,%l0
	and	%l0,-2048,%l0
	st	%l0,[%fp-252]

	! block 140
.L3158:

!  576	               fdError = fdxOuter - fdxLeftEdge + FIXED_ONE;

	ld	[%fp-252],%l0
	ld	[%fp-244],%l1
	sub	%l0,%l1,%l0
	add	%l0,2048,%l0
	st	%l0,[%fp-268]

	! block 141
.L3159:

!  577	               idxOuter = FixedToInt(fdxOuter);

	ld	[%fp-252],%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-256]

	! block 142
.L3160:

!  578	               dxOuter = (float) idxOuter;

	ld	[%fp-256],%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-260]

	! block 143
.L3161:

!  580	               fy = eLeft->fsy;

	ld	[%fp-360],%l0
	ld	[%l0+24],%l0
	st	%l0,[%fp-280]

	! block 144
.L3162:

!  581	               iy = FixedToInt(fy);

	ld	[%fp-280],%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-284]

	! block 145
.L3163:

!  583	               adjx = (float)(fx - eLeft->fx0);  /* SCALED! */

	ld	[%fp-232],%l2
	ld	[%fp-360],%l0
	ld	[%l0+36],%l1
	sub	%l2,%l1,%l0
	st	%l0,[%fp-424]
	ld	[%fp-424],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-272]

	! block 146
.L3164:

!  584	               adjy = eLeft->adjy;		 /* SCALED! */

	ld	[%fp-360],%l0
	ld	[%l0+28],%f4
	st	%f4,[%fp-276]

	! block 147
.L3165:

!  586	               vLower = eLeft->v0;

	ld	[%fp-360],%l0
	ld	[%l0+0],%l0
	st	%l0,[%fp-380]

	! block 148
.L3166:
.L3167:

!  588	#ifdef PIXEL_ADDRESS
!  589	               {
!  590	                  pRow = PIXEL_ADDRESS( FixedToInt(fxLeftEdge), iy );
!  591	                  dPRowOuter = -BYTES_PER_ROW + idxOuter * sizeof(PIXEL_TYPE);
!  592	                  /* negative because Y=0 at bottom and increases upward */
!  593	               }
!  594	#endif
!  595	               /*
!  596	                * Now we need the set of parameter (z, color, etc.) values at
!  597	                * the point (fx, fy).  This gives us properly-sampled parameter
!  598	                * values that we can step from pixel to pixel.  Furthermore,
!  599	                * although we might have intermediate results that overflow
!  600	                * the normal parameter range when we step temporarily outside
!  601	                * the triangle, we shouldn't overflow or underflow for any
!  602	                * pixel that's actually inside the triangle.
!  603	                */
!  604	
!  605	#if INTERP_Z
!  606	               {
!  607	                  GLfloat z0, tmp;
!  608	                  z0 = VB->Win[vLower][2] + ctx->PolygonZoffset;

	ld	[%fp-24],%l3
	ld	[%fp-380],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e88),%l1
	or	%l1,%lo(0x5e88),%l1
	ld	[%l0+%l1],%f5
	ld	[%fp+68],%l0
	sethi	%hi(0xe110),%l1
	or	%l1,%lo(0xe110),%l1
	ld	[%l0+%l1],%f4
	fadds	%f5,%f4,%f4
	st	%f4,[%fp-388]

	! block 149
.L3168:

!  609	#if DEPTH_BITS==16
!  610	                  /* interpolate fixed-pt values */
!  611	                  tmp = (z0 * FIXED_SCALE + dzdx * adjx + dzdy * adjy) + FIXED_HALF;

	ld	[%fp-388],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-168],%f5
	ld	[%fp-272],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f6
	ld	[%fp-172],%f5
	ld	[%fp-276],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f5
	sethi	%hi(.L_cseg9),%l0
	ld	[%l0+%lo(.L_cseg9)],%f4
	fadds	%f5,%f4,%f4
	st	%f4,[%fp-392]

	! block 150
.L3169:
.L3171:

!  612	                  if (tmp < MAX_GLUINT/2)

	ld	[%fp-392],%f8
	sethi	%hi(0x7fffffff),%l1
	or	%l1,%lo(0x7fffffff),%l1
	sethi	%hi(0x43300000),%l0
	st	%l0,[%fp-432]
	st	%l1,[%fp-428]
	ldd	[%fp-432],%f6
	mov	0,%l0
	st	%l0,[%fp-428]
	ldd	[%fp-432],%f4
	fsubd	%f6,%f4,%f4
	fabss	%f4,%f4
	fdtos	%f4,%f4
	fcmpes	%f8,%f4
	fbuge	.L3170
	nop

	! block 151
.L3172:
.L3173:
.L3174:

!  613	                     fz = (GLfixed) tmp;

	ld	[%fp-392],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-432]
	ld	[%fp-432],%l0
	st	%l0,[%fp-300]

	! block 152
.L3175:
	ba	.L3176
	nop

	! block 153
.L3170:
.L3177:
.L3178:

!  614	                  else
!  615	                     fz = MAX_GLUINT/2;

	sethi	%hi(0x7fffffff),%l0
	or	%l0,%lo(0x7fffffff),%l0
	st	%l0,[%fp-300]

	! block 154
.L3179:
.L3176:
.L3180:
.L3181:

!  616	                  fdzOuter = SignedFloatToFixed(dzdy + dxOuter * dzdx);

	ld	[%fp-172],%f6
	ld	[%fp-260],%f5
	ld	[%fp-168],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-432]
	ld	[%fp-432],%l0
	st	%l0,[%fp-304]

	! block 155
.L3182:

!  617	#else
!  618	                  /* interpolate depth values exactly */
!  619	                  fz = (GLint) (z0 + dzdx*FixedToFloat(adjx) + dzdy*FixedToFloat(adjy));
!  620	                  fdzOuter = (GLint) (dzdy + dxOuter * dzdx);
!  621	#endif
!  622	                  zRow = Z_ADDRESS( ctx, FixedToInt(fxLeftEdge), iy );

	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+12],%l2
	ld	[%l0+4],%l0
	ld	[%fp-284],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-236],%l0
	sra	%l0,11,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-288]

	! block 156
.L3183:

!  623	                  dZRowOuter = (ctx->Buffer->Width + idxOuter) * sizeof(GLdepth);

	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	ld	[%fp-256],%l1
	add	%l0,%l1,%l0
	sll	%l0,1,%l0
	st	%l0,[%fp-292]

	! block 157
.L3184:
.L3185:

!  624	               }
!  625	#endif
!  626	#if INTERP_RGB
!  627	               fr = (GLfixed)(IntToFixed(VB->Color[vLower][0]) + drdx * adjx + drdy * adjy)
!  628	                    + FIXED_HALF;

	ld	[%fp-24],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp-380],%l0
	sll	%l0,2,%l1
	ldub	[%l2+%l1],%l0
	sll	%l0,11,%l0
	st	%l0,[%fp-432]
	ld	[%fp-432],%f4
	fitos	%f4,%f6
	ld	[%fp-180],%f5
	ld	[%fp-272],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f6
	ld	[%fp-184],%f5
	ld	[%fp-276],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-432]
	ld	[%fp-432],%l0
	add	%l0,1024,%l0
	st	%l0,[%fp-312]

	! block 158
.L3186:

!  629	               fdrOuter = SignedFloatToFixed(drdy + dxOuter * drdx);

	ld	[%fp-184],%f6
	ld	[%fp-260],%f5
	ld	[%fp-180],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-432]
	ld	[%fp-432],%l0
	st	%l0,[%fp-316]

	! block 159
.L3187:

!  631	               fg = (GLfixed)(IntToFixed(VB->Color[vLower][1]) + dgdx * adjx + dgdy * adjy)
!  632	                    + FIXED_HALF;

	ld	[%fp-24],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp-380],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+1],%l0
	sll	%l0,11,%l0
	st	%l0,[%fp-432]
	ld	[%fp-432],%f4
	fitos	%f4,%f6
	ld	[%fp-192],%f5
	ld	[%fp-272],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f6
	ld	[%fp-196],%f5
	ld	[%fp-276],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-432]
	ld	[%fp-432],%l0
	add	%l0,1024,%l0
	st	%l0,[%fp-324]

	! block 160
.L3188:

!  633	               fdgOuter = SignedFloatToFixed(dgdy + dxOuter * dgdx);

	ld	[%fp-196],%f6
	ld	[%fp-260],%f5
	ld	[%fp-192],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-432]
	ld	[%fp-432],%l0
	st	%l0,[%fp-328]

	! block 161
.L3189:

!  635	               fb = (GLfixed)(IntToFixed(VB->Color[vLower][2]) + dbdx * adjx + dbdy * adjy)
!  636	                    + FIXED_HALF;

	ld	[%fp-24],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp-380],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+2],%l0
	sll	%l0,11,%l0
	st	%l0,[%fp-432]
	ld	[%fp-432],%f4
	fitos	%f4,%f6
	ld	[%fp-204],%f5
	ld	[%fp-272],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f6
	ld	[%fp-208],%f5
	ld	[%fp-276],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-432]
	ld	[%fp-432],%l0
	add	%l0,1024,%l0
	st	%l0,[%fp-336]

	! block 162
.L3190:

!  637	               fdbOuter = SignedFloatToFixed(dbdy + dxOuter * dbdx);

	ld	[%fp-208],%f6
	ld	[%fp-260],%f5
	ld	[%fp-204],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-432]
	ld	[%fp-432],%l0
	st	%l0,[%fp-340]

	! block 163
.L3191:

!  638	#endif
!  639	#if INTERP_ALPHA
!  640	               fa = (GLfixed)(IntToFixed(VB->Color[vLower][3]) + dadx * adjx + dady * adjy)
!  641	                    + FIXED_HALF;

	ld	[%fp-24],%l0
	sethi	%hi(0x9d80),%l1
	or	%l1,%lo(0x9d80),%l1
	ld	[%l0+%l1],%l2
	ld	[%fp-380],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+3],%l0
	sll	%l0,11,%l0
	st	%l0,[%fp-432]
	ld	[%fp-432],%f4
	fitos	%f4,%f6
	ld	[%fp-216],%f5
	ld	[%fp-272],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f6
	ld	[%fp-220],%f5
	ld	[%fp-276],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-432]
	ld	[%fp-432],%l0
	add	%l0,1024,%l0
	st	%l0,[%fp-348]

	! block 164
.L3192:

!  642	               fdaOuter = SignedFloatToFixed(dady + dxOuter * dadx);

	ld	[%fp-220],%f6
	ld	[%fp-260],%f5
	ld	[%fp-216],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-432]
	ld	[%fp-432],%l0
	st	%l0,[%fp-352]

	! block 165
.L3193:
.L3194:
.L3146:
.L3195:
.L3196:
.L3198:

!  643	#endif
!  644	#if INTERP_INDEX
!  645	               fi = (GLfixed)(VB->Index[vLower] * FIXED_SCALE + didx * adjx
!  646	                              + didy * adjy) + FIXED_HALF;
!  647	               fdiOuter = SignedFloatToFixed(didy + dxOuter * didx);
!  648	#endif
!  649	#if INTERP_ST
!  650	               {
!  651	                  GLfloat s0, t0;
!  652	                  s0 = VB->TexCoord[vLower][0] * S_SCALE;
!  653	                  fs = (GLfixed)(s0 * FIXED_SCALE + dsdx * adjx + dsdy * adjy) + FIXED_HALF;
!  654	                  fdsOuter = SignedFloatToFixed(dsdy + dxOuter * dsdx);
!  655	                  t0 = VB->TexCoord[vLower][1] * T_SCALE;
!  656	                  ft = (GLfixed)(t0 * FIXED_SCALE + dtdx * adjx + dtdy * adjy) + FIXED_HALF;
!  657	                  fdtOuter = SignedFloatToFixed(dtdy + dxOuter * dtdx);
!  658	               }
!  659	#endif
!  660	#if INTERP_STW
!  661	               {
!  662	                  GLfloat w0 = 1.0F / VB->Clip[vLower][3];
!  663	                  GLfloat s0, t0, u0, v0;
!  664	                  wLeft = w0 + (dwdx * adjx + dwdy * adjy) * (1.0F/FIXED_SCALE);
!  665			  dwOuter = dwdy + dxOuter * dwdx;
!  666	                  s0 = VB->TexCoord[vLower][0] * w0;
!  667	                  sLeft = s0 + (dsdx * adjx + dsdy * adjy) * (1.0F/FIXED_SCALE);
!  668	                  dsOuter = dsdy + dxOuter * dsdx;
!  669	                  t0 = VB->TexCoord[vLower][1] * w0;
!  670	                  tLeft = t0 + (dtdx * adjx + dtdy * adjy) * (1.0F/FIXED_SCALE);
!  671	                  dtOuter = dtdy + dxOuter * dtdx;
!  672	#if INTERP_UV
!  673	                  u0 = VB->TexCoord[vLower][2] * w0;
!  674	                  uLeft = u0 + (dudx * adjx + dudy * adjy) * (1.0F/FIXED_SCALE);
!  675	                  duOuter = dudy + dxOuter * dudx;
!  676	                  /* Note: don't divide V component by W */
!  677	                  v0 = VB->TexCoord[vLower][3];
!  678	                  vLeft = v0 + (dvdx * adjx + dvdy * adjy) * (1.0F/FIXED_SCALE);
!  679	                  dvOuter = dvdy + dxOuter * dvdx;
!  680	#endif
!  681	               }
!  682	#endif
!  683	
!  684	            } /*if setupLeft*/
!  685	
!  687	            if (setupRight && eRight->lines>0) {

	ld	[%fp-372],%l0
	cmp	%l0,%g0
	be	.L3197
	nop

	! block 166
.L3199:
	ld	[%fp-364],%l0
	ld	[%l0+32],%l0
	cmp	%l0,0
	ble	.L3197
	nop

	! block 167
.L3200:
.L3201:
.L3202:
.L3203:

!  688	               fxRightEdge = eRight->fsx - FIXED_EPSILON;

	ld	[%fp-364],%l0
	ld	[%l0+20],%l0
	sub	%l0,1,%l0
	st	%l0,[%fp-240]

	! block 168
.L3204:

!  689	               fdxRightEdge = eRight->fdxdy;

	ld	[%fp-364],%l0
	ld	[%l0+16],%l0
	st	%l0,[%fp-248]

	! block 169
.L3205:
.L3206:
.L3197:
.L3207:
.L3208:
.L3210:

!  690	            }
!  691	
!  692	            if (lines==0) {

	ld	[%fp-376],%l0
	cmp	%l0,0
	bne	.L3209
	nop

	! block 170
.L3211:
.L3212:
.L3213:
.L3214:

!  693	               continue;

	ba	.L3071
	nop

	! block 171
.L3215:
.L3216:
.L3209:
.L3217:
.L3218:

!  694	            }
!  695	
!  697	            /* Rasterize setup */
!  698	#ifdef PIXEL_ADDRESS
!  699	            dPRowInner = dPRowOuter + sizeof(PIXEL_TYPE);
!  700	#endif
!  701	#if INTERP_Z
!  702	            dZRowInner = dZRowOuter + sizeof(GLdepth);

	ld	[%fp-292],%l0
	add	%l0,2,%l0
	st	%l0,[%fp-296]

	! block 172
.L3219:

!  703	            fdzInner = fdzOuter + fdzdx;

	ld	[%fp-304],%l0
	ld	[%fp-176],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-308]

	! block 173
.L3220:

!  704	#endif
!  705	#if INTERP_RGB
!  706	            fdrInner = fdrOuter + fdrdx;

	ld	[%fp-316],%l0
	ld	[%fp-188],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-320]

	! block 174
.L3221:

!  707	            fdgInner = fdgOuter + fdgdx;

	ld	[%fp-328],%l0
	ld	[%fp-200],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-332]

	! block 175
.L3222:

!  708	            fdbInner = fdbOuter + fdbdx;

	ld	[%fp-340],%l0
	ld	[%fp-212],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-344]

	! block 176
.L3223:

!  709	#endif
!  710	#if INTERP_ALPHA
!  711	            fdaInner = fdaOuter + fdadx;

	ld	[%fp-352],%l0
	ld	[%fp-224],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-356]

	! block 177
.L3224:
.L3228:

!  712	#endif
!  713	#if INTERP_INDEX
!  714	            fdiInner = fdiOuter + fdidx;
!  715	#endif
!  716	#if INTERP_ST
!  717	            fdsInner = fdsOuter + fdsdx;
!  718	            fdtInner = fdtOuter + fdtdx;
!  719	#endif
!  720	#if INTERP_STW
!  721		    dwInner = dwOuter + dwdx;
!  722		    dsInner = dsOuter + dsdx;
!  723		    dtInner = dtOuter + dtdx;
!  724	#if INTERP_UV
!  725		    duInner = duOuter + dudx;
!  726		    dvInner = dvOuter + dvdx;
!  727	#endif
!  728	#endif
!  729	
!  730	            while (lines>0) {

	ld	[%fp-376],%l0
	cmp	%l0,0
	ble	.L3227
	nop

	! block 178
.L3229:
.L3225:
.L3230:
.L3231:
.L3232:

!  731	               /* initialize the span interpolants to the leftmost value */
!  732	               /* ff = fixed-pt fragment */
!  733	#if INTERP_Z
!  734	               GLfixed ffz = fz;

	ld	[%fp-300],%l0
	st	%l0,[%fp-380]

	! block 179
.L3233:

!  735	               /*GLdepth *zp = zRow;*/
!  736	#endif
!  737	#if INTERP_RGB
!  738	               GLfixed ffr = fr,  ffg = fg,  ffb = fb;

	ld	[%fp-312],%l0
	st	%l0,[%fp-384]
	ld	[%fp-324],%l0
	st	%l0,[%fp-388]
	ld	[%fp-336],%l0
	st	%l0,[%fp-392]

	! block 180
.L3234:

!  739	#endif
!  740	#if INTERP_ALPHA
!  741	               GLfixed ffa = fa;

	ld	[%fp-348],%l0
	st	%l0,[%fp-396]

	! block 181
.L3235:

!  742	#endif
!  743	#if INTERP_INDEX
!  744	               GLfixed ffi = fi;
!  745	#endif
!  746	#if INTERP_ST
!  747	               GLfixed ffs = fs,  fft = ft;
!  748	#endif
!  749	#if INTERP_STW
!  750	               GLfloat ss = sLeft,  tt = tLeft,  ww = wLeft;
!  751	#endif
!  752	#if INTERP_UV
!  753	               GLfloat uu = uLeft,  vv = vLeft;
!  754	#endif
!  755	               GLint left = FixedToInt(fxLeftEdge);

	ld	[%fp-236],%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-400]

	! block 182
.L3236:

!  756	               GLint right = FixedToInt(fxRightEdge);

	ld	[%fp-240],%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-404]

	! block 183
.L3237:
.L3238:

!  758	#if INTERP_RGB
!  759	               {
!  760	                  /* need this to accomodate round-off errors */
!  761	                  GLfixed ffrend = ffr+(right-left-1)*fdrdx;

	ld	[%fp-384],%l2
	ld	[%fp-404],%l0
	ld	[%fp-400],%l1
	sub	%l0,%l1,%l0
	sub	%l0,1,%l0
	ld	[%fp-188],%l1
	smul	%l0,%l1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-408]

	! block 184
.L3239:

!  762	                  GLfixed ffgend = ffg+(right-left-1)*fdgdx;

	ld	[%fp-388],%l2
	ld	[%fp-404],%l0
	ld	[%fp-400],%l1
	sub	%l0,%l1,%l0
	sub	%l0,1,%l0
	ld	[%fp-200],%l1
	smul	%l0,%l1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-412]

	! block 185
.L3240:

!  763	                  GLfixed ffbend = ffb+(right-left-1)*fdbdx;

	ld	[%fp-392],%l2
	ld	[%fp-404],%l0
	ld	[%fp-400],%l1
	sub	%l0,%l1,%l0
	sub	%l0,1,%l0
	ld	[%fp-212],%l1
	smul	%l0,%l1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-416]

	! block 186
.L3241:
.L3243:

!  764	                  if (ffrend<0) ffr -= ffrend;

	ld	[%fp-408],%l0
	cmp	%l0,0
	bge	.L3242
	nop

	! block 187
.L3244:
.L3245:
	ld	[%fp-384],%l0
	ld	[%fp-408],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-384]

	! block 188
.L3246:
.L3242:
.L3247:
.L3248:
.L3250:

!  765	                  if (ffgend<0) ffg -= ffgend;

	ld	[%fp-412],%l0
	cmp	%l0,0
	bge	.L3249
	nop

	! block 189
.L3251:
.L3252:
	ld	[%fp-388],%l0
	ld	[%fp-412],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-388]

	! block 190
.L3253:
.L3249:
.L3254:
.L3255:
.L3257:

!  766	                  if (ffbend<0) ffb -= ffbend;

	ld	[%fp-416],%l0
	cmp	%l0,0
	bge	.L3256
	nop

	! block 191
.L3258:
.L3259:
	ld	[%fp-392],%l0
	ld	[%fp-416],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-392]

	! block 192
.L3260:
.L3256:
.L3261:
.L3262:
.L3264:

!  767	                  if (ffr<0) ffr = 0;

	ld	[%fp-384],%l0
	cmp	%l0,0
	bge	.L3263
	nop

	! block 193
.L3265:
.L3266:
	st	%g0,[%fp-384]

	! block 194
.L3267:
.L3263:
.L3268:
.L3269:
.L3271:

!  768	                  if (ffg<0) ffg = 0;

	ld	[%fp-388],%l0
	cmp	%l0,0
	bge	.L3270
	nop

	! block 195
.L3272:
.L3273:
	st	%g0,[%fp-388]

	! block 196
.L3274:
.L3270:
.L3275:
.L3276:
.L3278:

!  769	                  if (ffb<0) ffb = 0;

	ld	[%fp-392],%l0
	cmp	%l0,0
	bge	.L3277
	nop

	! block 197
.L3279:
.L3280:
	st	%g0,[%fp-392]

	! block 198
.L3281:
.L3277:
.L3282:
.L3283:
.L3284:
.L3285:

!  770	               }
!  771	#endif
!  772	#if INTERP_ALPHA
!  773	               {
!  774	                  GLfixed ffaend = ffa+(right-left-1)*fdadx;

	ld	[%fp-396],%l2
	ld	[%fp-404],%l0
	ld	[%fp-400],%l1
	sub	%l0,%l1,%l0
	sub	%l0,1,%l0
	ld	[%fp-224],%l1
	smul	%l0,%l1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-408]

	! block 199
.L3286:
.L3288:

!  775	                  if (ffaend<0) ffa -= ffaend;

	ld	[%fp-408],%l0
	cmp	%l0,0
	bge	.L3287
	nop

	! block 200
.L3289:
.L3290:
	ld	[%fp-396],%l0
	ld	[%fp-408],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-396]

	! block 201
.L3291:
.L3287:
.L3292:
.L3293:
.L3295:

!  776	                  if (ffa<0) ffa = 0;

	ld	[%fp-396],%l0
	cmp	%l0,0
	bge	.L3294
	nop

	! block 202
.L3296:
.L3297:
	st	%g0,[%fp-396]

	! block 203
.L3298:
.L3294:
.L3299:
.L3300:
.L3301:
.L3302:

!  777	               }
!  778	#endif
!  779	#if INTERP_INDEX
!  780	               if (ffi<0) ffi = 0;
!  781	#endif
!  782	
!  783	               INNER_LOOP( left, right, iy );

	ld	[%fp-404],%l0
	ld	[%fp-400],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-412]
	ld	[%fp-4],%l2
	ld	[%fp-284],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp-400],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-416]

	! block 204
.L3303:
	ld	[%fp-412],%l0
	cmp	%g0,%l0
	bge	.L3306
	st	%g0,[%fp-408]

	! block 205
.L3307:
.L3304:
.L3308:
.L3309:
	ld	[%fp-380],%l0
	sra	%l0,11,%l0
	sth	%l0,[%fp-418]

	! block 206
.L3310:
	lduh	[%fp-418],%l3
	ld	[%fp-288],%l2
	ld	[%fp-408],%l0
	sll	%l0,1,%l1
	lduh	[%l2+%l1],%l0
	cmp	%l3,%l0
	bge	.L3311
	nop

	! block 207
.L3312:
.L3313:
.L3314:
	ld	[%fp-384],%l0
	sra	%l0,11,%l0
	ld	[%fp-8],%l1
	sll	%l0,%l1,%l2
	ld	[%fp-388],%l0
	sra	%l0,11,%l0
	ld	[%fp-12],%l1
	sll	%l0,%l1,%l1
	or	%l2,%l1,%l2
	ld	[%fp-392],%l0
	sra	%l0,11,%l0
	ld	[%fp-16],%l1
	sll	%l0,%l1,%l1
	or	%l2,%l1,%l2
	ld	[%fp-396],%l0
	sra	%l0,11,%l0
	ld	[%fp-20],%l1
	sll	%l0,%l1,%l1
	or	%l2,%l1,%l1
	ld	[%fp-416],%l0
	st	%l1,[%l0+0]
	lduh	[%fp-418],%l3
	ld	[%fp-288],%l2
	ld	[%fp-408],%l0
	sll	%l0,1,%l1
	sth	%l3,[%l2+%l1]

	! block 208
.L3315:
.L3316:
.L3311:
.L3317:
	ld	[%fp-384],%l0
	ld	[%fp-188],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-384]
	ld	[%fp-388],%l0
	ld	[%fp-200],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-388]
	ld	[%fp-392],%l0
	ld	[%fp-212],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-392]
	ld	[%fp-396],%l0
	ld	[%fp-224],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-396]
	ld	[%fp-380],%l0
	ld	[%fp-176],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-380]

	! block 209
.L3318:
.L3319:
	ld	[%fp-408],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-408]
	ld	[%fp-416],%l0
	st	%l0,[%fp-420]
	ld	[%fp-416],%l0
	add	%l0,4,%l0
	st	%l0,[%fp-416]
	ld	[%fp-408],%l1
	ld	[%fp-412],%l0
	cmp	%l1,%l0
	bl	.L3304
	nop

	! block 210
.L3320:
.L3306:
.L3321:
.L3322:
.L3323:

!  785	               /*
!  786	                * Advance to the next scan line.  Compute the
!  787	                * new edge coordinates, and adjust the
!  788	                * pixel-center x coordinate so that it stays
!  789	                * on or inside the major edge.
!  790	                */
!  791	               iy++;

	ld	[%fp-284],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-284]

	! block 211
.L3324:

!  792	               lines--;

	ld	[%fp-376],%l0
	sub	%l0,1,%l0
	st	%l0,[%fp-376]

	! block 212
.L3325:

!  794	               fxLeftEdge += fdxLeftEdge;

	ld	[%fp-236],%l0
	ld	[%fp-244],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-236]

	! block 213
.L3326:

!  795	               fxRightEdge += fdxRightEdge;

	ld	[%fp-240],%l0
	ld	[%fp-248],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-240]

	! block 214
.L3327:

!  798	               fError += fdError;

	ld	[%fp-264],%l0
	ld	[%fp-268],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-264]

	! block 215
.L3328:
.L3330:

!  799	               if (fError >= 0) {

	ld	[%fp-264],%l0
	cmp	%l0,0
	bl	.L3329
	nop

	! block 216
.L3331:
.L3332:
.L3333:
.L3334:

!  800	                  fError -= FIXED_ONE;

	ld	[%fp-264],%l0
	sub	%l0,2048,%l0
	st	%l0,[%fp-264]

	! block 217
.L3335:

!  801	#ifdef PIXEL_ADDRESS
!  802	                  pRow = (PIXEL_TYPE*) ((GLubyte*)pRow + dPRowOuter);
!  803	#endif
!  804	#if INTERP_Z
!  805	                  zRow = (GLdepth*) ((GLubyte*)zRow + dZRowOuter);

	ld	[%fp-288],%l0
	ld	[%fp-292],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-288]

	! block 218
.L3336:

!  806	                  fz += fdzOuter;

	ld	[%fp-300],%l0
	ld	[%fp-304],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-300]

	! block 219
.L3337:

!  807	#endif
!  808	#if INTERP_RGB
!  809	                  fr += fdrOuter;   fg += fdgOuter;   fb += fdbOuter;

	ld	[%fp-312],%l0
	ld	[%fp-316],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-312]
	ld	[%fp-324],%l0
	ld	[%fp-328],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-324]
	ld	[%fp-336],%l0
	ld	[%fp-340],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-336]

	! block 220
.L3338:

!  810	#endif
!  811	#if INTERP_ALPHA
!  812	                  fa += fdaOuter;

	ld	[%fp-348],%l0
	ld	[%fp-352],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-348]

	! block 221
.L3339:
.L3340:
	ba	.L3341
	nop

	! block 222
.L3329:
.L3342:
.L3343:
.L3344:

!  813	#endif
!  814	#if INTERP_INDEX
!  815	                  fi += fdiOuter;
!  816	#endif
!  817	#if INTERP_ST
!  818	                  fs += fdsOuter;   ft += fdtOuter;
!  819	#endif
!  820	#if INTERP_STW
!  821			  sLeft += dsOuter;
!  822			  tLeft += dtOuter;
!  823			  wLeft += dwOuter;
!  824	#endif
!  825	#if INTERP_UV
!  826			  uLeft += duOuter;
!  827			  vLeft += dvOuter;
!  828	#endif
!  829	               }
!  830	               else {
!  831	#ifdef PIXEL_ADDRESS
!  832	                  pRow = (PIXEL_TYPE*) ((GLubyte*)pRow + dPRowInner);
!  833	#endif
!  834	#if INTERP_Z
!  835	                  zRow = (GLdepth*) ((GLubyte*)zRow + dZRowInner);

	ld	[%fp-288],%l0
	ld	[%fp-296],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-288]

	! block 223
.L3345:

!  836	                  fz += fdzInner;

	ld	[%fp-300],%l0
	ld	[%fp-308],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-300]

	! block 224
.L3346:

!  837	#endif
!  838	#if INTERP_RGB
!  839	                  fr += fdrInner;   fg += fdgInner;   fb += fdbInner;

	ld	[%fp-312],%l0
	ld	[%fp-320],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-312]
	ld	[%fp-324],%l0
	ld	[%fp-332],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-324]
	ld	[%fp-336],%l0
	ld	[%fp-344],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-336]

	! block 225
.L3347:

!  840	#endif
!  841	#if INTERP_ALPHA
!  842	                  fa += fdaInner;

	ld	[%fp-348],%l0
	ld	[%fp-356],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-348]

	! block 226
.L3348:
.L3349:
.L3341:
.L3350:
.L3351:
.L3352:
.L3353:
	ld	[%fp-376],%l0
	cmp	%l0,0
	bg	.L3225
	nop

	! block 227
.L3354:
.L3227:
.L3355:
.L3356:
.L3357:
.L3071:
.L3358:
	ld	[%fp-228],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-228]
	ld	[%fp-228],%l0
	cmp	%l0,1
	ble	.L3070
	nop

	! block 228
.L3359:
.L3072:
.L3360:
.L3361:
.L3362:
.L3363:

	! block 229
.L3364:
.L3365:
.L2839:
	jmp	%i7+8
	restore
	.size	smooth_color_z_triangle,(.-smooth_color_z_triangle)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	flat_color_z_triangle,#function
flat_color_z_triangle:
	save	%sp,-408,%sp

	! block 1
.L3368:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L3369:
.L3371:

! File osmesa.c:
! 1346	#define INTERP_Z 1
! 1347	#define INTERP_RGB 1
! 1348	#define INTERP_ALPHA 1
! 1349	#define INNER_LOOP( LEFT, RIGHT, Y )				\
! 1350	{								\
! 1351	   GLint i, len = RIGHT-LEFT;					\
! 1352	   GLuint *img = PIXELADDR4(LEFT,Y);   				\
! 1353	   for (i=0;i<len;i++,img++) {					\
! 1354	      GLdepth z = FixedToDepth(ffz);				\
! 1355	      if (z < zRow[i]) {					\
! 1356	         *img = PACK_RGBA2( FixedToInt(ffr), FixedToInt(ffg),	\
! 1357			            FixedToInt(ffb), FixedToInt(ffa) );	\
! 1358	         zRow[i] = z;						\
! 1359	      }								\
! 1360	      ffr += fdrdx;  ffg += fdgdx;  ffb += fdbdx;  ffa += fdadx;\
! 1361	      ffz += fdzdx;						\
! 1362	   }								\
! 1363	}
! 1364	#include "tritemp.h"
! 1365	}
! 1366	
! 1370	/*
! 1371	 * Flat-shaded, z-less triangle, RGBA color.
! 1372	 */
! 1373	static void flat_color_z_triangle( GLcontext *ctx, GLuint v0, GLuint v1,
! 1374	                                   GLuint v2, GLuint pv )
! 1375	{
! 1376	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L3372:
.L3373:

! File tritemp.h:

	ld	[%fp+68],%l0
	sethi	%hi(0xe134),%l1
	or	%l1,%lo(0xe134),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-8]

	! block 4
.L3374:
.L3375:
	ld	[%fp-8],%l3
	ld	[%fp+72],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l1
	or	%l1,%lo(0x5e84),%l1
	ld	[%l0+%l1],%f4
	st	%f4,[%fp-148]

	! block 5
.L3376:
	ld	[%fp-8],%l3
	ld	[%fp+76],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l1
	or	%l1,%lo(0x5e84),%l1
	ld	[%l0+%l1],%f4
	st	%f4,[%fp-152]

	! block 6
.L3377:
	ld	[%fp-8],%l3
	ld	[%fp+80],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l1
	or	%l1,%lo(0x5e84),%l1
	ld	[%l0+%l1],%f4
	st	%f4,[%fp-156]

	! block 7
.L3378:
.L3380:
	ld	[%fp-148],%f5
	ld	[%fp-152],%f4
	fcmpes	%f5,%f4
	fbug	.L3379
	nop

	! block 8
.L3381:
.L3382:
.L3383:
.L3384:
.L3386:
	ld	[%fp-152],%f5
	ld	[%fp-156],%f4
	fcmpes	%f5,%f4
	fbug	.L3385
	nop

	! block 9
.L3387:
.L3388:
.L3389:
.L3390:
	ld	[%fp+72],%l0
	st	%l0,[%fp-136]
	ld	[%fp+76],%l0
	st	%l0,[%fp-140]
	ld	[%fp+80],%l0
	st	%l0,[%fp-144]

	! block 10
.L3391:
.L3392:
	ba	.L3393
	nop

	! block 11
.L3385:
.L3394:
.L3395:
.L3397:
	ld	[%fp-156],%f5
	ld	[%fp-148],%f4
	fcmpes	%f5,%f4
	fbug	.L3396
	nop

	! block 12
.L3398:
.L3399:
.L3400:
.L3401:
	ld	[%fp+80],%l0
	st	%l0,[%fp-136]
	ld	[%fp+72],%l0
	st	%l0,[%fp-140]
	ld	[%fp+76],%l0
	st	%l0,[%fp-144]

	! block 13
.L3402:
.L3403:
	ba	.L3404
	nop

	! block 14
.L3396:
.L3405:
.L3406:
.L3407:
	ld	[%fp+72],%l0
	st	%l0,[%fp-136]
	ld	[%fp+80],%l0
	st	%l0,[%fp-140]
	ld	[%fp+76],%l0
	st	%l0,[%fp-144]

	! block 15
.L3408:
.L3409:
.L3404:
.L3410:
.L3411:
.L3393:
.L3412:
.L3413:
.L3414:
	ba	.L3415
	nop

	! block 16
.L3379:
.L3416:
.L3417:
.L3418:
.L3420:
	ld	[%fp-148],%f5
	ld	[%fp-156],%f4
	fcmpes	%f5,%f4
	fbug	.L3419
	nop

	! block 17
.L3421:
.L3422:
.L3423:
.L3424:
	ld	[%fp+76],%l0
	st	%l0,[%fp-136]
	ld	[%fp+72],%l0
	st	%l0,[%fp-140]
	ld	[%fp+80],%l0
	st	%l0,[%fp-144]

	! block 18
.L3425:
.L3426:
	ba	.L3427
	nop

	! block 19
.L3419:
.L3428:
.L3429:
.L3431:
	ld	[%fp-156],%f5
	ld	[%fp-152],%f4
	fcmpes	%f5,%f4
	fbug	.L3430
	nop

	! block 20
.L3432:
.L3433:
.L3434:
.L3435:
	ld	[%fp+80],%l0
	st	%l0,[%fp-136]
	ld	[%fp+76],%l0
	st	%l0,[%fp-140]
	ld	[%fp+72],%l0
	st	%l0,[%fp-144]

	! block 21
.L3436:
.L3437:
	ba	.L3438
	nop

	! block 22
.L3430:
.L3439:
.L3440:
.L3441:
	ld	[%fp+76],%l0
	st	%l0,[%fp-136]
	ld	[%fp+80],%l0
	st	%l0,[%fp-140]
	ld	[%fp+72],%l0
	st	%l0,[%fp-144]

	! block 23
.L3442:
.L3443:
.L3438:
.L3444:
.L3445:
.L3427:
.L3446:
.L3447:
.L3448:
.L3415:
.L3449:
.L3450:
.L3451:
	ld	[%fp-136],%l0
	st	%l0,[%fp-48]
	ld	[%fp-144],%l0
	st	%l0,[%fp-44]

	! block 24
.L3452:
	ld	[%fp-140],%l0
	st	%l0,[%fp-88]
	ld	[%fp-144],%l0
	st	%l0,[%fp-84]

	! block 25
.L3453:
	ld	[%fp-136],%l0
	st	%l0,[%fp-128]
	ld	[%fp-140],%l0
	st	%l0,[%fp-124]

	! block 26
.L3454:
	ld	[%fp-8],%l3
	ld	[%fp-144],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l5
	or	%l5,%lo(0x5e80),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-136],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-40]

	! block 27
.L3455:
	ld	[%fp-8],%l3
	ld	[%fp-144],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l5
	or	%l5,%lo(0x5e84),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-136],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-36]

	! block 28
.L3456:
	ld	[%fp-8],%l3
	ld	[%fp-144],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l5
	or	%l5,%lo(0x5e80),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-140],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-80]

	! block 29
.L3457:
	ld	[%fp-8],%l3
	ld	[%fp-144],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l5
	or	%l5,%lo(0x5e84),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-140],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-76]

	! block 30
.L3458:
	ld	[%fp-8],%l3
	ld	[%fp-140],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l5
	or	%l5,%lo(0x5e80),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-136],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-120]

	! block 31
.L3459:
	ld	[%fp-8],%l3
	ld	[%fp-140],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l5
	or	%l5,%lo(0x5e84),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-136],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-116]

	! block 32
.L3460:
.L3461:
	ld	[%fp-40],%f5
	ld	[%fp-116],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-120],%f5
	ld	[%fp-36],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	st	%f4,[%fp-148]

	! block 33
.L3462:
.L3464:
	ld	[%fp-148],%f5
	sethi	%hi(.L_cseg4),%l0
	ld	[%l0+%lo(.L_cseg4)],%f4
	fnegs	%f4,%f4
	fcmpes	%f5,%f4
	fbule	.L3463
	nop

	! block 34
.L3465:
	ld	[%fp-148],%f5
	sethi	%hi(.L_cseg4),%l0
	ld	[%l0+%lo(.L_cseg4)],%f4
	fcmpes	%f5,%f4
	fbuge	.L3463
	nop

	! block 35
.L3466:
.L3467:
.L3468:
.L3469:
	ba	.L3367
	nop

	! block 36
.L3470:
.L3471:
.L3463:
.L3472:
.L3473:
	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f5
	ld	[%fp-148],%f4
	fdivs	%f5,%f4,%f4
	st	%f4,[%fp-132]

	! block 37
.L3474:
.L3475:
.L3476:
	ld	[%fp-8],%l3
	ld	[%fp-136],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l1
	or	%l1,%lo(0x5e80),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg5),%l0
	ld	[%l0+%lo(.L_cseg5)],%f4
	fadds	%f5,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-304]
	ld	[%fp-304],%l0
	st	%l0,[%fp-148]

	! block 38
.L3477:
	ld	[%fp-8],%l3
	ld	[%fp-136],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l1
	or	%l1,%lo(0x5e84),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fadds	%f5,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-304]
	ld	[%fp-304],%l0
	st	%l0,[%fp-152]

	! block 39
.L3478:
	ld	[%fp-8],%l3
	ld	[%fp-140],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e80),%l1
	or	%l1,%lo(0x5e80),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg5),%l0
	ld	[%l0+%lo(.L_cseg5)],%f4
	fadds	%f5,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-304]
	ld	[%fp-304],%l0
	st	%l0,[%fp-156]

	! block 40
.L3479:
	ld	[%fp-8],%l3
	ld	[%fp-140],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l1
	or	%l1,%lo(0x5e84),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fadds	%f5,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-304]
	ld	[%fp-304],%l0
	st	%l0,[%fp-160]

	! block 41
.L3480:
	ld	[%fp-8],%l3
	ld	[%fp-144],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e84),%l1
	or	%l1,%lo(0x5e84),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fadds	%f5,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-304]
	ld	[%fp-304],%l0
	st	%l0,[%fp-164]

	! block 42
.L3481:
	ld	[%fp-152],%l0
	add	%l0,2047,%l0
	and	%l0,-2048,%l0
	st	%l0,[%fp-24]

	! block 43
.L3482:
	ld	[%fp-164],%l2
	ld	[%fp-24],%l0
	neg	%l0,%l1
	add	%l2,%l1,%l0
	add	%l0,2047,%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-16]

	! block 44
.L3483:
.L3485:
	ld	[%fp-16],%l0
	cmp	%l0,0
	ble	.L3484
	nop

	! block 45
.L3486:
.L3487:
.L3488:
.L3489:
	ld	[%fp-40],%f5
	ld	[%fp-36],%f4
	fdivs	%f5,%f4,%f4
	st	%f4,[%fp-168]

	! block 46
.L3490:
	ld	[%fp-168],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-304]
	ld	[%fp-304],%l0
	st	%l0,[%fp-32]

	! block 47
.L3491:
	ld	[%fp-24],%l0
	ld	[%fp-152],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-304]
	ld	[%fp-304],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-20]

	! block 48
.L3492:
	ld	[%fp-148],%l0
	st	%l0,[%fp-12]

	! block 49
.L3493:
	ld	[%fp-12],%l0
	ld	[%fp-20],%f5
	ld	[%fp-168],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-304]
	ld	[%fp-304],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-28]

	! block 50
.L3494:
.L3495:
	ba	.L3496
	nop

	! block 51
.L3484:
.L3497:
.L3498:
.L3499:
	ba	.L3367
	nop

	! block 52
.L3500:
.L3501:
.L3496:
.L3502:
.L3503:
	ld	[%fp-160],%l0
	add	%l0,2047,%l0
	and	%l0,-2048,%l0
	st	%l0,[%fp-64]

	! block 53
.L3504:
	ld	[%fp-164],%l2
	ld	[%fp-64],%l0
	neg	%l0,%l1
	add	%l2,%l1,%l0
	add	%l0,2047,%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-56]

	! block 54
.L3505:
.L3507:
	ld	[%fp-56],%l0
	cmp	%l0,0
	ble	.L3506
	nop

	! block 55
.L3508:
.L3509:
.L3510:
.L3511:
	ld	[%fp-80],%f5
	ld	[%fp-76],%f4
	fdivs	%f5,%f4,%f4
	st	%f4,[%fp-168]

	! block 56
.L3512:
	ld	[%fp-168],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-304]
	ld	[%fp-304],%l0
	st	%l0,[%fp-72]

	! block 57
.L3513:
	ld	[%fp-64],%l0
	ld	[%fp-160],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-304]
	ld	[%fp-304],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-60]

	! block 58
.L3514:
	ld	[%fp-156],%l0
	st	%l0,[%fp-52]

	! block 59
.L3515:
	ld	[%fp-52],%l0
	ld	[%fp-60],%f5
	ld	[%fp-168],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-304]
	ld	[%fp-304],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-68]

	! block 60
.L3516:
.L3517:
.L3506:
.L3518:
.L3519:
	ld	[%fp-152],%l0
	add	%l0,2047,%l0
	and	%l0,-2048,%l0
	st	%l0,[%fp-104]

	! block 61
.L3520:
	ld	[%fp-160],%l2
	ld	[%fp-104],%l0
	neg	%l0,%l1
	add	%l2,%l1,%l0
	add	%l0,2047,%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-96]

	! block 62
.L3521:
.L3523:
	ld	[%fp-96],%l0
	cmp	%l0,0
	ble	.L3522
	nop

	! block 63
.L3524:
.L3525:
.L3526:
.L3527:
	ld	[%fp-120],%f5
	ld	[%fp-116],%f4
	fdivs	%f5,%f4,%f4
	st	%f4,[%fp-168]

	! block 64
.L3528:
	ld	[%fp-168],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-304]
	ld	[%fp-304],%l0
	st	%l0,[%fp-112]

	! block 65
.L3529:
	ld	[%fp-104],%l0
	ld	[%fp-152],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-304]
	ld	[%fp-304],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-100]

	! block 66
.L3530:
	ld	[%fp-148],%l0
	st	%l0,[%fp-92]

	! block 67
.L3531:
	ld	[%fp-92],%l0
	ld	[%fp-100],%f5
	ld	[%fp-168],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-304]
	ld	[%fp-304],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-108]

	! block 68
.L3532:
.L3533:
.L3522:
.L3534:
.L3535:
.L3536:
.L3537:
	ld	[%fp-8],%l0
	sethi	%hi(0x9d80),%l3
	or	%l3,%lo(0x9d80),%l3
	ld	[%l0+%l3],%l2
	ld	[%fp+84],%l0
	sll	%l0,2,%l1
	ldub	[%l2+%l1],%l0
	stb	%l0,[%fp-161]
	ld	[%fp-8],%l0
	ld	[%l0+%l3],%l2
	ld	[%fp+84],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+1],%l0
	stb	%l0,[%fp-162]
	ld	[%fp-8],%l0
	ld	[%l0+%l3],%l2
	ld	[%fp+84],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+2],%l0
	stb	%l0,[%fp-163]
	ld	[%fp-8],%l0
	ld	[%l0+%l3],%l2
	ld	[%fp+84],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ldub	[%l0+3],%l0
	stb	%l0,[%fp-164]
	ldub	[%fp-161],%l2
	ld	[%fp-4],%l0
	ld	[%l0+44],%l1
	sll	%l2,%l1,%l3
	ldub	[%fp-162],%l2
	ld	[%l0+48],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l3
	ldub	[%fp-163],%l2
	ld	[%l0+52],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l3
	ldub	[%fp-164],%l2
	ld	[%l0+56],%l1
	sll	%l2,%l1,%l1
	or	%l3,%l1,%l0
	st	%l0,[%fp-168]

	! block 69
.L3538:
	ld	[%fp-132],%f5
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	fcmpes	%f5,%f4
	mov	0,%l0
	fbl,a	1f
	mov	1,%l0
1:
	st	%l0,[%fp-148]

	! block 70
.L3539:
.L3540:
	ld	[%fp-8],%l3
	ld	[%fp-144],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e88),%l5
	or	%l5,%lo(0x5e88),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-136],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-172]

	! block 71
.L3541:
	ld	[%fp-8],%l3
	ld	[%fp-140],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e88),%l5
	or	%l5,%lo(0x5e88),%l5
	ld	[%l0+%l5],%f5
	ld	[%fp-136],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	fsubs	%f5,%f4,%f4
	st	%f4,[%fp-176]

	! block 72
.L3542:
	ld	[%fp-132],%f7
	ld	[%fp-172],%f5
	ld	[%fp-116],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-36],%f5
	ld	[%fp-176],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	fmuls	%f7,%f4,%f4
	st	%f4,[%fp-152]

	! block 73
.L3543:
.L3545:
	ld	[%fp-152],%f5
	sethi	%hi(.L_cseg8),%l0
	ld	[%l0+%lo(.L_cseg8)],%f4
	fcmpes	%f5,%f4
	fbg	.L3546
	nop

	! block 74
.L3547:
	ld	[%fp-152],%f5
	sethi	%hi(.L_cseg8),%l0
	ld	[%l0+%lo(.L_cseg8)],%f4
	fnegs	%f4,%f4
	fcmpes	%f5,%f4
	fbuge	.L3544
	nop

	! block 75
.L3548:
.L3546:
.L3549:
.L3550:
.L3551:
	sethi	%hi(.L_cseg0),%l0
	ldd	[%l0+%lo(.L_cseg0)],%f4
	fdtos	%f4,%f4
	st	%f4,[%fp-152]

	! block 76
.L3552:
	sethi	%hi(.L_cseg0),%l0
	ldd	[%l0+%lo(.L_cseg0)],%f4
	fdtos	%f4,%f4
	st	%f4,[%fp-156]

	! block 77
.L3553:
.L3554:
	ba	.L3555
	nop

	! block 78
.L3544:
.L3556:
.L3557:
.L3558:
	ld	[%fp-132],%f7
	ld	[%fp-40],%f5
	ld	[%fp-176],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-172],%f5
	ld	[%fp-120],%f4
	fmuls	%f5,%f4,%f4
	fsubs	%f6,%f4,%f4
	fmuls	%f7,%f4,%f4
	st	%f4,[%fp-156]

	! block 79
.L3559:
.L3560:
.L3555:
.L3561:
.L3562:
	ld	[%fp-152],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-304]
	ld	[%fp-304],%l0
	st	%l0,[%fp-160]

	! block 80
.L3563:
.L3564:
.L3565:
.L3566:
	st	%g0,[%fp-172]

	! block 81
.L3570:
.L3567:
.L3571:
.L3572:
.L3573:
.L3575:
	ld	[%fp-172],%l0
	cmp	%l0,0
	bne	.L3574
	nop

	! block 82
.L3576:
.L3577:
.L3578:
.L3579:
.L3581:
	ld	[%fp-148],%l0
	cmp	%l0,%g0
	be	.L3580
	nop

	! block 83
.L3582:
.L3583:
.L3584:
.L3585:
	add	%fp,-48,%l0
	st	%l0,[%fp-256]

	! block 84
.L3586:
	add	%fp,-128,%l0
	st	%l0,[%fp-260]

	! block 85
.L3587:
	ld	[%fp-260],%l0
	ld	[%l0+32],%l0
	st	%l0,[%fp-272]

	! block 86
.L3588:
	mov	1,%l0
	st	%l0,[%fp-264]

	! block 87
.L3589:
	mov	1,%l0
	st	%l0,[%fp-268]

	! block 88
.L3590:
.L3591:
	ba	.L3592
	nop

	! block 89
.L3580:
.L3593:
.L3594:
.L3595:
	add	%fp,-128,%l0
	st	%l0,[%fp-256]

	! block 90
.L3596:
	add	%fp,-48,%l0
	st	%l0,[%fp-260]

	! block 91
.L3597:
	ld	[%fp-256],%l0
	ld	[%l0+32],%l0
	st	%l0,[%fp-272]

	! block 92
.L3598:
	mov	1,%l0
	st	%l0,[%fp-264]

	! block 93
.L3599:
	mov	1,%l0
	st	%l0,[%fp-268]

	! block 94
.L3600:
.L3601:
.L3592:
.L3602:
.L3603:
.L3604:
	ba	.L3605
	nop

	! block 95
.L3574:
.L3606:
.L3607:
.L3608:
.L3610:
	ld	[%fp-148],%l0
	cmp	%l0,%g0
	be	.L3609
	nop

	! block 96
.L3611:
.L3612:
.L3613:
.L3614:
	add	%fp,-48,%l0
	st	%l0,[%fp-256]

	! block 97
.L3615:
	add	%fp,-88,%l0
	st	%l0,[%fp-260]

	! block 98
.L3616:
	ld	[%fp-260],%l0
	ld	[%l0+32],%l0
	st	%l0,[%fp-272]

	! block 99
.L3617:
	st	%g0,[%fp-264]

	! block 100
.L3618:
	mov	1,%l0
	st	%l0,[%fp-268]

	! block 101
.L3619:
.L3620:
	ba	.L3621
	nop

	! block 102
.L3609:
.L3622:
.L3623:
.L3624:
	add	%fp,-88,%l0
	st	%l0,[%fp-256]

	! block 103
.L3625:
	add	%fp,-48,%l0
	st	%l0,[%fp-260]

	! block 104
.L3626:
	ld	[%fp-256],%l0
	ld	[%l0+32],%l0
	st	%l0,[%fp-272]

	! block 105
.L3627:
	mov	1,%l0
	st	%l0,[%fp-264]

	! block 106
.L3628:
	st	%g0,[%fp-268]

	! block 107
.L3629:
.L3630:
.L3621:
.L3631:
.L3632:
.L3634:
	ld	[%fp-272],%l0
	cmp	%l0,0
	bne	.L3633
	nop

	! block 108
.L3635:
.L3636:
	ba	.L3367
	nop

	! block 109
.L3637:
.L3633:
.L3638:
.L3639:
.L3640:
.L3605:
.L3641:
.L3642:
.L3644:
	ld	[%fp-264],%l0
	cmp	%l0,%g0
	be	.L3643
	nop

	! block 110
.L3645:
	ld	[%fp-256],%l0
	ld	[%l0+32],%l0
	cmp	%l0,0
	ble	.L3643
	nop

	! block 111
.L3646:
.L3647:
.L3648:
.L3649:
	ld	[%fp-256],%l0
	ld	[%l0+20],%l0
	st	%l0,[%fp-280]

	! block 112
.L3650:
	ld	[%fp-280],%l0
	add	%l0,2047,%l0
	and	%l0,-2048,%l0
	st	%l0,[%fp-176]

	! block 113
.L3651:
	ld	[%fp-176],%l0
	ld	[%fp-280],%l1
	sub	%l0,%l1,%l0
	sub	%l0,2048,%l0
	st	%l0,[%fp-208]

	! block 114
.L3652:
	ld	[%fp-280],%l0
	sub	%l0,1,%l0
	st	%l0,[%fp-180]

	! block 115
.L3653:
	ld	[%fp-256],%l0
	ld	[%l0+16],%l0
	st	%l0,[%fp-188]

	! block 116
.L3654:
	ld	[%fp-188],%l0
	sub	%l0,1,%l0
	and	%l0,-2048,%l0
	st	%l0,[%fp-196]

	! block 117
.L3655:
	ld	[%fp-196],%l0
	ld	[%fp-188],%l1
	sub	%l0,%l1,%l0
	add	%l0,2048,%l0
	st	%l0,[%fp-212]

	! block 118
.L3656:
	ld	[%fp-196],%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-200]

	! block 119
.L3657:
	ld	[%fp-200],%l0
	st	%l0,[%fp-304]
	ld	[%fp-304],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-204]

	! block 120
.L3658:
	ld	[%fp-256],%l0
	ld	[%l0+24],%l0
	st	%l0,[%fp-224]

	! block 121
.L3659:
	ld	[%fp-224],%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-228]

	! block 122
.L3660:
	ld	[%fp-176],%l2
	ld	[%fp-256],%l0
	ld	[%l0+36],%l1
	sub	%l2,%l1,%l0
	st	%l0,[%fp-304]
	ld	[%fp-304],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-216]

	! block 123
.L3661:
	ld	[%fp-256],%l0
	ld	[%l0+28],%f4
	st	%f4,[%fp-220]

	! block 124
.L3662:
	ld	[%fp-256],%l0
	ld	[%l0+0],%l0
	st	%l0,[%fp-276]

	! block 125
.L3663:
.L3664:
	ld	[%fp-8],%l3
	ld	[%fp-276],%l0
	sll	%l0,2,%l2
	sll	%l0,3,%l1
	add	%l2,%l1,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0x5e88),%l1
	or	%l1,%lo(0x5e88),%l1
	ld	[%l0+%l1],%f5
	ld	[%fp+68],%l0
	sethi	%hi(0xe110),%l1
	or	%l1,%lo(0xe110),%l1
	ld	[%l0+%l1],%f4
	fadds	%f5,%f4,%f4
	st	%f4,[%fp-284]

	! block 126
.L3665:
	ld	[%fp-284],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f6
	ld	[%fp-152],%f5
	ld	[%fp-216],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f6
	ld	[%fp-156],%f5
	ld	[%fp-220],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f5
	sethi	%hi(.L_cseg9),%l0
	ld	[%l0+%lo(.L_cseg9)],%f4
	fadds	%f5,%f4,%f4
	st	%f4,[%fp-288]

	! block 127
.L3666:
.L3668:
	ld	[%fp-288],%f8
	sethi	%hi(0x7fffffff),%l1
	or	%l1,%lo(0x7fffffff),%l1
	sethi	%hi(0x43300000),%l0
	st	%l0,[%fp-312]
	st	%l1,[%fp-308]
	ldd	[%fp-312],%f6
	mov	0,%l0
	st	%l0,[%fp-308]
	ldd	[%fp-312],%f4
	fsubd	%f6,%f4,%f4
	fabss	%f4,%f4
	fdtos	%f4,%f4
	fcmpes	%f8,%f4
	fbuge	.L3667
	nop

	! block 128
.L3669:
.L3670:
.L3671:
	ld	[%fp-288],%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-312]
	ld	[%fp-312],%l0
	st	%l0,[%fp-244]

	! block 129
.L3672:
	ba	.L3673
	nop

	! block 130
.L3667:
.L3674:
.L3675:
	sethi	%hi(0x7fffffff),%l0
	or	%l0,%lo(0x7fffffff),%l0
	st	%l0,[%fp-244]

	! block 131
.L3676:
.L3673:
.L3677:
.L3678:
	ld	[%fp-156],%f6
	ld	[%fp-204],%f5
	ld	[%fp-152],%f4
	fmuls	%f5,%f4,%f4
	fadds	%f6,%f4,%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-312]
	ld	[%fp-312],%l0
	st	%l0,[%fp-248]

	! block 132
.L3679:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+12],%l2
	ld	[%l0+4],%l0
	ld	[%fp-228],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-180],%l0
	sra	%l0,11,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-232]

	! block 133
.L3680:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	ld	[%fp-200],%l1
	add	%l0,%l1,%l0
	sll	%l0,1,%l0
	st	%l0,[%fp-236]

	! block 134
.L3681:
.L3682:
.L3683:
.L3643:
.L3684:
.L3685:
.L3687:
	ld	[%fp-268],%l0
	cmp	%l0,%g0
	be	.L3686
	nop

	! block 135
.L3688:
	ld	[%fp-260],%l0
	ld	[%l0+32],%l0
	cmp	%l0,0
	ble	.L3686
	nop

	! block 136
.L3689:
.L3690:
.L3691:
.L3692:
	ld	[%fp-260],%l0
	ld	[%l0+20],%l0
	sub	%l0,1,%l0
	st	%l0,[%fp-184]

	! block 137
.L3693:
	ld	[%fp-260],%l0
	ld	[%l0+16],%l0
	st	%l0,[%fp-192]

	! block 138
.L3694:
.L3695:
.L3686:
.L3696:
.L3697:
.L3699:
	ld	[%fp-272],%l0
	cmp	%l0,0
	bne	.L3698
	nop

	! block 139
.L3700:
.L3701:
.L3702:
.L3703:
	ba	.L3568
	nop

	! block 140
.L3704:
.L3705:
.L3698:
.L3706:
.L3707:
	ld	[%fp-236],%l0
	add	%l0,2,%l0
	st	%l0,[%fp-240]

	! block 141
.L3708:
	ld	[%fp-248],%l0
	ld	[%fp-160],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-252]

	! block 142
.L3709:
.L3713:
	ld	[%fp-272],%l0
	cmp	%l0,0
	ble	.L3712
	nop

	! block 143
.L3714:
.L3710:
.L3715:
.L3716:
.L3717:
	ld	[%fp-244],%l0
	st	%l0,[%fp-276]

	! block 144
.L3718:
	ld	[%fp-180],%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-280]

	! block 145
.L3719:
	ld	[%fp-184],%l0
	sra	%l0,11,%l0
	st	%l0,[%fp-284]

	! block 146
.L3720:
.L3721:
	ld	[%fp-284],%l0
	ld	[%fp-280],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-292]
	ld	[%fp-4],%l2
	ld	[%fp-228],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+72],%l2
	ld	[%fp-280],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-296]

	! block 147
.L3722:
	ld	[%fp-292],%l0
	cmp	%g0,%l0
	bge	.L3725
	st	%g0,[%fp-288]

	! block 148
.L3726:
.L3723:
.L3727:
.L3728:
	ld	[%fp-276],%l0
	sra	%l0,11,%l0
	sth	%l0,[%fp-298]

	! block 149
.L3729:
	lduh	[%fp-298],%l3
	ld	[%fp-232],%l2
	ld	[%fp-288],%l0
	sll	%l0,1,%l1
	lduh	[%l2+%l1],%l0
	cmp	%l3,%l0
	bge	.L3730
	nop

	! block 150
.L3731:
.L3732:
.L3733:
	ld	[%fp-168],%l1
	ld	[%fp-296],%l0
	st	%l1,[%l0+0]
	lduh	[%fp-298],%l3
	ld	[%fp-232],%l2
	ld	[%fp-288],%l0
	sll	%l0,1,%l1
	sth	%l3,[%l2+%l1]

	! block 151
.L3734:
.L3735:
.L3730:
.L3736:
	ld	[%fp-276],%l0
	ld	[%fp-160],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-276]

	! block 152
.L3737:
.L3738:
	ld	[%fp-288],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-288]
	ld	[%fp-296],%l0
	st	%l0,[%fp-300]
	ld	[%fp-296],%l0
	add	%l0,4,%l0
	st	%l0,[%fp-296]
	ld	[%fp-288],%l1
	ld	[%fp-292],%l0
	cmp	%l1,%l0
	bl	.L3723
	nop

	! block 153
.L3739:
.L3725:
.L3740:
.L3741:
.L3742:
	ld	[%fp-228],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-228]

	! block 154
.L3743:
	ld	[%fp-272],%l0
	sub	%l0,1,%l0
	st	%l0,[%fp-272]

	! block 155
.L3744:
	ld	[%fp-180],%l0
	ld	[%fp-188],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-180]

	! block 156
.L3745:
	ld	[%fp-184],%l0
	ld	[%fp-192],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-184]

	! block 157
.L3746:
	ld	[%fp-208],%l0
	ld	[%fp-212],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-208]

	! block 158
.L3747:
.L3749:
	ld	[%fp-208],%l0
	cmp	%l0,0
	bl	.L3748
	nop

	! block 159
.L3750:
.L3751:
.L3752:
.L3753:
	ld	[%fp-208],%l0
	sub	%l0,2048,%l0
	st	%l0,[%fp-208]

	! block 160
.L3754:
	ld	[%fp-232],%l0
	ld	[%fp-236],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-232]

	! block 161
.L3755:
	ld	[%fp-244],%l0
	ld	[%fp-248],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-244]

	! block 162
.L3756:
.L3757:
	ba	.L3758
	nop

	! block 163
.L3748:
.L3759:
.L3760:
.L3761:
	ld	[%fp-232],%l0
	ld	[%fp-240],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-232]

	! block 164
.L3762:
	ld	[%fp-244],%l0
	ld	[%fp-252],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-244]

	! block 165
.L3763:
.L3764:
.L3758:
.L3765:
.L3766:
.L3767:
.L3768:
	ld	[%fp-272],%l0
	cmp	%l0,0
	bg	.L3710
	nop

	! block 166
.L3769:
.L3712:
.L3770:
.L3771:
.L3772:
.L3568:
.L3773:
	ld	[%fp-172],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-172]
	ld	[%fp-172],%l0
	cmp	%l0,1
	ble	.L3567
	nop

	! block 167
.L3774:
.L3569:
.L3775:
.L3776:
.L3777:
.L3778:

	! block 168
.L3779:
.L3780:
.L3367:
	jmp	%i7+8
	restore
	.size	flat_color_z_triangle,(.-flat_color_z_triangle)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	choose_triangle_function,#function
choose_triangle_function:
	save	%sp,-104,%sp

	! block 1
.L3783:
	st	%i0,[%fp+68]

	! block 2
.L3784:
.L3786:

! File osmesa.c:
! 1377	#define INTERP_Z 1
! 1378	#define SETUP_CODE			\
! 1379	   GLubyte r = VB->Color[pv][0];	\
! 1380	   GLubyte g = VB->Color[pv][1];	\
! 1381	   GLubyte b = VB->Color[pv][2];	\
! 1382	   GLubyte a = VB->Color[pv][3];	\
! 1383	   GLuint pixel = PACK_RGBA(r,g,b,a);
! 1384	
! 1385	#define INNER_LOOP( LEFT, RIGHT, Y )	\
! 1386	{					\
! 1387	   GLint i, len = RIGHT-LEFT;		\
! 1388	   GLuint *img = PIXELADDR4(LEFT,Y);   	\
! 1389	   for (i=0;i<len;i++,img++) {		\
! 1390	      GLdepth z = FixedToDepth(ffz);	\
! 1391	      if (z < zRow[i]) {		\
! 1392	         *img = pixel;			\
! 1393	         zRow[i] = z;			\
! 1394	      }					\
! 1395	      ffz += fdzdx;			\
! 1396	   }					\
! 1397	}
! 1398	#include "tritemp.h"
! 1399	}
! 1400	
! 1403	/*
! 1404	 * Return pointer to an accelerated triangle function if possible.
! 1405	 */
! 1406	static triangle_func choose_triangle_function( GLcontext *ctx )
! 1407	{
! 1408	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-8]

	! block 3
.L3787:
.L3789:

! 1410	   if ((osmesa->format==OSMESA_RGB)||(osmesa->format==OSMESA_BGR)) return NULL;

	ld	[%fp-8],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1907),%l0
	or	%l0,%lo(0x1907),%l0
	cmp	%l1,%l0
	be	.L3790
	nop

	! block 4
.L3791:
	ld	[%fp-8],%l0
	ld	[%l0+12],%l0
	cmp	%l0,4
	bne	.L3788
	nop

	! block 5
.L3792:
.L3790:
.L3793:
	ba	.L3782
	st	%g0,[%fp-4]

	! block 6
.L3794:
.L3788:
.L3795:
.L3796:
.L3798:

! 1411	   
! 1412	   if (ctx->Polygon.SmoothFlag)     return NULL;

	ld	[%fp+68],%l0
	sethi	%hi(0xd6b8),%l1
	or	%l1,%lo(0xd6b8),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L3797
	nop

	! block 7
.L3799:
.L3800:
	ba	.L3782
	st	%g0,[%fp-4]

	! block 8
.L3801:
.L3797:
.L3802:
.L3803:
.L3805:

! 1413	   if (ctx->Polygon.StippleFlag)    return NULL;

	ld	[%fp+68],%l0
	sethi	%hi(0xd6b9),%l1
	or	%l1,%lo(0xd6b9),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L3804
	nop

	! block 9
.L3806:
.L3807:
	ba	.L3782
	st	%g0,[%fp-4]

	! block 10
.L3808:
.L3804:
.L3809:
.L3810:
.L3812:

! 1414	   if (ctx->Texture.Enabled)        return NULL;

	ld	[%fp+68],%l0
	sethi	%hi(0xd774),%l1
	or	%l1,%lo(0xd774),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L3811
	nop

	! block 11
.L3813:
.L3814:
	ba	.L3782
	st	%g0,[%fp-4]

	! block 12
.L3815:
.L3811:
.L3816:
.L3817:
.L3819:

! 1416	   if (ctx->RasterMask==DEPTH_BIT
! 1417	       && ctx->Depth.Func==GL_LESS
! 1418	       && ctx->Depth.Mask==GL_TRUE
! 1419	       && osmesa->format!=OSMESA_COLOR_INDEX) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,4
	bne	.L3818
	nop

	! block 13
.L3820:
	ld	[%fp+68],%l0
	sethi	%hi(0x1f34),%l1
	or	%l1,%lo(0x1f34),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,513
	bne	.L3818
	nop

	! block 14
.L3821:
	ld	[%fp+68],%l0
	sethi	%hi(0x1f3d),%l1
	or	%l1,%lo(0x1f3d),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,1
	bne	.L3818
	nop

	! block 15
.L3822:
	ld	[%fp-8],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1900),%l0
	or	%l0,%lo(0x1900),%l0
	cmp	%l1,%l0
	be	.L3818
	nop

	! block 16
.L3823:
.L3824:
.L3825:
.L3826:
.L3828:

! 1420	      if (ctx->Light.ShadeModel==GL_SMOOTH) {

	ld	[%fp+68],%l0
	sethi	%hi(0xadcc),%l1
	or	%l1,%lo(0xadcc),%l1
	ld	[%l0+%l1],%l1
	sethi	%hi(0x1d01),%l0
	or	%l0,%lo(0x1d01),%l0
	cmp	%l1,%l0
	bne	.L3827
	nop

	! block 17
.L3829:
.L3830:
.L3831:
.L3832:

! 1421	         return smooth_color_z_triangle;

	sethi	%hi(smooth_color_z_triangle),%l0
	or	%l0,%lo(smooth_color_z_triangle),%l0
	ba	.L3782
	st	%l0,[%fp-4]

	! block 18
.L3833:
.L3834:
.L3827:
.L3835:
.L3836:
.L3837:

! 1422	      }
! 1423	      else {
! 1424	         return flat_color_z_triangle;

	sethi	%hi(flat_color_z_triangle),%l0
	or	%l0,%lo(flat_color_z_triangle),%l0
	ba	.L3782
	st	%l0,[%fp-4]

	! block 19
.L3838:
.L3839:
.L3840:
.L3841:
.L3842:
.L3818:
.L3843:
.L3844:

! 1425	      }
! 1426	   }
! 1427	   return NULL;

	ba	.L3782
	st	%g0,[%fp-4]

	! block 20

	! block 21
.L3845:
.L3846:
.L3782:
	ld	[%fp-4],%l0
	mov	%l0,%i0
	jmp	%i7+8
	restore
	.size	choose_triangle_function,(.-choose_triangle_function)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	renderer_string,#function
renderer_string:
	save	%sp,-104,%sp

	! block 1
.L3849:
.L3850:
.L3852:

! File osmesa.c:
! 1428	}
! 1429	
! 1432	static const char *renderer_string(void)
! 1433	{
! 1434	   return "OffScreen";

	sethi	%hi(.L3853),%l0
	or	%l0,%lo(.L3853),%l0
	ba	.L3848
	st	%l0,[%fp-4]

	! block 2

	! block 3
.L3854:
.L3855:
.L3848:
	ld	[%fp-4],%l0
	mov	%l0,%i0
	jmp	%i7+8
	restore
	.size	renderer_string,(.-renderer_string)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	osmesa_setup_DD_pointers,#function
osmesa_setup_DD_pointers:
	save	%sp,-104,%sp

	! block 1
.L3858:
	st	%i0,[%fp+68]

	! block 2
.L3859:
.L3861:

! File osmesa.c:
! 1435	}
! 1436	
! 1438	static void osmesa_setup_DD_pointers( GLcontext *ctx )
! 1439	{
! 1440	   OSMesaContext osmesa = (OSMesaContext) ctx->DriverCtx;

	ld	[%fp+68],%l0
	ld	[%l0+2420],%l0
	st	%l0,[%fp-4]

	! block 3
.L3862:

! 1441	   
! 1442	   ctx->Driver.RendererString = renderer_string;

	sethi	%hi(renderer_string),%l1
	or	%l1,%lo(renderer_string),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2208]

	! block 4
.L3863:

! 1443	   ctx->Driver.UpdateState = osmesa_setup_DD_pointers;

	sethi	%hi(osmesa_setup_DD_pointers),%l1
	or	%l1,%lo(osmesa_setup_DD_pointers),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2212]

	! block 5
.L3864:

! 1445	   ctx->Driver.SetBuffer = set_buffer;

	sethi	%hi(set_buffer),%l1
	or	%l1,%lo(set_buffer),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2236]

	! block 6
.L3865:

! 1446	   ctx->Driver.Color = set_color;

	sethi	%hi(set_color),%l1
	or	%l1,%lo(set_color),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2232]

	! block 7
.L3866:

! 1447	   ctx->Driver.Index = set_index;

	sethi	%hi(set_index),%l1
	or	%l1,%lo(set_index),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2228]

	! block 8
.L3867:

! 1448	   ctx->Driver.ClearIndex = clear_index;

	sethi	%hi(clear_index),%l1
	or	%l1,%lo(clear_index),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2216]

	! block 9
.L3868:

! 1449	   ctx->Driver.ClearColor = clear_color;

	sethi	%hi(clear_color),%l1
	or	%l1,%lo(clear_color),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2220]

	! block 10
.L3869:

! 1450	   ctx->Driver.Clear = clear;

	sethi	%hi(clear),%l1
	or	%l1,%lo(clear),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2224]

	! block 11
.L3870:

! 1452	   ctx->Driver.GetBufferSize = buffer_size;

	sethi	%hi(buffer_size),%l1
	or	%l1,%lo(buffer_size),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2240]

	! block 12
.L3871:

! 1454	   ctx->Driver.PointsFunc = NULL;

	ld	[%fp+68],%l0
	st	%g0,[%l0+2348]

	! block 13
.L3872:

! 1455	   ctx->Driver.LineFunc = choose_line_function( ctx );

	ld	[%fp+68],%l0
	call	choose_line_function
	mov	%l0,%o0
	ld	[%fp+68],%l0
	st	%o0,[%l0+2352]

	! block 14
.L3873:

! 1456	   ctx->Driver.TriangleFunc = choose_triangle_function( ctx );

	ld	[%fp+68],%l0
	call	choose_triangle_function
	mov	%l0,%o0
	ld	[%fp+68],%l0
	st	%o0,[%l0+2356]

	! block 15
.L3874:
.L3876:

! 1458	   /* RGB(A) span/pixel functions */
! 1459	   if ((osmesa->format==OSMESA_RGB) || (osmesa->format==OSMESA_BGR)) {

	ld	[%fp-4],%l0
	ld	[%l0+12],%l1
	sethi	%hi(0x1907),%l0
	or	%l0,%lo(0x1907),%l0
	cmp	%l1,%l0
	be	.L3877
	nop

	! block 16
.L3878:
	ld	[%fp-4],%l0
	ld	[%l0+12],%l0
	cmp	%l0,4
	bne	.L3875
	nop

	! block 17
.L3879:
.L3877:
.L3880:
.L3881:
.L3882:

! 1460	      ctx->Driver.WriteColorSpan = write_color_span3;

	sethi	%hi(write_color_span3),%l1
	or	%l1,%lo(write_color_span3),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2244]

	! block 18
.L3883:

! 1461	      ctx->Driver.WriteColorPixels = write_color_pixels3;

	sethi	%hi(write_color_pixels3),%l1
	or	%l1,%lo(write_color_pixels3),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2252]

	! block 19
.L3884:

! 1462	      ctx->Driver.WriteMonocolorSpan = write_monocolor_span3;

	sethi	%hi(write_monocolor_span3),%l1
	or	%l1,%lo(write_monocolor_span3),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2248]

	! block 20
.L3885:

! 1463	      ctx->Driver.WriteMonocolorPixels = write_monocolor_pixels3;

	sethi	%hi(write_monocolor_pixels3),%l1
	or	%l1,%lo(write_monocolor_pixels3),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2256]

	! block 21
.L3886:

! 1464	      ctx->Driver.ReadColorSpan = read_color_span3;

	sethi	%hi(read_color_span3),%l1
	or	%l1,%lo(read_color_span3),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2280]

	! block 22
.L3887:

! 1465	      ctx->Driver.ReadColorPixels = read_color_pixels3;

	sethi	%hi(read_color_pixels3),%l1
	or	%l1,%lo(read_color_pixels3),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2288]

	! block 23
.L3888:
.L3889:
	ba	.L3890
	nop

	! block 24
.L3875:
.L3891:
.L3892:
.L3893:

! 1466	   }
! 1467	   else {
! 1468	      ctx->Driver.WriteColorSpan = write_color_span;

	sethi	%hi(write_color_span),%l1
	or	%l1,%lo(write_color_span),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2244]

	! block 25
.L3894:

! 1469	      ctx->Driver.WriteColorPixels = write_color_pixels;

	sethi	%hi(write_color_pixels),%l1
	or	%l1,%lo(write_color_pixels),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2252]

	! block 26
.L3895:

! 1470	      ctx->Driver.WriteMonocolorSpan = write_monocolor_span;

	sethi	%hi(write_monocolor_span),%l1
	or	%l1,%lo(write_monocolor_span),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2248]

	! block 27
.L3896:

! 1471	      ctx->Driver.WriteMonocolorPixels = write_monocolor_pixels;

	sethi	%hi(write_monocolor_pixels),%l1
	or	%l1,%lo(write_monocolor_pixels),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2256]

	! block 28
.L3897:

! 1472	      ctx->Driver.ReadColorSpan = read_color_span;

	sethi	%hi(read_color_span),%l1
	or	%l1,%lo(read_color_span),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2280]

	! block 29
.L3898:

! 1473	      ctx->Driver.ReadColorPixels = read_color_pixels;

	sethi	%hi(read_color_pixels),%l1
	or	%l1,%lo(read_color_pixels),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2288]

	! block 30
.L3899:
.L3900:
.L3890:
.L3901:
.L3902:

! 1474	   }
! 1475	
! 1476	   /* CI span/pixel functions */
! 1477	   ctx->Driver.WriteIndexSpan = write_index_span;

	sethi	%hi(write_index_span),%l1
	or	%l1,%lo(write_index_span),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2260]

	! block 31
.L3903:

! 1478	   ctx->Driver.WriteMonoindexSpan = write_monoindex_span;

	sethi	%hi(write_monoindex_span),%l1
	or	%l1,%lo(write_monoindex_span),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2264]

	! block 32
.L3904:

! 1479	   ctx->Driver.WriteIndexPixels = write_index_pixels;

	sethi	%hi(write_index_pixels),%l1
	or	%l1,%lo(write_index_pixels),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2268]

	! block 33
.L3905:

! 1480	   ctx->Driver.WriteMonoindexPixels = write_monoindex_pixels;

	sethi	%hi(write_monoindex_pixels),%l1
	or	%l1,%lo(write_monoindex_pixels),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2272]

	! block 34
.L3906:

! 1481	   ctx->Driver.ReadIndexSpan = read_index_span;

	sethi	%hi(read_index_span),%l1
	or	%l1,%lo(read_index_span),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2276]

	! block 35
.L3907:

! 1482	   ctx->Driver.ReadIndexPixels = read_index_pixels;

	sethi	%hi(read_index_pixels),%l1
	or	%l1,%lo(read_index_pixels),%l1
	ld	[%fp+68],%l0
	st	%l1,[%l0+2284]

	! block 36
.L3908:
.L3909:
.L3857:
	jmp	%i7+8
	restore
	.size	osmesa_setup_DD_pointers,(.-osmesa_setup_DD_pointers)
	.align	8

	.section	".rodata",#alloc
	.align	8
Drodata.rodata:
.L_cseg0:
	.skip	8
	.type	.L_cseg0,#object
	.size	.L_cseg0,8
	.align	8
.L_cseg1:
	.word	0x406fe000,0x0
	.type	.L_cseg1,#object
	.size	.L_cseg1,8

	.section	".data",#alloc,#write
	.align	4
Ddata.data:
	.global	$XAa59JCSsd3LG_K.Current
$XAa59JCSsd3LG_K.Current:
	.skip	4
	.type	$XAa59JCSsd3LG_K.Current,#object
	.size	$XAa59JCSsd3LG_K.Current,4

	.section	".rodata1",#alloc
	.align	4
.L542:
	.ascii	"OSMesaPixelStore(value)\000"
	.type	.L542,#object
	.size	.L542,24
	.align	4
.L558:
	.ascii	"OSMesaPixelStore(pname)\000"
	.type	.L558,#object
	.size	.L558,24
	.align	4
.L600:
	.ascii	"OSMesaGetIntergerv(pname)\000"
	.skip	2
	.type	.L600,#object
	.size	.L600,28

	.section	".rodata",#alloc
	.align	4
.L_cseg2:
	.word	0x45000000
	.type	.L_cseg2,#object
	.size	.L_cseg2,4
	.align	4
.L_cseg3:
	.word	0x3f800000
	.type	.L_cseg3,#object
	.size	.L_cseg3,4
	.align	4
.L_cseg4:
	.word	0x3d4ccccd
	.type	.L_cseg4,#object
	.size	.L_cseg4,4
	.align	4
.L_cseg5:
	.word	0x3f000000
	.type	.L_cseg5,#object
	.size	.L_cseg5,4
	.align	4
.L_cseg6:
	.word	0xbf000000
	.type	.L_cseg6,#object
	.size	.L_cseg6,4
	.align	4
.L_cseg7:
	.skip	4
	.type	.L_cseg7,#object
	.size	.L_cseg7,4
	.align	4
.L_cseg8:
	.word	0x477fff00
	.type	.L_cseg8,#object
	.size	.L_cseg8,4
	.align	4
.L_cseg9:
	.word	0x44800000
	.type	.L_cseg9,#object
	.size	.L_cseg9,4

	.section	".rodata1",#alloc
	.align	4
.L3853:
	.ascii	"OffScreen\000"
	.type	.L3853,#object
	.size	.L3853,10
	.section	".bss",#alloc,#write
Bbss.bss:

	.file	"osmesa.c"
	.ident	"@(#)stdlib.h	1.51	04/06/30 SMI"
	.ident	"@(#)stdlib_iso.h	1.9	04/09/28 SMI"
	.ident	"@(#)feature_tests.h	1.25	07/02/02 SMI"
	.ident	"@(#)ccompile.h	1.2	04/11/08 SMI"
	.ident	"@(#)isa_defs.h	1.28	07/02/01 SMI"
	.ident	"@(#)stdlib_c99.h	1.2	04/03/29 SMI"
	.ident	"@(#)string.h	1.27	07/01/14 SMI"
	.ident	"@(#)string_iso.h	1.5	04/06/18 SMI"
	.ident	"@(#)math.h	2.24	04/10/23 SMI"
	.ident	"@(#)math_iso.h	1.9	04/10/23 SMI"
	.ident	"@(#)math_c99.h	1.9	04/11/01 SMI"
	.ident	"@(#)floatingpoint.h	2.9	04/10/23 SMI"
	.ident	"@(#)stdio_tag.h	1.4	04/09/28 SMI"
	.ident	"@(#)ieeefp.h	2.12	04/10/23 SMI"
	.ident	"acomp: Sun C 5.9 SunOS_sparc 2007/05/03"
!  Begin sdCreateSection : .debug_loc
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
	.section ".debug_loc"
!  End sdCreateSection
!  Begin sdCreateSection : .debug_info
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_abbrev, lab2=, loff=0
!   reloc[1]: knd=2, off=255, siz=4, lab1=.debug_line, lab2=, loff=0
!   reloc[2]: knd=0, off=39339, siz=4, lab1=$XAa59JCSsd3LG_K.Current, lab2=, loff=0
!   reloc[3]: knd=0, off=39368, siz=4, lab1=OSMesaCreateContext, lab2=, loff=0
!   reloc[4]: knd=0, off=39372, siz=4, lab1=.L266, lab2=, loff=0
!   reloc[5]: knd=0, off=39780, siz=4, lab1=OSMesaDestroyContext, lab2=, loff=0
!   reloc[6]: knd=0, off=39784, siz=4, lab1=.L286, lab2=, loff=0
!   reloc[7]: knd=0, off=39840, siz=4, lab1=compute_row_addresses, lab2=, loff=0
!   reloc[8]: knd=0, off=39844, siz=4, lab1=.L457, lab2=, loff=0
!   reloc[9]: knd=0, off=39887, siz=4, lab1=.L292, lab2=, loff=0
!   reloc[10]: knd=0, off=39891, siz=4, lab1=.L455, lab2=, loff=0
!   reloc[11]: knd=0, off=39896, siz=4, lab1=.L296, lab2=, loff=0
!   reloc[12]: knd=0, off=39900, siz=4, lab1=.L374, lab2=, loff=0
!   reloc[13]: knd=0, off=39905, siz=4, lab1=.L297, lab2=, loff=0
!   reloc[14]: knd=0, off=39909, siz=4, lab1=.L373, lab2=, loff=0
!   reloc[15]: knd=0, off=39914, siz=4, lab1=.L298, lab2=, loff=0
!   reloc[16]: knd=0, off=39918, siz=4, lab1=.L372, lab2=, loff=0
!   reloc[17]: knd=0, off=39923, siz=4, lab1=.L302, lab2=, loff=0
!   reloc[18]: knd=0, off=39927, siz=4, lab1=.L320, lab2=, loff=0
!   reloc[19]: knd=0, off=39932, siz=4, lab1=.L303, lab2=, loff=0
!   reloc[20]: knd=0, off=39936, siz=4, lab1=.L319, lab2=, loff=0
!   reloc[21]: knd=0, off=39962, siz=4, lab1=.L322, lab2=, loff=0
!   reloc[22]: knd=0, off=39966, siz=4, lab1=.L371, lab2=, loff=0
!   reloc[23]: knd=0, off=39971, siz=4, lab1=.L323, lab2=, loff=0
!   reloc[24]: knd=0, off=39975, siz=4, lab1=.L370, lab2=, loff=0
!   reloc[25]: knd=0, off=39980, siz=4, lab1=.L324, lab2=, loff=0
!   reloc[26]: knd=0, off=39984, siz=4, lab1=.L369, lab2=, loff=0
!   reloc[27]: knd=0, off=39989, siz=4, lab1=.L330, lab2=, loff=0
!   reloc[28]: knd=0, off=39993, siz=4, lab1=.L348, lab2=, loff=0
!   reloc[29]: knd=0, off=39998, siz=4, lab1=.L331, lab2=, loff=0
!   reloc[30]: knd=0, off=40002, siz=4, lab1=.L347, lab2=, loff=0
!   reloc[31]: knd=0, off=40028, siz=4, lab1=.L350, lab2=, loff=0
!   reloc[32]: knd=0, off=40032, siz=4, lab1=.L368, lab2=, loff=0
!   reloc[33]: knd=0, off=40037, siz=4, lab1=.L351, lab2=, loff=0
!   reloc[34]: knd=0, off=40041, siz=4, lab1=.L367, lab2=, loff=0
!   reloc[35]: knd=0, off=40073, siz=4, lab1=.L376, lab2=, loff=0
!   reloc[36]: knd=0, off=40077, siz=4, lab1=.L454, lab2=, loff=0
!   reloc[37]: knd=0, off=40082, siz=4, lab1=.L377, lab2=, loff=0
!   reloc[38]: knd=0, off=40086, siz=4, lab1=.L453, lab2=, loff=0
!   reloc[39]: knd=0, off=40091, siz=4, lab1=.L378, lab2=, loff=0
!   reloc[40]: knd=0, off=40095, siz=4, lab1=.L452, lab2=, loff=0
!   reloc[41]: knd=0, off=40100, siz=4, lab1=.L382, lab2=, loff=0
!   reloc[42]: knd=0, off=40104, siz=4, lab1=.L400, lab2=, loff=0
!   reloc[43]: knd=0, off=40109, siz=4, lab1=.L383, lab2=, loff=0
!   reloc[44]: knd=0, off=40113, siz=4, lab1=.L399, lab2=, loff=0
!   reloc[45]: knd=0, off=40139, siz=4, lab1=.L402, lab2=, loff=0
!   reloc[46]: knd=0, off=40143, siz=4, lab1=.L451, lab2=, loff=0
!   reloc[47]: knd=0, off=40148, siz=4, lab1=.L403, lab2=, loff=0
!   reloc[48]: knd=0, off=40152, siz=4, lab1=.L450, lab2=, loff=0
!   reloc[49]: knd=0, off=40157, siz=4, lab1=.L404, lab2=, loff=0
!   reloc[50]: knd=0, off=40161, siz=4, lab1=.L449, lab2=, loff=0
!   reloc[51]: knd=0, off=40166, siz=4, lab1=.L410, lab2=, loff=0
!   reloc[52]: knd=0, off=40170, siz=4, lab1=.L428, lab2=, loff=0
!   reloc[53]: knd=0, off=40175, siz=4, lab1=.L411, lab2=, loff=0
!   reloc[54]: knd=0, off=40179, siz=4, lab1=.L427, lab2=, loff=0
!   reloc[55]: knd=0, off=40205, siz=4, lab1=.L430, lab2=, loff=0
!   reloc[56]: knd=0, off=40209, siz=4, lab1=.L448, lab2=, loff=0
!   reloc[57]: knd=0, off=40214, siz=4, lab1=.L431, lab2=, loff=0
!   reloc[58]: knd=0, off=40218, siz=4, lab1=.L447, lab2=, loff=0
!   reloc[59]: knd=0, off=40275, siz=4, lab1=OSMesaMakeCurrent, lab2=, loff=0
!   reloc[60]: knd=0, off=40279, siz=4, lab1=.L513, lab2=, loff=0
!   reloc[61]: knd=0, off=40415, siz=4, lab1=OSMesaGetCurrentContext, lab2=, loff=0
!   reloc[62]: knd=0, off=40419, siz=4, lab1=.L521, lab2=, loff=0
!   reloc[63]: knd=0, off=40454, siz=4, lab1=OSMesaPixelStore, lab2=, loff=0
!   reloc[64]: knd=0, off=40458, siz=4, lab1=.L567, lab2=, loff=0
!   reloc[65]: knd=0, off=40547, siz=4, lab1=OSMesaGetIntegerv, lab2=, loff=0
!   reloc[66]: knd=0, off=40551, siz=4, lab1=.L608, lab2=, loff=0
!   reloc[67]: knd=0, off=40648, siz=4, lab1=OSMesaGetDepthBuffer, lab2=, loff=0
!   reloc[68]: knd=0, off=40652, siz=4, lab1=.L640, lab2=, loff=0
!   reloc[69]: knd=0, off=40781, siz=4, lab1=set_buffer, lab2=, loff=0
!   reloc[70]: knd=0, off=40785, siz=4, lab1=.L662, lab2=, loff=0
!   reloc[71]: knd=0, off=40852, siz=4, lab1=clear_index, lab2=, loff=0
!   reloc[72]: knd=0, off=40856, siz=4, lab1=.L671, lab2=, loff=0
!   reloc[73]: knd=0, off=40939, siz=4, lab1=clear_color, lab2=, loff=0
!   reloc[74]: knd=0, off=40943, siz=4, lab1=.L680, lab2=, loff=0
!   reloc[75]: knd=0, off=41058, siz=4, lab1=clear, lab2=, loff=0
!   reloc[76]: knd=0, off=41062, siz=4, lab1=.L887, lab2=, loff=0
!   reloc[77]: knd=0, off=41191, siz=4, lab1=.L687, lab2=, loff=0
!   reloc[78]: knd=0, off=41195, siz=4, lab1=.L885, lab2=, loff=0
!   reloc[79]: knd=0, off=41200, siz=4, lab1=.L691, lab2=, loff=0
!   reloc[80]: knd=0, off=41204, siz=4, lab1=.L737, lab2=, loff=0
!   reloc[81]: knd=0, off=41209, siz=4, lab1=.L692, lab2=, loff=0
!   reloc[82]: knd=0, off=41213, siz=4, lab1=.L736, lab2=, loff=0
!   reloc[83]: knd=0, off=41218, siz=4, lab1=.L693, lab2=, loff=0
!   reloc[84]: knd=0, off=41222, siz=4, lab1=.L735, lab2=, loff=0
!   reloc[85]: knd=0, off=41227, siz=4, lab1=.L703, lab2=, loff=0
!   reloc[86]: knd=0, off=41231, siz=4, lab1=.L734, lab2=, loff=0
!   reloc[87]: knd=0, off=41236, siz=4, lab1=.L704, lab2=, loff=0
!   reloc[88]: knd=0, off=41240, siz=4, lab1=.L733, lab2=, loff=0
!   reloc[89]: knd=0, off=41273, siz=4, lab1=.L705, lab2=, loff=0
!   reloc[90]: knd=0, off=41277, siz=4, lab1=.L732, lab2=, loff=0
!   reloc[91]: knd=0, off=41282, siz=4, lab1=.L711, lab2=, loff=0
!   reloc[92]: knd=0, off=41286, siz=4, lab1=.L729, lab2=, loff=0
!   reloc[93]: knd=0, off=41291, siz=4, lab1=.L712, lab2=, loff=0
!   reloc[94]: knd=0, off=41295, siz=4, lab1=.L728, lab2=, loff=0
!   reloc[95]: knd=0, off=41325, siz=4, lab1=.L739, lab2=, loff=0
!   reloc[96]: knd=0, off=41329, siz=4, lab1=.L884, lab2=, loff=0
!   reloc[97]: knd=0, off=41334, siz=4, lab1=.L740, lab2=, loff=0
!   reloc[98]: knd=0, off=41338, siz=4, lab1=.L883, lab2=, loff=0
!   reloc[99]: knd=0, off=41343, siz=4, lab1=.L746, lab2=, loff=0
!   reloc[100]: knd=0, off=41347, siz=4, lab1=.L819, lab2=, loff=0
!   reloc[101]: knd=0, off=41352, siz=4, lab1=.L747, lab2=, loff=0
!   reloc[102]: knd=0, off=41356, siz=4, lab1=.L818, lab2=, loff=0
!   reloc[103]: knd=0, off=41463, siz=4, lab1=.L754, lab2=, loff=0
!   reloc[104]: knd=0, off=41467, siz=4, lab1=.L817, lab2=, loff=0
!   reloc[105]: knd=0, off=41472, siz=4, lab1=.L758, lab2=, loff=0
!   reloc[106]: knd=0, off=41476, siz=4, lab1=.L780, lab2=, loff=0
!   reloc[107]: knd=0, off=41481, siz=4, lab1=.L759, lab2=, loff=0
!   reloc[108]: knd=0, off=41485, siz=4, lab1=.L779, lab2=, loff=0
!   reloc[109]: knd=0, off=41537, siz=4, lab1=.L782, lab2=, loff=0
!   reloc[110]: knd=0, off=41541, siz=4, lab1=.L816, lab2=, loff=0
!   reloc[111]: knd=0, off=41546, siz=4, lab1=.L783, lab2=, loff=0
!   reloc[112]: knd=0, off=41550, siz=4, lab1=.L815, lab2=, loff=0
!   reloc[113]: knd=0, off=41583, siz=4, lab1=.L784, lab2=, loff=0
!   reloc[114]: knd=0, off=41587, siz=4, lab1=.L814, lab2=, loff=0
!   reloc[115]: knd=0, off=41592, siz=4, lab1=.L790, lab2=, loff=0
!   reloc[116]: knd=0, off=41596, siz=4, lab1=.L811, lab2=, loff=0
!   reloc[117]: knd=0, off=41601, siz=4, lab1=.L791, lab2=, loff=0
!   reloc[118]: knd=0, off=41605, siz=4, lab1=.L810, lab2=, loff=0
!   reloc[119]: knd=0, off=41635, siz=4, lab1=.L821, lab2=, loff=0
!   reloc[120]: knd=0, off=41639, siz=4, lab1=.L882, lab2=, loff=0
!   reloc[121]: knd=0, off=41644, siz=4, lab1=.L822, lab2=, loff=0
!   reloc[122]: knd=0, off=41648, siz=4, lab1=.L881, lab2=, loff=0
!   reloc[123]: knd=0, off=41653, siz=4, lab1=.L823, lab2=, loff=0
!   reloc[124]: knd=0, off=41657, siz=4, lab1=.L880, lab2=, loff=0
!   reloc[125]: knd=0, off=41662, siz=4, lab1=.L827, lab2=, loff=0
!   reloc[126]: knd=0, off=41666, siz=4, lab1=.L846, lab2=, loff=0
!   reloc[127]: knd=0, off=41671, siz=4, lab1=.L828, lab2=, loff=0
!   reloc[128]: knd=0, off=41675, siz=4, lab1=.L845, lab2=, loff=0
!   reloc[129]: knd=0, off=41727, siz=4, lab1=.L848, lab2=, loff=0
!   reloc[130]: knd=0, off=41731, siz=4, lab1=.L879, lab2=, loff=0
!   reloc[131]: knd=0, off=41736, siz=4, lab1=.L849, lab2=, loff=0
!   reloc[132]: knd=0, off=41740, siz=4, lab1=.L878, lab2=, loff=0
!   reloc[133]: knd=0, off=41773, siz=4, lab1=.L850, lab2=, loff=0
!   reloc[134]: knd=0, off=41777, siz=4, lab1=.L877, lab2=, loff=0
!   reloc[135]: knd=0, off=41782, siz=4, lab1=.L856, lab2=, loff=0
!   reloc[136]: knd=0, off=41786, siz=4, lab1=.L874, lab2=, loff=0
!   reloc[137]: knd=0, off=41791, siz=4, lab1=.L857, lab2=, loff=0
!   reloc[138]: knd=0, off=41795, siz=4, lab1=.L873, lab2=, loff=0
!   reloc[139]: knd=0, off=41843, siz=4, lab1=set_index, lab2=, loff=0
!   reloc[140]: knd=0, off=41847, siz=4, lab1=.L896, lab2=, loff=0
!   reloc[141]: knd=0, off=41928, siz=4, lab1=set_color, lab2=, loff=0
!   reloc[142]: knd=0, off=41932, siz=4, lab1=.L905, lab2=, loff=0
!   reloc[143]: knd=0, off=42053, siz=4, lab1=buffer_size, lab2=, loff=0
!   reloc[144]: knd=0, off=42057, siz=4, lab1=.L915, lab2=, loff=0
!   reloc[145]: knd=0, off=42164, siz=4, lab1=write_color_span, lab2=, loff=0
!   reloc[146]: knd=0, off=42168, siz=4, lab1=.L979, lab2=, loff=0
!   reloc[147]: knd=0, off=42527, siz=4, lab1=write_monocolor_span, lab2=, loff=0
!   reloc[148]: knd=0, off=42531, siz=4, lab1=.L1011, lab2=, loff=0
!   reloc[149]: knd=0, off=42703, siz=4, lab1=write_color_pixels, lab2=, loff=0
!   reloc[150]: knd=0, off=42707, siz=4, lab1=.L1047, lab2=, loff=0
!   reloc[151]: knd=0, off=42973, siz=4, lab1=.L1022, lab2=, loff=0
!   reloc[152]: knd=0, off=42977, siz=4, lab1=.L1045, lab2=, loff=0
!   reloc[153]: knd=0, off=42982, siz=4, lab1=.L1028, lab2=, loff=0
!   reloc[154]: knd=0, off=42986, siz=4, lab1=.L1042, lab2=, loff=0
!   reloc[155]: knd=0, off=42991, siz=4, lab1=.L1029, lab2=, loff=0
!   reloc[156]: knd=0, off=42995, siz=4, lab1=.L1041, lab2=, loff=0
!   reloc[157]: knd=0, off=43000, siz=4, lab1=.L1030, lab2=, loff=0
!   reloc[158]: knd=0, off=43004, siz=4, lab1=.L1040, lab2=, loff=0
!   reloc[159]: knd=0, off=43009, siz=4, lab1=.L1034, lab2=, loff=0
!   reloc[160]: knd=0, off=43013, siz=4, lab1=.L1039, lab2=, loff=0
!   reloc[161]: knd=0, off=43018, siz=4, lab1=.L1035, lab2=, loff=0
!   reloc[162]: knd=0, off=43022, siz=4, lab1=.L1038, lab2=, loff=0
!   reloc[163]: knd=0, off=43148, siz=4, lab1=write_monocolor_pixels, lab2=, loff=0
!   reloc[164]: knd=0, off=43152, siz=4, lab1=.L1079, lab2=, loff=0
!   reloc[165]: knd=0, off=43273, siz=4, lab1=.L1054, lab2=, loff=0
!   reloc[166]: knd=0, off=43277, siz=4, lab1=.L1077, lab2=, loff=0
!   reloc[167]: knd=0, off=43282, siz=4, lab1=.L1060, lab2=, loff=0
!   reloc[168]: knd=0, off=43286, siz=4, lab1=.L1074, lab2=, loff=0
!   reloc[169]: knd=0, off=43291, siz=4, lab1=.L1061, lab2=, loff=0
!   reloc[170]: knd=0, off=43295, siz=4, lab1=.L1073, lab2=, loff=0
!   reloc[171]: knd=0, off=43300, siz=4, lab1=.L1062, lab2=, loff=0
!   reloc[172]: knd=0, off=43304, siz=4, lab1=.L1072, lab2=, loff=0
!   reloc[173]: knd=0, off=43309, siz=4, lab1=.L1066, lab2=, loff=0
!   reloc[174]: knd=0, off=43313, siz=4, lab1=.L1071, lab2=, loff=0
!   reloc[175]: knd=0, off=43318, siz=4, lab1=.L1067, lab2=, loff=0
!   reloc[176]: knd=0, off=43322, siz=4, lab1=.L1070, lab2=, loff=0
!   reloc[177]: knd=0, off=43402, siz=4, lab1=write_index_span, lab2=, loff=0
!   reloc[178]: knd=0, off=43406, siz=4, lab1=.L1111, lab2=, loff=0
!   reloc[179]: knd=0, off=43608, siz=4, lab1=write_monoindex_span, lab2=, loff=0
!   reloc[180]: knd=0, off=43612, siz=4, lab1=.L1143, lab2=, loff=0
!   reloc[181]: knd=0, off=43784, siz=4, lab1=write_index_pixels, lab2=, loff=0
!   reloc[182]: knd=0, off=43788, siz=4, lab1=.L1175, lab2=, loff=0
!   reloc[183]: knd=0, off=43927, siz=4, lab1=.L1150, lab2=, loff=0
!   reloc[184]: knd=0, off=43931, siz=4, lab1=.L1173, lab2=, loff=0
!   reloc[185]: knd=0, off=43936, siz=4, lab1=.L1156, lab2=, loff=0
!   reloc[186]: knd=0, off=43940, siz=4, lab1=.L1170, lab2=, loff=0
!   reloc[187]: knd=0, off=43945, siz=4, lab1=.L1157, lab2=, loff=0
!   reloc[188]: knd=0, off=43949, siz=4, lab1=.L1169, lab2=, loff=0
!   reloc[189]: knd=0, off=43954, siz=4, lab1=.L1158, lab2=, loff=0
!   reloc[190]: knd=0, off=43958, siz=4, lab1=.L1168, lab2=, loff=0
!   reloc[191]: knd=0, off=43963, siz=4, lab1=.L1162, lab2=, loff=0
!   reloc[192]: knd=0, off=43967, siz=4, lab1=.L1167, lab2=, loff=0
!   reloc[193]: knd=0, off=43972, siz=4, lab1=.L1163, lab2=, loff=0
!   reloc[194]: knd=0, off=43976, siz=4, lab1=.L1166, lab2=, loff=0
!   reloc[195]: knd=0, off=44072, siz=4, lab1=write_monoindex_pixels, lab2=, loff=0
!   reloc[196]: knd=0, off=44076, siz=4, lab1=.L1207, lab2=, loff=0
!   reloc[197]: knd=0, off=44197, siz=4, lab1=.L1182, lab2=, loff=0
!   reloc[198]: knd=0, off=44201, siz=4, lab1=.L1205, lab2=, loff=0
!   reloc[199]: knd=0, off=44206, siz=4, lab1=.L1188, lab2=, loff=0
!   reloc[200]: knd=0, off=44210, siz=4, lab1=.L1202, lab2=, loff=0
!   reloc[201]: knd=0, off=44215, siz=4, lab1=.L1189, lab2=, loff=0
!   reloc[202]: knd=0, off=44219, siz=4, lab1=.L1201, lab2=, loff=0
!   reloc[203]: knd=0, off=44224, siz=4, lab1=.L1190, lab2=, loff=0
!   reloc[204]: knd=0, off=44228, siz=4, lab1=.L1200, lab2=, loff=0
!   reloc[205]: knd=0, off=44233, siz=4, lab1=.L1194, lab2=, loff=0
!   reloc[206]: knd=0, off=44237, siz=4, lab1=.L1199, lab2=, loff=0
!   reloc[207]: knd=0, off=44242, siz=4, lab1=.L1195, lab2=, loff=0
!   reloc[208]: knd=0, off=44246, siz=4, lab1=.L1198, lab2=, loff=0
!   reloc[209]: knd=0, off=44325, siz=4, lab1=read_index_span, lab2=, loff=0
!   reloc[210]: knd=0, off=44329, siz=4, lab1=.L1230, lab2=, loff=0
!   reloc[211]: knd=0, off=44489, siz=4, lab1=read_color_span, lab2=, loff=0
!   reloc[212]: knd=0, off=44493, siz=4, lab1=.L1257, lab2=, loff=0
!   reloc[213]: knd=0, off=44683, siz=4, lab1=.L1238, lab2=, loff=0
!   reloc[214]: knd=0, off=44687, siz=4, lab1=.L1255, lab2=, loff=0
!   reloc[215]: knd=0, off=44692, siz=4, lab1=.L1244, lab2=, loff=0
!   reloc[216]: knd=0, off=44696, siz=4, lab1=.L1252, lab2=, loff=0
!   reloc[217]: knd=0, off=44701, siz=4, lab1=.L1245, lab2=, loff=0
!   reloc[218]: knd=0, off=44705, siz=4, lab1=.L1251, lab2=, loff=0
!   reloc[219]: knd=0, off=44754, siz=4, lab1=read_index_pixels, lab2=, loff=0
!   reloc[220]: knd=0, off=44758, siz=4, lab1=.L1289, lab2=, loff=0
!   reloc[221]: knd=0, off=44897, siz=4, lab1=.L1264, lab2=, loff=0
!   reloc[222]: knd=0, off=44901, siz=4, lab1=.L1287, lab2=, loff=0
!   reloc[223]: knd=0, off=44906, siz=4, lab1=.L1270, lab2=, loff=0
!   reloc[224]: knd=0, off=44910, siz=4, lab1=.L1284, lab2=, loff=0
!   reloc[225]: knd=0, off=44915, siz=4, lab1=.L1271, lab2=, loff=0
!   reloc[226]: knd=0, off=44919, siz=4, lab1=.L1283, lab2=, loff=0
!   reloc[227]: knd=0, off=44924, siz=4, lab1=.L1272, lab2=, loff=0
!   reloc[228]: knd=0, off=44928, siz=4, lab1=.L1282, lab2=, loff=0
!   reloc[229]: knd=0, off=44933, siz=4, lab1=.L1276, lab2=, loff=0
!   reloc[230]: knd=0, off=44937, siz=4, lab1=.L1281, lab2=, loff=0
!   reloc[231]: knd=0, off=44942, siz=4, lab1=.L1277, lab2=, loff=0
!   reloc[232]: knd=0, off=44946, siz=4, lab1=.L1280, lab2=, loff=0
!   reloc[233]: knd=0, off=45027, siz=4, lab1=read_color_pixels, lab2=, loff=0
!   reloc[234]: knd=0, off=45031, siz=4, lab1=.L1325, lab2=, loff=0
!   reloc[235]: knd=0, off=45221, siz=4, lab1=.L1296, lab2=, loff=0
!   reloc[236]: knd=0, off=45225, siz=4, lab1=.L1323, lab2=, loff=0
!   reloc[237]: knd=0, off=45230, siz=4, lab1=.L1302, lab2=, loff=0
!   reloc[238]: knd=0, off=45234, siz=4, lab1=.L1320, lab2=, loff=0
!   reloc[239]: knd=0, off=45239, siz=4, lab1=.L1303, lab2=, loff=0
!   reloc[240]: knd=0, off=45243, siz=4, lab1=.L1319, lab2=, loff=0
!   reloc[241]: knd=0, off=45248, siz=4, lab1=.L1304, lab2=, loff=0
!   reloc[242]: knd=0, off=45252, siz=4, lab1=.L1318, lab2=, loff=0
!   reloc[243]: knd=0, off=45257, siz=4, lab1=.L1308, lab2=, loff=0
!   reloc[244]: knd=0, off=45261, siz=4, lab1=.L1317, lab2=, loff=0
!   reloc[245]: knd=0, off=45266, siz=4, lab1=.L1309, lab2=, loff=0
!   reloc[246]: knd=0, off=45270, siz=4, lab1=.L1316, lab2=, loff=0
!   reloc[247]: knd=0, off=45369, siz=4, lab1=write_color_span3, lab2=, loff=0
!   reloc[248]: knd=0, off=45373, siz=4, lab1=.L1392, lab2=, loff=0
!   reloc[249]: knd=0, off=45708, siz=4, lab1=write_monocolor_span3, lab2=, loff=0
!   reloc[250]: knd=0, off=45712, siz=4, lab1=.L1432, lab2=, loff=0
!   reloc[251]: knd=0, off=45987, siz=4, lab1=write_color_pixels3, lab2=, loff=0
!   reloc[252]: knd=0, off=45991, siz=4, lab1=.L1469, lab2=, loff=0
!   reloc[253]: knd=0, off=46232, siz=4, lab1=.L1442, lab2=, loff=0
!   reloc[254]: knd=0, off=46236, siz=4, lab1=.L1467, lab2=, loff=0
!   reloc[255]: knd=0, off=46241, siz=4, lab1=.L1448, lab2=, loff=0
!   reloc[256]: knd=0, off=46245, siz=4, lab1=.L1464, lab2=, loff=0
!   reloc[257]: knd=0, off=46250, siz=4, lab1=.L1449, lab2=, loff=0
!   reloc[258]: knd=0, off=46254, siz=4, lab1=.L1463, lab2=, loff=0
!   reloc[259]: knd=0, off=46259, siz=4, lab1=.L1450, lab2=, loff=0
!   reloc[260]: knd=0, off=46263, siz=4, lab1=.L1462, lab2=, loff=0
!   reloc[261]: knd=0, off=46268, siz=4, lab1=.L1454, lab2=, loff=0
!   reloc[262]: knd=0, off=46272, siz=4, lab1=.L1461, lab2=, loff=0
!   reloc[263]: knd=0, off=46277, siz=4, lab1=.L1455, lab2=, loff=0
!   reloc[264]: knd=0, off=46281, siz=4, lab1=.L1460, lab2=, loff=0
!   reloc[265]: knd=0, off=46408, siz=4, lab1=write_monocolor_pixels3, lab2=, loff=0
!   reloc[266]: knd=0, off=46412, siz=4, lab1=.L1509, lab2=, loff=0
!   reloc[267]: knd=0, off=46635, siz=4, lab1=.L1482, lab2=, loff=0
!   reloc[268]: knd=0, off=46639, siz=4, lab1=.L1507, lab2=, loff=0
!   reloc[269]: knd=0, off=46644, siz=4, lab1=.L1488, lab2=, loff=0
!   reloc[270]: knd=0, off=46648, siz=4, lab1=.L1504, lab2=, loff=0
!   reloc[271]: knd=0, off=46653, siz=4, lab1=.L1489, lab2=, loff=0
!   reloc[272]: knd=0, off=46657, siz=4, lab1=.L1503, lab2=, loff=0
!   reloc[273]: knd=0, off=46662, siz=4, lab1=.L1490, lab2=, loff=0
!   reloc[274]: knd=0, off=46666, siz=4, lab1=.L1502, lab2=, loff=0
!   reloc[275]: knd=0, off=46671, siz=4, lab1=.L1494, lab2=, loff=0
!   reloc[276]: knd=0, off=46675, siz=4, lab1=.L1501, lab2=, loff=0
!   reloc[277]: knd=0, off=46680, siz=4, lab1=.L1495, lab2=, loff=0
!   reloc[278]: knd=0, off=46684, siz=4, lab1=.L1500, lab2=, loff=0
!   reloc[279]: knd=0, off=46764, siz=4, lab1=read_color_span3, lab2=, loff=0
!   reloc[280]: knd=0, off=46768, siz=4, lab1=.L1538, lab2=, loff=0
!   reloc[281]: knd=0, off=47033, siz=4, lab1=read_color_pixels3, lab2=, loff=0
!   reloc[282]: knd=0, off=47037, siz=4, lab1=.L1576, lab2=, loff=0
!   reloc[283]: knd=0, off=47278, siz=4, lab1=.L1548, lab2=, loff=0
!   reloc[284]: knd=0, off=47282, siz=4, lab1=.L1574, lab2=, loff=0
!   reloc[285]: knd=0, off=47287, siz=4, lab1=.L1554, lab2=, loff=0
!   reloc[286]: knd=0, off=47291, siz=4, lab1=.L1571, lab2=, loff=0
!   reloc[287]: knd=0, off=47296, siz=4, lab1=.L1555, lab2=, loff=0
!   reloc[288]: knd=0, off=47300, siz=4, lab1=.L1570, lab2=, loff=0
!   reloc[289]: knd=0, off=47305, siz=4, lab1=.L1556, lab2=, loff=0
!   reloc[290]: knd=0, off=47309, siz=4, lab1=.L1569, lab2=, loff=0
!   reloc[291]: knd=0, off=47314, siz=4, lab1=.L1560, lab2=, loff=0
!   reloc[292]: knd=0, off=47318, siz=4, lab1=.L1568, lab2=, loff=0
!   reloc[293]: knd=0, off=47323, siz=4, lab1=.L1561, lab2=, loff=0
!   reloc[294]: knd=0, off=47327, siz=4, lab1=.L1567, lab2=, loff=0
!   reloc[295]: knd=0, off=47406, siz=4, lab1=flat_color_line, lab2=, loff=0
!   reloc[296]: knd=0, off=47410, siz=4, lab1=.L1768, lab2=, loff=0
!   reloc[297]: knd=0, off=47548, siz=4, lab1=.L1585, lab2=, loff=0
!   reloc[298]: knd=0, off=47552, siz=4, lab1=.L1766, lab2=, loff=0
!   reloc[299]: knd=0, off=47689, siz=4, lab1=.L1589, lab2=, loff=0
!   reloc[300]: knd=0, off=47693, siz=4, lab1=.L1630, lab2=, loff=0
!   reloc[301]: knd=0, off=47725, siz=4, lab1=.L1678, lab2=, loff=0
!   reloc[302]: knd=0, off=47729, siz=4, lab1=.L1765, lab2=, loff=0
!   reloc[303]: knd=0, off=47734, siz=4, lab1=.L1682, lab2=, loff=0
!   reloc[304]: knd=0, off=47738, siz=4, lab1=.L1722, lab2=, loff=0
!   reloc[305]: knd=0, off=47743, siz=4, lab1=.L1683, lab2=, loff=0
!   reloc[306]: knd=0, off=47747, siz=4, lab1=.L1721, lab2=, loff=0
!   reloc[307]: knd=0, off=47822, siz=4, lab1=.L1687, lab2=, loff=0
!   reloc[308]: knd=0, off=47826, siz=4, lab1=.L1720, lab2=, loff=0
!   reloc[309]: knd=0, off=47831, siz=4, lab1=.L1693, lab2=, loff=0
!   reloc[310]: knd=0, off=47835, siz=4, lab1=.L1717, lab2=, loff=0
!   reloc[311]: knd=0, off=47840, siz=4, lab1=.L1694, lab2=, loff=0
!   reloc[312]: knd=0, off=47844, siz=4, lab1=.L1716, lab2=, loff=0
!   reloc[313]: knd=0, off=47849, siz=4, lab1=.L1695, lab2=, loff=0
!   reloc[314]: knd=0, off=47853, siz=4, lab1=.L1697, lab2=, loff=0
!   reloc[315]: knd=0, off=47882, siz=4, lab1=.L1724, lab2=, loff=0
!   reloc[316]: knd=0, off=47886, siz=4, lab1=.L1764, lab2=, loff=0
!   reloc[317]: knd=0, off=47891, siz=4, lab1=.L1725, lab2=, loff=0
!   reloc[318]: knd=0, off=47895, siz=4, lab1=.L1763, lab2=, loff=0
!   reloc[319]: knd=0, off=47974, siz=4, lab1=.L1729, lab2=, loff=0
!   reloc[320]: knd=0, off=47978, siz=4, lab1=.L1762, lab2=, loff=0
!   reloc[321]: knd=0, off=47983, siz=4, lab1=.L1735, lab2=, loff=0
!   reloc[322]: knd=0, off=47987, siz=4, lab1=.L1759, lab2=, loff=0
!   reloc[323]: knd=0, off=47992, siz=4, lab1=.L1736, lab2=, loff=0
!   reloc[324]: knd=0, off=47996, siz=4, lab1=.L1758, lab2=, loff=0
!   reloc[325]: knd=0, off=48001, siz=4, lab1=.L1737, lab2=, loff=0
!   reloc[326]: knd=0, off=48005, siz=4, lab1=.L1739, lab2=, loff=0
!   reloc[327]: knd=0, off=48076, siz=4, lab1=flat_color_z_line, lab2=, loff=0
!   reloc[328]: knd=0, off=48080, siz=4, lab1=.L1989, lab2=, loff=0
!   reloc[329]: knd=0, off=48218, siz=4, lab1=.L1777, lab2=, loff=0
!   reloc[330]: knd=0, off=48222, siz=4, lab1=.L1987, lab2=, loff=0
!   reloc[331]: knd=0, off=48461, siz=4, lab1=.L1781, lab2=, loff=0
!   reloc[332]: knd=0, off=48465, siz=4, lab1=.L1822, lab2=, loff=0
!   reloc[333]: knd=0, off=48499, siz=4, lab1=.L1877, lab2=, loff=0
!   reloc[334]: knd=0, off=48503, siz=4, lab1=.L1986, lab2=, loff=0
!   reloc[335]: knd=0, off=48508, siz=4, lab1=.L1881, lab2=, loff=0
!   reloc[336]: knd=0, off=48512, siz=4, lab1=.L1932, lab2=, loff=0
!   reloc[337]: knd=0, off=48517, siz=4, lab1=.L1882, lab2=, loff=0
!   reloc[338]: knd=0, off=48521, siz=4, lab1=.L1931, lab2=, loff=0
!   reloc[339]: knd=0, off=48600, siz=4, lab1=.L1887, lab2=, loff=0
!   reloc[340]: knd=0, off=48604, siz=4, lab1=.L1930, lab2=, loff=0
!   reloc[341]: knd=0, off=48609, siz=4, lab1=.L1893, lab2=, loff=0
!   reloc[342]: knd=0, off=48613, siz=4, lab1=.L1927, lab2=, loff=0
!   reloc[343]: knd=0, off=48618, siz=4, lab1=.L1894, lab2=, loff=0
!   reloc[344]: knd=0, off=48622, siz=4, lab1=.L1926, lab2=, loff=0
!   reloc[345]: knd=0, off=48642, siz=4, lab1=.L1896, lab2=, loff=0
!   reloc[346]: knd=0, off=48646, siz=4, lab1=.L1904, lab2=, loff=0
!   reloc[347]: knd=0, off=48651, siz=4, lab1=.L1900, lab2=, loff=0
!   reloc[348]: knd=0, off=48655, siz=4, lab1=.L1903, lab2=, loff=0
!   reloc[349]: knd=0, off=48660, siz=4, lab1=.L1901, lab2=, loff=0
!   reloc[350]: knd=0, off=48664, siz=4, lab1=.L1902, lab2=, loff=0
!   reloc[351]: knd=0, off=48695, siz=4, lab1=.L1934, lab2=, loff=0
!   reloc[352]: knd=0, off=48699, siz=4, lab1=.L1985, lab2=, loff=0
!   reloc[353]: knd=0, off=48704, siz=4, lab1=.L1935, lab2=, loff=0
!   reloc[354]: knd=0, off=48708, siz=4, lab1=.L1984, lab2=, loff=0
!   reloc[355]: knd=0, off=48791, siz=4, lab1=.L1940, lab2=, loff=0
!   reloc[356]: knd=0, off=48795, siz=4, lab1=.L1983, lab2=, loff=0
!   reloc[357]: knd=0, off=48800, siz=4, lab1=.L1946, lab2=, loff=0
!   reloc[358]: knd=0, off=48804, siz=4, lab1=.L1980, lab2=, loff=0
!   reloc[359]: knd=0, off=48809, siz=4, lab1=.L1947, lab2=, loff=0
!   reloc[360]: knd=0, off=48813, siz=4, lab1=.L1979, lab2=, loff=0
!   reloc[361]: knd=0, off=48833, siz=4, lab1=.L1949, lab2=, loff=0
!   reloc[362]: knd=0, off=48837, siz=4, lab1=.L1957, lab2=, loff=0
!   reloc[363]: knd=0, off=48842, siz=4, lab1=.L1953, lab2=, loff=0
!   reloc[364]: knd=0, off=48846, siz=4, lab1=.L1956, lab2=, loff=0
!   reloc[365]: knd=0, off=48851, siz=4, lab1=.L1954, lab2=, loff=0
!   reloc[366]: knd=0, off=48855, siz=4, lab1=.L1955, lab2=, loff=0
!   reloc[367]: knd=0, off=48915, siz=4, lab1=flat_blend_color_line, lab2=, loff=0
!   reloc[368]: knd=0, off=48919, siz=4, lab1=.L2188, lab2=, loff=0
!   reloc[369]: knd=0, off=49190, siz=4, lab1=.L2005, lab2=, loff=0
!   reloc[370]: knd=0, off=49194, siz=4, lab1=.L2186, lab2=, loff=0
!   reloc[371]: knd=0, off=49334, siz=4, lab1=.L2009, lab2=, loff=0
!   reloc[372]: knd=0, off=49338, siz=4, lab1=.L2050, lab2=, loff=0
!   reloc[373]: knd=0, off=49372, siz=4, lab1=.L2098, lab2=, loff=0
!   reloc[374]: knd=0, off=49376, siz=4, lab1=.L2185, lab2=, loff=0
!   reloc[375]: knd=0, off=49381, siz=4, lab1=.L2102, lab2=, loff=0
!   reloc[376]: knd=0, off=49385, siz=4, lab1=.L2142, lab2=, loff=0
!   reloc[377]: knd=0, off=49390, siz=4, lab1=.L2103, lab2=, loff=0
!   reloc[378]: knd=0, off=49394, siz=4, lab1=.L2141, lab2=, loff=0
!   reloc[379]: knd=0, off=49473, siz=4, lab1=.L2107, lab2=, loff=0
!   reloc[380]: knd=0, off=49477, siz=4, lab1=.L2140, lab2=, loff=0
!   reloc[381]: knd=0, off=49482, siz=4, lab1=.L2113, lab2=, loff=0
!   reloc[382]: knd=0, off=49486, siz=4, lab1=.L2137, lab2=, loff=0
!   reloc[383]: knd=0, off=49491, siz=4, lab1=.L2114, lab2=, loff=0
!   reloc[384]: knd=0, off=49495, siz=4, lab1=.L2136, lab2=, loff=0
!   reloc[385]: knd=0, off=49500, siz=4, lab1=.L2115, lab2=, loff=0
!   reloc[386]: knd=0, off=49504, siz=4, lab1=.L2117, lab2=, loff=0
!   reloc[387]: knd=0, off=49552, siz=4, lab1=.L2144, lab2=, loff=0
!   reloc[388]: knd=0, off=49556, siz=4, lab1=.L2184, lab2=, loff=0
!   reloc[389]: knd=0, off=49561, siz=4, lab1=.L2145, lab2=, loff=0
!   reloc[390]: knd=0, off=49565, siz=4, lab1=.L2183, lab2=, loff=0
!   reloc[391]: knd=0, off=49648, siz=4, lab1=.L2149, lab2=, loff=0
!   reloc[392]: knd=0, off=49652, siz=4, lab1=.L2182, lab2=, loff=0
!   reloc[393]: knd=0, off=49657, siz=4, lab1=.L2155, lab2=, loff=0
!   reloc[394]: knd=0, off=49661, siz=4, lab1=.L2179, lab2=, loff=0
!   reloc[395]: knd=0, off=49666, siz=4, lab1=.L2156, lab2=, loff=0
!   reloc[396]: knd=0, off=49670, siz=4, lab1=.L2178, lab2=, loff=0
!   reloc[397]: knd=0, off=49675, siz=4, lab1=.L2157, lab2=, loff=0
!   reloc[398]: knd=0, off=49679, siz=4, lab1=.L2159, lab2=, loff=0
!   reloc[399]: knd=0, off=49758, siz=4, lab1=flat_blend_color_z_line, lab2=, loff=0
!   reloc[400]: knd=0, off=49762, siz=4, lab1=.L2420, lab2=, loff=0
!   reloc[401]: knd=0, off=50033, siz=4, lab1=.L2204, lab2=, loff=0
!   reloc[402]: knd=0, off=50037, siz=4, lab1=.L2418, lab2=, loff=0
!   reloc[403]: knd=0, off=50283, siz=4, lab1=.L2208, lab2=, loff=0
!   reloc[404]: knd=0, off=50287, siz=4, lab1=.L2249, lab2=, loff=0
!   reloc[405]: knd=0, off=50321, siz=4, lab1=.L2304, lab2=, loff=0
!   reloc[406]: knd=0, off=50325, siz=4, lab1=.L2417, lab2=, loff=0
!   reloc[407]: knd=0, off=50330, siz=4, lab1=.L2308, lab2=, loff=0
!   reloc[408]: knd=0, off=50334, siz=4, lab1=.L2361, lab2=, loff=0
!   reloc[409]: knd=0, off=50339, siz=4, lab1=.L2309, lab2=, loff=0
!   reloc[410]: knd=0, off=50343, siz=4, lab1=.L2360, lab2=, loff=0
!   reloc[411]: knd=0, off=50422, siz=4, lab1=.L2314, lab2=, loff=0
!   reloc[412]: knd=0, off=50426, siz=4, lab1=.L2359, lab2=, loff=0
!   reloc[413]: knd=0, off=50431, siz=4, lab1=.L2320, lab2=, loff=0
!   reloc[414]: knd=0, off=50435, siz=4, lab1=.L2356, lab2=, loff=0
!   reloc[415]: knd=0, off=50440, siz=4, lab1=.L2321, lab2=, loff=0
!   reloc[416]: knd=0, off=50444, siz=4, lab1=.L2355, lab2=, loff=0
!   reloc[417]: knd=0, off=50464, siz=4, lab1=.L2323, lab2=, loff=0
!   reloc[418]: knd=0, off=50468, siz=4, lab1=.L2333, lab2=, loff=0
!   reloc[419]: knd=0, off=50473, siz=4, lab1=.L2327, lab2=, loff=0
!   reloc[420]: knd=0, off=50477, siz=4, lab1=.L2332, lab2=, loff=0
!   reloc[421]: knd=0, off=50482, siz=4, lab1=.L2328, lab2=, loff=0
!   reloc[422]: knd=0, off=50486, siz=4, lab1=.L2331, lab2=, loff=0
!   reloc[423]: knd=0, off=50491, siz=4, lab1=.L2329, lab2=, loff=0
!   reloc[424]: knd=0, off=50495, siz=4, lab1=.L2330, lab2=, loff=0
!   reloc[425]: knd=0, off=50546, siz=4, lab1=.L2363, lab2=, loff=0
!   reloc[426]: knd=0, off=50550, siz=4, lab1=.L2416, lab2=, loff=0
!   reloc[427]: knd=0, off=50555, siz=4, lab1=.L2364, lab2=, loff=0
!   reloc[428]: knd=0, off=50559, siz=4, lab1=.L2415, lab2=, loff=0
!   reloc[429]: knd=0, off=50642, siz=4, lab1=.L2369, lab2=, loff=0
!   reloc[430]: knd=0, off=50646, siz=4, lab1=.L2414, lab2=, loff=0
!   reloc[431]: knd=0, off=50651, siz=4, lab1=.L2375, lab2=, loff=0
!   reloc[432]: knd=0, off=50655, siz=4, lab1=.L2411, lab2=, loff=0
!   reloc[433]: knd=0, off=50660, siz=4, lab1=.L2376, lab2=, loff=0
!   reloc[434]: knd=0, off=50664, siz=4, lab1=.L2410, lab2=, loff=0
!   reloc[435]: knd=0, off=50684, siz=4, lab1=.L2378, lab2=, loff=0
!   reloc[436]: knd=0, off=50688, siz=4, lab1=.L2388, lab2=, loff=0
!   reloc[437]: knd=0, off=50693, siz=4, lab1=.L2382, lab2=, loff=0
!   reloc[438]: knd=0, off=50697, siz=4, lab1=.L2387, lab2=, loff=0
!   reloc[439]: knd=0, off=50702, siz=4, lab1=.L2383, lab2=, loff=0
!   reloc[440]: knd=0, off=50706, siz=4, lab1=.L2386, lab2=, loff=0
!   reloc[441]: knd=0, off=50711, siz=4, lab1=.L2384, lab2=, loff=0
!   reloc[442]: knd=0, off=50715, siz=4, lab1=.L2385, lab2=, loff=0
!   reloc[443]: knd=0, off=50803, siz=4, lab1=flat_blend_color_z_line_write, lab2=, loff=0
!   reloc[444]: knd=0, off=50807, siz=4, lab1=.L2652, lab2=, loff=0
!   reloc[445]: knd=0, off=51078, siz=4, lab1=.L2436, lab2=, loff=0
!   reloc[446]: knd=0, off=51082, siz=4, lab1=.L2650, lab2=, loff=0
!   reloc[447]: knd=0, off=51328, siz=4, lab1=.L2440, lab2=, loff=0
!   reloc[448]: knd=0, off=51332, siz=4, lab1=.L2481, lab2=, loff=0
!   reloc[449]: knd=0, off=51366, siz=4, lab1=.L2536, lab2=, loff=0
!   reloc[450]: knd=0, off=51370, siz=4, lab1=.L2649, lab2=, loff=0
!   reloc[451]: knd=0, off=51375, siz=4, lab1=.L2540, lab2=, loff=0
!   reloc[452]: knd=0, off=51379, siz=4, lab1=.L2593, lab2=, loff=0
!   reloc[453]: knd=0, off=51384, siz=4, lab1=.L2541, lab2=, loff=0
!   reloc[454]: knd=0, off=51388, siz=4, lab1=.L2592, lab2=, loff=0
!   reloc[455]: knd=0, off=51467, siz=4, lab1=.L2546, lab2=, loff=0
!   reloc[456]: knd=0, off=51471, siz=4, lab1=.L2591, lab2=, loff=0
!   reloc[457]: knd=0, off=51476, siz=4, lab1=.L2552, lab2=, loff=0
!   reloc[458]: knd=0, off=51480, siz=4, lab1=.L2588, lab2=, loff=0
!   reloc[459]: knd=0, off=51485, siz=4, lab1=.L2553, lab2=, loff=0
!   reloc[460]: knd=0, off=51489, siz=4, lab1=.L2587, lab2=, loff=0
!   reloc[461]: knd=0, off=51509, siz=4, lab1=.L2555, lab2=, loff=0
!   reloc[462]: knd=0, off=51513, siz=4, lab1=.L2565, lab2=, loff=0
!   reloc[463]: knd=0, off=51518, siz=4, lab1=.L2559, lab2=, loff=0
!   reloc[464]: knd=0, off=51522, siz=4, lab1=.L2564, lab2=, loff=0
!   reloc[465]: knd=0, off=51527, siz=4, lab1=.L2560, lab2=, loff=0
!   reloc[466]: knd=0, off=51531, siz=4, lab1=.L2563, lab2=, loff=0
!   reloc[467]: knd=0, off=51536, siz=4, lab1=.L2561, lab2=, loff=0
!   reloc[468]: knd=0, off=51540, siz=4, lab1=.L2562, lab2=, loff=0
!   reloc[469]: knd=0, off=51591, siz=4, lab1=.L2595, lab2=, loff=0
!   reloc[470]: knd=0, off=51595, siz=4, lab1=.L2648, lab2=, loff=0
!   reloc[471]: knd=0, off=51600, siz=4, lab1=.L2596, lab2=, loff=0
!   reloc[472]: knd=0, off=51604, siz=4, lab1=.L2647, lab2=, loff=0
!   reloc[473]: knd=0, off=51687, siz=4, lab1=.L2601, lab2=, loff=0
!   reloc[474]: knd=0, off=51691, siz=4, lab1=.L2646, lab2=, loff=0
!   reloc[475]: knd=0, off=51696, siz=4, lab1=.L2607, lab2=, loff=0
!   reloc[476]: knd=0, off=51700, siz=4, lab1=.L2643, lab2=, loff=0
!   reloc[477]: knd=0, off=51705, siz=4, lab1=.L2608, lab2=, loff=0
!   reloc[478]: knd=0, off=51709, siz=4, lab1=.L2642, lab2=, loff=0
!   reloc[479]: knd=0, off=51729, siz=4, lab1=.L2610, lab2=, loff=0
!   reloc[480]: knd=0, off=51733, siz=4, lab1=.L2620, lab2=, loff=0
!   reloc[481]: knd=0, off=51738, siz=4, lab1=.L2614, lab2=, loff=0
!   reloc[482]: knd=0, off=51742, siz=4, lab1=.L2619, lab2=, loff=0
!   reloc[483]: knd=0, off=51747, siz=4, lab1=.L2615, lab2=, loff=0
!   reloc[484]: knd=0, off=51751, siz=4, lab1=.L2618, lab2=, loff=0
!   reloc[485]: knd=0, off=51756, siz=4, lab1=.L2616, lab2=, loff=0
!   reloc[486]: knd=0, off=51760, siz=4, lab1=.L2617, lab2=, loff=0
!   reloc[487]: knd=0, off=51839, siz=4, lab1=choose_line_function, lab2=, loff=0
!   reloc[488]: knd=0, off=51843, siz=4, lab1=.L2837, lab2=, loff=0
!   reloc[489]: knd=0, off=51924, siz=4, lab1=smooth_color_z_triangle, lab2=, loff=0
!   reloc[490]: knd=0, off=51928, siz=4, lab1=.L3365, lab2=, loff=0
!   reloc[491]: knd=0, off=52112, siz=4, lab1=.L2848, lab2=, loff=0
!   reloc[492]: knd=0, off=52116, siz=4, lab1=.L3363, lab2=, loff=0
!   reloc[493]: knd=0, off=52397, siz=4, lab1=.L2850, lab2=, loff=0
!   reloc[494]: knd=0, off=52401, siz=4, lab1=.L2926, lab2=, loff=0
!   reloc[495]: knd=0, off=52452, siz=4, lab1=.L2936, lab2=, loff=0
!   reloc[496]: knd=0, off=52456, siz=4, lab1=.L2950, lab2=, loff=0
!   reloc[497]: knd=0, off=52479, siz=4, lab1=.L2951, lab2=, loff=0
!   reloc[498]: knd=0, off=52483, siz=4, lab1=.L3011, lab2=, loff=0
!   reloc[499]: knd=0, off=52588, siz=4, lab1=.L2959, lab2=, loff=0
!   reloc[500]: knd=0, off=52592, siz=4, lab1=.L2978, lab2=, loff=0
!   reloc[501]: knd=0, off=52597, siz=4, lab1=.L2963, lab2=, loff=0
!   reloc[502]: knd=0, off=52601, siz=4, lab1=.L2971, lab2=, loff=0
!   reloc[503]: knd=0, off=52606, siz=4, lab1=.L2964, lab2=, loff=0
!   reloc[504]: knd=0, off=52610, siz=4, lab1=.L2970, lab2=, loff=0
!   reloc[505]: knd=0, off=52635, siz=4, lab1=.L2981, lab2=, loff=0
!   reloc[506]: knd=0, off=52639, siz=4, lab1=.L2994, lab2=, loff=0
!   reloc[507]: knd=0, off=52644, siz=4, lab1=.L2985, lab2=, loff=0
!   reloc[508]: knd=0, off=52648, siz=4, lab1=.L2993, lab2=, loff=0
!   reloc[509]: knd=0, off=52653, siz=4, lab1=.L2986, lab2=, loff=0
!   reloc[510]: knd=0, off=52657, siz=4, lab1=.L2992, lab2=, loff=0
!   reloc[511]: knd=0, off=52682, siz=4, lab1=.L2997, lab2=, loff=0
!   reloc[512]: knd=0, off=52686, siz=4, lab1=.L3010, lab2=, loff=0
!   reloc[513]: knd=0, off=52691, siz=4, lab1=.L3001, lab2=, loff=0
!   reloc[514]: knd=0, off=52695, siz=4, lab1=.L3009, lab2=, loff=0
!   reloc[515]: knd=0, off=52700, siz=4, lab1=.L3002, lab2=, loff=0
!   reloc[516]: knd=0, off=52704, siz=4, lab1=.L3008, lab2=, loff=0
!   reloc[517]: knd=0, off=52730, siz=4, lab1=.L3012, lab2=, loff=0
!   reloc[518]: knd=0, off=52734, siz=4, lab1=.L3362, lab2=, loff=0
!   reloc[519]: knd=0, off=53032, siz=4, lab1=.L3014, lab2=, loff=0
!   reloc[520]: knd=0, off=53036, siz=4, lab1=.L3038, lab2=, loff=0
!   reloc[521]: knd=0, off=53084, siz=4, lab1=.L3039, lab2=, loff=0
!   reloc[522]: knd=0, off=53088, siz=4, lab1=.L3045, lab2=, loff=0
!   reloc[523]: knd=0, off=53136, siz=4, lab1=.L3046, lab2=, loff=0
!   reloc[524]: knd=0, off=53140, siz=4, lab1=.L3052, lab2=, loff=0
!   reloc[525]: knd=0, off=53188, siz=4, lab1=.L3053, lab2=, loff=0
!   reloc[526]: knd=0, off=53192, siz=4, lab1=.L3059, lab2=, loff=0
!   reloc[527]: knd=0, off=53240, siz=4, lab1=.L3060, lab2=, loff=0
!   reloc[528]: knd=0, off=53244, siz=4, lab1=.L3066, lab2=, loff=0
!   reloc[529]: knd=0, off=53292, siz=4, lab1=.L3067, lab2=, loff=0
!   reloc[530]: knd=0, off=53296, siz=4, lab1=.L3361, lab2=, loff=0
!   reloc[531]: knd=0, off=53982, siz=4, lab1=.L3068, lab2=, loff=0
!   reloc[532]: knd=0, off=53986, siz=4, lab1=.L3360, lab2=, loff=0
!   reloc[533]: knd=0, off=53991, siz=4, lab1=.L3074, lab2=, loff=0
!   reloc[534]: knd=0, off=53995, siz=4, lab1=.L3357, lab2=, loff=0
!   reloc[535]: knd=0, off=54000, siz=4, lab1=.L3075, lab2=, loff=0
!   reloc[536]: knd=0, off=54004, siz=4, lab1=.L3356, lab2=, loff=0
!   reloc[537]: knd=0, off=54114, siz=4, lab1=.L3145, lab2=, loff=0
!   reloc[538]: knd=0, off=54118, siz=4, lab1=.L3195, lab2=, loff=0
!   reloc[539]: knd=0, off=54123, siz=4, lab1=.L3150, lab2=, loff=0
!   reloc[540]: knd=0, off=54127, siz=4, lab1=.L3194, lab2=, loff=0
!   reloc[541]: knd=0, off=54132, siz=4, lab1=.L3151, lab2=, loff=0
!   reloc[542]: knd=0, off=54136, siz=4, lab1=.L3193, lab2=, loff=0
!   reloc[543]: knd=0, off=54178, siz=4, lab1=.L3166, lab2=, loff=0
!   reloc[544]: knd=0, off=54182, siz=4, lab1=.L3184, lab2=, loff=0
!   reloc[545]: knd=0, off=54224, siz=4, lab1=.L3224, lab2=, loff=0
!   reloc[546]: knd=0, off=54228, siz=4, lab1=.L3355, lab2=, loff=0
!   reloc[547]: knd=0, off=54233, siz=4, lab1=.L3230, lab2=, loff=0
!   reloc[548]: knd=0, off=54237, siz=4, lab1=.L3352, lab2=, loff=0
!   reloc[549]: knd=0, off=54242, siz=4, lab1=.L3231, lab2=, loff=0
!   reloc[550]: knd=0, off=54246, siz=4, lab1=.L3351, lab2=, loff=0
!   reloc[551]: knd=0, off=54373, siz=4, lab1=.L3237, lab2=, loff=0
!   reloc[552]: knd=0, off=54377, siz=4, lab1=.L3283, lab2=, loff=0
!   reloc[553]: knd=0, off=54443, siz=4, lab1=.L3284, lab2=, loff=0
!   reloc[554]: knd=0, off=54447, siz=4, lab1=.L3300, lab2=, loff=0
!   reloc[555]: knd=0, off=54473, siz=4, lab1=.L3301, lab2=, loff=0
!   reloc[556]: knd=0, off=54477, siz=4, lab1=.L3322, lab2=, loff=0
!   reloc[557]: knd=0, off=54531, siz=4, lab1=.L3303, lab2=, loff=0
!   reloc[558]: knd=0, off=54535, siz=4, lab1=.L3321, lab2=, loff=0
!   reloc[559]: knd=0, off=54540, siz=4, lab1=.L3308, lab2=, loff=0
!   reloc[560]: knd=0, off=54544, siz=4, lab1=.L3319, lab2=, loff=0
!   reloc[561]: knd=0, off=54549, siz=4, lab1=.L3309, lab2=, loff=0
!   reloc[562]: knd=0, off=54553, siz=4, lab1=.L3318, lab2=, loff=0
!   reloc[563]: knd=0, off=54632, siz=4, lab1=flat_color_z_triangle, lab2=, loff=0
!   reloc[564]: knd=0, off=54636, siz=4, lab1=.L3780, lab2=, loff=0
!   reloc[565]: knd=0, off=54744, siz=4, lab1=.L3372, lab2=, loff=0
!   reloc[566]: knd=0, off=54748, siz=4, lab1=.L3778, lab2=, loff=0
!   reloc[567]: knd=0, off=55029, siz=4, lab1=.L3374, lab2=, loff=0
!   reloc[568]: knd=0, off=55033, siz=4, lab1=.L3450, lab2=, loff=0
!   reloc[569]: knd=0, off=55084, siz=4, lab1=.L3460, lab2=, loff=0
!   reloc[570]: knd=0, off=55088, siz=4, lab1=.L3474, lab2=, loff=0
!   reloc[571]: knd=0, off=55111, siz=4, lab1=.L3475, lab2=, loff=0
!   reloc[572]: knd=0, off=55115, siz=4, lab1=.L3535, lab2=, loff=0
!   reloc[573]: knd=0, off=55220, siz=4, lab1=.L3483, lab2=, loff=0
!   reloc[574]: knd=0, off=55224, siz=4, lab1=.L3502, lab2=, loff=0
!   reloc[575]: knd=0, off=55229, siz=4, lab1=.L3487, lab2=, loff=0
!   reloc[576]: knd=0, off=55233, siz=4, lab1=.L3495, lab2=, loff=0
!   reloc[577]: knd=0, off=55238, siz=4, lab1=.L3488, lab2=, loff=0
!   reloc[578]: knd=0, off=55242, siz=4, lab1=.L3494, lab2=, loff=0
!   reloc[579]: knd=0, off=55267, siz=4, lab1=.L3505, lab2=, loff=0
!   reloc[580]: knd=0, off=55271, siz=4, lab1=.L3518, lab2=, loff=0
!   reloc[581]: knd=0, off=55276, siz=4, lab1=.L3509, lab2=, loff=0
!   reloc[582]: knd=0, off=55280, siz=4, lab1=.L3517, lab2=, loff=0
!   reloc[583]: knd=0, off=55285, siz=4, lab1=.L3510, lab2=, loff=0
!   reloc[584]: knd=0, off=55289, siz=4, lab1=.L3516, lab2=, loff=0
!   reloc[585]: knd=0, off=55314, siz=4, lab1=.L3521, lab2=, loff=0
!   reloc[586]: knd=0, off=55318, siz=4, lab1=.L3534, lab2=, loff=0
!   reloc[587]: knd=0, off=55323, siz=4, lab1=.L3525, lab2=, loff=0
!   reloc[588]: knd=0, off=55327, siz=4, lab1=.L3533, lab2=, loff=0
!   reloc[589]: knd=0, off=55332, siz=4, lab1=.L3526, lab2=, loff=0
!   reloc[590]: knd=0, off=55336, siz=4, lab1=.L3532, lab2=, loff=0
!   reloc[591]: knd=0, off=55362, siz=4, lab1=.L3536, lab2=, loff=0
!   reloc[592]: knd=0, off=55366, siz=4, lab1=.L3777, lab2=, loff=0
!   reloc[593]: knd=0, off=55523, siz=4, lab1=.L3539, lab2=, loff=0
!   reloc[594]: knd=0, off=55527, siz=4, lab1=.L3563, lab2=, loff=0
!   reloc[595]: knd=0, off=55575, siz=4, lab1=.L3564, lab2=, loff=0
!   reloc[596]: knd=0, off=55579, siz=4, lab1=.L3776, lab2=, loff=0
!   reloc[597]: knd=0, off=56025, siz=4, lab1=.L3565, lab2=, loff=0
!   reloc[598]: knd=0, off=56029, siz=4, lab1=.L3775, lab2=, loff=0
!   reloc[599]: knd=0, off=56034, siz=4, lab1=.L3571, lab2=, loff=0
!   reloc[600]: knd=0, off=56038, siz=4, lab1=.L3772, lab2=, loff=0
!   reloc[601]: knd=0, off=56043, siz=4, lab1=.L3572, lab2=, loff=0
!   reloc[602]: knd=0, off=56047, siz=4, lab1=.L3771, lab2=, loff=0
!   reloc[603]: knd=0, off=56157, siz=4, lab1=.L3642, lab2=, loff=0
!   reloc[604]: knd=0, off=56161, siz=4, lab1=.L3684, lab2=, loff=0
!   reloc[605]: knd=0, off=56166, siz=4, lab1=.L3647, lab2=, loff=0
!   reloc[606]: knd=0, off=56170, siz=4, lab1=.L3683, lab2=, loff=0
!   reloc[607]: knd=0, off=56175, siz=4, lab1=.L3648, lab2=, loff=0
!   reloc[608]: knd=0, off=56179, siz=4, lab1=.L3682, lab2=, loff=0
!   reloc[609]: knd=0, off=56221, siz=4, lab1=.L3663, lab2=, loff=0
!   reloc[610]: knd=0, off=56225, siz=4, lab1=.L3681, lab2=, loff=0
!   reloc[611]: knd=0, off=56267, siz=4, lab1=.L3709, lab2=, loff=0
!   reloc[612]: knd=0, off=56271, siz=4, lab1=.L3770, lab2=, loff=0
!   reloc[613]: knd=0, off=56276, siz=4, lab1=.L3715, lab2=, loff=0
!   reloc[614]: knd=0, off=56280, siz=4, lab1=.L3767, lab2=, loff=0
!   reloc[615]: knd=0, off=56285, siz=4, lab1=.L3716, lab2=, loff=0
!   reloc[616]: knd=0, off=56289, siz=4, lab1=.L3766, lab2=, loff=0
!   reloc[617]: knd=0, off=56348, siz=4, lab1=.L3720, lab2=, loff=0
!   reloc[618]: knd=0, off=56352, siz=4, lab1=.L3741, lab2=, loff=0
!   reloc[619]: knd=0, off=56406, siz=4, lab1=.L3722, lab2=, loff=0
!   reloc[620]: knd=0, off=56410, siz=4, lab1=.L3740, lab2=, loff=0
!   reloc[621]: knd=0, off=56415, siz=4, lab1=.L3727, lab2=, loff=0
!   reloc[622]: knd=0, off=56419, siz=4, lab1=.L3738, lab2=, loff=0
!   reloc[623]: knd=0, off=56424, siz=4, lab1=.L3728, lab2=, loff=0
!   reloc[624]: knd=0, off=56428, siz=4, lab1=.L3737, lab2=, loff=0
!   reloc[625]: knd=0, off=56496, siz=4, lab1=choose_triangle_function, lab2=, loff=0
!   reloc[626]: knd=0, off=56500, siz=4, lab1=.L3846, lab2=, loff=0
!   reloc[627]: knd=0, off=56573, siz=4, lab1=renderer_string, lab2=, loff=0
!   reloc[628]: knd=0, off=56577, siz=4, lab1=.L3855, lab2=, loff=0
!   reloc[629]: knd=0, off=56629, siz=4, lab1=osmesa_setup_DD_pointers, lab2=, loff=0
!   reloc[630]: knd=0, off=56633, siz=4, lab1=.L3909, lab2=, loff=0
	.section ".debug_info"
	.byte 0x00,0x00,0xdf,0x80,0x00,0x02
	.uaword %section_symbol(".debug_abbrev")
	.byte 0x04,0x01
	.ascii "osmesa.c\0"
	.byte 0x0c
	.ascii "/home/faculty/koppel/teach/gpcom/gpup/rsim/mesa/no-opt\0"
	.ascii " /local/SUNWspro/prod/bin/cc -g -xtarget=ultraT2 -S  osmesa.c -W0,-xp\\$XAa59JCSsd3LG_K.\0"
	.ascii "Xa;g;R=Sun C 5.9 SunOS_sparc 2007/05/03;G=$XAa59JCSsd3LG_K.;backend;raw;cd;\0"
	.ascii "DBG_GEN 5.2.1\0"
	.uaword %section_symbol(".debug_line")
	.byte 0x02
	.ascii "int\0"
	.byte 0x05,0x04,0x03,0x00,0x00,0x01,0x03
	.ascii "GLint\0"
	.byte 0x03,0x04
	.ascii "HashTable\0"
	.byte 0x01,0x05,0x00,0x00,0x01,0x16,0x02
	.ascii "unsigned\0"
	.byte 0x07,0x04,0x03,0x00,0x00,0x01,0x27
	.ascii "GLuint\0"
	.byte 0x03,0x02
	.ascii "float\0"
	.byte 0x04,0x04,0x03,0x00,0x00,0x01,0x40
	.ascii "GLfloat\0"
	.byte 0x03,0x02
	.ascii "long\0"
	.byte 0x05,0x04,0x06,0x00,0x00,0x01,0x0a,0x10
	.byte 0x00,0x00,0x01,0x70,0x07,0x00,0x00,0x01
	.byte 0x57,0x03,0x00,0x08,0x04,0x03,0x00,0x00
	.byte 0x31,0x0c,0x09
	.ascii "GL_FALSE\0"
	.byte 0x00,0x09
	.ascii "GL_TRUE\0"
	.byte 0x01,0x09
	.ascii "GL_BYTE\0"
	.byte 0x80,0x28,0x09
	.ascii "GL_UNSIGNED_BYTE\0"
	.byte 0x81,0x28,0x09
	.ascii "GL_SHORT\0"
	.byte 0x82,0x28,0x09
	.ascii "GL_UNSIGNED_SHORT\0"
	.byte 0x83,0x28,0x09
	.ascii "GL_INT\0"
	.byte 0x84,0x28,0x09
	.ascii "GL_UNSIGNED_INT\0"
	.byte 0x85,0x28,0x09
	.ascii "GL_FLOAT\0"
	.byte 0x86,0x28,0x09
	.ascii "GL_DOUBLE\0"
	.byte 0x8a,0x28,0x09
	.ascii "GL_2_BYTES\0"
	.byte 0x87,0x28,0x09
	.ascii "GL_3_BYTES\0"
	.byte 0x88,0x28,0x09
	.ascii "GL_4_BYTES\0"
	.byte 0x89,0x28,0x09
	.ascii "GL_LINES\0"
	.byte 0x01,0x09
	.ascii "GL_POINTS\0"
	.byte 0x00,0x09
	.ascii "GL_LINE_STRIP\0"
	.byte 0x03,0x09
	.ascii "GL_LINE_LOOP\0"
	.byte 0x02,0x09
	.ascii "GL_TRIANGLES\0"
	.byte 0x04,0x09
	.ascii "GL_TRIANGLE_STRIP\0"
	.byte 0x05,0x09
	.ascii "GL_TRIANGLE_FAN\0"
	.byte 0x06,0x09
	.ascii "GL_QUADS\0"
	.byte 0x07,0x09
	.ascii "GL_QUAD_STRIP\0"
	.byte 0x08,0x09
	.ascii "GL_POLYGON\0"
	.byte 0x09,0x09
	.ascii "GL_EDGE_FLAG\0"
	.byte 0xc3,0x16,0x09
	.ascii "GL_VERTEX_ARRAY\0"
	.byte 0xf4,0x80,0x02,0x09
	.ascii "GL_NORMAL_ARRAY\0"
	.byte 0xf5,0x80,0x02,0x09
	.ascii "GL_COLOR_ARRAY\0"
	.byte 0xf6,0x80,0x02,0x09
	.ascii "GL_INDEX_ARRAY\0"
	.byte 0xf7,0x80,0x02,0x09
	.ascii "GL_TEXTURE_COORD_ARRAY\0"
	.byte 0xf8,0x80,0x02,0x09
	.ascii "GL_EDGE_FLAG_ARRAY\0"
	.byte 0xf9,0x80,0x02,0x09
	.ascii "GL_VERTEX_ARRAY_SIZE\0"
	.byte 0xfa,0x80,0x02,0x09
	.ascii "GL_VERTEX_ARRAY_TYPE\0"
	.byte 0xfb,0x80,0x02,0x09
	.ascii "GL_VERTEX_ARRAY_STRIDE\0"
	.byte 0xfc,0x80,0x02,0x09
	.ascii "GL_NORMAL_ARRAY_TYPE\0"
	.byte 0xfe,0x80,0x02,0x09
	.ascii "GL_NORMAL_ARRAY_STRIDE\0"
	.byte 0xff,0x80,0x02,0x09
	.ascii "GL_COLOR_ARRAY_SIZE\0"
	.byte 0x81,0x81,0x02,0x09
	.ascii "GL_COLOR_ARRAY_TYPE\0"
	.byte 0x82,0x81,0x02,0x09
	.ascii "GL_COLOR_ARRAY_STRIDE\0"
	.byte 0x83,0x81,0x02,0x09
	.ascii "GL_INDEX_ARRAY_TYPE\0"
	.byte 0x85,0x81,0x02,0x09
	.ascii "GL_INDEX_ARRAY_STRIDE\0"
	.byte 0x86,0x81,0x02,0x09
	.ascii "GL_TEXTURE_COORD_ARRAY_SIZE\0"
	.byte 0x88,0x81,0x02,0x09
	.ascii "GL_TEXTURE_COORD_ARRAY_TYPE\0"
	.byte 0x89,0x81,0x02,0x09
	.ascii "GL_TEXTURE_COORD_ARRAY_STRIDE\0"
	.byte 0x8a,0x81,0x02,0x09
	.ascii "GL_EDGE_FLAG_ARRAY_STRIDE\0"
	.byte 0x8c,0x81,0x02,0x09
	.ascii "GL_VERTEX_ARRAY_POINTER\0"
	.byte 0x8e,0x81,0x02,0x09
	.ascii "GL_NORMAL_ARRAY_POINTER\0"
	.byte 0x8f,0x81,0x02,0x09
	.ascii "GL_COLOR_ARRAY_POINTER\0"
	.byte 0x90,0x81,0x02,0x09
	.ascii "GL_INDEX_ARRAY_POINTER\0"
	.byte 0x91,0x81,0x02,0x09
	.ascii "GL_TEXTURE_COORD_ARRAY_POINTER\0"
	.byte 0x92,0x81,0x02,0x09
	.ascii "GL_EDGE_FLAG_ARRAY_POINTER\0"
	.byte 0x93,0x81,0x02,0x09
	.ascii "GL_V2F\0"
	.byte 0xa0,0xd4,0x00,0x09
	.ascii "GL_V3F\0"
	.byte 0xa1,0xd4,0x00,0x09
	.ascii "GL_C4UB_V2F\0"
	.byte 0xa2,0xd4,0x00,0x09
	.ascii "GL_C4UB_V3F\0"
	.byte 0xa3,0xd4,0x00,0x09
	.ascii "GL_C3F_V3F\0"
	.byte 0xa4,0xd4,0x00,0x09
	.ascii "GL_N3F_V3F\0"
	.byte 0xa5,0xd4,0x00,0x09
	.ascii "GL_C4F_N3F_V3F\0"
	.byte 0xa6,0xd4,0x00,0x09
	.ascii "GL_T2F_V3F\0"
	.byte 0xa7,0xd4,0x00,0x09
	.ascii "GL_T4F_V4F\0"
	.byte 0xa8,0xd4,0x00,0x09
	.ascii "GL_T2F_C4UB_V3F\0"
	.byte 0xa9,0xd4,0x00,0x09
	.ascii "GL_T2F_C3F_V3F\0"
	.byte 0xaa,0xd4,0x00,0x09
	.ascii "GL_T2F_N3F_V3F\0"
	.byte 0xab,0xd4,0x00,0x09
	.ascii "GL_T2F_C4F_N3F_V3F\0"
	.byte 0xac,0xd4,0x00,0x09
	.ascii "GL_T4F_C4F_N3F_V4F\0"
	.byte 0xad,0xd4,0x00,0x09
	.ascii "GL_MATRIX_MODE\0"
	.byte 0xa0,0x17,0x09
	.ascii "GL_MODELVIEW\0"
	.byte 0x80,0x2e,0x09
	.ascii "GL_PROJECTION\0"
	.byte 0x81,0x2e,0x09
	.ascii "GL_TEXTURE\0"
	.byte 0x82,0x2e,0x09
	.ascii "GL_POINT_SMOOTH\0"
	.byte 0x90,0x16,0x09
	.ascii "GL_POINT_SIZE\0"
	.byte 0x91,0x16,0x09
	.ascii "GL_POINT_SIZE_GRANULARITY\0"
	.byte 0x93,0x16,0x09
	.ascii "GL_POINT_SIZE_RANGE\0"
	.byte 0x92,0x16,0x09
	.ascii "GL_LINE_SMOOTH\0"
	.byte 0xa0,0x16,0x09
	.ascii "GL_LINE_STIPPLE\0"
	.byte 0xa4,0x16,0x09
	.ascii "GL_LINE_STIPPLE_PATTERN\0"
	.byte 0xa5,0x16,0x09
	.ascii "GL_LINE_STIPPLE_REPEAT\0"
	.byte 0xa6,0x16,0x09
	.ascii "GL_LINE_WIDTH\0"
	.byte 0xa1,0x16,0x09
	.ascii "GL_LINE_WIDTH_GRANULARITY\0"
	.byte 0xa3,0x16,0x09
	.ascii "GL_LINE_WIDTH_RANGE\0"
	.byte 0xa2,0x16,0x09
	.ascii "GL_POINT\0"
	.byte 0x80,0x36,0x09
	.ascii "GL_LINE\0"
	.byte 0x81,0x36,0x09
	.ascii "GL_FILL\0"
	.byte 0x82,0x36,0x09
	.ascii "GL_CCW\0"
	.byte 0x81,0x12,0x09
	.ascii "GL_CW\0"
	.byte 0x80,0x12,0x09
	.ascii "GL_FRONT\0"
	.byte 0x84,0x08,0x09
	.ascii "GL_BACK\0"
	.byte 0x85,0x08,0x09
	.ascii "GL_CULL_FACE\0"
	.byte 0xc4,0x16,0x09
	.ascii "GL_CULL_FACE_MODE\0"
	.byte 0xc5,0x16,0x09
	.ascii "GL_POLYGON_SMOOTH\0"
	.byte 0xc1,0x16,0x09
	.ascii "GL_POLYGON_STIPPLE\0"
	.byte 0xc2,0x16,0x09
	.ascii "GL_FRONT_FACE\0"
	.byte 0xc6,0x16,0x09
	.ascii "GL_POLYGON_MODE\0"
	.byte 0xc0,0x16,0x09
	.ascii "GL_POLYGON_OFFSET_FACTOR\0"
	.byte 0xb8,0x80,0x02,0x09
	.ascii "GL_POLYGON_OFFSET_UNITS\0"
	.byte 0x80,0xd4,0x00,0x09
	.ascii "GL_POLYGON_OFFSET_POINT\0"
	.byte 0x81,0xd4,0x00,0x09
	.ascii "GL_POLYGON_OFFSET_LINE\0"
	.byte 0x82,0xd4,0x00,0x09
	.ascii "GL_POLYGON_OFFSET_FILL\0"
	.byte 0xb7,0x80,0x02,0x09
	.ascii "GL_COMPILE\0"
	.byte 0x80,0x26,0x09
	.ascii "GL_COMPILE_AND_EXECUTE\0"
	.byte 0x81,0x26,0x09
	.ascii "GL_LIST_BASE\0"
	.byte 0xb2,0x16,0x09
	.ascii "GL_LIST_INDEX\0"
	.byte 0xb3,0x16,0x09
	.ascii "GL_LIST_MODE\0"
	.byte 0xb0,0x16,0x09
	.ascii "GL_NEVER\0"
	.byte 0x80,0x04,0x09
	.ascii "GL_LESS\0"
	.byte 0x81,0x04,0x09
	.ascii "GL_GEQUAL\0"
	.byte 0x86,0x04,0x09
	.ascii "GL_LEQUAL\0"
	.byte 0x83,0x04,0x09
	.ascii "GL_GREATER\0"
	.byte 0x84,0x04,0x09
	.ascii "GL_NOTEQUAL\0"
	.byte 0x85,0x04,0x09
	.ascii "GL_EQUAL\0"
	.byte 0x82,0x04,0x09
	.ascii "GL_ALWAYS\0"
	.byte 0x87,0x04,0x09
	.ascii "GL_DEPTH_TEST\0"
	.byte 0xf1,0x16,0x09
	.ascii "GL_DEPTH_BITS\0"
	.byte 0xd6,0x1a,0x09
	.ascii "GL_DEPTH_CLEAR_VALUE\0"
	.byte 0xf3,0x16,0x09
	.ascii "GL_DEPTH_FUNC\0"
	.byte 0xf4,0x16,0x09
	.ascii "GL_DEPTH_RANGE\0"
	.byte 0xf0,0x16,0x09
	.ascii "GL_DEPTH_WRITEMASK\0"
	.byte 0xf2,0x16,0x09
	.ascii "GL_DEPTH_COMPONENT\0"
	.byte 0x82,0x32,0x09
	.ascii "GL_LIGHTING\0"
	.byte 0xd0,0x16,0x09
	.ascii "GL_LIGHT0\0"
	.byte 0x80,0x80,0x01,0x09
	.ascii "GL_LIGHT1\0"
	.byte 0x81,0x80,0x01,0x09
	.ascii "GL_LIGHT2\0"
	.byte 0x82,0x80,0x01,0x09
	.ascii "GL_LIGHT3\0"
	.byte 0x83,0x80,0x01,0x09
	.ascii "GL_LIGHT4\0"
	.byte 0x84,0x80,0x01,0x09
	.ascii "GL_LIGHT5\0"
	.byte 0x85,0x80,0x01,0x09
	.ascii "GL_LIGHT6\0"
	.byte 0x86,0x80,0x01,0x09
	.ascii "GL_LIGHT7\0"
	.byte 0x87,0x80,0x01,0x09
	.ascii "GL_SPOT_EXPONENT\0"
	.byte 0x85,0x24,0x09
	.ascii "GL_SPOT_CUTOFF\0"
	.byte 0x86,0x24,0x09
	.ascii "GL_CONSTANT_ATTENUATION\0"
	.byte 0x87,0x24,0x09
	.ascii "GL_LINEAR_ATTENUATION\0"
	.byte 0x88,0x24,0x09
	.ascii "GL_QUADRATIC_ATTENUATION\0"
	.byte 0x89,0x24,0x09
	.ascii "GL_AMBIENT\0"
	.byte 0x80,0x24,0x09
	.ascii "GL_DIFFUSE\0"
	.byte 0x81,0x24,0x09
	.ascii "GL_SPECULAR\0"
	.byte 0x82,0x24,0x09
	.ascii "GL_SHININESS\0"
	.byte 0x81,0x2c,0x09
	.ascii "GL_EMISSION\0"
	.byte 0x80,0x2c,0x09
	.ascii "GL_POSITION\0"
	.byte 0x83,0x24,0x09
	.ascii "GL_SPOT_DIRECTION\0"
	.byte 0x84,0x24,0x09
	.ascii "GL_AMBIENT_AND_DIFFUSE\0"
	.byte 0x82,0x2c,0x09
	.ascii "GL_COLOR_INDEXES\0"
	.byte 0x83,0x2c,0x09
	.ascii "GL_LIGHT_MODEL_TWO_SIDE\0"
	.byte 0xd2,0x16,0x09
	.ascii "GL_LIGHT_MODEL_LOCAL_VIEWER\0"
	.byte 0xd1,0x16,0x09
	.ascii "GL_LIGHT_MODEL_AMBIENT\0"
	.byte 0xd3,0x16,0x09
	.ascii "GL_FRONT_AND_BACK\0"
	.byte 0x88,0x08,0x09
	.ascii "GL_SHADE_MODEL\0"
	.byte 0xd4,0x16,0x09
	.ascii "GL_FLAT\0"
	.byte 0x80,0x3a,0x09
	.ascii "GL_SMOOTH\0"
	.byte 0x81,0x3a,0x09
	.ascii "GL_COLOR_MATERIAL\0"
	.byte 0xd7,0x16,0x09
	.ascii "GL_COLOR_MATERIAL_FACE\0"
	.byte 0xd5,0x16,0x09
	.ascii "GL_COLOR_MATERIAL_PARAMETER\0"
	.byte 0xd6,0x16,0x09
	.ascii "GL_NORMALIZE\0"
	.byte 0xa1,0x17,0x09
	.ascii "GL_CLIP_PLANE0\0"
	.byte 0x80,0xe0,0x00,0x09
	.ascii "GL_CLIP_PLANE1\0"
	.byte 0x81,0xe0,0x00,0x09
	.ascii "GL_CLIP_PLANE2\0"
	.byte 0x82,0xe0,0x00,0x09
	.ascii "GL_CLIP_PLANE3\0"
	.byte 0x83,0xe0,0x00,0x09
	.ascii "GL_CLIP_PLANE4\0"
	.byte 0x84,0xe0,0x00,0x09
	.ascii "GL_CLIP_PLANE5\0"
	.byte 0x85,0xe0,0x00,0x09
	.ascii "GL_ACCUM_RED_BITS\0"
	.byte 0xd8,0x1a,0x09
	.ascii "GL_ACCUM_GREEN_BITS\0"
	.byte 0xd9,0x1a,0x09
	.ascii "GL_ACCUM_BLUE_BITS\0"
	.byte 0xda,0x1a,0x09
	.ascii "GL_ACCUM_ALPHA_BITS\0"
	.byte 0xdb,0x1a,0x09
	.ascii "GL_ACCUM_CLEAR_VALUE\0"
	.byte 0x80,0x17,0x09
	.ascii "GL_ACCUM\0"
	.byte 0x80,0x02,0x09
	.ascii "GL_ADD\0"
	.byte 0x84,0x02,0x09
	.ascii "GL_LOAD\0"
	.byte 0x81,0x02,0x09
	.ascii "GL_MULT\0"
	.byte 0x83,0x02,0x09
	.ascii "GL_RETURN\0"
	.byte 0x82,0x02,0x09
	.ascii "GL_ALPHA_TEST\0"
	.byte 0xc0,0x17,0x09
	.ascii "GL_ALPHA_TEST_REF\0"
	.byte 0xc2,0x17,0x09
	.ascii "GL_ALPHA_TEST_FUNC\0"
	.byte 0xc1,0x17,0x09
	.ascii "GL_BLEND\0"
	.byte 0xe2,0x17,0x09
	.ascii "GL_BLEND_SRC\0"
	.byte 0xe1,0x17,0x09
	.ascii "GL_BLEND_DST\0"
	.byte 0xe0,0x17,0x09
	.ascii "GL_ZERO\0"
	.byte 0x00,0x09
	.ascii "GL_ONE\0"
	.byte 0x01,0x09
	.ascii "GL_SRC_COLOR\0"
	.byte 0x80,0x06,0x09
	.ascii "GL_ONE_MINUS_SRC_COLOR\0"
	.byte 0x81,0x06,0x09
	.ascii "GL_DST_COLOR\0"
	.byte 0x86,0x06,0x09
	.ascii "GL_ONE_MINUS_DST_COLOR\0"
	.byte 0x87,0x06,0x09
	.ascii "GL_SRC_ALPHA\0"
	.byte 0x82,0x06,0x09
	.ascii "GL_ONE_MINUS_SRC_ALPHA\0"
	.byte 0x83,0x06,0x09
	.ascii "GL_DST_ALPHA\0"
	.byte 0x84,0x06,0x09
	.ascii "GL_ONE_MINUS_DST_ALPHA\0"
	.byte 0x85,0x06,0x09
	.ascii "GL_SRC_ALPHA_SATURATE\0"
	.byte 0x88,0x06,0x09
	.ascii "GL_CONSTANT_COLOR\0"
	.byte 0x81,0x80,0x02,0x09
	.ascii "GL_ONE_MINUS_CONSTANT_COLOR\0"
	.byte 0x82,0x80,0x02,0x09
	.ascii "GL_CONSTANT_ALPHA\0"
	.byte 0x83,0x80,0x02,0x09
	.ascii "GL_ONE_MINUS_CONSTANT_ALPHA\0"
	.byte 0x84,0x80,0x02,0x09
	.ascii "GL_FEEDBACK\0"
	.byte 0x81,0x38,0x09
	.ascii "GL_RENDER\0"
	.byte 0x80,0x38,0x09
	.ascii "GL_SELECT\0"
	.byte 0x82,0x38,0x09
	.ascii "GL_2D\0"
	.byte 0x80,0x0c,0x09
	.ascii "GL_3D\0"
	.byte 0x81,0x0c,0x09
	.ascii "GL_3D_COLOR\0"
	.byte 0x82,0x0c,0x09
	.ascii "GL_3D_COLOR_TEXTURE\0"
	.byte 0x83,0x0c,0x09
	.ascii "GL_4D_COLOR_TEXTURE\0"
	.byte 0x84,0x0c,0x09
	.ascii "GL_POINT_TOKEN\0"
	.byte 0x81,0x0e,0x09
	.ascii "GL_LINE_TOKEN\0"
	.byte 0x82,0x0e,0x09
	.ascii "GL_LINE_RESET_TOKEN\0"
	.byte 0x87,0x0e,0x09
	.ascii "GL_POLYGON_TOKEN\0"
	.byte 0x83,0x0e,0x09
	.ascii "GL_BITMAP_TOKEN\0"
	.byte 0x84,0x0e,0x09
	.ascii "GL_DRAW_PIXEL_TOKEN\0"
	.byte 0x85,0x0e,0x09
	.ascii "GL_COPY_PIXEL_TOKEN\0"
	.byte 0x86,0x0e,0x09
	.ascii "GL_PASS_THROUGH_TOKEN\0"
	.byte 0x80,0x0e,0x09
	.ascii "GL_FEEDBACK_BUFFER_POINTER\0"
	.byte 0xf0,0x1b,0x09
	.ascii "GL_FEEDBACK_BUFFER_SIZE\0"
	.byte 0xf1,0x1b,0x09
	.ascii "GL_FEEDBACK_BUFFER_TYPE\0"
	.byte 0xf2,0x1b,0x09
	.ascii "GL_FOG\0"
	.byte 0xe0,0x16,0x09
	.ascii "GL_FOG_MODE\0"
	.byte 0xe5,0x16,0x09
	.ascii "GL_FOG_DENSITY\0"
	.byte 0xe2,0x16,0x09
	.ascii "GL_FOG_COLOR\0"
	.byte 0xe6,0x16,0x09
	.ascii "GL_FOG_INDEX\0"
	.byte 0xe1,0x16,0x09
	.ascii "GL_FOG_START\0"
	.byte 0xe3,0x16,0x09
	.ascii "GL_FOG_END\0"
	.byte 0xe4,0x16,0x09
	.ascii "GL_LINEAR\0"
	.byte 0x81,0xcc,0x00,0x09
	.ascii "GL_EXP\0"
	.byte 0x80,0x10,0x09
	.ascii "GL_EXP2\0"
	.byte 0x81,0x10,0x09
	.ascii "GL_LOGIC_OP\0"
	.byte 0xf1,0x17,0x09
	.ascii "GL_INDEX_LOGIC_OP\0"
	.byte 0xf1,0x17,0x09
	.ascii "GL_COLOR_LOGIC_OP\0"
	.byte 0xf2,0x17,0x09
	.ascii "GL_LOGIC_OP_MODE\0"
	.byte 0xf0,0x17,0x09
	.ascii "GL_CLEAR\0"
	.byte 0x80,0x2a,0x09
	.ascii "GL_SET\0"
	.byte 0x8f,0x2a,0x09
	.ascii "GL_COPY\0"
	.byte 0x83,0x2a,0x09
	.ascii "GL_COPY_INVERTED\0"
	.byte 0x8c,0x2a,0x09
	.ascii "GL_NOOP\0"
	.byte 0x85,0x2a,0x09
	.ascii "GL_INVERT\0"
	.byte 0x8a,0x2a,0x09
	.ascii "GL_AND\0"
	.byte 0x81,0x2a,0x09
	.ascii "GL_NAND\0"
	.byte 0x8e,0x2a,0x09
	.ascii "GL_OR\0"
	.byte 0x87,0x2a,0x09
	.ascii "GL_NOR\0"
	.byte 0x88,0x2a,0x09
	.ascii "GL_XOR\0"
	.byte 0x86,0x2a,0x09
	.ascii "GL_EQUIV\0"
	.byte 0x89,0x2a,0x09
	.ascii "GL_AND_REVERSE\0"
	.byte 0x82,0x2a,0x09
	.ascii "GL_AND_INVERTED\0"
	.byte 0x84,0x2a,0x09
	.ascii "GL_OR_REVERSE\0"
	.byte 0x8b,0x2a,0x09
	.ascii "GL_OR_INVERTED\0"
	.byte 0x8d,0x2a,0x09
	.ascii "GL_STENCIL_TEST\0"
	.byte 0x90,0x17,0x09
	.ascii "GL_STENCIL_WRITEMASK\0"
	.byte 0x98,0x17,0x09
	.ascii "GL_STENCIL_BITS\0"
	.byte 0xd7,0x1a,0x09
	.ascii "GL_STENCIL_FUNC\0"
	.byte 0x92,0x17,0x09
	.ascii "GL_STENCIL_VALUE_MASK\0"
	.byte 0x93,0x17,0x09
	.ascii "GL_STENCIL_REF\0"
	.byte 0x97,0x17,0x09
	.ascii "GL_STENCIL_FAIL\0"
	.byte 0x94,0x17,0x09
	.ascii "GL_STENCIL_PASS_DEPTH_PASS\0"
	.byte 0x96,0x17,0x09
	.ascii "GL_STENCIL_PASS_DEPTH_FAIL\0"
	.byte 0x95,0x17,0x09
	.ascii "GL_STENCIL_CLEAR_VALUE\0"
	.byte 0x91,0x17,0x09
	.ascii "GL_STENCIL_INDEX\0"
	.byte 0x81,0x32,0x09
	.ascii "GL_KEEP\0"
	.byte 0x80,0x3c,0x09
	.ascii "GL_REPLACE\0"
	.byte 0x81,0x3c,0x09
	.ascii "GL_INCR\0"
	.byte 0x82,0x3c,0x09
	.ascii "GL_DECR\0"
	.byte 0x83,0x3c,0x09
	.ascii "GL_NONE\0"
	.byte 0x00,0x09
	.ascii "GL_LEFT\0"
	.byte 0x86,0x08,0x09
	.ascii "GL_RIGHT\0"
	.byte 0x87,0x08,0x09
	.ascii "GL_FRONT_LEFT\0"
	.byte 0x80,0x08,0x09
	.ascii "GL_FRONT_RIGHT\0"
	.byte 0x81,0x08,0x09
	.ascii "GL_BACK_LEFT\0"
	.byte 0x82,0x08,0x09
	.ascii "GL_BACK_RIGHT\0"
	.byte 0x83,0x08,0x09
	.ascii "GL_AUX0\0"
	.byte 0x89,0x08,0x09
	.ascii "GL_AUX1\0"
	.byte 0x8a,0x08,0x09
	.ascii "GL_AUX2\0"
	.byte 0x8b,0x08,0x09
	.ascii "GL_AUX3\0"
	.byte 0x8c,0x08,0x09
	.ascii "GL_COLOR_INDEX\0"
	.byte 0x80,0x32,0x09
	.ascii "GL_RED\0"
	.byte 0x83,0x32,0x09
	.ascii "GL_GREEN\0"
	.byte 0x84,0x32,0x09
	.ascii "GL_BLUE\0"
	.byte 0x85,0x32,0x09
	.ascii "GL_ALPHA\0"
	.byte 0x86,0x32,0x09
	.ascii "GL_LUMINANCE\0"
	.byte 0x89,0x32,0x09
	.ascii "GL_LUMINANCE_ALPHA\0"
	.byte 0x8a,0x32,0x09
	.ascii "GL_ALPHA_BITS\0"
	.byte 0xd5,0x1a,0x09
	.ascii "GL_RED_BITS\0"
	.byte 0xd2,0x1a,0x09
	.ascii "GL_GREEN_BITS\0"
	.byte 0xd3,0x1a,0x09
	.ascii "GL_BLUE_BITS\0"
	.byte 0xd4,0x1a,0x09
	.ascii "GL_INDEX_BITS\0"
	.byte 0xd1,0x1a,0x09
	.ascii "GL_SUBPIXEL_BITS\0"
	.byte 0xd0,0x1a,0x09
	.ascii "GL_AUX_BUFFERS\0"
	.byte 0x80,0x18,0x09
	.ascii "GL_READ_BUFFER\0"
	.byte 0x82,0x18,0x09
	.ascii "GL_DRAW_BUFFER\0"
	.byte 0x81,0x18,0x09
	.ascii "GL_DOUBLEBUFFER\0"
	.byte 0xb2,0x18,0x09
	.ascii "GL_STEREO\0"
	.byte 0xb3,0x18,0x09
	.ascii "GL_BITMAP\0"
	.byte 0x80,0x34,0x09
	.ascii "GL_COLOR\0"
	.byte 0x80,0x30,0x09
	.ascii "GL_DEPTH\0"
	.byte 0x81,0x30,0x09
	.ascii "GL_STENCIL\0"
	.byte 0x82,0x30,0x09
	.ascii "GL_DITHER\0"
	.byte 0xd0,0x17,0x09
	.ascii "GL_RGB\0"
	.byte 0x87,0x32,0x09
	.ascii "GL_RGBA\0"
	.byte 0x88,0x32,0x09
	.ascii "GL_MAX_LIST_NESTING\0"
	.byte 0xb1,0x16,0x09
	.ascii "GL_MAX_ATTRIB_STACK_DEPTH\0"
	.byte 0xb5,0x1a,0x09
	.ascii "GL_MAX_MODELVIEW_STACK_DEPTH\0"
	.byte 0xb6,0x1a,0x09
	.ascii "GL_MAX_NAME_STACK_DEPTH\0"
	.byte 0xb7,0x1a,0x09
	.ascii "GL_MAX_PROJECTION_STACK_DEPTH\0"
	.byte 0xb8,0x1a,0x09
	.ascii "GL_MAX_TEXTURE_STACK_DEPTH\0"
	.byte 0xb9,0x1a,0x09
	.ascii "GL_MAX_EVAL_ORDER\0"
	.byte 0xb0,0x1a,0x09
	.ascii "GL_MAX_LIGHTS\0"
	.byte 0xb1,0x1a,0x09
	.ascii "GL_MAX_CLIP_PLANES\0"
	.byte 0xb2,0x1a,0x09
	.ascii "GL_MAX_TEXTURE_SIZE\0"
	.byte 0xb3,0x1a,0x09
	.ascii "GL_MAX_PIXEL_MAP_TABLE\0"
	.byte 0xb4,0x1a,0x09
	.ascii "GL_MAX_VIEWPORT_DIMS\0"
	.byte 0xba,0x1a,0x09
	.ascii "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH\0"
	.byte 0xbb,0x1a,0x09
	.ascii "GL_ATTRIB_STACK_DEPTH\0"
	.byte 0xb0,0x17,0x09
	.ascii "GL_CLIENT_ATTRIB_STACK_DEPTH\0"
	.byte 0xb1,0x17,0x09
	.ascii "GL_COLOR_CLEAR_VALUE\0"
	.byte 0xa2,0x18,0x09
	.ascii "GL_COLOR_WRITEMASK\0"
	.byte 0xa3,0x18,0x09
	.ascii "GL_CURRENT_INDEX\0"
	.byte 0x81,0x16,0x09
	.ascii "GL_CURRENT_COLOR\0"
	.byte 0x80,0x16,0x09
	.ascii "GL_CURRENT_NORMAL\0"
	.byte 0x82,0x16,0x09
	.ascii "GL_CURRENT_RASTER_COLOR\0"
	.byte 0x84,0x16,0x09
	.ascii "GL_CURRENT_RASTER_DISTANCE\0"
	.byte 0x89,0x16,0x09
	.ascii "GL_CURRENT_RASTER_INDEX\0"
	.byte 0x85,0x16,0x09
	.ascii "GL_CURRENT_RASTER_POSITION\0"
	.byte 0x87,0x16,0x09
	.ascii "GL_CURRENT_RASTER_TEXTURE_COORDS\0"
	.byte 0x86,0x16,0x09
	.ascii "GL_CURRENT_RASTER_POSITION_VALID\0"
	.byte 0x88,0x16,0x09
	.ascii "GL_CURRENT_TEXTURE_COORDS\0"
	.byte 0x83,0x16,0x09
	.ascii "GL_INDEX_CLEAR_VALUE\0"
	.byte 0xa0,0x18,0x09
	.ascii "GL_INDEX_MODE\0"
	.byte 0xb0,0x18,0x09
	.ascii "GL_INDEX_WRITEMASK\0"
	.byte 0xa1,0x18,0x09
	.ascii "GL_MODELVIEW_MATRIX\0"
	.byte 0xa6,0x17,0x09
	.ascii "GL_MODELVIEW_STACK_DEPTH\0"
	.byte 0xa3,0x17,0x09
	.ascii "GL_NAME_STACK_DEPTH\0"
	.byte 0xf0,0x1a,0x09
	.ascii "GL_PROJECTION_MATRIX\0"
	.byte 0xa7,0x17,0x09
	.ascii "GL_PROJECTION_STACK_DEPTH\0"
	.byte 0xa4,0x17,0x09
	.ascii "GL_RENDER_MODE\0"
	.byte 0xc0,0x18,0x09
	.ascii "GL_RGBA_MODE\0"
	.byte 0xb1,0x18,0x09
	.ascii "GL_TEXTURE_MATRIX\0"
	.byte 0xa8,0x17,0x09
	.ascii "GL_TEXTURE_STACK_DEPTH\0"
	.byte 0xa5,0x17,0x09
	.ascii "GL_VIEWPORT\0"
	.byte 0xa2,0x17,0x09
	.ascii "GL_AUTO_NORMAL\0"
	.byte 0x80,0x1b,0x09
	.ascii "GL_MAP1_COLOR_4\0"
	.byte 0x90,0x1b,0x09
	.ascii "GL_MAP1_GRID_DOMAIN\0"
	.byte 0xd0,0x1b,0x09
	.ascii "GL_MAP1_GRID_SEGMENTS\0"
	.byte 0xd1,0x1b,0x09
	.ascii "GL_MAP1_INDEX\0"
	.byte 0x91,0x1b,0x09
	.ascii "GL_MAP1_NORMAL\0"
	.byte 0x92,0x1b,0x09
	.ascii "GL_MAP1_TEXTURE_COORD_1\0"
	.byte 0x93,0x1b,0x09
	.ascii "GL_MAP1_TEXTURE_COORD_2\0"
	.byte 0x94,0x1b,0x09
	.ascii "GL_MAP1_TEXTURE_COORD_3\0"
	.byte 0x95,0x1b,0x09
	.ascii "GL_MAP1_TEXTURE_COORD_4\0"
	.byte 0x96,0x1b,0x09
	.ascii "GL_MAP1_VERTEX_3\0"
	.byte 0x97,0x1b,0x09
	.ascii "GL_MAP1_VERTEX_4\0"
	.byte 0x98,0x1b,0x09
	.ascii "GL_MAP2_COLOR_4\0"
	.byte 0xb0,0x1b,0x09
	.ascii "GL_MAP2_GRID_DOMAIN\0"
	.byte 0xd2,0x1b,0x09
	.ascii "GL_MAP2_GRID_SEGMENTS\0"
	.byte 0xd3,0x1b,0x09
	.ascii "GL_MAP2_INDEX\0"
	.byte 0xb1,0x1b,0x09
	.ascii "GL_MAP2_NORMAL\0"
	.byte 0xb2,0x1b,0x09
	.ascii "GL_MAP2_TEXTURE_COORD_1\0"
	.byte 0xb3,0x1b,0x09
	.ascii "GL_MAP2_TEXTURE_COORD_2\0"
	.byte 0xb4,0x1b,0x09
	.ascii "GL_MAP2_TEXTURE_COORD_3\0"
	.byte 0xb5,0x1b,0x09
	.ascii "GL_MAP2_TEXTURE_COORD_4\0"
	.byte 0xb6,0x1b,0x09
	.ascii "GL_MAP2_VERTEX_3\0"
	.byte 0xb7,0x1b,0x09
	.ascii "GL_MAP2_VERTEX_4\0"
	.byte 0xb8,0x1b,0x09
	.ascii "GL_COEFF\0"
	.byte 0x80,0x14,0x09
	.ascii "GL_DOMAIN\0"
	.byte 0x82,0x14,0x09
	.ascii "GL_ORDER\0"
	.byte 0x81,0x14,0x09
	.ascii "GL_FOG_HINT\0"
	.byte 0xd4,0x18,0x09
	.ascii "GL_LINE_SMOOTH_HINT\0"
	.byte 0xd2,0x18,0x09
	.ascii "GL_PERSPECTIVE_CORRECTION_HINT\0"
	.byte 0xd0,0x18,0x09
	.ascii "GL_POINT_SMOOTH_HINT\0"
	.byte 0xd1,0x18,0x09
	.ascii "GL_POLYGON_SMOOTH_HINT\0"
	.byte 0xd3,0x18,0x09
	.ascii "GL_DONT_CARE\0"
	.byte 0x80,0x22,0x09
	.ascii "GL_FASTEST\0"
	.byte 0x81,0x22,0x09
	.ascii "GL_NICEST\0"
	.byte 0x82,0x22,0x09
	.ascii "GL_SCISSOR_TEST\0"
	.byte 0x91,0x18,0x09
	.ascii "GL_SCISSOR_BOX\0"
	.byte 0x90,0x18,0x09
	.ascii "GL_MAP_COLOR\0"
	.byte 0x90,0x1a,0x09
	.ascii "GL_MAP_STENCIL\0"
	.byte 0x91,0x1a,0x09
	.ascii "GL_INDEX_SHIFT\0"
	.byte 0x92,0x1a,0x09
	.ascii "GL_INDEX_OFFSET\0"
	.byte 0x93,0x1a,0x09
	.ascii "GL_RED_SCALE\0"
	.byte 0x94,0x1a,0x09
	.ascii "GL_RED_BIAS\0"
	.byte 0x95,0x1a,0x09
	.ascii "GL_GREEN_SCALE\0"
	.byte 0x98,0x1a,0x09
	.ascii "GL_GREEN_BIAS\0"
	.byte 0x99,0x1a,0x09
	.ascii "GL_BLUE_SCALE\0"
	.byte 0x9a,0x1a,0x09
	.ascii "GL_BLUE_BIAS\0"
	.byte 0x9b,0x1a,0x09
	.ascii "GL_ALPHA_SCALE\0"
	.byte 0x9c,0x1a,0x09
	.ascii "GL_ALPHA_BIAS\0"
	.byte 0x9d,0x1a,0x09
	.ascii "GL_DEPTH_SCALE\0"
	.byte 0x9e,0x1a,0x09
	.ascii "GL_DEPTH_BIAS\0"
	.byte 0x9f,0x1a,0x09
	.ascii "GL_PIXEL_MAP_S_TO_S_SIZE\0"
	.byte 0xb1,0x19,0x09
	.ascii "GL_PIXEL_MAP_I_TO_I_SIZE\0"
	.byte 0xb0,0x19,0x09
	.ascii "GL_PIXEL_MAP_I_TO_R_SIZE\0"
	.byte 0xb2,0x19,0x09
	.ascii "GL_PIXEL_MAP_I_TO_G_SIZE\0"
	.byte 0xb3,0x19,0x09
	.ascii "GL_PIXEL_MAP_I_TO_B_SIZE\0"
	.byte 0xb4,0x19,0x09
	.ascii "GL_PIXEL_MAP_I_TO_A_SIZE\0"
	.byte 0xb5,0x19,0x09
	.ascii "GL_PIXEL_MAP_R_TO_R_SIZE\0"
	.byte 0xb6,0x19,0x09
	.ascii "GL_PIXEL_MAP_G_TO_G_SIZE\0"
	.byte 0xb7,0x19,0x09
	.ascii "GL_PIXEL_MAP_B_TO_B_SIZE\0"
	.byte 0xb8,0x19,0x09
	.ascii "GL_PIXEL_MAP_A_TO_A_SIZE\0"
	.byte 0xb9,0x19,0x09
	.ascii "GL_PIXEL_MAP_S_TO_S\0"
	.byte 0xf1,0x18,0x09
	.ascii "GL_PIXEL_MAP_I_TO_I\0"
	.byte 0xf0,0x18,0x09
	.ascii "GL_PIXEL_MAP_I_TO_R\0"
	.byte 0xf2,0x18,0x09
	.ascii "GL_PIXEL_MAP_I_TO_G\0"
	.byte 0xf3,0x18,0x09
	.ascii "GL_PIXEL_MAP_I_TO_B\0"
	.byte 0xf4,0x18,0x09
	.ascii "GL_PIXEL_MAP_I_TO_A\0"
	.byte 0xf5,0x18,0x09
	.ascii "GL_PIXEL_MAP_R_TO_R\0"
	.byte 0xf6,0x18,0x09
	.ascii "GL_PIXEL_MAP_G_TO_G\0"
	.byte 0xf7,0x18,0x09
	.ascii "GL_PIXEL_MAP_B_TO_B\0"
	.byte 0xf8,0x18,0x09
	.ascii "GL_PIXEL_MAP_A_TO_A\0"
	.byte 0xf9,0x18,0x09
	.ascii "GL_PACK_ALIGNMENT\0"
	.byte 0x85,0x1a,0x09
	.ascii "GL_PACK_LSB_FIRST\0"
	.byte 0x81,0x1a,0x09
	.ascii "GL_PACK_ROW_LENGTH\0"
	.byte 0x82,0x1a,0x09
	.ascii "GL_PACK_SKIP_PIXELS\0"
	.byte 0x84,0x1a,0x09
	.ascii "GL_PACK_SKIP_ROWS\0"
	.byte 0x83,0x1a,0x09
	.ascii "GL_PACK_SWAP_BYTES\0"
	.byte 0x80,0x1a,0x09
	.ascii "GL_UNPACK_ALIGNMENT\0"
	.byte 0xf5,0x19,0x09
	.ascii "GL_UNPACK_LSB_FIRST\0"
	.byte 0xf1,0x19,0x09
	.ascii "GL_UNPACK_ROW_LENGTH\0"
	.byte 0xf2,0x19,0x09
	.ascii "GL_UNPACK_SKIP_PIXELS\0"
	.byte 0xf4,0x19,0x09
	.ascii "GL_UNPACK_SKIP_ROWS\0"
	.byte 0xf3,0x19,0x09
	.ascii "GL_UNPACK_SWAP_BYTES\0"
	.byte 0xf0,0x19,0x09
	.ascii "GL_ZOOM_X\0"
	.byte 0x96,0x1a,0x09
	.ascii "GL_ZOOM_Y\0"
	.byte 0x97,0x1a,0x09
	.ascii "GL_TEXTURE_ENV\0"
	.byte 0x80,0xc6,0x00,0x09
	.ascii "GL_TEXTURE_ENV_MODE\0"
	.byte 0x80,0xc4,0x00,0x09
	.ascii "GL_TEXTURE_1D\0"
	.byte 0xe0,0x1b,0x09
	.ascii "GL_TEXTURE_2D\0"
	.byte 0xe1,0x1b,0x09
	.ascii "GL_TEXTURE_WRAP_S\0"
	.byte 0x82,0xd0,0x00,0x09
	.ascii "GL_TEXTURE_WRAP_T\0"
	.byte 0x83,0xd0,0x00,0x09
	.ascii "GL_TEXTURE_MAG_FILTER\0"
	.byte 0x80,0xd0,0x00,0x09
	.ascii "GL_TEXTURE_MIN_FILTER\0"
	.byte 0x81,0xd0,0x00,0x09
	.ascii "GL_TEXTURE_ENV_COLOR\0"
	.byte 0x81,0xc4,0x00,0x09
	.ascii "GL_TEXTURE_GEN_S\0"
	.byte 0xe0,0x18,0x09
	.ascii "GL_TEXTURE_GEN_T\0"
	.byte 0xe1,0x18,0x09
	.ascii "GL_TEXTURE_GEN_MODE\0"
	.byte 0x80,0xca,0x00,0x09
	.ascii "GL_TEXTURE_BORDER_COLOR\0"
	.byte 0x84,0x20,0x09
	.ascii "GL_TEXTURE_WIDTH\0"
	.byte 0x80,0x20,0x09
	.ascii "GL_TEXTURE_HEIGHT\0"
	.byte 0x81,0x20,0x09
	.ascii "GL_TEXTURE_BORDER\0"
	.byte 0x85,0x20,0x09
	.ascii "GL_TEXTURE_COMPONENTS\0"
	.byte 0x83,0x20,0x09
	.ascii "GL_TEXTURE_RED_SIZE\0"
	.byte 0xdc,0x80,0x02,0x09
	.ascii "GL_TEXTURE_GREEN_SIZE\0"
	.byte 0xdd,0x80,0x02,0x09
	.ascii "GL_TEXTURE_BLUE_SIZE\0"
	.byte 0xde,0x80,0x02,0x09
	.ascii "GL_TEXTURE_ALPHA_SIZE\0"
	.byte 0xdf,0x80,0x02,0x09
	.ascii "GL_TEXTURE_LUMINANCE_SIZE\0"
	.byte 0xe0,0x80,0x02,0x09
	.ascii "GL_TEXTURE_INTENSITY_SIZE\0"
	.byte 0xe1,0x80,0x02,0x09
	.ascii "GL_NEAREST_MIPMAP_NEAREST\0"
	.byte 0x80,0xce,0x00,0x09
	.ascii "GL_NEAREST_MIPMAP_LINEAR\0"
	.byte 0x82,0xce,0x00,0x09
	.ascii "GL_LINEAR_MIPMAP_NEAREST\0"
	.byte 0x81,0xce,0x00,0x09
	.ascii "GL_LINEAR_MIPMAP_LINEAR\0"
	.byte 0x83,0xce,0x00,0x09
	.ascii "GL_OBJECT_LINEAR\0"
	.byte 0x81,0xc8,0x00,0x09
	.ascii "GL_OBJECT_PLANE\0"
	.byte 0x81,0xca,0x00,0x09
	.ascii "GL_EYE_LINEAR\0"
	.byte 0x80,0xc8,0x00,0x09
	.ascii "GL_EYE_PLANE\0"
	.byte 0x82,0xca,0x00,0x09
	.ascii "GL_SPHERE_MAP\0"
	.byte 0x82,0xc8,0x00,0x09
	.ascii "GL_DECAL\0"
	.byte 0x81,0xc2,0x00,0x09
	.ascii "GL_MODULATE\0"
	.byte 0x80,0xc2,0x00,0x09
	.ascii "GL_NEAREST\0"
	.byte 0x80,0xcc,0x00,0x09
	.ascii "GL_REPEAT\0"
	.byte 0x81,0xd2,0x00,0x09
	.ascii "GL_CLAMP\0"
	.byte 0x80,0xd2,0x00,0x09
	.ascii "GL_S\0"
	.byte 0x80,0xc0,0x00,0x09
	.ascii "GL_T\0"
	.byte 0x81,0xc0,0x00,0x09
	.ascii "GL_R\0"
	.byte 0x82,0xc0,0x00,0x09
	.ascii "GL_Q\0"
	.byte 0x83,0xc0,0x00,0x09
	.ascii "GL_TEXTURE_GEN_R\0"
	.byte 0xe2,0x18,0x09
	.ascii "GL_TEXTURE_GEN_Q\0"
	.byte 0xe3,0x18,0x09
	.ascii "GL_PROXY_TEXTURE_1D\0"
	.byte 0xe3,0x80,0x02,0x09
	.ascii "GL_PROXY_TEXTURE_2D\0"
	.byte 0xe4,0x80,0x02,0x09
	.ascii "GL_TEXTURE_PRIORITY\0"
	.byte 0xe6,0x80,0x02,0x09
	.ascii "GL_TEXTURE_RESIDENT\0"
	.byte 0xe7,0x80,0x02,0x09
	.ascii "GL_TEXTURE_BINDING_1D\0"
	.byte 0xe8,0x80,0x02,0x09
	.ascii "GL_TEXTURE_BINDING_2D\0"
	.byte 0xe9,0x80,0x02,0x09
	.ascii "GL_ALPHA4\0"
	.byte 0xbb,0x80,0x02,0x09
	.ascii "GL_ALPHA8\0"
	.byte 0xbc,0x80,0x02,0x09
	.ascii "GL_ALPHA12\0"
	.byte 0xbd,0x80,0x02,0x09
	.ascii "GL_ALPHA16\0"
	.byte 0xbe,0x80,0x02,0x09
	.ascii "GL_LUMINANCE4\0"
	.byte 0xbf,0x80,0x02,0x09
	.ascii "GL_LUMINANCE8\0"
	.byte 0xc0,0x80,0x02,0x09
	.ascii "GL_LUMINANCE12\0"
	.byte 0xc1,0x80,0x02,0x09
	.ascii "GL_LUMINANCE16\0"
	.byte 0xc2,0x80,0x02,0x09
	.ascii "GL_LUMINANCE4_ALPHA4\0"
	.byte 0xc3,0x80,0x02,0x09
	.ascii "GL_LUMINANCE6_ALPHA2\0"
	.byte 0xc4,0x80,0x02,0x09
	.ascii "GL_LUMINANCE8_ALPHA8\0"
	.byte 0xc5,0x80,0x02,0x09
	.ascii "GL_LUMINANCE12_ALPHA4\0"
	.byte 0xc6,0x80,0x02,0x09
	.ascii "GL_LUMINANCE12_ALPHA12\0"
	.byte 0xc7,0x80,0x02,0x09
	.ascii "GL_LUMINANCE16_ALPHA16\0"
	.byte 0xc8,0x80,0x02,0x09
	.ascii "GL_INTENSITY\0"
	.byte 0xc9,0x80,0x02,0x09
	.ascii "GL_INTENSITY4\0"
	.byte 0xca,0x80,0x02,0x09
	.ascii "GL_INTENSITY8\0"
	.byte 0xcb,0x80,0x02,0x09
	.ascii "GL_INTENSITY12\0"
	.byte 0xcc,0x80,0x02,0x09
	.ascii "GL_INTENSITY16\0"
	.byte 0xcd,0x80,0x02,0x09
	.ascii "GL_R3_G3_B2\0"
	.byte 0x90,0xd4,0x00,0x09
	.ascii "GL_RGB4\0"
	.byte 0xcf,0x80,0x02,0x09
	.ascii "GL_RGB5\0"
	.byte 0xd0,0x80,0x02,0x09
	.ascii "GL_RGB8\0"
	.byte 0xd1,0x80,0x02,0x09
	.ascii "GL_RGB10\0"
	.byte 0xd2,0x80,0x02,0x09
	.ascii "GL_RGB12\0"
	.byte 0xd3,0x80,0x02,0x09
	.ascii "GL_RGB16\0"
	.byte 0xd4,0x80,0x02,0x09
	.ascii "GL_RGBA2\0"
	.byte 0xd5,0x80,0x02,0x09
	.ascii "GL_RGBA4\0"
	.byte 0xd6,0x80,0x02,0x09
	.ascii "GL_RGB5_A1\0"
	.byte 0xd7,0x80,0x02,0x09
	.ascii "GL_RGBA8\0"
	.byte 0xd8,0x80,0x02,0x09
	.ascii "GL_RGB10_A2\0"
	.byte 0xd9,0x80,0x02,0x09
	.ascii "GL_RGBA12\0"
	.byte 0xda,0x80,0x02,0x09
	.ascii "GL_RGBA16\0"
	.byte 0xdb,0x80,0x02,0x09
	.ascii "GL_VENDOR\0"
	.byte 0x80,0x3e,0x09
	.ascii "GL_RENDERER\0"
	.byte 0x81,0x3e,0x09
	.ascii "GL_VERSION\0"
	.byte 0x82,0x3e,0x09
	.ascii "GL_EXTENSIONS\0"
	.byte 0x83,0x3e,0x09
	.ascii "GL_INVALID_VALUE\0"
	.byte 0x81,0x0a,0x09
	.ascii "GL_INVALID_ENUM\0"
	.byte 0x80,0x0a,0x09
	.ascii "GL_INVALID_OPERATION\0"
	.byte 0x82,0x0a,0x09
	.ascii "GL_STACK_OVERFLOW\0"
	.byte 0x83,0x0a,0x09
	.ascii "GL_STACK_UNDERFLOW\0"
	.byte 0x84,0x0a,0x09
	.ascii "GL_OUT_OF_MEMORY\0"
	.byte 0x85,0x0a,0x09
	.ascii "GL_CONSTANT_COLOR_EXT\0"
	.byte 0x81,0x80,0x02,0x09
	.ascii "GL_ONE_MINUS_CONSTANT_COLOR_EXT\0"
	.byte 0x82,0x80,0x02,0x09
	.ascii "GL_CONSTANT_ALPHA_EXT\0"
	.byte 0x83,0x80,0x02,0x09
	.ascii "GL_ONE_MINUS_CONSTANT_ALPHA_EXT\0"
	.byte 0x84,0x80,0x02,0x09
	.ascii "GL_BLEND_EQUATION_EXT\0"
	.byte 0x89,0x80,0x02,0x09
	.ascii "GL_MIN_EXT\0"
	.byte 0x87,0x80,0x02,0x09
	.ascii "GL_MAX_EXT\0"
	.byte 0x88,0x80,0x02,0x09
	.ascii "GL_FUNC_ADD_EXT\0"
	.byte 0x86,0x80,0x02,0x09
	.ascii "GL_FUNC_SUBTRACT_EXT\0"
	.byte 0x8a,0x80,0x02,0x09
	.ascii "GL_FUNC_REVERSE_SUBTRACT_EXT\0"
	.byte 0x8b,0x80,0x02,0x09
	.ascii "GL_BLEND_COLOR_EXT\0"
	.byte 0x85,0x80,0x02,0x09
	.ascii "GL_POLYGON_OFFSET_EXT\0"
	.byte 0xb7,0x80,0x02,0x09
	.ascii "GL_POLYGON_OFFSET_FACTOR_EXT\0"
	.byte 0xb8,0x80,0x02,0x09
	.ascii "GL_POLYGON_OFFSET_BIAS_EXT\0"
	.byte 0xb9,0x80,0x02,0x09
	.ascii "GL_VERTEX_ARRAY_EXT\0"
	.byte 0xf4,0x80,0x02,0x09
	.ascii "GL_NORMAL_ARRAY_EXT\0"
	.byte 0xf5,0x80,0x02,0x09
	.ascii "GL_COLOR_ARRAY_EXT\0"
	.byte 0xf6,0x80,0x02,0x09
	.ascii "GL_INDEX_ARRAY_EXT\0"
	.byte 0xf7,0x80,0x02,0x09
	.ascii "GL_TEXTURE_COORD_ARRAY_EXT\0"
	.byte 0xf8,0x80,0x02,0x09
	.ascii "GL_EDGE_FLAG_ARRAY_EXT\0"
	.byte 0xf9,0x80,0x02,0x09
	.ascii "GL_VERTEX_ARRAY_SIZE_EXT\0"
	.byte 0xfa,0x80,0x02,0x09
	.ascii "GL_VERTEX_ARRAY_TYPE_EXT\0"
	.byte 0xfb,0x80,0x02,0x09
	.ascii "GL_VERTEX_ARRAY_STRIDE_EXT\0"
	.byte 0xfc,0x80,0x02,0x09
	.ascii "GL_VERTEX_ARRAY_COUNT_EXT\0"
	.byte 0xfd,0x80,0x02,0x09
	.ascii "GL_NORMAL_ARRAY_TYPE_EXT\0"
	.byte 0xfe,0x80,0x02,0x09
	.ascii "GL_NORMAL_ARRAY_STRIDE_EXT\0"
	.byte 0xff,0x80,0x02,0x09
	.ascii "GL_NORMAL_ARRAY_COUNT_EXT\0"
	.byte 0x80,0x81,0x02,0x09
	.ascii "GL_COLOR_ARRAY_SIZE_EXT\0"
	.byte 0x81,0x81,0x02,0x09
	.ascii "GL_COLOR_ARRAY_TYPE_EXT\0"
	.byte 0x82,0x81,0x02,0x09
	.ascii "GL_COLOR_ARRAY_STRIDE_EXT\0"
	.byte 0x83,0x81,0x02,0x09
	.ascii "GL_COLOR_ARRAY_COUNT_EXT\0"
	.byte 0x84,0x81,0x02,0x09
	.ascii "GL_INDEX_ARRAY_TYPE_EXT\0"
	.byte 0x85,0x81,0x02,0x09
	.ascii "GL_INDEX_ARRAY_STRIDE_EXT\0"
	.byte 0x86,0x81,0x02,0x09
	.ascii "GL_INDEX_ARRAY_COUNT_EXT\0"
	.byte 0x87,0x81,0x02,0x09
	.ascii "GL_TEXTURE_COORD_ARRAY_SIZE_EXT\0"
	.byte 0x88,0x81,0x02,0x09
	.ascii "GL_TEXTURE_COORD_ARRAY_TYPE_EXT\0"
	.byte 0x89,0x81,0x02,0x09
	.ascii "GL_TEXTURE_COORD_ARRAY_STRIDE_EXT\0"
	.byte 0x8a,0x81,0x02,0x09
	.ascii "GL_TEXTURE_COORD_ARRAY_COUNT_EXT\0"
	.byte 0x8b,0x81,0x02,0x09
	.ascii "GL_EDGE_FLAG_ARRAY_STRIDE_EXT\0"
	.byte 0x8c,0x81,0x02,0x09
	.ascii "GL_EDGE_FLAG_ARRAY_COUNT_EXT\0"
	.byte 0x8d,0x81,0x02,0x09
	.ascii "GL_VERTEX_ARRAY_POINTER_EXT\0"
	.byte 0x8e,0x81,0x02,0x09
	.ascii "GL_NORMAL_ARRAY_POINTER_EXT\0"
	.byte 0x8f,0x81,0x02,0x09
	.ascii "GL_COLOR_ARRAY_POINTER_EXT\0"
	.byte 0x90,0x81,0x02,0x09
	.ascii "GL_INDEX_ARRAY_POINTER_EXT\0"
	.byte 0x91,0x81,0x02,0x09
	.ascii "GL_TEXTURE_COORD_ARRAY_POINTER_EXT\0"
	.byte 0x92,0x81,0x02,0x09
	.ascii "GL_EDGE_FLAG_ARRAY_POINTER_EXT\0"
	.byte 0x93,0x81,0x02,0x09
	.ascii "GL_TEXTURE_PRIORITY_EXT\0"
	.byte 0xe6,0x80,0x02,0x09
	.ascii "GL_TEXTURE_RESIDENT_EXT\0"
	.byte 0xe7,0x80,0x02,0x09
	.ascii "GL_TEXTURE_1D_BINDING_EXT\0"
	.byte 0xe8,0x80,0x02,0x09
	.ascii "GL_TEXTURE_2D_BINDING_EXT\0"
	.byte 0xe9,0x80,0x02,0x09
	.ascii "GL_PACK_SKIP_IMAGES_EXT\0"
	.byte 0xeb,0x80,0x02,0x09
	.ascii "GL_PACK_IMAGE_HEIGHT_EXT\0"
	.byte 0xec,0x80,0x02,0x09
	.ascii "GL_UNPACK_SKIP_IMAGES_EXT\0"
	.byte 0xed,0x80,0x02,0x09
	.ascii "GL_UNPACK_IMAGE_HEIGHT_EXT\0"
	.byte 0xee,0x80,0x02,0x09
	.ascii "GL_TEXTURE_3D_EXT\0"
	.byte 0xef,0x80,0x02,0x09
	.ascii "GL_PROXY_TEXTURE_3D_EXT\0"
	.byte 0xf0,0x80,0x02,0x09
	.ascii "GL_TEXTURE_DEPTH_EXT\0"
	.byte 0xf1,0x80,0x02,0x09
	.ascii "GL_TEXTURE_WRAP_R_EXT\0"
	.byte 0xf2,0x80,0x02,0x09
	.ascii "GL_MAX_3D_TEXTURE_SIZE_EXT\0"
	.byte 0xf3,0x80,0x02,0x09
	.ascii "GL_TEXTURE_3D_BINDING_EXT\0"
	.byte 0xea,0x80,0x02,0x09
	.ascii "GL_TABLE_TOO_LARGE_EXT\0"
	.byte 0xb1,0x80,0x02,0x09
	.ascii "GL_COLOR_TABLE_FORMAT_EXT\0"
	.byte 0xd8,0x81,0x02,0x09
	.ascii "GL_COLOR_TABLE_WIDTH_EXT\0"
	.byte 0xd9,0x81,0x02,0x09
	.ascii "GL_COLOR_TABLE_RED_SIZE_EXT\0"
	.byte 0xda,0x81,0x02,0x09
	.ascii "GL_COLOR_TABLE_GREEN_SIZE_EXT\0"
	.byte 0xdb,0x81,0x02,0x09
	.ascii "GL_COLOR_TABLE_BLUE_SIZE_EXT\0"
	.byte 0xdc,0x81,0x02,0x09
	.ascii "GL_COLOR_TABLE_ALPHA_SIZE_EXT\0"
	.byte 0xdd,0x81,0x02,0x09
	.ascii "GL_COLOR_TABLE_LUMINANCE_SIZE_EXT\0"
	.byte 0xde,0x81,0x02,0x09
	.ascii "GL_COLOR_TABLE_INTENSITY_SIZE_EXT\0"
	.byte 0xdf,0x81,0x02,0x09
	.ascii "GL_TEXTURE_INDEX_SIZE_EXT\0"
	.byte 0xe1,0x81,0x02,0x09
	.ascii "GL_COLOR_INDEX1_EXT\0"
	.byte 0xe2,0x81,0x02,0x09
	.ascii "GL_COLOR_INDEX2_EXT\0"
	.byte 0xe3,0x81,0x02,0x09
	.ascii "GL_COLOR_INDEX4_EXT\0"
	.byte 0xe4,0x81,0x02,0x09
	.ascii "GL_COLOR_INDEX8_EXT\0"
	.byte 0xe5,0x81,0x02,0x09
	.ascii "GL_COLOR_INDEX12_EXT\0"
	.byte 0xe6,0x81,0x02,0x09
	.ascii "GL_COLOR_INDEX16_EXT\0"
	.byte 0xe7,0x81,0x02,0x09
	.ascii "GL_SHARED_TEXTURE_PALETTE_EXT\0"
	.byte 0xfb,0x83,0x02,0x09
	.ascii "GL_POINT_SIZE_MIN_EXT\0"
	.byte 0xa6,0x82,0x02,0x09
	.ascii "GL_POINT_SIZE_MAX_EXT\0"
	.byte 0xa7,0x82,0x02,0x09
	.ascii "GL_POINT_FADE_THRESHOLD_SIZE_EXT\0"
	.byte 0xa8,0x82,0x02,0x09
	.ascii "GL_DISTANCE_ATTENUATION_EXT\0"
	.byte 0xa9,0x82,0x02,0x00,0x03,0x00,0x00,0x01
	.byte 0x70
	.ascii "GLenum\0"
	.byte 0x03,0x02
	.ascii "unsigned char\0"
	.byte 0x08,0x01,0x03,0x00,0x00,0x31,0x19
	.ascii "GLubyte\0"
	.byte 0x03,0x05,0x00,0x00,0x31,0x2a,0x02
	.ascii "void\0"
	.byte 0x05,0x00,0x05,0x00,0x00,0x31,0x3d,0x0a
	.ascii "gl_texture_image\0"
	.byte 0x3c,0x02,0x00,0x00,0x32,0x53,0x0b
	.ascii "Format\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x00,0x0b
	.ascii "IntFormat\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x04,0x0b
	.ascii "Border\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x08,0x0b
	.ascii "Width\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x0c,0x0b
	.ascii "Height\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x10,0x0b
	.ascii "Depth\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x14,0x0b
	.ascii "Width2\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x18,0x0b
	.ascii "Height2\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x1c,0x0b
	.ascii "Depth2\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x20,0x0b
	.ascii "WidthLog2\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x24,0x0b
	.ascii "HeightLog2\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x28,0x0b
	.ascii "DepthLog2\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x2c,0x0b
	.ascii "MaxLog2\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x30,0x0b
	.ascii "Data\0"
	.byte 0x00,0x00,0x31,0x38,0x02,0x23,0x34,0x0b
	.ascii "DriverData\0"
	.byte 0x00,0x00,0x31,0x45,0x02,0x23,0x38,0x00
	.byte 0x05,0x00,0x00,0x31,0x4a,0x06,0x00,0x00
	.byte 0x32,0x53,0x2c,0x00,0x00,0x32,0x69,0x07
	.byte 0x00,0x00,0x01,0x57,0x0a,0x00,0x0c,0x00
	.byte 0x00,0x31,0x2a,0x04,0x00,0x00,0x00,0x32
	.byte 0x7c,0x0d,0x00,0x00,0x01,0x57,0x03,0xff
	.byte 0x00,0x03,0x00,0x00,0x31,0x19
	.ascii "GLboolean\0"
	.byte 0x03,0x0e
	.ascii "gl_texture_object\0"
	.byte 0x04,0x84,0x02,0x00,0x00,0x34,0x1b,0x0b
	.ascii "RefCount\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x00,0x0b
	.ascii "Name\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x04,0x0b
	.ascii "Dimensions\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x08,0x0b
	.ascii "Priority\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x0c,0x0b
	.ascii "BorderColor\0"
	.byte 0x00,0x00,0x01,0x5f,0x02,0x23,0x10,0x0b
	.ascii "WrapS\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x20,0x0b
	.ascii "WrapT\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x24,0x0b
	.ascii "WrapR\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x28,0x0b
	.ascii "MinFilter\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x2c,0x0b
	.ascii "MagFilter\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x30,0x0b
	.ascii "MinMagThresh\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x34,0x0b
	.ascii "Image\0"
	.byte 0x00,0x00,0x32,0x58,0x02,0x23,0x38,0x0b
	.ascii "Palette\0"
	.byte 0x00,0x00,0x32,0x69,0x02,0x23,0x64,0x0b
	.ascii "PaletteSize\0"
	.byte 0x00,0x00,0x01,0x33,0x03,0x23,0xe4,0x08
	.byte 0x0b
	.ascii "PaletteIntFormat\0"
	.byte 0x00,0x00,0x31,0x0c,0x03,0x23,0xe8,0x08
	.byte 0x0b
	.ascii "PaletteFormat\0"
	.byte 0x00,0x00,0x31,0x0c,0x03,0x23,0xec,0x08
	.byte 0x0b
	.ascii "Dirty\0"
	.byte 0x00,0x00,0x32,0x7c,0x03,0x23,0xf0,0x08
	.byte 0x0b
	.ascii "DriverData\0"
	.byte 0x00,0x00,0x31,0x45,0x03,0x23,0xf4,0x08
	.byte 0x0b
	.ascii "Complete\0"
	.byte 0x00,0x00,0x32,0x7c,0x03,0x23,0xf8,0x08
	.byte 0x0b
	.ascii "SampleFunc\0"
	.byte 0x00,0x00,0x34,0x91,0x03,0x23,0xfc,0x08
	.byte 0x0b
	.ascii "Next\0"
	.byte 0x00,0x00,0x34,0xa9,0x03,0x23,0x80,0x09
	.byte 0x00,0x0f,0x00,0x00,0x32,0x8c,0x05,0x00
	.byte 0x00,0x34,0x1b,0x0f,0x00,0x00,0x01,0x40
	.byte 0x05,0x00,0x00,0x34,0x25,0x0f,0x00,0x00
	.byte 0x01,0x40,0x05,0x00,0x00,0x34,0x2f,0x0f
	.byte 0x00,0x00,0x01,0x40,0x05,0x00,0x00,0x34
	.byte 0x39,0x0f,0x00,0x00,0x01,0x40,0x05,0x00
	.byte 0x00,0x34,0x43,0x05,0x00,0x00,0x31,0x19
	.byte 0x10,0x01,0x01,0x00,0x00,0x34,0x8c,0x11
	.byte 0x00,0x00,0x34,0x20,0x11,0x00,0x00,0x01
	.byte 0x27,0x11,0x00,0x00,0x34,0x2a,0x11,0x00
	.byte 0x00,0x34,0x34,0x11,0x00,0x00,0x34,0x3e
	.byte 0x11,0x00,0x00,0x34,0x48,0x11,0x00,0x00
	.byte 0x34,0x4d,0x11,0x00,0x00,0x34,0x4d,0x11
	.byte 0x00,0x00,0x34,0x4d,0x11,0x00,0x00,0x34
	.byte 0x4d,0x00,0x05,0x00,0x00,0x34,0x52,0x03
	.byte 0x00,0x00,0x34,0x8c
	.ascii "TextureSampleFunc\0"
	.byte 0x02,0x05,0x00,0x00,0x32,0x8c,0x0a
	.ascii "gl_shared_state\0"
	.byte 0x1c,0x02,0x00,0x00,0x35,0x4a,0x0b
	.ascii "RefCount\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x00,0x0b
	.ascii "DisplayList\0"
	.byte 0x00,0x00,0x01,0x22,0x02,0x23,0x04,0x0b
	.ascii "TexObjects\0"
	.byte 0x00,0x00,0x01,0x22,0x02,0x23,0x08,0x0b
	.ascii "TexObjectList\0"
	.byte 0x00,0x00,0x34,0xa9,0x02,0x23,0x0c,0x0b
	.ascii "Default1D\0"
	.byte 0x00,0x00,0x34,0xa9,0x02,0x23,0x10,0x0b
	.ascii "Default2D\0"
	.byte 0x00,0x00,0x34,0xa9,0x02,0x23,0x14,0x0b
	.ascii "Default3D\0"
	.byte 0x00,0x00,0x34,0xa9,0x02,0x23,0x18,0x00
	.byte 0x05,0x00,0x00,0x34,0xae,0x0e
	.ascii "gl_context\0"
	.byte 0xe1,0x40,0x02,0x00,0x00,0x3c,0x1c,0x0b
	.ascii "Shared\0"
	.byte 0x00,0x00,0x35,0x4a,0x02,0x23,0x00,0x0b
	.ascii "API\0"
	.byte 0x00,0x00,0x55,0x07,0x02,0x23,0x04,0x0b
	.ascii "Save\0"
	.byte 0x00,0x00,0x55,0x07,0x03,0x23,0xe0,0x05
	.byte 0x0b
	.ascii "Exec\0"
	.byte 0x00,0x00,0x55,0x07,0x03,0x23,0xbc,0x0b
	.byte 0x0b
	.ascii "Visual\0"
	.byte 0x00,0x00,0x65,0x62,0x03,0x23,0x98,0x11
	.byte 0x0b
	.ascii "Buffer\0"
	.byte 0x00,0x00,0x66,0x96,0x03,0x23,0x9c,0x11
	.byte 0x0b
	.ascii "Driver\0"
	.byte 0x00,0x00,0x6f,0xa5,0x03,0x23,0xa0,0x11
	.byte 0x0b
	.ascii "DriverCtx\0"
	.byte 0x00,0x00,0x31,0x45,0x03,0x23,0xf4,0x12
	.byte 0x0b
	.ascii "DriverMgrCtx\0"
	.byte 0x00,0x00,0x31,0x45,0x03,0x23,0xf8,0x12
	.byte 0x0b
	.ascii "NewModelViewMatrix\0"
	.byte 0x00,0x00,0x32,0x7c,0x03,0x23,0xfc,0x12
	.byte 0x0b
	.ascii "ModelViewMatrixType\0"
	.byte 0x00,0x00,0x01,0x33,0x03,0x23,0x80,0x13
	.byte 0x0b
	.ascii "ModelViewMatrix\0"
	.byte 0x00,0x00,0x74,0x0d,0x03,0x23,0x84,0x13
	.byte 0x0b
	.ascii "ModelViewInv\0"
	.byte 0x00,0x00,0x74,0x1e,0x03,0x23,0xc4,0x13
	.byte 0x0b
	.ascii "ModelViewStackDepth\0"
	.byte 0x00,0x00,0x01,0x33,0x03,0x23,0x84,0x14
	.byte 0x0b
	.ascii "ModelViewStack\0"
	.byte 0x00,0x00,0x74,0x40,0x03,0x23,0x88,0x14
	.byte 0x0b
	.ascii "NewProjectionMatrix\0"
	.byte 0x00,0x00,0x32,0x7c,0x03,0x23,0x88,0x24
	.byte 0x0b
	.ascii "ProjectionMatrixType\0"
	.byte 0x00,0x00,0x01,0x33,0x03,0x23,0x8c,0x24
	.byte 0x0b
	.ascii "ProjectionMatrix\0"
	.byte 0x00,0x00,0x74,0x52,0x03,0x23,0x90,0x24
	.byte 0x0b
	.ascii "ProjectionStackDepth\0"
	.byte 0x00,0x00,0x01,0x33,0x03,0x23,0xd0,0x24
	.byte 0x0b
	.ascii "ProjectionStack\0"
	.byte 0x00,0x00,0x74,0x74,0x03,0x23,0xd4,0x24
	.byte 0x0b
	.ascii "NearFarStack\0"
	.byte 0x00,0x00,0x74,0x97,0x03,0x23,0xd4,0x34
	.byte 0x0b
	.ascii "NewTextureMatrix\0"
	.byte 0x00,0x00,0x32,0x7c,0x03,0x23,0xd4,0x36
	.byte 0x0b
	.ascii "TextureMatrixType\0"
	.byte 0x00,0x00,0x01,0x33,0x03,0x23,0xd8,0x36
	.byte 0x0b
	.ascii "TextureMatrix\0"
	.byte 0x00,0x00,0x74,0xa9,0x03,0x23,0xdc,0x36
	.byte 0x0b
	.ascii "TextureStackDepth\0"
	.byte 0x00,0x00,0x01,0x33,0x03,0x23,0x9c,0x37
	.byte 0x0b
	.ascii "TextureStack\0"
	.byte 0x00,0x00,0x74,0xcb,0x03,0x23,0xa0,0x37
	.byte 0x0b
	.ascii "CallDepth\0"
	.byte 0x00,0x00,0x01,0x33,0x03,0x23,0xa0,0x3c
	.byte 0x0b
	.ascii "ExecuteFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x03,0x23,0xa4,0x3c
	.byte 0x0b
	.ascii "CompileFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x03,0x23,0xa5,0x3c
	.byte 0x0b
	.ascii "AttribStackDepth\0"
	.byte 0x00,0x00,0x01,0x33,0x03,0x23,0xa8,0x3c
	.byte 0x0b
	.ascii "AttribStack\0"
	.byte 0x00,0x00,0x75,0x31,0x03,0x23,0xac,0x3c
	.byte 0x0b
	.ascii "Accum\0"
	.byte 0x00,0x00,0x75,0x53,0x03,0x23,0xec,0x3c
	.byte 0x0b
	.ascii "Color\0"
	.byte 0x00,0x00,0x75,0xa0,0x03,0x23,0xfc,0x3c
	.byte 0x0b
	.ascii "Current\0"
	.byte 0x00,0x00,0x77,0xb5,0x03,0x23,0xd4,0x3d
	.byte 0x0b
	.ascii "Depth\0"
	.byte 0x00,0x00,0x78,0x9f,0x03,0x23,0xb4,0x3e
	.byte 0x0b
	.ascii "Eval\0"
	.byte 0x00,0x00,0x78,0xf2,0x03,0x23,0xc0,0x3e
	.byte 0x0b
	.ascii "Fog\0"
	.byte 0x00,0x00,0x7b,0x68,0x03,0x23,0xf8,0x3e
	.byte 0x0b
	.ascii "Hint\0"
	.byte 0x00,0x00,0x7b,0xe1,0x03,0x23,0xa0,0x3f
	.byte 0x0b
	.ascii "Light\0"
	.byte 0x00,0x00,0x80,0xec,0x03,0x23,0xb4,0x3f
	.byte 0x0b
	.ascii "Line\0"
	.byte 0x00,0x00,0x82,0x1c,0x04,0x23,0x88,0xdc
	.byte 0x02,0x0b
	.ascii "List\0"
	.byte 0x00,0x00,0x82,0x95,0x04,0x23,0x94,0xdc
	.byte 0x02,0x0b
	.ascii "Pixel\0"
	.byte 0x00,0x00,0x83,0x7b,0x04,0x23,0x98,0xdc
	.byte 0x02,0x0b
	.ascii "Point\0"
	.byte 0x00,0x00,0x86,0x4b,0x04,0x23,0x80,0xad
	.byte 0x03,0x0b
	.ascii "Polygon\0"
	.byte 0x00,0x00,0x86,0xc4,0x04,0x23,0xa0,0xad
	.byte 0x03,0x0b
	.ascii "PolygonStipple\0"
	.byte 0x00,0x00,0x87,0xf7,0x04,0x23,0xc8,0xad
	.byte 0x03,0x0b
	.ascii "Scissor\0"
	.byte 0x00,0x00,0x88,0x16,0x04,0x23,0xc8,0xae
	.byte 0x03,0x0b
	.ascii "Stencil\0"
	.byte 0x00,0x00,0x88,0x71,0x04,0x23,0xdc,0xae
	.byte 0x03,0x0b
	.ascii "Texture\0"
	.byte 0x00,0x00,0x89,0xcb,0x04,0x23,0xf4,0xae
	.byte 0x03,0x0b
	.ascii "Transform\0"
	.byte 0x00,0x00,0x8c,0x2d,0x04,0x23,0xcc,0xb8
	.byte 0x03,0x0b
	.ascii "Viewport\0"
	.byte 0x00,0x00,0x8c,0xa7,0x04,0x23,0xb8,0xb9
	.byte 0x03,0x0b
	.ascii "ClientAttribStackDepth\0"
	.byte 0x00,0x00,0x01,0x33,0x04,0x23,0xe8,0xb9
	.byte 0x03,0x0b
	.ascii "ClientAttribStack\0"
	.byte 0x00,0x00,0x8d,0x4e,0x04,0x23,0xec,0xb9
	.byte 0x03,0x0b
	.ascii "Array\0"
	.byte 0x00,0x00,0x8d,0x64,0x04,0x23,0xac,0xba
	.byte 0x03,0x0b
	.ascii "Pack\0"
	.byte 0x00,0x00,0x90,0x0f,0x04,0x23,0xac,0xbb
	.byte 0x03,0x0b
	.ascii "Unpack\0"
	.byte 0x00,0x00,0x90,0x0f,0x04,0x23,0xc8,0xbb
	.byte 0x03,0x0b
	.ascii "EvalMap\0"
	.byte 0x00,0x00,0x91,0x91,0x04,0x23,0xe4,0xbb
	.byte 0x03,0x0b
	.ascii "Feedback\0"
	.byte 0x00,0x00,0x93,0x1b,0x04,0x23,0xb8,0xbf
	.byte 0x03,0x0b
	.ascii "Select\0"
	.byte 0x00,0x00,0x93,0x90,0x04,0x23,0xcc,0xbf
	.byte 0x03,0x0b
	.ascii "ErrorValue\0"
	.byte 0x00,0x00,0x31,0x0c,0x04,0x23,0xec,0xc1
	.byte 0x03,0x0b
	.ascii "DirectContext\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0xf0,0xc1
	.byte 0x03,0x0b
	.ascii "NewState\0"
	.byte 0x00,0x00,0x01,0x33,0x04,0x23,0xf4,0xc1
	.byte 0x03,0x0b
	.ascii "RenderMode\0"
	.byte 0x00,0x00,0x31,0x0c,0x04,0x23,0xf8,0xc1
	.byte 0x03,0x0b
	.ascii "Primitive\0"
	.byte 0x00,0x00,0x31,0x0c,0x04,0x23,0xfc,0xc1
	.byte 0x03,0x0b
	.ascii "StippleCounter\0"
	.byte 0x00,0x00,0x01,0x33,0x04,0x23,0x80,0xc2
	.byte 0x03,0x0b
	.ascii "ClipMask\0"
	.byte 0x00,0x00,0x01,0x33,0x04,0x23,0x84,0xc2
	.byte 0x03,0x0b
	.ascii "RasterMask\0"
	.byte 0x00,0x00,0x01,0x33,0x04,0x23,0x88,0xc2
	.byte 0x03,0x0b
	.ascii "LightTwoSide\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0x8c,0xc2
	.byte 0x03,0x0b
	.ascii "DirectTriangles\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0x8d,0xc2
	.byte 0x03,0x0b
	.ascii "PolygonZoffset\0"
	.byte 0x00,0x00,0x01,0x49,0x04,0x23,0x90,0xc2
	.byte 0x03,0x0b
	.ascii "LineZoffset\0"
	.byte 0x00,0x00,0x01,0x49,0x04,0x23,0x94,0xc2
	.byte 0x03,0x0b
	.ascii "PointZoffset\0"
	.byte 0x00,0x00,0x01,0x49,0x04,0x23,0x98,0xc2
	.byte 0x03,0x0b
	.ascii "NeedNormals\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0x9c,0xc2
	.byte 0x03,0x0b
	.ascii "FastDrawPixels\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0x9d,0xc2
	.byte 0x03,0x0b
	.ascii "MutablePixels\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0x9e,0xc2
	.byte 0x03,0x0b
	.ascii "MonoPixels\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0x9f,0xc2
	.byte 0x03,0x0b
	.ascii "PointsFunc\0"
	.byte 0x00,0x00,0x6c,0xe0,0x04,0x23,0xa0,0xc2
	.byte 0x03,0x0b
	.ascii "LineFunc\0"
	.byte 0x00,0x00,0x6d,0x13,0x04,0x23,0xa4,0xc2
	.byte 0x03,0x0b
	.ascii "TriangleFunc\0"
	.byte 0x00,0x00,0x6d,0x49,0x04,0x23,0xa8,0xc2
	.byte 0x03,0x0b
	.ascii "QuadFunc\0"
	.byte 0x00,0x00,0x6d,0x88,0x04,0x23,0xac,0xc2
	.byte 0x03,0x0b
	.ascii "RectFunc\0"
	.byte 0x00,0x00,0x6d,0xbe,0x04,0x23,0xb0,0xc2
	.byte 0x03,0x0b
	.ascii "VB\0"
	.byte 0x00,0x00,0x97,0xf1,0x04,0x23,0xb4,0xc2
	.byte 0x03,0x0b
	.ascii "PB\0"
	.byte 0x00,0x00,0x98,0x05,0x04,0x23,0xb8,0xc2
	.byte 0x03,0x0b
	.ascii "NoRaster\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0xbc,0xc2
	.byte 0x03,0x0b
	.ascii "NoDither\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0xbd,0xc2
	.byte 0x03,0x00,0x05,0x00,0x00,0x35,0x4f,0x10
	.byte 0x01,0x01,0x00,0x00,0x3c,0x38,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x40,0x00,0x05,0x00
	.byte 0x00,0x3c,0x21,0x10,0x01,0x01,0x00,0x00
	.byte 0x3c,0x54,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x01
	.byte 0x40,0x00,0x05,0x00,0x00,0x3c,0x3d,0x0f
	.byte 0x00,0x00,0x01,0x27,0x05,0x00,0x00,0x3c
	.byte 0x59,0x12,0x01,0x00,0x00,0x31,0x19,0x01
	.byte 0x00,0x00,0x3c,0x83,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x3c,0x5e,0x11,0x00,0x00,0x34,0x4d
	.byte 0x00,0x05,0x00,0x00,0x3c,0x63,0x10,0x01
	.byte 0x01,0x00,0x00,0x3c,0x9a,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x03,0x00
	.byte 0x05,0x00,0x00,0x3c,0x88,0x10,0x01,0x01
	.byte 0x00,0x00,0x3c,0xb1,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x00,0x05
	.byte 0x00,0x00,0x3c,0x9f,0x10,0x01,0x01,0x00
	.byte 0x00,0x3c,0xcd,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x01,0x27,0x00,0x05,0x00,0x00,0x3c,0xb6
	.byte 0x03,0x00,0x00,0x31,0x3d
	.ascii "GLvoid\0"
	.byte 0x03,0x05,0x00,0x00,0x3c,0xd2,0x0a
	.ascii "gl_image\0"
	.byte 0x24,0x02,0x00,0x00,0x3d,0x81,0x0b
	.ascii "Width\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x00,0x0b
	.ascii "Height\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x04,0x0b
	.ascii "Depth\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x08,0x0b
	.ascii "Components\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x0c,0x0b
	.ascii "Format\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x10,0x0b
	.ascii "Type\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x14,0x0b
	.ascii "Data\0"
	.byte 0x00,0x00,0x3c,0xdf,0x02,0x23,0x18,0x0b
	.ascii "Interleaved\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x1c,0x0b
	.ascii "RefCount\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x20,0x00
	.byte 0x0f,0x00,0x00,0x3c,0xe4,0x05,0x00,0x00
	.byte 0x3d,0x81,0x10,0x01,0x01,0x00,0x00,0x3d
	.byte 0xbb,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x40,0x11,0x00,0x00
	.byte 0x01,0x40,0x11,0x00,0x00,0x01,0x40,0x11
	.byte 0x00,0x00,0x01,0x40,0x11,0x00,0x00,0x3d
	.byte 0x86,0x00,0x05,0x00,0x00,0x3d,0x8b,0x10
	.byte 0x01,0x01,0x00,0x00,0x3d,0xe1,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x40
	.byte 0x11,0x00,0x00,0x01,0x40,0x11,0x00,0x00
	.byte 0x01,0x40,0x11,0x00,0x00,0x01,0x40,0x00
	.byte 0x05,0x00,0x00,0x3d,0xc0,0x10,0x01,0x01
	.byte 0x00,0x00,0x3d,0xf8,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x00,0x05
	.byte 0x00,0x00,0x3d,0xe6,0x10,0x01,0x01,0x00
	.byte 0x00,0x3e,0x14,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x01,0x70,0x00,0x05,0x00,0x00,0x3d,0xfd
	.byte 0x10,0x01,0x01,0x00,0x00,0x3e,0x2b,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x27,0x00,0x05,0x00,0x00,0x3e,0x19,0x0f
	.byte 0x00,0x00,0x31,0x3d,0x05,0x00,0x00,0x3e
	.byte 0x30,0x10,0x01,0x01,0x00,0x00,0x3e,0x56
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x70,0x11
	.byte 0x00,0x00,0x3e,0x35,0x00,0x05,0x00,0x00
	.byte 0x3e,0x3a,0x10,0x01,0x01,0x00,0x00,0x3e
	.byte 0x6d,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x27,0x00,0x05,0x00,0x00,0x3e
	.byte 0x5b,0x10,0x01,0x01,0x00,0x00,0x3e,0x93
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x40,0x11,0x00,0x00,0x01,0x40,0x11
	.byte 0x00,0x00,0x01,0x40,0x11,0x00,0x00,0x01
	.byte 0x40,0x00,0x05,0x00,0x00,0x3e,0x72,0x10
	.byte 0x01,0x01,0x00,0x00,0x3e,0xb9,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x40
	.byte 0x11,0x00,0x00,0x01,0x40,0x11,0x00,0x00
	.byte 0x01,0x40,0x11,0x00,0x00,0x01,0x40,0x00
	.byte 0x05,0x00,0x00,0x3e,0x98,0x02
	.ascii "double\0"
	.byte 0x04,0x08,0x10,0x01,0x01,0x00,0x00,0x3e
	.byte 0xda,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x3e,0xbe,0x00,0x05,0x00,0x00,0x3e
	.byte 0xc8,0x10,0x01,0x01,0x00,0x00,0x3e,0xf1
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x40,0x00,0x05,0x00,0x00,0x3e,0xdf
	.byte 0x10,0x01,0x01,0x00,0x00,0x3f,0x08,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x03,0x00,0x05,0x00,0x00,0x3e,0xf6,0x0f
	.byte 0x00,0x00,0x01,0x40,0x05,0x00,0x00,0x3f
	.byte 0x0d,0x10,0x01,0x01,0x00,0x00,0x3f,0x2e
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x3f,0x12,0x00
	.byte 0x05,0x00,0x00,0x3f,0x17,0x10,0x01,0x01
	.byte 0x00,0x00,0x3f,0x4f,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x40,0x11,0x00
	.byte 0x00,0x01,0x40,0x11,0x00,0x00,0x01,0x40
	.byte 0x00,0x05,0x00,0x00,0x3f,0x33,0x0f,0x00
	.byte 0x00,0x01,0x40,0x05,0x00,0x00,0x3f,0x54
	.byte 0x10,0x01,0x01,0x00,0x00,0x3f,0x70,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x3f
	.byte 0x59,0x00,0x05,0x00,0x00,0x3f,0x5e,0x10
	.byte 0x01,0x01,0x00,0x00,0x3f,0x96,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x40
	.byte 0x11
	.byte 0x00,0x00,0x01,0x40,0x11,0x00,0x00,0x01
	.byte 0x40,0x11,0x00,0x00,0x01,0x40,0x00,0x05
	.byte 0x00,0x00,0x3f,0x75,0x0f,0x00,0x00,0x01
	.byte 0x40,0x05,0x00,0x00,0x3f,0x9b,0x10,0x01
	.byte 0x01,0x00,0x00,0x3f,0xb7,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x3f,0xa0,0x00
	.byte 0x05,0x00,0x00,0x3f,0xa5,0x10,0x01,0x01
	.byte 0x00,0x00,0x3f,0xdd,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x31,0x19,0x11,0x00
	.byte 0x00,0x31,0x19,0x11,0x00,0x00,0x31,0x19
	.byte 0x11,0x00,0x00,0x31,0x19,0x00,0x05,0x00
	.byte 0x00,0x3f,0xbc,0x0f,0x00,0x00,0x31,0x19
	.byte 0x05,0x00,0x00,0x3f,0xe2,0x10,0x01,0x01
	.byte 0x00,0x00,0x3f,0xfe,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x3f,0xe7,0x00,0x05
	.byte 0x00,0x00,0x3f,0xec,0x10,0x01,0x01,0x00
	.byte 0x00,0x40,0x24,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x31,0x19,0x11,0x00,0x00
	.byte 0x31,0x19,0x11,0x00,0x00,0x31,0x19,0x11
	.byte 0x00,0x00,0x31,0x19,0x00,0x05,0x00,0x00
	.byte 0x40,0x03,0x10,0x01,0x01,0x00,0x00,0x40
	.byte 0x40,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x01,0x70
	.byte 0x00,0x05,0x00,0x00,0x40,0x29,0x0f,0x00
	.byte 0x00,0x31,0x3d,0x05,0x00,0x00,0x40,0x45
	.byte 0x10,0x01,0x01,0x00,0x00,0x40,0x70,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x03,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x40,0x4a
	.byte 0x00,0x05,0x00,0x00,0x40,0x4f,0x05,0x00
	.byte 0x00,0x3c,0xe4,0x10,0x01,0x01,0x00,0x00
	.byte 0x40,0x96,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x40,0x75,0x00,0x05
	.byte 0x00,0x00,0x40,0x7a,0x10,0x01,0x01,0x00
	.byte 0x00,0x40,0xb7,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x40,0x75,0x00
	.byte 0x05,0x00,0x00,0x40,0x9b,0x10,0x01,0x01
	.byte 0x00,0x00,0x40,0xe2,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x70,0x00,0x05,0x00,0x00,0x40,0xbc
	.byte 0x10,0x01,0x01,0x00,0x00,0x41,0x17,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x00
	.byte 0x05,0x00,0x00,0x40,0xe7,0x10,0x01,0x01
	.byte 0x00,0x00,0x41,0x51,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x03,0x00,0x05,0x00,0x00,0x41,0x1c,0x10
	.byte 0x01,0x01,0x00,0x00,0x41,0x81,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x03,0x00,0x05,0x00,0x00,0x41,0x56,0x10
	.byte 0x01,0x01,0x00,0x00,0x41,0xbb,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x03,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x03,0x00,0x05,0x00,0x00,0x41
	.byte 0x86,0x10,0x01,0x01,0x00,0x00,0x41,0xfa
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x03,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x00,0x05,0x00,0x00,0x41,0xc0
	.byte 0x10,0x01,0x01,0x00,0x00,0x42,0x11,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x70,0x00,0x05,0x00,0x00,0x41,0xff,0x10
	.byte 0x01,0x01,0x00,0x00,0x42,0x2d,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x27
	.byte 0x11,0x00,0x00,0x01,0x03,0x00,0x05,0x00
	.byte 0x00,0x42,0x16,0x0f,0x00,0x00,0x01,0x27
	.byte 0x05,0x00,0x00,0x42,0x32,0x10,0x01,0x01
	.byte 0x00,0x00,0x42,0x53,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x42,0x37,0x00,0x05,0x00,0x00,0x42
	.byte 0x3c,0x10,0x01,0x01,0x00,0x00,0x42,0x6a
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x70,0x00,0x05,0x00,0x00,0x42,0x58
	.byte 0x10,0x01,0x01,0x00,0x00,0x42,0x81,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x31
	.byte 0x19,0x00,0x05,0x00,0x00,0x42,0x6f,0x10
	.byte 0x01,0x01,0x00,0x00,0x42,0x9d,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x3e,0xbe
	.byte 0x11,0x00,0x00,0x3e,0xbe,0x00,0x05,0x00
	.byte 0x00,0x42,0x86,0x10,0x01,0x01,0x00,0x00
	.byte 0x42,0xb4,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x00,0x05,0x00,0x00
	.byte 0x42,0xa2,0x10,0x01,0x01,0x00,0x00,0x42
	.byte 0xcb,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x00,0x05,0x00,0x00,0x42
	.byte 0xb9,0x10,0x01,0x01,0x00,0x00,0x42,0xec
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x00,0x05,0x00,0x00
	.byte 0x42,0xd0,0x10,0x01,0x01,0x00,0x00,0x43
	.byte 0x03,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x00,0x05,0x00,0x00,0x42
	.byte 0xf1,0x0f,0x00,0x00,0x31,0x3d,0x05,0x00
	.byte 0x00,0x43,0x08,0x10,0x01,0x01,0x00,0x00
	.byte 0x43,0x33,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x01
	.byte 0x03,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x43,0x0d,0x00,0x05,0x00,0x00,0x43
	.byte 0x12,0x0f,0x00,0x00,0x31,0x3d,0x05,0x00
	.byte 0x00,0x43,0x38,0x10,0x01,0x01,0x00,0x00
	.byte 0x43,0x68,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x03,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x43,0x3d
	.byte 0x00,0x05,0x00,0x00,0x43,0x42,0x10,0x01
	.byte 0x01,0x00,0x00,0x43,0x7f,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x31,0x19,0x00
	.byte 0x05,0x00,0x00,0x43,0x6d,0x0f,0x00,0x00
	.byte 0x31,0x19,0x05,0x00,0x00,0x43,0x84,0x10
	.byte 0x01,0x01,0x00,0x00,0x43,0xa5,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x43,0x89,0x00,0x05,0x00
	.byte 0x00,0x43,0x8e,0x10,0x01,0x01,0x00,0x00
	.byte 0x43,0xbc,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x00,0x05,0x00,0x00
	.byte 0x43,0xaa,0x10,0x01,0x01,0x00,0x00,0x43
	.byte 0xd3,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x00,0x05,0x00,0x00,0x43
	.byte 0xc1,0x10,0x01,0x01,0x00,0x00,0x43,0xe5
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x00,0x05,0x00
	.byte 0x00,0x43,0xd8,0x10,0x01,0x01,0x00,0x00
	.byte 0x43,0xf7,0x11,0x00,0x00,0x3c,0x1c,0x00
	.byte 0x05,0x00,0x00,0x43,0xea,0x10,0x01,0x01
	.byte 0x00,0x00,0x44,0x0e,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x40,0x00,0x05
	.byte 0x00,0x00,0x43,0xfc,0x10,0x01,0x01,0x00
	.byte 0x00,0x44,0x2a,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x40,0x11,0x00,0x00
	.byte 0x01,0x40,0x00,0x05,0x00,0x00,0x44,0x13
	.byte 0x10,0x01,0x01,0x00,0x00,0x44,0x4b,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x03,0x00,0x05,0x00,0x00,0x44
	.byte 0x2f,0x10,0x01,0x01,0x00,0x00,0x44,0x76
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x03,0x11,0x00,0x00,0x01,0x03,0x00,0x05
	.byte 0x00,0x00,0x44,0x50,0x10,0x01,0x01,0x00
	.byte 0x00,0x44,0x8d,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x03,0x00,0x05,0x00
	.byte 0x00,0x44,0x7b,0x10,0x01,0x01,0x00,0x00
	.byte 0x44,0xa9,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x03,0x00,0x05,0x00,0x00,0x44,0x92,0x05
	.byte 0x00,0x00,0x01,0x40,0x10,0x01,0x01,0x00
	.byte 0x00,0x44,0xcf,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x44,0xae,0x00
	.byte 0x05,0x00,0x00,0x44,0xb3,0x10,0x01,0x01
	.byte 0x00,0x00,0x44,0xe1,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x00,0x05,0x00,0x00,0x44,0xd4,0x10
	.byte 0x01,0x01,0x00,0x00,0x44,0xf3,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x00,0x05,0x00,0x00,0x44
	.byte 0xe6,0x0f,0x00,0x00,0x01,0x40,0x05,0x00
	.byte 0x00,0x44,0xf8,0x10,0x01,0x01,0x00,0x00
	.byte 0x45,0x19,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x44
	.byte 0xfd,0x00,0x05,0x00,0x00,0x45,0x02,0x10
	.byte 0x01,0x01,0x00,0x00,0x45,0x30,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x70
	.byte 0x00,0x05,0x00,0x00,0x45,0x1e,0x10,0x01
	.byte 0x01,0x00,0x00,0x45,0x60,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x3e,0xbe,0x11
	.byte 0x00,0x00,0x3e,0xbe,0x11,0x00,0x00,0x3e
	.byte 0xbe,0x11,0x00,0x00,0x3e,0xbe,0x11,0x00
	.byte 0x00,0x3e,0xbe,0x11,0x00,0x00,0x3e,0xbe
	.byte 0x00,0x05,0x00,0x00,0x45,0x35,0x12,0x01
	.byte 0x00,0x00,0x01,0x27,0x01,0x00,0x00,0x45
	.byte 0x7b,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x03,0x00,0x05,0x00,0x00,0x45
	.byte 0x65,0x05,0x00,0x00,0x01,0x27,0x10,0x01
	.byte 0x01,0x00,0x00,0x45,0x9c,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x45,0x80,0x00,0x05,0x00,0x00
	.byte 0x45,0x85,0x10,0x01,0x01,0x00,0x00,0x45
	.byte 0xb8,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x34,0x4d
	.byte 0x00,0x05,0x00,0x00,0x45,0xa1,0x05,0x00
	.byte 0x00,0x3e,0xbe,0x10,0x01,0x01,0x00,0x00
	.byte 0x45,0xd9,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x45
	.byte 0xbd,0x00,0x05,0x00,0x00,0x45,0xc2,0x10
	.byte 0x01,0x01,0x00,0x00,0x45,0xff,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x31,0x45,0x00
	.byte 0x05,0x00,0x00,0x45,0xde,0x05,0x00,0x00
	.byte 0x01,0x03,0x10,0x01,0x01,0x00,0x00,0x46
	.byte 0x25,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x46,0x04,0x00,0x05,0x00
	.byte 0x00,0x46,0x09,0x10,0x01,0x01,0x00,0x00
	.byte 0x46,0x41,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x45
	.byte 0xbd,0x00,0x05,0x00,0x00,0x46,0x2a,0x12
	.byte 0x01,0x00,0x00,0x01,0x70,0x01,0x00,0x00
	.byte 0x46,0x57,0x11,0x00,0x00,0x3c,0x1c,0x00
	.byte 0x05,0x00,0x00,0x46,0x46,0x10,0x01,0x01
	.byte 0x00,0x00,0x46,0x73,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x44,0xae,0x00,0x05,0x00,0x00,0x46
	.byte 0x5c,0x10,0x01,0x01,0x00,0x00,0x46,0x8f
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x46,0x04,0x00
	.byte 0x05,0x00,0x00,0x46,0x78,0x0f,0x00,0x00
	.byte 0x31,0x19,0x05,0x00,0x00,0x46,0x94,0x12
	.byte 0x01,0x00,0x00,0x46,0x99,0x01,0x00,0x00
	.byte 0x46,0xb4,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x00,0x05,0x00,0x00
	.byte 0x46,0x9e,0x10,0x01,0x01,0x00,0x00,0x46
	.byte 0xd5,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x44,0xae,0x00,0x05,0x00
	.byte 0x00,0x46,0xb9,0x10,0x01,0x01,0x00,0x00
	.byte 0x46,0xf6,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x46,0x04,0x00,0x05
	.byte 0x00,0x00,0x46,0xda,0x10,0x01,0x01,0x00
	.byte 0x00,0x47,0x17,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x45,0xbd,0x00
	.byte 0x05,0x00,0x00,0x46,0xfb,0x10,0x01,0x01
	.byte 0x00,0x00,0x47,0x38,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x44,0xae
	.byte 0x00,0x05,0x00,0x00,0x47,0x1c,0x10,0x01
	.byte 0x01,0x00,0x00,0x47,0x59,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x70,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x46
	.byte 0x04,0x00,0x05,0x00,0x00,0x47,0x3d,0x10
	.byte 0x01,0x01,0x00,0x00,0x47,0x7a,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x44,0xae,0x00,0x05,0x00,0x00,0x47,0x5e
	.byte 0x10,0x01,0x01,0x00,0x00,0x47,0x9b,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x46,0x04,0x00,0x05,0x00,0x00,0x47
	.byte 0x7f,0x10,0x01,0x01,0x00,0x00,0x47,0xb7
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x44,0xae,0x00
	.byte 0x05,0x00,0x00,0x47,0xa0,0x10,0x01,0x01
	.byte 0x00,0x00,0x47,0xd3,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x45,0x80,0x00,0x05,0x00,0x00,0x47
	.byte 0xbc,0x02
	.ascii "unsigned short\0"
	.byte 0x07,0x02,0x05,0x00,0x00,0x47,0xd8,0x10
	.byte 0x01,0x01,0x00,0x00,0x48,0x06,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x47,0xea,0x00,0x05,0x00
	.byte 0x00,0x47,0xef,0x05,0x00,0x00,0x31,0x45
	.byte 0x10,0x01,0x01,0x00,0x00,0x48,0x27,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x48,0x0b,0x00,0x05
	.byte 0x00,0x00,0x48,0x10,0x10,0x01,0x01,0x00
	.byte 0x00,0x48,0x3e,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x34,0x4d,0x00,0x05,0x00
	.byte 0x00,0x48,0x2c,0x0f,0x00,0x00,0x01,0x27
	.byte 0x05,0x00,0x00,0x48,0x43,0x0f,0x00,0x00
	.byte 0x01,0x40,0x05,0x00,0x00,0x48,0x4d,0x10
	.byte 0x01,0x01,0x00,0x00,0x48,0x73,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x48,0x48,0x11,0x00,0x00
	.byte 0x48,0x52,0x00,0x05,0x00,0x00,0x48,0x57
	.byte 0x10,0x01,0x01,0x00,0x00,0x48,0x94,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x44,0xae,0x00,0x05,0x00,0x00,0x48
	.byte 0x78,0x10,0x01,0x01,0x00,0x00,0x48,0xb5
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x01,0x70,0x11
	.byte 0x00,0x00,0x46,0x04,0x00,0x05,0x00,0x00
	.byte 0x48,0x99,0x10,0x01,0x01,0x00,0x00,0x48
	.byte 0xd6,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x45,0xbd,0x00,0x05,0x00
	.byte 0x00,0x48,0xba,0x10,0x01,0x01,0x00,0x00
	.byte 0x48,0xf7,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x44,0xae,0x00,0x05
	.byte 0x00,0x00,0x48,0xdb,0x10,0x01,0x01,0x00
	.byte 0x00,0x49,0x18,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x46,0x04,0x00
	.byte 0x05,0x00,0x00,0x48,0xfc,0x10,0x01,0x01
	.byte 0x00,0x00,0x49,0x43,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x31,0x45,0x00,0x05,0x00,0x00,0x49,0x1d
	.byte 0x10,0x01,0x01,0x00,0x00,0x49,0x69,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x44,0xae
	.byte 0x00,0x05,0x00,0x00,0x49,0x48,0x10,0x01
	.byte 0x01,0x00,0x00,0x49,0x8f,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x70,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x46,0x04,0x00,0x05
	.byte 0x00,0x00,0x49,0x6e,0x10,0x01,0x01,0x00
	.byte 0x00,0x49,0xb0,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x44,0xae,0x00
	.byte 0x05,0x00,0x00,0x49,0x94,0x10,0x01,0x01
	.byte 0x00,0x00,0x49,0xd1,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x46,0x04
	.byte 0x00,0x05,0x00,0x00,0x49,0xb5,0x10,0x01
	.byte 0x01,0x00,0x00,0x49,0xed,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x70,0x11
	.byte 0x00,0x00,0x01,0x70,0x00,0x05,0x00,0x00
	.byte 0x49,0xd6,0x10,0x01,0x01,0x00,0x00,0x4a
	.byte 0x04,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x27,0x00,0x05,0x00,0x00,0x49
	.byte 0xf2,0x10,0x01,0x01,0x00,0x00,0x4a,0x1b
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x40,0x00,0x05,0x00,0x00,0x4a,0x09
	.byte 0x10,0x01,0x01,0x00,0x00,0x4a,0x32,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x03,0x00,0x05,0x00,0x00,0x4a,0x20,0x0f
	.byte 0x00,0x00,0x31,0x3d,0x05,0x00,0x00,0x4a
	.byte 0x37,0x10,0x01,0x01,0x00,0x00,0x4a,0x5d
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x4a,0x3c,0x00,0x05,0x00,0x00
	.byte 0x4a,0x41,0x10,0x01,0x01,0x00,0x00,0x4a
	.byte 0x6f,0x11,0x00,0x00,0x3c,0x1c,0x00,0x05
	.byte 0x00,0x00,0x4a,0x62,0x0f,0x00,0x00,0x31
	.byte 0x3d,0x05,0x00,0x00,0x4a,0x74,0x10,0x01
	.byte 0x01,0x00,0x00,0x4a,0x9a,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x70,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x4a
	.byte 0x79,0x00,0x05,0x00,0x00,0x4a,0x7e,0x12
	.byte 0x01,0x00,0x00,0x31,0x19,0x01,0x00,0x00
	.byte 0x4a,0xb5,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x00,0x05,0x00,0x00
	.byte 0x4a,0x9f,0x12,0x01,0x00,0x00,0x31,0x19
	.byte 0x01,0x00,0x00,0x4a,0xd0,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x27,0x00
	.byte 0x05,0x00,0x00,0x4a,0xba,0x12,0x01,0x00
	.byte 0x00,0x31,0x19,0x01,0x00,0x00,0x4a,0xeb
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x27,0x00,0x05,0x00,0x00,0x4a,0xd5
	.byte 0x0f,0x00,0x00,0x01,0x40,0x05,0x00,0x00
	.byte 0x4a,0xf0,0x10,0x01,0x01,0x00,0x00,0x4b
	.byte 0x11,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x4a,0xf5
	.byte 0x00,0x05,0x00,0x00,0x4a,0xfa,0x0f,0x00
	.byte 0x00,0x01,0x40,0x05,0x00,0x00,0x4b,0x16
	.byte 0x10,0x01,0x01,0x00,0x00,0x4b,0x41,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x4b,0x1b,0x11,0x00,0x00,0x01,0x03
	.byte 0x00,0x05,0x00,0x00,0x4b,0x20,0x10,0x01
	.byte 0x01,0x00,0x00,0x4b,0x5d,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x47,0xd8,0x00,0x05,0x00,0x00
	.byte 0x4b,0x46,0x10,0x01,0x01,0x00,0x00,0x4b
	.byte 0x74,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x40,0x00,0x05,0x00,0x00,0x4b
	.byte 0x62,0x10,0x01,0x01,0x00,0x00,0x4b,0x8b
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x27,0x00,0x05,0x00,0x00,0x4b,0x79
	.byte 0x10,0x01,0x01,0x00,0x00,0x4b,0x9d,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x00,0x05,0x00,0x00
	.byte 0x4b,0x90,0x0f,0x00,0x00,0x01,0x40,0x05
	.byte 0x00,0x00,0x4b,0xa2,0x10,0x01,0x01,0x00
	.byte 0x00,0x4b,0xbe,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x4b,0xa7,0x00,0x05,0x00
	.byte 0x00,0x4b,0xac,0x10,0x01,0x01,0x00,0x00
	.byte 0x4b,0xd5,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x27,0x00,0x05,0x00,0x00
	.byte 0x4b,0xc3,0x10,0x01,0x01,0x00,0x00,0x4b
	.byte 0xec,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x00,0x05,0x00,0x00,0x4b
	.byte 0xda,0x0f,0x00,0x00,0x01,0x40,0x05,0x00
	.byte 0x00,0x4b,0xf1,0x10,0x01,0x01,0x00,0x00
	.byte 0x4c,0x2b,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x01
	.byte 0x40,0x11,0x00,0x00,0x01,0x40,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x4b,0xf6,0x11,0x00,0x00
	.byte 0x31,0x19,0x00,0x05,0x00,0x00,0x4b,0xfb
	.byte 0x0f,0x00,0x00,0x01,0x40,0x05,0x00,0x00
	.byte 0x4c,0x30,0x10,0x01,0x01,0x00,0x00,0x4c
	.byte 0x7e,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x01,0x40
	.byte 0x11,0x00,0x00,0x01,0x40,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x40,0x11,0x00,0x00,0x01
	.byte 0x40,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x4c,0x35
	.byte 0x11,0x00,0x00,0x31,0x19,0x00,0x05,0x00
	.byte 0x00,0x4c,0x3a,0x10,0x01,0x01,0x00,0x00
	.byte 0x4c,0x9f,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x40,0x11,0x00,0x00,0x01,0x40,0x00,0x05
	.byte 0x00,0x00,0x4c,0x83,0x10,0x01,0x01,0x00
	.byte 0x00,0x4c,0xcf,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x40,0x11,0x00,0x00,0x01,0x40,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x40,0x11,0x00,0x00,0x01,0x40,0x00,0x05
	.byte 0x00,0x00,0x4c,0xa4,0x0f,0x00,0x00,0x01
	.byte 0x40,0x05,0x00,0x00,0x4c,0xd4,0x10,0x01
	.byte 0x01,0x00,0x00,0x4c,0xfa,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x70,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x4c
	.byte 0xd9,0x00,0x05,0x00,0x00,0x4c,0xde,0x10
	.byte 0x01,0x01,0x00,0x00,0x4d,0x11,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x70
	.byte 0x00,0x05,0x00,0x00,0x4c,0xff,0x0f,0x00
	.byte 0x00,0x01,0x40,0x05,0x00,0x00,0x4d,0x16
	.byte 0x10,0x01,0x01,0x00,0x00,0x4d,0x32,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x4d
	.byte 0x1b,0x00,0x05,0x00,0x00,0x4d,0x20,0x10
	.byte 0x01,0x01,0x00,0x00,0x4d,0x4e,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x27
	.byte 0x11,0x00,0x00,0x01,0x70,0x00,0x05,0x00
	.byte 0x00,0x4d,0x37,0x10,0x01,0x01,0x00,0x00
	.byte 0x4d,0x6f,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x40,0x11,0x00,0x00,0x01
	.byte 0x40,0x11,0x00,0x00,0x01,0x40,0x00,0x05
	.byte 0x00,0x00,0x4d,0x53,0x0f,0x00,0x00,0x01
	.byte 0x40,0x05,0x00,0x00,0x4d,0x74,0x10,0x01
	.byte 0x01,0x00,0x00,0x4d,0x90,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x4d,0x79,0x00
	.byte 0x05,0x00,0x00,0x4d,0x7e,0x0f,0x00,0x00
	.byte 0x31,0x3d,0x05,0x00,0x00,0x4d,0x95,0x10
	.byte 0x01,0x01,0x00,0x00,0x4d,0xbb,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x4d,0x9a,0x00,0x05,0x00,0x00,0x4d,0x9f
	.byte 0x10,0x01,0x01,0x00,0x00,0x4d,0xeb,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x3e
	.byte 0xbe,0x11,0x00,0x00,0x3e,0xbe,0x11,0x00
	.byte 0x00,0x3e,0xbe,0x11,0x00,0x00,0x3e,0xbe
	.byte 0x11,0x00,0x00,0x3e,0xbe,0x11,0x00,0x00
	.byte 0x3e,0xbe,0x00,0x05,0x00,0x00,0x4d,0xc0
	.byte 0x10,0x01,0x01,0x00,0x00,0x4e,0x02,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x40,0x00,0x05,0x00,0x00,0x4d,0xf0,0x0f
	.byte 0x00,0x00,0x01,0x40,0x05,0x00,0x00,0x4e
	.byte 0x07,0x10,0x01,0x01,0x00,0x00,0x4e,0x2d
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x4e,0x0c,0x00,0x05,0x00,0x00
	.byte 0x4e,0x11,0x10,0x01,0x01,0x00,0x00,0x4e
	.byte 0x49,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x01,0x03
	.byte 0x00,0x05,0x00,0x00,0x4e,0x32,0x10,0x01
	.byte 0x01,0x00,0x00,0x4e,0x65,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x70,0x11
	.byte 0x00,0x00,0x01,0x40,0x00,0x05,0x00,0x00
	.byte 0x4e,0x4e,0x10,0x01,0x01,0x00,0x00,0x4e
	.byte 0x81,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x40,0x11,0x00,0x00,0x01,0x40
	.byte 0x00,0x05,0x00,0x00,0x4e,0x6a,0x0f,0x00
	.byte 0x00,0x01,0x40,0x05,0x00,0x00,0x4e,0x86
	.byte 0x10,0x01,0x01,0x00,0x00,0x4e,0xa7,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x4e,0x8b,0x00,0x05
	.byte 0x00,0x00,0x4e,0x90,0x10,0x01,0x01,0x00
	.byte 0x00,0x4e,0xbe,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x40,0x00,0x05,0x00
	.byte 0x00,0x4e,0xac,0x10,0x01,0x01,0x00,0x00
	.byte 0x4e,0xda,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x01
	.byte 0x70,0x00,0x05,0x00,0x00,0x4e,0xc3,0x10
	.byte 0x01,0x01,0x00,0x00,0x4e,0xf6,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x40
	.byte 0x11,0x00,0x00,0x01,0x40,0x00,0x05,0x00
	.byte 0x00,0x4e,0xdf,0x0f,0x00,0x00,0x31,0x19
	.byte 0x05,0x00,0x00,0x4e,0xfb,0x10,0x01,0x01
	.byte 0x00,0x00,0x4f,0x17,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x4f,0x00,0x00,0x05
	.byte 0x00,0x00,0x4f,0x05,0x10,0x01,0x01,0x00
	.byte 0x00,0x4f,0x29,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x00,0x05,0x00,0x00,0x4f,0x1c,0x10,0x01
	.byte 0x01,0x00,0x00,0x4f,0x3b,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x00,0x05,0x00,0x00,0x4f,0x2e
	.byte 0x10,0x01,0x01,0x00,0x00,0x4f,0x4d,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x00,0x05,0x00,0x00
	.byte 0x4f,0x40,0x10,0x01,0x01,0x00,0x00,0x4f
	.byte 0x5f,0x11,0x00,0x00,0x3c,0x1c,0x00,0x05
	.byte 0x00,0x00,0x4f,0x52,0x10,0x01,0x01,0x00
	.byte 0x00,0x4f,0x76,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11
	.byte 0x00,0x00,0x01,0x27,0x00,0x05,0x00,0x00
	.byte 0x4f,0x64,0x10,0x01,0x01,0x00,0x00,0x4f
	.byte 0x8d,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x27,0x00,0x05,0x00,0x00,0x4f
	.byte 0x7b,0x10,0x01,0x01,0x00,0x00,0x4f,0x9f
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x00,0x05,0x00
	.byte 0x00,0x4f,0x92,0x10,0x01,0x01,0x00,0x00
	.byte 0x4f,0xb6,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x27,0x00,0x05,0x00,0x00
	.byte 0x4f,0xa4,0x10,0x01,0x01,0x00,0x00,0x4f
	.byte 0xdc,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x40,0x11,0x00,0x00,0x01,0x40
	.byte 0x11,0x00,0x00,0x01,0x40,0x11,0x00,0x00
	.byte 0x01,0x40,0x00,0x05,0x00,0x00,0x4f,0xbb
	.byte 0x10,0x01,0x01,0x00,0x00,0x4f,0xf3,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x70,0x00,0x05,0x00,0x00,0x4f,0xe1,0x10
	.byte 0x01,0x01,0x00,0x00,0x50,0x28,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x31,0x45,0x00,0x05
	.byte 0x00,0x00,0x4f,0xf8,0x10,0x01,0x01,0x00
	.byte 0x00,0x50,0x4e,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x40,0x11,0x00,0x00
	.byte 0x01,0x40,0x11,0x00,0x00,0x01,0x40,0x11
	.byte 0x00,0x00,0x01,0x40,0x00,0x05,0x00,0x00
	.byte 0x50,0x2d,0x12,0x01,0x00,0x00,0x01,0x03
	.byte 0x01,0x00,0x00,0x50,0x69,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x70,0x00
	.byte 0x05,0x00,0x00,0x50,0x53,0x10,0x01,0x01
	.byte 0x00,0x00,0x50,0x8f,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x40,0x11,0x00
	.byte 0x00,0x01,0x40,0x11,0x00,0x00,0x01,0x40
	.byte 0x11,0x00,0x00,0x01,0x40,0x00,0x05,0x00
	.byte 0x00,0x50,0x6e,0x10,0x01,0x01,0x00,0x00
	.byte 0x50,0xb0,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x40,0x11,0x00,0x00,0x01
	.byte 0x40,0x11,0x00,0x00,0x01,0x40,0x00,0x05
	.byte 0x00,0x00,0x50,0x94,0x10,0x01,0x01,0x00
	.byte 0x00,0x50,0xd6,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x00,0x05,0x00,0x00
	.byte 0x50,0xb5,0x10,0x01,0x01,0x00,0x00,0x50
	.byte 0xf2,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x45,0x80
	.byte 0x00,0x05,0x00,0x00,0x50,0xdb,0x10,0x01
	.byte 0x01,0x00,0x00,0x51,0x09,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x70,0x00
	.byte 0x05,0x00,0x00,0x50,0xf7,0x10,0x01,0x01
	.byte 0x00,0x00,0x51,0x2a,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x27
	.byte 0x00,0x05,0x00,0x00,0x51,0x0e,0x10,0x01
	.byte 0x01,0x00,0x00,0x51,0x41,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x27,0x00
	.byte 0x05,0x00,0x00,0x51,0x2f,0x10,0x01,0x01
	.byte 0x00,0x00,0x51,0x62,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x01,0x70
	.byte 0x00,0x05,0x00,0x00,0x51,0x46,0x10,0x01
	.byte 0x01,0x00,0x00,0x51,0x7e,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x40,0x11
	.byte 0x00,0x00,0x01,0x40,0x00,0x05,0x00,0x00
	.byte 0x51,0x67,0x10,0x01,0x01,0x00,0x00,0x51
	.byte 0xa4,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x40,0x11,0x00,0x00,0x01,0x40
	.byte 0x11,0x00,0x00,0x01,0x40,0x11,0x00,0x00
	.byte 0x01,0x40,0x00,0x05,0x00,0x00,0x51,0x83
	.byte 0x0f,0x00,0x00,0x31,0x3d,0x05,0x00,0x00
	.byte 0x51,0xa9,0x10,0x01,0x01,0x00,0x00,0x51
	.byte 0xd4,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x51,0xae,0x00,0x05,0x00,0x00,0x51,0xb3
	.byte 0x0f,0x00,0x00,0x01,0x40,0x05,0x00,0x00
	.byte 0x51,0xd9,0x10,0x01,0x01,0x00,0x00,0x51
	.byte 0xff,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x51,0xde,0x00,0x05,0x00
	.byte 0x00,0x51,0xe3,0x0f,0x00,0x00,0x01,0x40
	.byte 0x05,0x00,0x00,0x52,0x04,0x10,0x01,0x01
	.byte 0x00,0x00,0x52,0x2a,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x52,0x09
	.byte 0x00,0x05,0x00,0x00,0x52,0x0e,0x10,0x01
	.byte 0x01,0x00,0x00,0x52,0x64,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x70,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x03,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x40,0x75,0x00,0x05,0x00,0x00,0x52,0x2f
	.byte 0x10,0x01,0x01,0x00,0x00,0x52,0xa3,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x70,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x40
	.byte 0x75,0x00,0x05,0x00,0x00,0x52,0x69,0x10
	.byte 0x01,0x01,0x00,0x00,0x52,0xd8,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x40,0x75,0x00,0x05
	.byte 0x00,0x00,0x52,0xa8,0x10,0x01,0x01,0x00
	.byte 0x00,0x53,0x17,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x03,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x40,0x75,0x00,0x05,0x00
	.byte 0x00,0x52,0xdd,0x10,0x01,0x01,0x00,0x00
	.byte 0x53,0x5b,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x01
	.byte 0x03,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x70,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x40
	.byte 0x75,0x00,0x05,0x00,0x00,0x53,0x1c,0x10
	.byte 0x01,0x01,0x00,0x00,0x53,0xa4,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x03,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x40,0x75,0x00,0x05,0x00,0x00,0x53,0x60
	.byte 0x0f,0x00,0x00,0x01,0x40,0x05,0x00,0x00
	.byte 0x53,0xa9,0x10,0x01,0x01,0x00,0x00,0x53
	.byte 0xcf,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x70,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x53,0xae,0x00,0x05,0x00
	.byte 0x00,0x53,0xb3,0x10,0x01,0x01,0x00,0x00
	.byte 0x53,0xf0,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x40,0x11,0x00,0x00,0x01
	.byte 0x40,0x11,0x00,0x00,0x01,0x40,0x00,0x05
	.byte 0x00,0x00,0x53,0xd4,0x10,0x01,0x01,0x00
	.byte 0x00,0x54,0x0c,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x40,0x11,0x00,0x00
	.byte 0x01,0x40,0x00,0x05,0x00,0x00,0x53,0xf5
	.byte 0x10,0x01,0x01,0x00,0x00,0x54,0x2d,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x40,0x11,0x00,0x00,0x01,0x40,0x11,0x00
	.byte 0x00,0x01,0x40,0x00,0x05,0x00,0x00,0x54
	.byte 0x11,0x10,0x01,0x01,0x00,0x00,0x54,0x53
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x40,0x11,0x00,0x00,0x01,0x40,0x11
	.byte 0x00,0x00,0x01,0x40,0x11,0x00,0x00,0x01
	.byte 0x40,0x00,0x05,0x00,0x00,0x54,0x32,0x0f
	.byte 0x00,0x00,0x01,0x40,0x05,0x00,0x00,0x54
	.byte 0x58,0x10,0x01,0x01,0x00,0x00,0x54,0x74
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x54,0x5d,0x00,0x05,0x00,0x00,0x54,0x62
	.byte 0x0f,0x00,0x00,0x31,0x3d,0x05,0x00,0x00
	.byte 0x54,0x79,0x10,0x01,0x01,0x00,0x00,0x54
	.byte 0xa4,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x70
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x54,0x7e,0x00,0x05,0x00,0x00,0x54,0x83
	.byte 0x10,0x01,0x01,0x00,0x00,0x54,0xca,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x03,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x03
	.byte 0x00,0x05,0x00,0x00,0x54,0xa9,0x10,0x01
	.byte 0x01,0x00,0x00,0x54,0xf0,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x40,0x11
	.byte 0x00,0x00,0x01,0x40,0x11,0x00,0x00,0x01
	.byte 0x40,0x11,0x00,0x00,0x01,0x40,0x00,0x05
	.byte 0x00,0x00,0x54,0xcf,0x10,0x01,0x01,0x00
	.byte 0x00,0x55,0x02,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x00,0x05,0x00,0x00,0x54,0xf5,0x0e
	.ascii "gl_api_table\0"
	.byte 0x02,0xdc,0x02,0x00,0x00,0x63,0xab,0x0b
	.ascii "Accum\0"
	.byte 0x00,0x00,0x3c,0x38,0x02,0x23,0x00,0x0b
	.ascii "AlphaFunc\0"
	.byte 0x00,0x00,0x3c,0x54,0x02,0x23,0x04,0x0b
	.ascii "AreTexturesResident\0"
	.byte 0x00,0x00,0x3c,0x83,0x02,0x23,0x08,0x0b
	.ascii "ArrayElement\0"
	.byte 0x00,0x00,0x3c,0x9a,0x02,0x23,0x0c,0x0b
	.ascii "Begin\0"
	.byte 0x00,0x00,0x3c,0xb1,0x02,0x23,0x10,0x0b
	.ascii "BindTexture\0"
	.byte 0x00,0x00,0x3c,0xcd,0x02,0x23,0x14,0x0b
	.ascii "Bitmap\0"
	.byte 0x00,0x00,0x3d,0xbb,0x02,0x23,0x18,0x0b
	.ascii "BlendColor\0"
	.byte 0x00,0x00,0x3d,0xe1,0x02,0x23,0x1c,0x0b
	.ascii "BlendEquation\0"
	.byte 0x00,0x00,0x3d,0xf8,0x02,0x23,0x20,0x0b
	.ascii "BlendFunc\0"
	.byte 0x00,0x00,0x3e,0x14,0x02,0x23,0x24,0x0b
	.ascii "CallList\0"
	.byte 0x00,0x00,0x3e,0x2b,0x02,0x23,0x28,0x0b
	.ascii "CallLists\0"
	.byte 0x00,0x00,0x3e,0x56,0x02,0x23,0x2c,0x0b
	.ascii "Clear\0"
	.byte 0x00,0x00,0x3e,0x6d,0x02,0x23,0x30,0x0b
	.ascii "ClearAccum\0"
	.byte 0x00,0x00,0x3e,0x93,0x02,0x23,0x34,0x0b
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x3e,0xb9,0x02,0x23,0x38,0x0b
	.ascii "ClearDepth\0"
	.byte 0x00,0x00,0x3e,0xda,0x02,0x23,0x3c,0x0b
	.ascii "ClearIndex\0"
	.byte 0x00,0x00,0x3e,0xf1,0x02,0x23,0x40,0x0b
	.ascii "ClearStencil\0"
	.byte 0x00,0x00,0x3f,0x08,0x02,0x23,0x44,0x0b
	.ascii "ClipPlane\0"
	.byte 0x00,0x00,0x3f,0x2e,0x02,0x23,0x48,0x0b
	.ascii "Color3f\0"
	.byte 0x00,0x00,0x3f,0x4f,0x02,0x23,0x4c,0x0b
	.ascii "Color3fv\0"
	.byte 0x00,0x00,0x3f,0x70,0x02,0x23,0x50,0x0b
	.ascii "Color4f\0"
	.byte 0x00,0x00,0x3f,0x96,0x02,0x23,0x54,0x0b
	.ascii "Color4fv\0"
	.byte 0x00,0x00,0x3f,0xb7,0x02,0x23,0x58,0x0b
	.ascii "Color4ub\0"
	.byte 0x00,0x00,0x3f,0xdd,0x02,0x23,0x5c,0x0b
	.ascii "Color4ubv\0"
	.byte 0x00,0x00,0x3f,0xfe,0x02,0x23,0x60,0x0b
	.ascii "ColorMask\0"
	.byte 0x00,0x00,0x40,0x24,0x02,0x23,0x64,0x0b
	.ascii "ColorMaterial\0"
	.byte 0x00,0x00,0x40,0x40,0x02,0x23,0x68,0x0b
	.ascii "ColorPointer\0"
	.byte 0x00,0x00,0x40,0x70,0x02,0x23,0x6c,0x0b
	.ascii "ColorTable\0"
	.byte 0x00,0x00,0x40,0x96,0x02,0x23,0x70,0x0b
	.ascii "ColorSubTable\0"
	.byte 0x00,0x00,0x40,0xb7,0x02,0x23,0x74,0x0b
	.ascii "CopyPixels\0"
	.byte 0x00,0x00,0x40,0xe2,0x02,0x23,0x78,0x0b
	.ascii "CopyTexImage1D\0"
	.byte 0x00,0x00,0x41,0x17,0x02,0x23,0x7c,0x0b
	.ascii "CopyTexImage2D\0"
	.byte 0x00,0x00,0x41,0x51,0x03,0x23,0x80,0x01
	.byte 0x0b
	.ascii "CopyTexSubImage1D\0"
	.byte 0x00,0x00,0x41,0x81,0x03,0x23,0x84,0x01
	.byte 0x0b
	.ascii "CopyTexSubImage2D\0"
	.byte 0x00,0x00,0x41,0xbb,0x03,0x23,0x88,0x01
	.byte 0x0b
	.ascii "CopyTexSubImage3DEXT\0"
	.byte 0x00,0x00,0x41,0xfa,0x03,0x23,0x8c,0x01
	.byte 0x0b
	.ascii "CullFace\0"
	.byte 0x00,0x00,0x42,0x11,0x03,0x23,0x90,0x01
	.byte 0x0b
	.ascii "DeleteLists\0"
	.byte 0x00,0x00,0x42,0x2d,0x03,0x23,0x94,0x01
	.byte 0x0b
	.ascii "DeleteTextures\0"
	.byte 0x00,0x00,0x42,0x53,0x03,0x23,0x98,0x01
	.byte 0x0b
	.ascii "DepthFunc\0"
	.byte 0x00,0x00,0x42,0x6a,0x03,0x23,0x9c,0x01
	.byte 0x0b
	.ascii "DepthMask\0"
	.byte 0x00,0x00,0x42,0x81,0x03,0x23,0xa0,0x01
	.byte 0x0b
	.ascii "DepthRange\0"
	.byte 0x00,0x00,0x42,0x9d,0x03,0x23,0xa4,0x01
	.byte 0x0b
	.ascii "Disable\0"
	.byte 0x00,0x00,0x42,0xb4,0x03,0x23,0xa8,0x01
	.byte 0x0b
	.ascii "DisableClientState\0"
	.byte 0x00,0x00,0x42,0xcb,0x03,0x23,0xac,0x01
	.byte 0x0b
	.ascii "DrawArrays\0"
	.byte 0x00,0x00,0x42,0xec,0x03,0x23,0xb0,0x01
	.byte 0x0b
	.ascii "DrawBuffer\0"
	.byte 0x00,0x00,0x43,0x03,0x03,0x23,0xb4,0x01
	.byte 0x0b
	.ascii "DrawElements\0"
	.byte 0x00,0x00,0x43,0x33,0x03,0x23,0xb8,0x01
	.byte 0x0b
	.ascii "DrawPixels\0"
	.byte 0x00,0x00,0x43,0x68,0x03,0x23,0xbc,0x01
	.byte 0x0b
	.ascii "EdgeFlag\0"
	.byte 0x00,0x00,0x43,0x7f,0x03,0x23,0xc0,0x01
	.byte 0x0b
	.ascii "EdgeFlagPointer\0"
	.byte 0x00,0x00,0x43,0xa5,0x03,0x23,0xc4,0x01
	.byte 0x0b
	.ascii "Enable\0"
	.byte 0x00,0x00,0x43,0xbc,0x03,0x23,0xc8,0x01
	.byte 0x0b
	.ascii "EnableClientState\0"
	.byte 0x00,0x00,0x43,0xd3,0x03,0x23,0xcc,0x01
	.byte 0x0b
	.ascii "End\0"
	.byte 0x00,0x00,0x43,0xe5,0x03,0x23,0xd0,0x01
	.byte 0x0b
	.ascii "EndList\0"
	.byte 0x00,0x00,0x43,0xf7,0x03,0x23,0xd4,0x01
	.byte 0x0b
	.ascii "EvalCoord1f\0"
	.byte 0x00,0x00,0x44,0x0e,0x03,0x23,0xd8,0x01
	.byte 0x0b
	.ascii "EvalCoord2f\0"
	.byte 0x00,0x00,0x44,0x2a,0x03,0x23,0xdc,0x01
	.byte 0x0b
	.ascii "EvalMesh1\0"
	.byte 0x00,0x00,0x44,0x4b,0x03,0x23,0xe0,0x01
	.byte 0x0b
	.ascii "EvalMesh2\0"
	.byte 0x00,0x00,0x44,0x76,0x03,0x23,0xe4,0x01
	.byte 0x0b
	.ascii "EvalPoint1\0"
	.byte 0x00,0x00,0x44,0x8d,0x03,0x23,0xe8,0x01
	.byte 0x0b
	.ascii "EvalPoint2\0"
	.byte 0x00,0x00,0x44,0xa9,0x03,0x23,0xec,0x01
	.byte 0x0b
	.ascii "FeedbackBuffer\0"
	.byte 0x00,0x00,0x44,0xcf,0x03,0x23,0xf0,0x01
	.byte 0x0b
	.ascii "Finish\0"
	.byte 0x00,0x00,0x44,0xe1,0x03,0x23,0xf4,0x01
	.byte 0x0b
	.ascii "Flush\0"
	.byte 0x00,0x00,0x44,0xf3,0x03,0x23,0xf8,0x01
	.byte 0x0b
	.ascii "Fogfv\0"
	.byte 0x00,0x00,0x45,0x19,0x03,0x23,0xfc,0x01
	.byte 0x0b
	.ascii "FrontFace\0"
	.byte 0x00,0x00,0x45,0x30,0x03,0x23,0x80,0x02
	.byte 0x0b
	.ascii "Frustum\0"
	.byte 0x00,0x00,0x45,0x60,0x03,0x23,0x84,0x02
	.byte 0x0b
	.ascii "GenLists\0"
	.byte 0x00,0x00,0x45,0x7b,0x03,0x23,0x88,0x02
	.byte 0x0b
	.ascii "GenTextures\0"
	.byte 0x00,0x00,0x45,0x9c,0x03,0x23,0x8c,0x02
	.byte 0x0b
	.ascii "GetBooleanv\0"
	.byte 0x00,0x00,0x45,0xb8,0x03,0x23,0x90,0x02
	.byte 0x0b
	.ascii "GetClipPlane\0"
	.byte 0x00,0x00,0x45,0xd9,0x03,0x23,0x94,0x02
	.byte 0x0b
	.ascii "GetColorTable\0"
	.byte 0x00,0x00,0x45,0xff,0x03,0x23,0x98,0x02
	.byte 0x0b
	.ascii "GetColorTableParameteriv\0"
	.byte 0x00,0x00,0x46,0x25,0x03,0x23,0x9c,0x02
	.byte 0x0b
	.ascii "GetDoublev\0"
	.byte 0x00,0x00,0x46,0x41,0x03,0x23,0xa0,0x02
	.byte 0x0b
	.ascii "GetError\0"
	.byte 0x00,0x00,0x46,0x57,0x03,0x23,0xa4,0x02
	.byte 0x0b
	.ascii "GetFloatv\0"
	.byte 0x00,0x00,0x46,0x73,0x03,0x23,0xa8,0x02
	.byte 0x0b
	.ascii "GetIntegerv\0"
	.byte 0x00,0x00,0x46,0x8f,0x03,0x23,0xac,0x02
	.byte 0x0b
	.ascii "GetString\0"
	.byte 0x00,0x00,0x46,0xb4,0x03,0x23,0xb0,0x02
	.byte 0x0b
	.ascii "GetLightfv\0"
	.byte 0x00,0x00,0x46,0xd5,0x03,0x23,0xb4,0x02
	.byte 0x0b
	.ascii "GetLightiv\0"
	.byte 0x00,0x00,0x46,0xf6,0x03,0x23,0xb8,0x02
	.byte 0x0b
	.ascii "GetMapdv\0"
	.byte 0x00,0x00,0x47,0x17,0x03,0x23,0xbc,0x02
	.byte 0x0b
	.ascii "GetMapfv\0"
	.byte 0x00,0x00,0x47,0x38,0x03,0x23,0xc0,0x02
	.byte 0x0b
	.ascii "GetMapiv\0"
	.byte 0x00,0x00,0x47,0x59,0x03,0x23,0xc4,0x02
	.byte 0x0b
	.ascii "GetMaterialfv\0"
	.byte 0x00,0x00,0x47,0x7a,0x03,0x23,0xc8,0x02
	.byte 0x0b
	.ascii "GetMaterialiv\0"
	.byte 0x00,0x00,0x47,0x9b,0x03,0x23,0xcc,0x02
	.byte 0x0b
	.ascii "GetPixelMapfv\0"
	.byte 0x00,0x00,0x47,0xb7,0x03,0x23,0xd0,0x02
	.byte 0x0b
	.ascii "GetPixelMapuiv\0"
	.byte 0x00,0x00,0x47,0xd3,0x03,0x23,0xd4,0x02
	.byte 0x0b
	.ascii "GetPixelMapusv\0"
	.byte 0x00,0x00,0x48,0x06,0x03,0x23,0xd8,0x02
	.byte 0x0b
	.ascii "GetPointerv\0"
	.byte 0x00,0x00,0x48,0x27,0x03,0x23,0xdc,0x02
	.byte 0x0b
	.ascii "GetPolygonStipple\0"
	.byte 0x00,0x00,0x48,0x3e,0x03,0x23,0xe0,0x02
	.byte 0x0b
	.ascii "PrioritizeTextures\0"
	.byte 0x00,0x00,0x48,0x73,0x03,0x23,0xe4,0x02
	.byte 0x0b
	.ascii "GetTexEnvfv\0"
	.byte 0x00,0x00,0x48,0x94,0x03,0x23,0xe8,0x02
	.byte 0x0b
	.ascii "GetTexEnviv\0"
	.byte 0x00,0x00,0x48,0xb5,0x03,0x23,0xec,0x02
	.byte 0x0b
	.ascii "GetTexGendv\0"
	.byte 0x00,0x00,0x48,0xd6,0x03,0x23,0xf0,0x02
	.byte 0x0b
	.ascii "GetTexGenfv\0"
	.byte 0x00,0x00,0x48,0xf7,0x03,0x23,0xf4,0x02
	.byte 0x0b
	.ascii "GetTexGeniv\0"
	.byte 0x00,0x00,0x49,0x18,0x03,0x23,0xf8,0x02
	.byte 0x0b
	.ascii "GetTexImage\0"
	.byte 0x00,0x00,0x49,0x43,0x03,0x23,0xfc,0x02
	.byte 0x0b
	.ascii "GetTexLevelParameterfv\0"
	.byte 0x00,0x00,0x49,0x69,0x03,0x23,0x80,0x03
	.byte 0x0b
	.ascii "GetTexLevelParameteriv\0"
	.byte 0x00,0x00,0x49,0x8f,0x03,0x23,0x84,0x03
	.byte 0x0b
	.ascii "GetTexParameterfv\0"
	.byte 0x00,0x00,0x49,0xb0,0x03,0x23,0x88,0x03
	.byte 0x0b
	.ascii "GetTexParameteriv\0"
	.byte 0x00,0x00,0x49,0xd1,0x03,0x23,0x8c,0x03
	.byte 0x0b
	.ascii "Hint\0"
	.byte 0x00,0x00,0x49,0xed,0x03,0x23,0x90,0x03
	.byte 0x0b
	.ascii "IndexMask\0"
	.byte 0x00,0x00,0x4a,0x04,0x03,0x23,0x94,0x03
	.byte 0x0b
	.ascii "Indexf\0"
	.byte 0x00,0x00,0x4a,0x1b,0x03,0x23,0x98,0x03
	.byte 0x0b
	.ascii "Indexi\0"
	.byte 0x00,0x00,0x4a,0x32,0x03,0x23,0x9c,0x03
	.byte 0x0b
	.ascii "IndexPointer\0"
	.byte 0x00,0x00,0x4a,0x5d,0x03,0x23,0xa0,0x03
	.byte 0x0b
	.ascii "InitNames\0"
	.byte 0x00,0x00,0x4a,0x6f,0x03,0x23,0xa4,0x03
	.byte 0x0b
	.ascii "InterleavedArrays\0"
	.byte 0x00,0x00,0x4a,0x9a,0x03,0x23,0xa8,0x03
	.byte 0x0b
	.ascii "IsEnabled\0"
	.byte 0x00,0x00,0x4a,0xb5,0x03,0x23,0xac,0x03
	.byte 0x0b
	.ascii "IsList\0"
	.byte 0x00,0x00,0x4a,0xd0,0x03,0x23,0xb0,0x03
	.byte 0x0b
	.ascii "IsTexture\0"
	.byte 0x00,0x00,0x4a,0xeb,0x03,0x23,0xb4,0x03
	.byte 0x0b
	.ascii "LightModelfv\0"
	.byte 0x00,0x00,0x4b,0x11,0x03,0x23,0xb8,0x03
	.byte 0x0b
	.ascii "Lightfv\0"
	.byte 0x00,0x00,0x4b,0x41,0x03,0x23,0xbc,0x03
	.byte 0x0b
	.ascii "LineStipple\0"
	.byte 0x00,0x00,0x4b,0x5d,0x03,0x23,0xc0,0x03
	.byte 0x0b
	.ascii "LineWidth\0"
	.byte 0x00,0x00,0x4b,0x74,0x03,0x23,0xc4,0x03
	.byte 0x0b
	.ascii "ListBase\0"
	.byte 0x00,0x00,0x4b,0x8b,0x03,0x23,0xc8,0x03
	.byte 0x0b
	.ascii "LoadIdentity\0"
	.byte 0x00,0x00,0x4b,0x9d,0x03,0x23,0xcc,0x03
	.byte 0x0b
	.ascii "LoadMatrixf\0"
	.byte 0x00,0x00,0x4b,0xbe,0x03,0x23,0xd0,0x03
	.byte 0x0b
	.ascii "LoadName\0"
	.byte 0x00,0x00,0x4b,0xd5,0x03,0x23,0xd4,0x03
	.byte 0x0b
	.ascii "LogicOp\0"
	.byte 0x00,0x00,0x4b,0xec,0x03,0x23,0xd8,0x03
	.byte 0x0b
	.ascii "Map1f\0"
	.byte 0x00,0x00,0x4c,0x2b,0x03,0x23,0xdc,0x03
	.byte 0x0b
	.ascii "Map2f\0"
	.byte 0x00,0x00,0x4c,0x7e,0x03,0x23,0xe0,0x03
	.byte 0x0b
	.ascii "MapGrid1f\0"
	.byte 0x00,0x00,0x4c,0x9f,0x03,0x23,0xe4,0x03
	.byte 0x0b
	.ascii "MapGrid2f\0"
	.byte 0x00,0x00,0x4c,0xcf,0x03,0x23,0xe8,0x03
	.byte 0x0b
	.ascii "Materialfv\0"
	.byte 0x00,0x00,0x4c,0xfa,0x03,0x23,0xec,0x03
	.byte 0x0b
	.ascii "MatrixMode\0"
	.byte 0x00,0x00,0x4d,0x11,0x03,0x23,0xf0,0x03
	.byte 0x0b
	.ascii "MultMatrixf\0"
	.byte 0x00,0x00,0x4d,0x32,0x03,0x23,0xf4,0x03
	.byte 0x0b
	.ascii "NewList\0"
	.byte 0x00,0x00,0x4d,0x4e,0x03,0x23,0xf8,0x03
	.byte 0x0b
	.ascii "Normal3f\0"
	.byte 0x00,0x00,0x4d,0x6f,0x03,0x23,0xfc,0x03
	.byte 0x0b
	.ascii "Normal3fv\0"
	.byte 0x00,0x00,0x4d,0x90,0x03,0x23,0x80,0x04
	.byte 0x0b
	.ascii "NormalPointer\0"
	.byte 0x00,0x00,0x4d,0xbb,0x03,0x23,0x84,0x04
	.byte 0x0b
	.ascii "Ortho\0"
	.byte 0x00,0x00,0x4d,0xeb,0x03,0x23,0x88,0x04
	.byte 0x0b
	.ascii "PassThrough\0"
	.byte 0x00,0x00,0x4e,0x02,0x03,0x23,0x8c,0x04
	.byte 0x0b
	.ascii "PixelMapfv\0"
	.byte 0x00,0x00,0x4e,0x2d,0x03,0x23,0x90,0x04
	.byte 0x0b
	.ascii "PixelStorei\0"
	.byte 0x00,0x00,0x4e,0x49,0x03,0x23,0x94,0x04
	.byte 0x0b
	.ascii "PixelTransferf\0"
	.byte 0x00,0x00,0x4e,0x65,0x03,0x23,0x98,0x04
	.byte 0x0b
	.ascii "PixelZoom\0"
	.byte 0x00,0x00,0x4e,0x81,0x03,0x23,0x9c,0x04
	.byte 0x0b
	.ascii "PointParameterfvEXT\0"
	.byte 0x00,0x00,0x4e,0xa7,0x03,0x23,0xa0,0x04
	.byte 0x0b
	.ascii "PointSize\0"
	.byte 0x00,0x00,0x4e,0xbe,0x03,0x23,0xa4,0x04
	.byte 0x0b
	.ascii "PolygonMode\0"
	.byte 0x00,0x00,0x4e,0xda,0x03,0x23,0xa8,0x04
	.byte 0x0b
	.ascii "PolygonOffset\0"
	.byte 0x00,0x00,0x4e,0xf6,0x03,0x23,0xac,0x04
	.byte 0x0b
	.ascii "PolygonStipple\0"
	.byte 0x00,0x00,0x4f,0x17,0x03,0x23,0xb0,0x04
	.byte 0x0b
	.ascii "PopAttrib\0"
	.byte 0x00,0x00,0x4f,0x29,0x03,0x23,0xb4,0x04
	.byte 0x0b
	.ascii "PopClientAttrib\0"
	.byte 0x00,0x00,0x4f,0x3b,0x03,0x23,0xb8,0x04
	.byte 0x0b
	.ascii "PopMatrix\0"
	.byte 0x00,0x00,0x4f,0x4d,0x03,0x23,0xbc,0x04
	.byte 0x0b
	.ascii "PopName\0"
	.byte 0x00,0x00,0x4f,0x5f,0x03,0x23,0xc0,0x04
	.byte 0x0b
	.ascii "PushAttrib\0"
	.byte 0x00,0x00,0x4f,0x76,0x03,0x23,0xc4,0x04
	.byte 0x0b
	.ascii "PushClientAttrib\0"
	.byte 0x00,0x00,0x4f,0x8d,0x03,0x23,0xc8,0x04
	.byte 0x0b
	.ascii "PushMatrix\0"
	.byte 0x00,0x00,0x4f,0x9f,0x03,0x23,0xcc,0x04
	.byte 0x0b
	.ascii "PushName\0"
	.byte 0x00,0x00,0x4f,0xb6,0x03,0x23,0xd0,0x04
	.byte 0x0b
	.ascii "RasterPos4f\0"
	.byte 0x00,0x00,0x4f,0xdc,0x03,0x23,0xd4,0x04
	.byte 0x0b
	.ascii "ReadBuffer\0"
	.byte 0x00,0x00,0x4f,0xf3,0x03,0x23,0xd8,0x04
	.byte 0x0b
	.ascii "ReadPixels\0"
	.byte 0x00,0x00,0x50,0x28,0x03,0x23,0xdc,0x04
	.byte 0x0b
	.ascii "Rectf\0"
	.byte 0x00,0x00,0x50,0x4e,0x03,0x23,0xe0,0x04
	.byte 0x0b
	.ascii "RenderMode\0"
	.byte 0x00,0x00,0x50,0x69,0x03,0x23,0xe4,0x04
	.byte 0x0b
	.ascii "Rotatef\0"
	.byte 0x00,0x00,0x50,0x8f,0x03,0x23,0xe8,0x04
	.byte 0x0b
	.ascii "Scalef\0"
	.byte 0x00,0x00,0x50,0xb0,0x03,0x23,0xec,0x04
	.byte 0x0b
	.ascii "Scissor\0"
	.byte 0x00,0x00,0x50,0xd6,0x03,0x23,0xf0,0x04
	.byte 0x0b
	.ascii "SelectBuffer\0"
	.byte 0x00,0x00,0x50,0xf2,0x03,0x23,0xf4,0x04
	.byte 0x0b
	.ascii "ShadeModel\0"
	.byte 0x00,0x00,0x51,0x09,0x03,0x23,0xf8,0x04
	.byte 0x0b
	.ascii "StencilFunc\0"
	.byte 0x00,0x00,0x51,0x2a,0x03,0x23,0xfc,0x04
	.byte 0x0b
	.ascii "StencilMask\0"
	.byte 0x00,0x00,0x51,0x41,0x03,0x23,0x80,0x05
	.byte 0x0b
	.ascii "StencilOp\0"
	.byte 0x00,0x00,0x51,0x62,0x03,0x23,0x84,0x05
	.byte 0x0b
	.ascii "TexCoord2f\0"
	.byte 0x00,0x00,0x51,0x7e,0x03,0x23,0x88,0x05
	.byte 0x0b
	.ascii "TexCoord4f\0"
	.byte 0x00,0x00,0x51,0xa4,0x03,0x23,0x8c,0x05
	.byte 0x0b
	.ascii "TexCoordPointer\0"
	.byte 0x00,0x00,0x51,0xd4,0x03,0x23,0x90,0x05
	.byte 0x0b
	.ascii "TexEnvfv\0"
	.byte 0x00,0x00,0x51,0xff,0x03,0x23,0x94,0x05
	.byte 0x0b
	.ascii "TexGenfv\0"
	.byte 0x00,0x00,0x52,0x2a,0x03,0x23,0x98,0x05
	.byte 0x0b
	.ascii "TexImage1D\0"
	.byte 0x00,0x00,0x52,0x64,0x03,0x23,0x9c,0x05
	.byte 0x0b
	.ascii "TexImage2D\0"
	.byte 0x00,0x00,0x52,0xa3,0x03,0x23,0xa0,0x05
	.byte 0x0b
	.ascii "TexSubImage1D\0"
	.byte 0x00,0x00,0x52,0xd8,0x03,0x23,0xa4,0x05
	.byte 0x0b
	.ascii "TexSubImage2D\0"
	.byte 0x00,0x00,0x53,0x17,0x03,0x23,0xa8,0x05
	.byte 0x0b
	.ascii "TexImage3DEXT\0"
	.byte 0x00,0x00,0x53,0x5b,0x03,0x23,0xac,0x05
	.byte 0x0b
	.ascii "TexSubImage3DEXT\0"
	.byte 0x00,0x00,0x53,0xa4,0x03,0x23,0xb0,0x05
	.byte 0x0b
	.ascii "TexParameterfv\0"
	.byte 0x00,0x00,0x53,0xcf,0x03,0x23,0xb4,0x05
	.byte 0x0b
	.ascii "Translatef\0"
	.byte 0x00,0x00,0x53,0xf0,0x03,0x23,0xb8,0x05
	.byte 0x0b
	.ascii "Vertex2f\0"
	.byte 0x00,0x00,0x54,0x0c,0x03,0x23,0xbc,0x05
	.byte 0x0b
	.ascii "Vertex3f\0"
	.byte 0x00,0x00,0x54,0x2d,0x03,0x23,0xc0,0x05
	.byte 0x0b
	.ascii "Vertex4f\0"
	.byte 0x00,0x00,0x54,0x53,0x03,0x23,0xc4,0x05
	.byte 0x0b
	.ascii "Vertex3fv\0"
	.byte 0x00,0x00,0x54,0x74,0x03,0x23,0xc8,0x05
	.byte 0x0b
	.ascii "VertexPointer\0"
	.byte 0x00,0x00,0x54,0xa4,0x03,0x23,0xcc,0x05
	.byte 0x0b
	.ascii "Viewport\0"
	.byte 0x00,0x00,0x54,0xca,0x03,0x23,0xd0,0x05
	.byte 0x0b
	.ascii "WindowPos4fMESA\0"
	.byte 0x00,0x00,0x54,0xf0,0x03,0x23,0xd4,0x05
	.byte 0x0b
	.ascii "ResizeBuffersMESA\0"
	.byte 0x00,0x00,0x55,0x02,0x03,0x23,0xd8,0x05
	.byte 0x00,0x0a
	.ascii "gl_visual\0"
	.byte 0x4c,0x02,0x00,0x00,0x65,0x53,0x0b
	.ascii "RGBAflag\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x00,0x0b
	.ascii "DBflag\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x01,0x0b
	.ascii "RedScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x04,0x0b
	.ascii "GreenScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x08,0x0b
	.ascii "BlueScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x0c,0x0b
	.ascii "AlphaScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x10,0x0b
	.ascii "EightBitColor\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x14,0x0b
	.ascii "InvRedScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x18,0x0b
	.ascii "InvGreenScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x1c,0x0b
	.ascii "InvBlueScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x20,0x0b
	.ascii "InvAlphaScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x24,0x0b
	.ascii "RedBits\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x28,0x0b
	.ascii "GreenBits\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x2c,0x0b
	.ascii "BlueBits\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x30,0x0b
	.ascii "AlphaBits\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x34,0x0b
	.ascii "IndexBits\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x38,0x0b
	.ascii "AccumBits\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x3c,0x0b
	.ascii "DepthBits\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x40,0x0b
	.ascii "StencilBits\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x44,0x0b
	.ascii "FrontAlphaEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x48,0x0b
	.ascii "BackAlphaEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x49,0x00
	.byte 0x03,0x00,0x00,0x63,0xab
	.ascii "GLvisual\0"
	.byte 0x02,0x05,0x00,0x00,0x65,0x53,0x03,0x00
	.byte 0x00,0x47,0xd8
	.ascii "GLdepth\0"
	.byte 0x02,0x05,0x00,0x00,0x65,0x67,0x03,0x00
	.byte 0x00,0x31,0x19
	.ascii "GLstencil\0"
	.byte 0x02,0x05,0x00,0x00,0x65,0x7a,0x02
	.ascii "short\0"
	.byte 0x05,0x02,0x03,0x00,0x00,0x65,0x8f
	.ascii "GLaccum\0"
	.byte 0x02,0x05,0x00,0x00,0x65,0x98,0x0a
	.ascii "gl_frame_buffer\0"
	.byte 0x34,0x02,0x00,0x00,0x66,0x82,0x0b
	.ascii "Visual\0"
	.byte 0x00,0x00,0x65,0x62,0x02,0x23,0x00,0x0b
	.ascii "Width\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x04,0x0b
	.ascii "Height\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x08,0x0b
	.ascii "Depth\0"
	.byte 0x00,0x00,0x65,0x75,0x02,0x23,0x0c,0x0b
	.ascii "Stencil\0"
	.byte 0x00,0x00,0x65,0x8a,0x02,0x23,0x10,0x0b
	.ascii "Accum\0"
	.byte 0x00,0x00,0x65,0xa6,0x02,0x23,0x14,0x0b
	.ascii "FrontAlpha\0"
	.byte 0x00,0x00,0x31,0x38,0x02,0x23,0x18,0x0b
	.ascii "BackAlpha\0"
	.byte 0x00,0x00,0x31,0x38,0x02,0x23,0x1c,0x0b
	.ascii "Alpha\0"
	.byte 0x00,0x00,0x31,0x38,0x02,0x23,0x20,0x0b
	.ascii "Xmin\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x24,0x0b
	.ascii "Xmax\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x28,0x0b
	.ascii "Ymin\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x2c,0x0b
	.ascii "Ymax\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x30,0x00
	.byte 0x03,0x00,0x00,0x65,0xab
	.ascii "GLframebuffer\0"
	.byte 0x02,0x05,0x00,0x00,0x66,0x82,0x02
	.ascii "char\0"
	.byte 0x06,0x01,0x0f,0x00,0x00,0x66,0x9b,0x05
	.byte 0x00,0x00,0x66,0xa3,0x13,0x01,0x00,0x00
	.byte 0x66,0xa8,0x01,0x05,0x00,0x00,0x66,0xad
	.byte 0x10,0x01,0x01,0x00,0x00,0x66,0xc6,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x00,0x05,0x00,0x00
	.byte 0x66,0xb9,0x10,0x01,0x01,0x00,0x00,0x66
	.byte 0xdd,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x27,0x00,0x05,0x00,0x00,0x66
	.byte 0xcb,0x10,0x01,0x01,0x00,0x00,0x67,0x03
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x31,0x19,0x11,0x00,0x00,0x31,0x19,0x11
	.byte 0x00,0x00,0x31,0x19,0x11,0x00,0x00,0x31
	.byte 0x19,0x00,0x05,0x00,0x00,0x66,0xe2,0x10
	.byte 0x01,0x01,0x00,0x00,0x67,0x2e,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x31,0x19
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x00,0x05,0x00,0x00
	.byte 0x67,0x08,0x10,0x01,0x01,0x00,0x00,0x67
	.byte 0x45,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x27,0x00,0x05,0x00,0x00,0x67
	.byte 0x33,0x10,0x01,0x01,0x00,0x00,0x67,0x6b
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x31,0x19,0x11,0x00,0x00,0x31,0x19,0x11
	.byte 0x00,0x00,0x31,0x19,0x11,0x00,0x00,0x31
	.byte 0x19,0x00,0x05,0x00,0x00,0x67,0x4a,0x12
	.byte 0x01,0x00,0x00,0x31,0x19,0x01,0x00,0x00
	.byte 0x67,0x86,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x70,0x00,0x05,0x00,0x00
	.byte 0x67,0x70,0x10,0x01,0x01,0x00,0x00,0x67
	.byte 0xa2,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x45,0x80,0x11,0x00,0x00,0x45,0x80
	.byte 0x00,0x05,0x00,0x00,0x67,0x8b,0x0f,0x00
	.byte 0x00,0x31,0x19,0x05,0x00,0x00,0x67,0xa7
	.byte 0x0f,0x00,0x00,0x31,0x19,0x05,0x00,0x00
	.byte 0x67,0xb1,0x0f,0x00,0x00,0x31,0x19,0x05
	.byte 0x00,0x00,0x67,0xbb,0x0f,0x00,0x00,0x31
	.byte 0x19,0x05,0x00,0x00,0x67,0xc5,0x0f,0x00
	.byte 0x00,0x31,0x19,0x05,0x00,0x00,0x67,0xcf
	.byte 0x10,0x01,0x01,0x00,0x00,0x68,0x0e,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x27,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x67,0xac
	.byte 0x11,0x00,0x00,0x67,0xb6,0x11,0x00,0x00
	.byte 0x67,0xc0,0x11,0x00,0x00,0x67,0xca,0x11
	.byte 0x00,0x00,0x67,0xd4,0x00,0x05,0x00,0x00
	.byte 0x67,0xd9,0x0f,0x00,0x00,0x31,0x19,0x05
	.byte 0x00,0x00,0x68,0x13,0x10,0x01,0x01,0x00
	.byte 0x00,0x68,0x3e,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x27,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x68,0x18,0x00,0x05,0x00,0x00
	.byte 0x68,0x1d,0x0f,0x00,0x00,0x01,0x03,0x05
	.byte 0x00,0x00,0x68,0x43,0x0f,0x00,0x00,0x01
	.byte 0x03,0x05,0x00,0x00,0x68,0x4d,0x0f,0x00
	.byte 0x00,0x31,0x19,0x05,0x00,0x00,0x68,0x57
	.byte 0x0f,0x00,0x00,0x31,0x19,0x05,0x00,0x00
	.byte 0x68,0x61,0x0f,0x00,0x00,0x31,0x19,0x05
	.byte 0x00,0x00,0x68,0x6b,0x0f,0x00,0x00,0x31
	.byte 0x19,0x05,0x00,0x00,0x68,0x75,0x0f,0x00
	.byte 0x00,0x31,0x19,0x05,0x00,0x00,0x68,0x7f
	.byte 0x10,0x01,0x01,0x00,0x00,0x68,0xbe,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x27,0x11,0x00,0x00,0x68,0x48,0x11,0x00
	.byte 0x00,0x68,0x52,0x11,0x00,0x00,0x68,0x5c
	.byte 0x11,0x00,0x00,0x68,0x66,0x11,0x00,0x00
	.byte 0x68,0x70,0x11,0x00,0x00,0x68,0x7a,0x11
	.byte 0x00,0x00,0x68,0x84,0x00,0x05,0x00,0x00
	.byte 0x68,0x89,0x0f,0x00,0x00,0x01,0x03,0x05
	.byte 0x00,0x00,0x68,0xc3,0x0f,0x00,0x00,0x01
	.byte 0x03,0x05,0x00,0x00,0x68,0xcd,0x0f,0x00
	.byte 0x00,0x31,0x19,0x05,0x00,0x00,0x68,0xd7
	.byte 0x10,0x01,0x01,0x00,0x00,0x69,0x02,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x27,0x11,0x00,0x00,0x68,0xc8,0x11,0x00
	.byte 0x00,0x68,0xd2,0x11,0x00,0x00,0x68,0xdc
	.byte 0x00,0x05,0x00,0x00,0x68,0xe1,0x0f,0x00
	.byte 0x00,0x01,0x27,0x05,0x00,0x00,0x69,0x07
	.byte 0x0f,0x00,0x00,0x31,0x19,0x05,0x00,0x00
	.byte 0x69,0x11,0x10,0x01,0x01,0x00,0x00,0x69
	.byte 0x41,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x27,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x69,0x0c,0x11,0x00,0x00,0x69,0x16,0x00
	.byte 0x05,0x00,0x00,0x69,0x1b,0x0f,0x00,0x00
	.byte 0x31,0x19,0x05,0x00,0x00,0x69,0x46,0x10
	.byte 0x01,0x01,0x00,0x00,0x69,0x71,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x27
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x69,0x4b,0x00
	.byte 0x05,0x00,0x00,0x69,0x50,0x0f,0x00,0x00
	.byte 0x01,0x03,0x05,0x00,0x00,0x69,0x76,0x0f
	.byte 0x00,0x00,0x01,0x03,0x05,0x00,0x00,0x69
	.byte 0x80,0x0f,0x00,0x00,0x01,0x27,0x05,0x00
	.byte 0x00,0x69,0x8a,0x0f,0x00,0x00,0x31,0x19
	.byte 0x05,0x00,0x00,0x69,0x94,0x10,0x01,0x01
	.byte 0x00,0x00,0x69,0xc4,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x27,0x11,0x00
	.byte 0x00,0x69,0x7b,0x11,0x00,0x00,0x69,0x85
	.byte 0x11,0x00,0x00,0x69,0x8f,0x11,0x00,0x00
	.byte 0x69,0x99,0x00,0x05,0x00,0x00,0x69,0x9e
	.byte 0x0f,0x00,0x00,0x01,0x03,0x05,0x00,0x00
	.byte 0x69,0xc9,0x0f,0x00,0x00,0x01,0x03,0x05
	.byte 0x00,0x00,0x69,0xd3,0x0f,0x00,0x00,0x31
	.byte 0x19,0x05,0x00,0x00,0x69,0xdd,0x10,0x01
	.byte 0x01,0x00,0x00,0x6a,0x08,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x27,0x11
	.byte 0x00,0x00,0x69,0xce,0x11,0x00,0x00,0x69
	.byte 0xd8,0x11,0x00,0x00,0x69,0xe2,0x00,0x05
	.byte 0x00,0x00,0x69,0xe7,0x10,0x01,0x01,0x00
	.byte 0x00,0x6a,0x2e,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x27,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x45,0x80,0x00,0x05,0x00,0x00
	.byte 0x6a,0x0d,0x10,0x01,0x01,0x00,0x00,0x6a
	.byte 0x63,0x11,0x00,0x00,0x3c,0x1c,0x11,0x00
	.byte 0x00,0x01,0x27,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x34,0x4d,0x11,0x00,0x00,0x34,0x4d,0x11
	.byte 0x00,0x00,0x34,0x4d,0x11,0x00,0x00,0x34
	.byte 0x4d,0x00,0x05,0x00,0x00,0x6a,0x33,0x0f
	.byte 0x00,0x00,0x01,0x03,0x05,0x00,0x00,0x6a
	.byte 0x68,0x0f,0x00,0x00,0x01,0x03,0x05,0x00
	.byte 0x00,0x6a,0x72,0x0f,0x00,0x00,0x31,0x19
	.byte 0x05,0x00,0x00,0x6a,0x7c,0x10,0x01,0x01
	.byte 0x00,0x00,0x6a,0xac,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x27,0x11,0x00
	.byte 0x00,0x6a,0x6d,0x11,0x00,0x00,0x6a,0x77
	.byte 0x11,0x00,0x00,0x45,0x80,0x11,0x00,0x00
	.byte 0x6a,0x81,0x00,0x05,0x00,0x00,0x6a,0x86
	.byte 0x0f,0x00,0x00,0x01,0x03,0x05,0x00,0x00
	.byte 0x6a,0xb1,0x0f,0x00,0x00,0x01,0x03,0x05
	.byte 0x00,0x00,0x6a,0xbb,0x0f,0x00,0x00,0x31
	.byte 0x19,0x05,0x00,0x00,0x6a,0xc5,0x10,0x01
	.byte 0x01,0x00,0x00,0x6b,0x04,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x27,0x11
	.byte 0x00,0x00,0x6a,0xb6,0x11,0x00,0x00,0x6a
	.byte 0xc0,0x11,0x00,0x00,0x34,0x4d,0x11,0x00
	.byte 0x00,0x34,0x4d,0x11,0x00,0x00,0x34,0x4d
	.byte 0x11,0x00,0x00,0x34,0x4d,0x11,0x00,0x00
	.byte 0x6a,0xca,0x00,0x05,0x00,0x00,0x6a,0xcf
	.byte 0x10,0x01,0x01,0x00,0x00,0x6b,0x16,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x00,0x05,0x00,0x00
	.byte 0x6b,0x09,0x10,0x01,0x01,0x00,0x00,0x6b
	.byte 0x28,0x11,0x00,0x00,0x3c,0x1c,0x00,0x05
	.byte 0x00,0x00,0x6b,0x1b,0x12,0x01,0x00,0x00
	.byte 0x31,0x19,0x01,0x00,0x00,0x6b,0x43,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x01
	.byte 0x27,0x00,0x05,0x00,0x00,0x6b,0x2d,0x12
	.byte 0x01,0x00,0x00,0x31,0x19,0x01,0x00,0x00
	.byte 0x6b,0x6d,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x31,0x19,0x11,0x00,0x00,0x31
	.byte 0x19,0x11,0x00,0x00,0x31,0x19,0x11,0x00
	.byte 0x00,0x31,0x19,0x00,0x05,0x00,0x00,0x6b
	.byte 0x48,0x12,0x01,0x00,0x00,0x31,0x19,0x01
	.byte 0x00,0x00,0x6b,0x88,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x00,0x05
	.byte 0x00,0x00,0x6b,0x72,0x10,0x01,0x01,0x00
	.byte 0x00,0x6b,0x9f,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x31,0x19,0x00,0x05,0x00
	.byte 0x00,0x6b,0x8d,0x10,0x01,0x01,0x00,0x00
	.byte 0x6b,0xb1,0x11,0x00,0x00,0x3c,0x1c,0x00
	.byte 0x05,0x00,0x00,0x6b,0xa4,0x10,0x01,0x01
	.byte 0x00,0x00,0x6b,0xcd,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x40,0x11,0x00
	.byte 0x00,0x01,0x40,0x00,0x05,0x00,0x00,0x6b
	.byte 0xb6,0x10,0x01,0x01,0x00,0x00,0x6b,0xdf
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x00,0x05,0x00
	.byte 0x00,0x6b,0xd2,0x10,0x01,0x01,0x00,0x00
	.byte 0x6b,0xf1,0x11,0x00,0x00,0x3c,0x1c,0x00
	.byte 0x05,0x00,0x00,0x6b,0xe4,0x0f,0x00,0x00
	.byte 0x47,0xd8,0x05,0x00,0x00,0x6b,0xf6,0x12
	.byte 0x01,0x00,0x00,0x01,0x27,0x01,0x00,0x00
	.byte 0x6c,0x2a,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x27,0x11,0x00,0x00,0x01
	.byte 0x03,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x6b,0xfb,0x11,0x00,0x00,0x34,0x4d
	.byte 0x00,0x05,0x00,0x00,0x6c,0x00,0x0f,0x00
	.byte 0x00,0x01,0x03,0x05,0x00,0x00,0x6c,0x2f
	.byte 0x0f,0x00,0x00,0x01,0x03,0x05,0x00,0x00
	.byte 0x6c,0x39,0x0f,0x00,0x00,0x47,0xd8,0x05
	.byte 0x00,0x00,0x6c,0x43,0x10,0x01,0x01,0x00
	.byte 0x00,0x6c,0x73,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x27,0x11,0x00,0x00
	.byte 0x6c,0x34,0x11,0x00,0x00,0x6c,0x3e,0x11
	.byte 0x00,0x00,0x6c,0x48,0x11,0x00,0x00,0x34
	.byte 0x4d,0x00,0x05,0x00,0x00,0x6c,0x4d,0x10
	.byte 0x01,0x01,0x00,0x00,0x6c,0x99,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x27
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x44,0xae,0x00
	.byte 0x05,0x00,0x00,0x6c,0x78,0x10,0x01,0x01
	.byte 0x00,0x00,0x6c,0xbf,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x27,0x11,0x00
	.byte 0x00,0x01,0x03,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x47,0xea,0x00,0x05,0x00
	.byte 0x00,0x6c,0x9e,0x10,0x01,0x01,0x00,0x00
	.byte 0x6c,0xdb,0x11,0x00,0x00,0x3c,0x1c,0x11
	.byte 0x00,0x00,0x01,0x27,0x11,0x00,0x00,0x01
	.byte 0x27,0x00,0x05,0x00,0x00,0x6c,0xc4,0x03
	.byte 0x00,0x00,0x6c,0xdb
	.ascii "points_func\0"
	.byte 0x02,0x10,0x01,0x01,0x00,0x00,0x6d,0x0e
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x27,0x11,0x00,0x00,0x01,0x27,0x11
	.byte 0x00,0x00,0x01,0x27,0x00,0x05,0x00,0x00
	.byte 0x6c,0xf2,0x03,0x00,0x00,0x6d,0x0e
	.ascii "line_func\0"
	.byte 0x02,0x10,0x01,0x01,0x00,0x00,0x6d,0x44
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x27,0x11,0x00,0x00,0x01,0x27,0x11
	.byte 0x00,0x00,0x01,0x27,0x11,0x00,0x00,0x01
	.byte 0x27,0x00,0x05,0x00,0x00,0x6d,0x23,0x03
	.byte 0x00,0x00,0x6d,0x44
	.ascii "triangle_func\0"
	.byte 0x02,0x10,0x01,0x01,0x00,0x00,0x6d,0x83
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x27,0x11,0x00,0x00,0x01,0x27,0x11
	.byte 0x00,0x00,0x01,0x27,0x11,0x00,0x00,0x01
	.byte 0x27,0x11,0x00,0x00,0x01,0x27,0x00,0x05
	.byte 0x00,0x00,0x6d,0x5d,0x03,0x00,0x00,0x6d
	.byte 0x83
	.ascii "quad_func\0"
	.byte 0x02,0x10,0x01,0x01,0x00,0x00,0x6d,0xb9
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x03,0x00,0x05,0x00,0x00,0x6d,0x98,0x03
	.byte 0x00,0x00,0x6d,0xb9
	.ascii "rect_func\0"
	.byte 0x02,0x0f,0x00,0x00,0x31,0x3d,0x05,0x00
	.byte 0x00,0x6d,0xce,0x12,0x01,0x00,0x00,0x31
	.byte 0x19,0x01,0x00,0x00,0x6e,0x11,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x01
	.byte 0x70,0x11,0x00,0x00,0x31,0x19,0x11,0x00
	.byte 0x00,0x6d,0xd3,0x00,0x05,0x00,0x00,0x6d
	.byte 0xd8,0x0f,0x00,0x00,0x3c,0xe4,0x05,0x00
	.byte 0x00,0x6e,0x16,0x12,0x01,0x00,0x00,0x31
	.byte 0x19,0x01,0x00,0x00,0x6e,0x54,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x40,0x11,0x00,0x00,0x01,0x40,0x11
	.byte 0x00,0x00,0x01,0x40,0x11,0x00,0x00,0x01
	.byte 0x40,0x11,0x00,0x00,0x6e,0x1b,0x00,0x05
	.byte 0x00,0x00,0x6e,0x20,0x10,0x01,0x01,0x00
	.byte 0x00,0x6e,0x6b,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x70,0x00,0x05,0x00
	.byte 0x00,0x6e,0x59,0x10,0x01,0x01,0x00,0x00
	.byte 0x6e,0x7d,0x11,0x00,0x00,0x3c,0x1c,0x00
	.byte 0x05,0x00,0x00,0x6e,0x70,0x10,0x01,0x01
	.byte 0x00,0x00,0x6e,0x99,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x27,0x11,0x00
	.byte 0x00,0x01,0x27,0x00,0x05,0x00,0x00,0x6e
	.byte 0x82,0x12,0x01,0x00,0x00,0x31,0x19,0x01
	.byte 0x00,0x00,0x6e,0xb4,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x31,0x19,0x00,0x05
	.byte 0x00,0x00,0x6e,0x9e,0x0f,0x00,0x00,0x01
	.byte 0x40,0x05,0x00,0x00,0x6e,0xb9,0x10,0x01
	.byte 0x01,0x00,0x00,0x6e,0xda,0x11,0x00,0x00
	.byte 0x3c,0x1c,0x11,0x00,0x00,0x01,0x70,0x11
	.byte 0x00,0x00,0x6e,0xbe,0x00,0x05,0x00,0x00
	.byte 0x6e,0xc3,0x0f,0x00,0x00,0x31,0x4a,0x05
	.byte 0x00,0x00,0x6e,0xdf,0x10,0x01,0x01,0x00
	.byte 0x00,0x6f,0x0f,0x11,0x00,0x00,0x3c,0x1c
	.byte 0x11,0x00,0x00,0x01,0x70,0x11,0x00,0x00
	.byte 0x34,0xa9,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x6e
	.byte 0xe4,0x00,0x05,0x00,0x00,0x6e,0xe9,0x0f
	.byte 0x00,0x00,0x01,0x40,0x05,0x00,0x00,0x6f
	.byte 0x14,0x10,0x01,0x01,0x00,0x00,0x6f,0x3f
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0x34,0xa9,0x11
	.byte 0x00,0x00,0x01,0x70,0x11,0x00,0x00,0x6f
	.byte 0x19,0x00,0x05,0x00,0x00,0x6f,0x1e,0x10
	.byte 0x01,0x01
	.byte 0x00,0x00,0x6f,0x5b,0x11,0x00,0x00,0x3c
	.byte 0x1c,0x11,0x00,0x00,0x01,0x70,0x11,0x00
	.byte 0x00,0x34,0xa9,0x00,0x05,0x00,0x00,0x6f
	.byte 0x44,0x10,0x01,0x01,0x00,0x00,0x6f,0x72
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x34,0xa9,0x00,0x05,0x00,0x00,0x6f,0x60
	.byte 0x10,0x01,0x01,0x00,0x00,0x6f,0x89,0x11
	.byte 0x00,0x00,0x3c,0x1c,0x11,0x00,0x00,0x34
	.byte 0xa9,0x00,0x05,0x00,0x00,0x6f,0x77,0x10
	.byte 0x01,0x01,0x00,0x00,0x6f,0xa0,0x11,0x00
	.byte 0x00,0x3c,0x1c,0x11,0x00,0x00,0x31,0x19
	.byte 0x00,0x05,0x00,0x00,0x6f,0x8e,0x0a
	.ascii "dd_function_table\0"
	.byte 0xd4,0x04,0x00,0x00,0x74,0x0d,0x0b
	.ascii "RendererString\0"
	.byte 0x00,0x00,0x66,0xb4,0x02,0x23,0x00,0x0b
	.ascii "UpdateState\0"
	.byte 0x00,0x00,0x66,0xc6,0x02,0x23,0x04,0x0b
	.ascii "ClearIndex\0"
	.byte 0x00,0x00,0x66,0xdd,0x02,0x23,0x08,0x0b
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x67,0x03,0x02,0x23,0x0c,0x0b
	.ascii "Clear\0"
	.byte 0x00,0x00,0x67,0x2e,0x02,0x23,0x10,0x0b
	.ascii "Index\0"
	.byte 0x00,0x00,0x67,0x45,0x02,0x23,0x14,0x0b
	.ascii "Color\0"
	.byte 0x00,0x00,0x67,0x6b,0x02,0x23,0x18,0x0b
	.ascii "SetBuffer\0"
	.byte 0x00,0x00,0x67,0x86,0x02,0x23,0x1c,0x0b
	.ascii "GetBufferSize\0"
	.byte 0x00,0x00,0x67,0xa2,0x02,0x23,0x20,0x0b
	.ascii "WriteColorSpan\0"
	.byte 0x00,0x00,0x68,0x0e,0x02,0x23,0x24,0x0b
	.ascii "WriteMonocolorSpan\0"
	.byte 0x00,0x00,0x68,0x3e,0x02,0x23,0x28,0x0b
	.ascii "WriteColorPixels\0"
	.byte 0x00,0x00,0x68,0xbe,0x02,0x23,0x2c,0x0b
	.ascii "WriteMonocolorPixels\0"
	.byte 0x00,0x00,0x69,0x02,0x02,0x23,0x30,0x0b
	.ascii "WriteIndexSpan\0"
	.byte 0x00,0x00,0x69,0x41,0x02,0x23,0x34,0x0b
	.ascii "WriteMonoindexSpan\0"
	.byte 0x00,0x00,0x69,0x71,0x02,0x23,0x38,0x0b
	.ascii "WriteIndexPixels\0"
	.byte 0x00,0x00,0x69,0xc4,0x02,0x23,0x3c,0x0b
	.ascii "WriteMonoindexPixels\0"
	.byte 0x00,0x00,0x6a,0x08,0x02,0x23,0x40,0x0b
	.ascii "ReadIndexSpan\0"
	.byte 0x00,0x00,0x6a,0x2e,0x02,0x23,0x44,0x0b
	.ascii "ReadColorSpan\0"
	.byte 0x00,0x00,0x6a,0x63,0x02,0x23,0x48,0x0b
	.ascii "ReadIndexPixels\0"
	.byte 0x00,0x00,0x6a,0xac,0x02,0x23,0x4c,0x0b
	.ascii "ReadColorPixels\0"
	.byte 0x00,0x00,0x6b,0x04,0x02,0x23,0x50,0x0b
	.ascii "Finish\0"
	.byte 0x00,0x00,0x6b,0x16,0x02,0x23,0x54,0x0b
	.ascii "Flush\0"
	.byte 0x00,0x00,0x6b,0x28,0x02,0x23,0x58,0x0b
	.ascii "IndexMask\0"
	.byte 0x00,0x00,0x6b,0x43,0x02,0x23,0x5c,0x0b
	.ascii "ColorMask\0"
	.byte 0x00,0x00,0x6b,0x6d,0x02,0x23,0x60,0x0b
	.ascii "LogicOp\0"
	.byte 0x00,0x00,0x6b,0x88,0x02,0x23,0x64,0x0b
	.ascii "Dither\0"
	.byte 0x00,0x00,0x6b,0x9f,0x02,0x23,0x68,0x0b
	.ascii "Error\0"
	.byte 0x00,0x00,0x6b,0xb1,0x02,0x23,0x6c,0x0b
	.ascii "NearFar\0"
	.byte 0x00,0x00,0x6b,0xcd,0x02,0x23,0x70,0x0b
	.ascii "AllocDepthBuffer\0"
	.byte 0x00,0x00,0x6b,0xdf,0x02,0x23,0x74,0x0b
	.ascii "ClearDepthBuffer\0"
	.byte 0x00,0x00,0x6b,0xf1,0x02,0x23,0x78,0x0b
	.ascii "DepthTestSpan\0"
	.byte 0x00,0x00,0x6c,0x2a,0x02,0x23,0x7c,0x0b
	.ascii "DepthTestPixels\0"
	.byte 0x00,0x00,0x6c,0x73,0x03,0x23,0x80,0x01
	.byte 0x0b
	.ascii "ReadDepthSpanFloat\0"
	.byte 0x00,0x00,0x6c,0x99,0x03,0x23,0x84,0x01
	.byte 0x0b
	.ascii "ReadDepthSpanInt\0"
	.byte 0x00,0x00,0x6c,0xbf,0x03,0x23,0x88,0x01
	.byte 0x0b
	.ascii "PointsFunc\0"
	.byte 0x00,0x00,0x6c,0xe0,0x03,0x23,0x8c,0x01
	.byte 0x0b
	.ascii "LineFunc\0"
	.byte 0x00,0x00,0x6d,0x13,0x03,0x23,0x90,0x01
	.byte 0x0b
	.ascii "TriangleFunc\0"
	.byte 0x00,0x00,0x6d,0x49,0x03,0x23,0x94,0x01
	.byte 0x0b
	.ascii "QuadFunc\0"
	.byte 0x00,0x00,0x6d,0x88,0x03,0x23,0x98,0x01
	.byte 0x0b
	.ascii "RectFunc\0"
	.byte 0x00,0x00,0x6d,0xbe,0x03,0x23,0x9c,0x01
	.byte 0x0b
	.ascii "DrawPixels\0"
	.byte 0x00,0x00,0x6e,0x11,0x03,0x23,0xa0,0x01
	.byte 0x0b
	.ascii "Bitmap\0"
	.byte 0x00,0x00,0x6e,0x54,0x03,0x23,0xa4,0x01
	.byte 0x0b
	.ascii "Begin\0"
	.byte 0x00,0x00,0x6e,0x6b,0x03,0x23,0xa8,0x01
	.byte 0x0b
	.ascii "End\0"
	.byte 0x00,0x00,0x6e,0x7d,0x03,0x23,0xac,0x01
	.byte 0x0b
	.ascii "RasterSetup\0"
	.byte 0x00,0x00,0x6e,0x99,0x03,0x23,0xb0,0x01
	.byte 0x0b
	.ascii "RenderVB\0"
	.byte 0x00,0x00,0x6e,0xb4,0x03,0x23,0xb4,0x01
	.byte 0x0b
	.ascii "TexEnv\0"
	.byte 0x00,0x00,0x6e,0xda,0x03,0x23,0xb8,0x01
	.byte 0x0b
	.ascii "TexImage\0"
	.byte 0x00,0x00,0x6f,0x0f,0x03,0x23,0xbc,0x01
	.byte 0x0b
	.ascii "TexParameter\0"
	.byte 0x00,0x00,0x6f,0x3f,0x03,0x23,0xc0,0x01
	.byte 0x0b
	.ascii "BindTexture\0"
	.byte 0x00,0x00,0x6f,0x5b,0x03,0x23,0xc4,0x01
	.byte 0x0b
	.ascii "DeleteTexture\0"
	.byte 0x00,0x00,0x6f,0x72,0x03,0x23,0xc8,0x01
	.byte 0x0b
	.ascii "UpdateTexturePalette\0"
	.byte 0x00,0x00,0x6f,0x89,0x03,0x23,0xcc,0x01
	.byte 0x0b
	.ascii "UseGlobalTexturePalette\0"
	.byte 0x00,0x00,0x6f,0xa0,0x03,0x23,0xd0,0x01
	.byte 0x00,0x06,0x00,0x00,0x01,0x49,0x40,0x00
	.byte 0x00,0x74,0x1e,0x07,0x00,0x00,0x01,0x57
	.byte 0x0f,0x00,0x06,0x00,0x00,0x01,0x49,0x40
	.byte 0x00,0x00,0x74,0x2f,0x07,0x00,0x00,0x01
	.byte 0x57,0x0f,0x00,0x06,0x00,0x00,0x01,0x40
	.byte 0x40,0x00,0x00,0x74,0x40,0x07,0x00,0x00
	.byte 0x01,0x57,0x0f,0x00,0x0c,0x00,0x00,0x74
	.byte 0x2f,0x08,0x00,0x00,0x00,0x74,0x52,0x07
	.byte 0x00,0x00,0x01,0x57,0x1f,0x00,0x06,0x00
	.byte 0x00,0x01,0x49,0x40,0x00,0x00,0x74,0x63
	.byte 0x07,0x00,0x00,0x01,0x57,0x0f,0x00,0x06
	.byte 0x00,0x00,0x01,0x40,0x40,0x00,0x00,0x74
	.byte 0x74,0x07,0x00,0x00,0x01,0x57,0x0f,0x00
	.byte 0x0c,0x00,0x00,0x74,0x63,0x08,0x00,0x00
	.byte 0x00,0x74,0x86,0x07,0x00,0x00,0x01,0x57
	.byte 0x1f,0x00,0x06,0x00,0x00,0x01,0x40,0x08
	.byte 0x00,0x00,0x74,0x97,0x07,0x00,0x00,0x01
	.byte 0x57,0x01,0x00,0x0c,0x00,0x00,0x74,0x86
	.byte 0x01,0x00,0x00,0x00,0x74,0xa9,0x07,0x00
	.byte 0x00,0x01,0x57,0x1f,0x00,0x06,0x00,0x00
	.byte 0x01,0x49,0x40,0x00,0x00,0x74,0xba,0x07
	.byte 0x00,0x00,0x01,0x57,0x0f,0x00,0x06,0x00
	.byte 0x00,0x01,0x40,0x40,0x00,0x00,0x74,0xcb
	.byte 0x07,0x00,0x00,0x01,0x57,0x0f,0x00,0x0c
	.byte 0x00,0x00,0x74,0xba,0x02,0x80,0x00,0x00
	.byte 0x74,0xdd,0x07,0x00,0x00,0x01,0x57,0x09
	.byte 0x00,0x03,0x00,0x00,0x01,0x27
	.ascii "GLbitfield\0"
	.byte 0x03,0x05,0x00,0x00,0x74,0xf3,0x0a
	.ascii "gl_attrib_node\0"
	.byte 0x0c,0x02,0x00,0x00,0x75,0x31,0x0b
	.ascii "kind\0"
	.byte 0x00,0x00,0x74,0xdd,0x02,0x23,0x00,0x0b
	.ascii "data\0"
	.byte 0x00,0x00,0x31,0x45,0x02,0x23,0x04,0x0b
	.ascii "next\0"
	.byte 0x00,0x00,0x74,0xee,0x02,0x23,0x08,0x00
	.byte 0x06,0x00,0x00,0x74,0xee,0x40,0x00,0x00
	.byte 0x75,0x42,0x07,0x00,0x00,0x01,0x57,0x0f
	.byte 0x00,0x06,0x00,0x00,0x01,0x49,0x10,0x00
	.byte 0x00,0x75,0x53,0x07,0x00,0x00,0x01,0x57
	.byte 0x03,0x00,0x0a
	.ascii "gl_accum_attrib\0"
	.byte 0x10,0x02,0x00,0x00,0x75,0x7e,0x0b
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x75,0x42,0x02,0x23,0x00,0x00
	.byte 0x06,0x00,0x00,0x01,0x49,0x10,0x00,0x00
	.byte 0x75,0x8f,0x07,0x00,0x00,0x01,0x57,0x03
	.byte 0x00,0x06,0x00,0x00,0x01,0x49,0x10,0x00
	.byte 0x00,0x75,0xa0,0x07,0x00,0x00,0x01,0x57
	.byte 0x03,0x00,0x0a
	.ascii "gl_colorbuffer_attrib\0"
	.byte 0x58,0x02,0x00,0x00,0x77,0x4f,0x0b
	.ascii "ClearIndex\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x00,0x0b
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x75,0x7e,0x02,0x23,0x04,0x0b
	.ascii "IndexMask\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x14,0x0b
	.ascii "ColorMask\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x18,0x0b
	.ascii "SWmasking\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x1c,0x0b
	.ascii "DrawBuffer\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x20,0x0b
	.ascii "AlphaEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x24,0x0b
	.ascii "AlphaFunc\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x28,0x0b
	.ascii "AlphaRef\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x2c,0x0b
	.ascii "AlphaRefUbyte\0"
	.byte 0x00,0x00,0x31,0x2a,0x02,0x23,0x30,0x0b
	.ascii "BlendEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x31,0x0b
	.ascii "BlendSrc\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x34,0x0b
	.ascii "BlendDst\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x38,0x0b
	.ascii "BlendEquation\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x3c,0x0b
	.ascii "BlendColor\0"
	.byte 0x00,0x00,0x75,0x8f,0x02,0x23,0x40,0x0b
	.ascii "LogicOp\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x50,0x0b
	.ascii "IndexLogicOpEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x54,0x0b
	.ascii "ColorLogicOpEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x55,0x0b
	.ascii "SWLogicOpEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x56,0x0b
	.ascii "DitherFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x57,0x00
	.byte 0x06,0x00,0x00,0x31,0x2a,0x04,0x00,0x00
	.byte 0x77,0x60,0x07,0x00,0x00,0x01,0x57,0x03
	.byte 0x00,0x06,0x00,0x00,0x01,0x49,0x0c,0x00
	.byte 0x00,0x77,0x71,0x07,0x00,0x00,0x01,0x57
	.byte 0x02,0x00,0x06,0x00,0x00,0x01,0x49,0x10
	.byte 0x00,0x00,0x77,0x82,0x07,0x00,0x00,0x01
	.byte 0x57,0x03,0x00,0x06,0x00,0x00,0x01,0x49
	.byte 0x10,0x00,0x00,0x77,0x93,0x07,0x00,0x00
	.byte 0x01,0x57,0x03,0x00,0x06,0x00,0x00,0x01
	.byte 0x49,0x10,0x00,0x00,0x77,0xa4,0x07,0x00
	.byte 0x00,0x01,0x57,0x03,0x00,0x06,0x00,0x00
	.byte 0x01,0x49,0x10,0x00,0x00,0x77,0xb5,0x07
	.byte 0x00,0x00,0x01,0x57,0x03,0x00,0x0a
	.ascii "gl_current_attrib\0"
	.byte 0x60,0x02,0x00,0x00,0x78,0x9f,0x0b
	.ascii "ByteColor\0"
	.byte 0x00,0x00,0x77,0x4f,0x02,0x23,0x00,0x0b
	.ascii "Index\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x04,0x0b
	.ascii "Normal\0"
	.byte 0x00,0x00,0x77,0x60,0x02,0x23,0x08,0x0b
	.ascii "TexCoord\0"
	.byte 0x00,0x00,0x77,0x71,0x02,0x23,0x14,0x0b
	.ascii "RasterPos\0"
	.byte 0x00,0x00,0x77,0x82,0x02,0x23,0x24,0x0b
	.ascii "RasterDistance\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x34,0x0b
	.ascii "RasterColor\0"
	.byte 0x00,0x00,0x77,0x93,0x02,0x23,0x38,0x0b
	.ascii "RasterIndex\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x48,0x0b
	.ascii "RasterTexCoord\0"
	.byte 0x00,0x00,0x77,0xa4,0x02,0x23,0x4c,0x0b
	.ascii "RasterPosValid\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x5c,0x0b
	.ascii "EdgeFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x5d,0x00
	.byte 0x0a
	.ascii "gl_depthbuffer_attrib\0"
	.byte 0x0c,0x02,0x00,0x00,0x78,0xf2,0x0b
	.ascii "Func\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x00,0x0b
	.ascii "Clear\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x04,0x0b
	.ascii "Test\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x08,0x0b
	.ascii "Mask\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x09,0x00
	.byte 0x0a
	.ascii "gl_eval_attrib\0"
	.byte 0x38,0x02,0x00,0x00,0x7b,0x57,0x0b
	.ascii "Map1Color4\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x00,0x0b
	.ascii "Map1Index\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x01,0x0b
	.ascii "Map1Normal\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x02,0x0b
	.ascii "Map1TextureCoord1\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x03,0x0b
	.ascii "Map1TextureCoord2\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x04,0x0b
	.ascii "Map1TextureCoord3\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x05,0x0b
	.ascii "Map1TextureCoord4\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x06,0x0b
	.ascii "Map1Vertex3\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x07,0x0b
	.ascii "Map1Vertex4\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x08,0x0b
	.ascii "Map2Color4\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x09,0x0b
	.ascii "Map2Index\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x0a,0x0b
	.ascii "Map2Normal\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x0b,0x0b
	.ascii "Map2TextureCoord1\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x0c,0x0b
	.ascii "Map2TextureCoord2\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x0d,0x0b
	.ascii "Map2TextureCoord3\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x0e,0x0b
	.ascii "Map2TextureCoord4\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x0f,0x0b
	.ascii "Map2Vertex3\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x10,0x0b
	.ascii "Map2Vertex4\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x11,0x0b
	.ascii "AutoNormal\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x12,0x0b
	.ascii "MapGrid1un\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x14,0x0b
	.ascii "MapGrid1u1\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x18,0x0b
	.ascii "MapGrid1u2\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x1c,0x0b
	.ascii "MapGrid2un\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x20,0x0b
	.ascii "MapGrid2vn\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x24,0x0b
	.ascii "MapGrid2u1\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x28,0x0b
	.ascii "MapGrid2u2\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x2c,0x0b
	.ascii "MapGrid2v1\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x30,0x0b
	.ascii "MapGrid2v2\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x34,0x00
	.byte 0x06,0x00,0x00,0x01,0x49,0x10,0x00,0x00
	.byte 0x7b,0x68,0x07,0x00,0x00,0x01,0x57,0x03
	.byte 0x00,0x0a
	.ascii "gl_fog_attrib\0"
	.byte 0x28,0x02,0x00,0x00,0x7b,0xe1,0x0b
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x00,0x0b
	.ascii "Color\0"
	.byte 0x00,0x00,0x7b,0x57,0x02,0x23,0x04,0x0b
	.ascii "Density\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x14,0x0b
	.ascii "Start\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x18,0x0b
	.ascii "End\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x1c,0x0b
	.ascii "Index\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x20,0x0b
	.ascii "Mode\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x24,0x00
	.byte 0x0a
	.ascii "gl_hint_attrib\0"
	.byte 0x14,0x02,0x00,0x00,0x7c,0x5f,0x0b
	.ascii "PerspectiveCorrection\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x00,0x0b
	.ascii "PointSmooth\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x04,0x0b
	.ascii "LineSmooth\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x08,0x0b
	.ascii "PolygonSmooth\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x0c,0x0b
	.ascii "Fog\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x10,0x00
	.byte 0x06,0x00,0x00,0x01,0x49,0x10,0x00,0x00
	.byte 0x7c,0x70,0x07,0x00,0x00,0x01,0x57,0x03
	.byte 0x00,0x06,0x00,0x00,0x01,0x49,0x10,0x00
	.byte 0x00,0x7c,0x81,0x07,0x00,0x00,0x01,0x57
	.byte 0x03,0x00,0x06,0x00,0x00,0x01,0x49,0x10
	.byte 0x00,0x00,0x7c,0x92,0x07,0x00,0x00,0x01
	.byte 0x57,0x03,0x00,0x06,0x00,0x00,0x01,0x49
	.byte 0x10,0x00,0x00,0x7c,0xa3,0x07,0x00,0x00
	.byte 0x01,0x57,0x03,0x00,0x06,0x00,0x00,0x01
	.byte 0x49,0x10,0x00,0x00,0x7c,0xb4,0x07,0x00
	.byte 0x00,0x01,0x57,0x03,0x00,0x0e
	.ascii "gl_light\0"
	.byte 0x10,0xe4,0x02,0x00,0x00,0x7e,0x76,0x0b
	.ascii "Ambient\0"
	.byte 0x00,0x00,0x7c,0x5f,0x02,0x23,0x00,0x0b
	.ascii "Diffuse\0"
	.byte 0x00,0x00,0x7c,0x70,0x02,0x23,0x10,0x0b
	.ascii "Specular\0"
	.byte 0x00,0x00,0x7c,0x81,0x02,0x23,0x20,0x0b
	.ascii "Position\0"
	.byte 0x00,0x00,0x7c,0x92,0x02,0x23,0x30,0x0b
	.ascii "Direction\0"
	.byte 0x00,0x00,0x7c,0xa3,0x02,0x23,0x40,0x0b
	.ascii "SpotExponent\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x50,0x0b
	.ascii "SpotCutoff\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x54,0x0b
	.ascii "CosCutoff\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x58,0x0b
	.ascii "ConstantAttenuation\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x5c,0x0b
	.ascii "LinearAttenuation\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x60,0x0b
	.ascii "QuadraticAttenuation\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x64,0x0b
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x68,0x0b
	.ascii "NextEnabled\0"
	.byte 0x00,0x00,0x7e,0x76,0x02,0x23,0x6c,0x0b
	.ascii "VP_inf_norm\0"
	.byte 0x00,0x00,0x7e,0x7b,0x02,0x23,0x70,0x0b
	.ascii "h_inf_norm\0"
	.byte 0x00,0x00,0x7e,0x8c,0x02,0x23,0x7c,0x0b
	.ascii "NormDirection\0"
	.byte 0x00,0x00,0x7e,0x9d,0x03,0x23,0x88,0x01
	.byte 0x0b
	.ascii "SpotExpTable\0"
	.byte 0x00,0x00,0x7e,0xbf,0x03,0x23,0x94,0x01
	.byte 0x0b
	.ascii "MatAmbient\0"
	.byte 0x00,0x00,0x7e,0xe3,0x03,0x23,0x94,0x21
	.byte 0x0b
	.ascii "MatDiffuse\0"
	.byte 0x00,0x00,0x7f,0x05,0x03,0x23,0xac,0x21
	.byte 0x0b
	.ascii "MatSpecular\0"
	.byte 0x00,0x00,0x7f,0x27,0x03,0x23,0xc4,0x21
	.byte 0x0b
	.ascii "dli\0"
	.byte 0x00,0x00,0x01,0x49,0x03,0x23,0xdc,0x21
	.byte 0x0b
	.ascii "sli\0"
	.byte 0x00,0x00,0x01,0x49,0x03,0x23,0xe0,0x21
	.byte 0x00,0x05,0x00,0x00,0x7c,0xb4,0x06,0x00
	.byte 0x00,0x01,0x49,0x0c,0x00,0x00,0x7e,0x8c
	.byte 0x07,0x00,0x00,0x01,0x57,0x02,0x00,0x06
	.byte 0x00,0x00,0x01,0x49,0x0c,0x00,0x00,0x7e
	.byte 0x9d,0x07,0x00,0x00,0x01,0x57,0x02,0x00
	.byte 0x06,0x00,0x00,0x01,0x49,0x0c,0x00,0x00
	.byte 0x7e,0xae,0x07,0x00,0x00,0x01,0x57,0x02
	.byte 0x00,0x06,0x00,0x00,0x01,0x40,0x08,0x00
	.byte 0x00,0x7e,0xbf,0x07,0x00,0x00,0x01,0x57
	.byte 0x01,0x00,0x0c,0x00,0x00,0x7e,0xae,0x10
	.byte 0x00,0x00,0x00,0x7e,0xd2,0x0d,0x00,0x00
	.byte 0x01,0x57,0x01,0xff,0x00,0x06,0x00,0x00
	.byte 0x01,0x40,0x0c,0x00,0x00,0x7e,0xe3,0x07
	.byte 0x00,0x00,0x01,0x57,0x02,0x00,0x06,0x00
	.byte 0x00,0x7e,0xd2,0x18,0x00,0x00,0x7e,0xf4
	.byte 0x07,0x00,0x00,0x01,0x57,0x01,0x00,0x06
	.byte 0x00,0x00,0x01,0x40,0x0c,0x00,0x00,0x7f
	.byte 0x05,0x07,0x00,0x00,0x01,0x57,0x02,0x00
	.byte 0x06,0x00,0x00,0x7e,0xf4,0x18,0x00,0x00
	.byte 0x7f,0x16,0x07,0x00,0x00,0x01,0x57,0x01
	.byte 0x00,0x06,0x00,0x00,0x01,0x40,0x0c,0x00
	.byte 0x00,0x7f,0x27,0x07,0x00,0x00,0x01,0x57
	.byte 0x02,0x00,0x06,0x00,0x00,0x7f,0x16,0x18
	.byte 0x00,0x00,0x7f,0x38,0x07
	.byte 0x00,0x00,0x01,0x57,0x01,0x00,0x0c,0x00
	.byte 0x00,0x7c,0xb4,0x87,0x20,0x00,0x00,0x7f
	.byte 0x4a,0x07,0x00,0x00,0x01,0x57,0x07,0x00
	.byte 0x06,0x00,0x00,0x01,0x49,0x10,0x00,0x00
	.byte 0x7f,0x5b,0x07,0x00,0x00,0x01,0x57,0x03
	.byte 0x00,0x0a
	.ascii "gl_lightmodel\0"
	.byte 0x14,0x02,0x00,0x00,0x7f,0xa5,0x0b
	.ascii "Ambient\0"
	.byte 0x00,0x00,0x7f,0x4a,0x02,0x23,0x00,0x0b
	.ascii "LocalViewer\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x10,0x0b
	.ascii "TwoSide\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x11,0x00
	.byte 0x06,0x00,0x00,0x01,0x49,0x10,0x00,0x00
	.byte 0x7f,0xb6,0x07,0x00,0x00,0x01,0x57,0x03
	.byte 0x00,0x06,0x00,0x00,0x01,0x49,0x10,0x00
	.byte 0x00,0x7f,0xc7,0x07,0x00,0x00,0x01,0x57
	.byte 0x03,0x00,0x06,0x00,0x00,0x01,0x49,0x10
	.byte 0x00,0x00,0x7f,0xd8,0x07,0x00,0x00,0x01
	.byte 0x57,0x03,0x00,0x06,0x00,0x00,0x01,0x49
	.byte 0x10,0x00,0x00,0x7f,0xe9,0x07,0x00,0x00
	.byte 0x01,0x57,0x03,0x00,0x0c,0x00,0x00,0x01
	.byte 0x49,0x03,0x20,0x00,0x00,0x7f,0xfc,0x0d
	.byte 0x00,0x00,0x01,0x57,0x00,0xc7,0x00,0x0e
	.ascii "gl_material\0"
	.byte 0x03,0x70,0x02,0x00,0x00,0x80,0xb8,0x0b
	.ascii "Ambient\0"
	.byte 0x00,0x00,0x7f,0xa5,0x02,0x23,0x00,0x0b
	.ascii "Diffuse\0"
	.byte 0x00,0x00,0x7f,0xb6,0x02,0x23,0x10,0x0b
	.ascii "Specular\0"
	.byte 0x00,0x00,0x7f,0xc7,0x02,0x23,0x20,0x0b
	.ascii "Emission\0"
	.byte 0x00,0x00,0x7f,0xd8,0x02,0x23,0x30,0x0b
	.ascii "Shininess\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x40,0x0b
	.ascii "AmbientIndex\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x44,0x0b
	.ascii "DiffuseIndex\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x48,0x0b
	.ascii "SpecularIndex\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x4c,0x0b
	.ascii "ShineTable\0"
	.byte 0x00,0x00,0x7f,0xe9,0x02,0x23,0x50,0x00
	.byte 0x0c,0x00,0x00,0x7f,0xfc,0x06,0xe0,0x00
	.byte 0x00,0x80,0xca,0x07,0x00,0x00,0x01,0x57
	.byte 0x01,0x00,0x06,0x00,0x00,0x01,0x40,0x10
	.byte 0x00,0x00,0x80,0xdb,0x07,0x00,0x00,0x01
	.byte 0x57,0x03,0x00,0x06,0x00,0x00,0x80,0xca
	.byte 0x20,0x00,0x00,0x80,0xec,0x07,0x00,0x00
	.byte 0x01,0x57,0x01,0x00,0x0e
	.ascii "gl_light_attrib\0"
	.byte 0x8e,0x54,0x02,0x00,0x00,0x82,0x0d,0x0b
	.ascii "Light\0"
	.byte 0x00,0x00,0x7f,0x38,0x02,0x23,0x00,0x0b
	.ascii "Model\0"
	.byte 0x00,0x00,0x7f,0x5b,0x04,0x23,0xa0,0x8e
	.byte 0x02,0x0b
	.ascii "Material\0"
	.byte 0x00,0x00,0x80,0xb8,0x04,0x23,0xb4,0x8e
	.byte 0x02,0x0b
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0x94,0x9c
	.byte 0x02,0x0b
	.ascii "ShadeModel\0"
	.byte 0x00,0x00,0x31,0x0c,0x04,0x23,0x98,0x9c
	.byte 0x02,0x0b
	.ascii "ColorMaterialFace\0"
	.byte 0x00,0x00,0x31,0x0c,0x04,0x23,0x9c,0x9c
	.byte 0x02,0x0b
	.ascii "ColorMaterialMode\0"
	.byte 0x00,0x00,0x31,0x0c,0x04,0x23,0xa0,0x9c
	.byte 0x02,0x0b
	.ascii "ColorMaterialBitmask\0"
	.byte 0x00,0x00,0x01,0x33,0x04,0x23,0xa4,0x9c
	.byte 0x02,0x0b
	.ascii "ColorMaterialEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0xa8,0x9c
	.byte 0x02,0x0b
	.ascii "FirstEnabled\0"
	.byte 0x00,0x00,0x7e,0x76,0x04,0x23,0xac,0x9c
	.byte 0x02,0x0b
	.ascii "Fast\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0xb0,0x9c
	.byte 0x02,0x0b
	.ascii "BaseColor\0"
	.byte 0x00,0x00,0x80,0xdb,0x04,0x23,0xb4,0x9c
	.byte 0x02,0x00,0x03,0x00,0x00,0x47,0xd8
	.ascii "GLushort\0"
	.byte 0x03,0x0a
	.ascii "gl_line_attrib\0"
	.byte 0x0c,0x02,0x00,0x00,0x82,0x95,0x0b
	.ascii "SmoothFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x00,0x0b
	.ascii "StippleFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x01,0x0b
	.ascii "StipplePattern\0"
	.byte 0x00,0x00,0x82,0x0d,0x02,0x23,0x02,0x0b
	.ascii "StippleFactor\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x04,0x0b
	.ascii "Width\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x08,0x00
	.byte 0x0a
	.ascii "gl_list_attrib\0"
	.byte 0x04,0x02,0x00,0x00,0x82,0xbd,0x0b
	.ascii "ListBase\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x00,0x00
	.byte 0x0c,0x00,0x00,0x01,0x0a,0x04,0x00,0x00
	.byte 0x00,0x82,0xd0,0x0d,0x00,0x00,0x01,0x57
	.byte 0x00,0xff,0x00,0x0c,0x00,0x00,0x01,0x0a
	.byte 0x04,0x00,0x00,0x00,0x82,0xe3,0x0d,0x00
	.byte 0x00,0x01,0x57,0x00,0xff,0x00,0x0c,0x00
	.byte 0x00,0x01,0x49,0x04,0x00,0x00,0x00,0x82
	.byte 0xf6,0x0d,0x00,0x00,0x01,0x57,0x00,0xff
	.byte 0x00,0x0c,0x00,0x00,0x01,0x49,0x04,0x00
	.byte 0x00,0x00,0x83,0x09,0x0d,0x00,0x00,0x01
	.byte 0x57,0x00,0xff,0x00,0x0c,0x00,0x00,0x01
	.byte 0x49,0x04,0x00,0x00,0x00,0x83,0x1c,0x0d
	.byte 0x00,0x00,0x01,0x57,0x00,0xff,0x00,0x0c
	.byte 0x00,0x00,0x01,0x49,0x04,0x00,0x00,0x00
	.byte 0x83,0x2f,0x0d,0x00,0x00,0x01,0x57,0x00
	.byte 0xff,0x00,0x0c,0x00,0x00,0x01,0x49,0x04
	.byte 0x00,0x00,0x00,0x83,0x42,0x0d,0x00,0x00
	.byte 0x01,0x57,0x00,0xff,0x00,0x0c,0x00,0x00
	.byte 0x01,0x49,0x04,0x00,0x00,0x00,0x83,0x55
	.byte 0x0d,0x00,0x00,0x01,0x57,0x00,0xff,0x00
	.byte 0x0c,0x00,0x00,0x01,0x49,0x04,0x00,0x00
	.byte 0x00,0x83,0x68,0x0d,0x00,0x00,0x01,0x57
	.byte 0x00,0xff,0x00,0x0c,0x00,0x00,0x01,0x49
	.byte 0x04,0x00,0x00,0x00,0x83,0x7b,0x0d,0x00
	.byte 0x00,0x01,0x57,0x00,0xff,0x00,0x0e
	.ascii "gl_pixel_attrib\0"
	.byte 0x28,0x68,0x02,0x00,0x00,0x86,0x3a,0x0b
	.ascii "ReadBuffer\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x00,0x0b
	.ascii "RedBias\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x04,0x0b
	.ascii "RedScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x08,0x0b
	.ascii "GreenBias\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x0c,0x0b
	.ascii "GreenScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x10,0x0b
	.ascii "BlueBias\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x14,0x0b
	.ascii "BlueScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x18,0x0b
	.ascii "AlphaBias\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x1c,0x0b
	.ascii "AlphaScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x20,0x0b
	.ascii "DepthBias\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x24,0x0b
	.ascii "DepthScale\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x28,0x0b
	.ascii "IndexShift\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x2c,0x0b
	.ascii "IndexOffset\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x30,0x0b
	.ascii "MapColorFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x34,0x0b
	.ascii "MapStencilFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x35,0x0b
	.ascii "ZoomX\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x38,0x0b
	.ascii "ZoomY\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x3c,0x0b
	.ascii "MapStoSsize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x40,0x0b
	.ascii "MapItoIsize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x44,0x0b
	.ascii "MapItoRsize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x48,0x0b
	.ascii "MapItoGsize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x4c,0x0b
	.ascii "MapItoBsize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x50,0x0b
	.ascii "MapItoAsize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x54,0x0b
	.ascii "MapRtoRsize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x58,0x0b
	.ascii "MapGtoGsize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x5c,0x0b
	.ascii "MapBtoBsize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x60,0x0b
	.ascii "MapAtoAsize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x64,0x0b
	.ascii "MapStoS\0"
	.byte 0x00,0x00,0x82,0xbd,0x02,0x23,0x68,0x0b
	.ascii "MapItoI\0"
	.byte 0x00,0x00,0x82,0xd0,0x03,0x23,0xe8,0x08
	.byte 0x0b
	.ascii "MapItoR\0"
	.byte 0x00,0x00,0x82,0xe3,0x03,0x23,0xe8,0x10
	.byte 0x0b
	.ascii "MapItoG\0"
	.byte 0x00,0x00,0x82,0xf6,0x03,0x23,0xe8,0x18
	.byte 0x0b
	.ascii "MapItoB\0"
	.byte 0x00,0x00,0x83,0x09,0x03,0x23,0xe8,0x20
	.byte 0x0b
	.ascii "MapItoA\0"
	.byte 0x00,0x00,0x83,0x1c,0x03,0x23,0xe8,0x28
	.byte 0x0b
	.ascii "MapRtoR\0"
	.byte 0x00,0x00,0x83,0x2f,0x03,0x23,0xe8,0x30
	.byte 0x0b
	.ascii "MapGtoG\0"
	.byte 0x00,0x00,0x83,0x42,0x03,0x23,0xe8,0x38
	.byte 0x0b
	.ascii "MapBtoB\0"
	.byte 0x00,0x00,0x83,0x55,0x03,0x23,0xe8,0x40
	.byte 0x0b
	.ascii "MapAtoA\0"
	.byte 0x00,0x00,0x83,0x68,0x03,0x23,0xe8,0x48
	.byte 0x00,0x06,0x00,0x00,0x01,0x49,0x0c,0x00
	.byte 0x00,0x86,0x4b,0x07,0x00,0x00,0x01,0x57
	.byte 0x02,0x00,0x0a
	.ascii "gl_point_attrib\0"
	.byte 0x20,0x02,0x00,0x00,0x86,0xc4,0x0b
	.ascii "SmoothFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x00,0x0b
	.ascii "Size\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x04,0x0b
	.ascii "Params\0"
	.byte 0x00,0x00,0x86,0x3a,0x02,0x23,0x08,0x0b
	.ascii "MinSize\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x14,0x0b
	.ascii "MaxSize\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x18,0x0b
	.ascii "Threshold\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x1c,0x00
	.byte 0x0a
	.ascii "gl_polygon_attrib\0"
	.byte 0x28,0x02,0x00,0x00,0x87,0xf7,0x0b
	.ascii "FrontFace\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x00,0x0b
	.ascii "FrontMode\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x04,0x0b
	.ascii "BackMode\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x08,0x0b
	.ascii "Unfilled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x0c,0x0b
	.ascii "CullFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x0d,0x0b
	.ascii "CullFaceMode\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x10,0x0b
	.ascii "CullBits\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x14,0x0b
	.ascii "SmoothFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x18,0x0b
	.ascii "StippleFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x19,0x0b
	.ascii "OffsetFactor\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x1c,0x0b
	.ascii "OffsetUnits\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x20,0x0b
	.ascii "OffsetPoint\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x24,0x0b
	.ascii "OffsetLine\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x25,0x0b
	.ascii "OffsetFill\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x26,0x0b
	.ascii "OffsetAny\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x27,0x00
	.byte 0x06,0x00,0x00,0x01,0x33,0x80,0x00,0x00
	.byte 0x88,0x08,0x07,0x00,0x00,0x01,0x57,0x1f
	.byte 0x00,0x03,0x00,0x00,0x01,0x03
	.ascii "GLsizei\0"
	.byte 0x03,0x0a
	.ascii "gl_scissor_attrib\0"
	.byte 0x14,0x02,0x00,0x00,0x88,0x71,0x0b
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x00,0x0b
	.ascii "X\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x04,0x0b
	.ascii "Y\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x08,0x0b
	.ascii "Width\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x0c,0x0b
	.ascii "Height\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x10,0x00
	.byte 0x0a
	.ascii "gl_stencil_attrib\0"
	.byte 0x18,0x02,0x00,0x00,0x89,0x1f,0x0b
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x00,0x0b
	.ascii "Function\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x04,0x0b
	.ascii "FailFunc\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x08,0x0b
	.ascii "ZPassFunc\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x0c,0x0b
	.ascii "ZFailFunc\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x10,0x0b
	.ascii "Ref\0"
	.byte 0x00,0x00,0x65,0x7a,0x02,0x23,0x14,0x0b
	.ascii "ValueMask\0"
	.byte 0x00,0x00,0x65,0x7a,0x02,0x23,0x15,0x0b
	.ascii "Clear\0"
	.byte 0x00,0x00,0x65,0x7a,0x02,0x23,0x16,0x0b
	.ascii "WriteMask\0"
	.byte 0x00,0x00,0x65,0x7a,0x02,0x23,0x17,0x00
	.byte 0x06,0x00,0x00,0x01,0x49,0x10,0x00,0x00
	.byte 0x89,0x30,0x07,0x00,0x00,0x01,0x57,0x03
	.byte 0x00,0x06,0x00,0x00,0x01,0x49,0x10,0x00
	.byte 0x00,0x89,0x41,0x07,0x00,0x00,0x01,0x57
	.byte 0x03,0x00,0x06,0x00,0x00,0x01,0x49,0x10
	.byte 0x00,0x00,0x89,0x52,0x07,0x00,0x00,0x01
	.byte 0x57,0x03,0x00,0x06,0x00,0x00,0x01,0x49
	.byte 0x10,0x00,0x00,0x89,0x63,0x07,0x00,0x00
	.byte 0x01,0x57,0x03,0x00,0x06,0x00,0x00,0x01
	.byte 0x49,0x10,0x00,0x00,0x89,0x74,0x07,0x00
	.byte 0x00,0x01,0x57,0x03,0x00,0x06,0x00,0x00
	.byte 0x01,0x49,0x10,0x00,0x00,0x89,0x85,0x07
	.byte 0x00,0x00,0x01,0x57,0x03,0x00,0x06,0x00
	.byte 0x00,0x01,0x49,0x10,0x00,0x00,0x89,0x96
	.byte 0x07,0x00,0x00,0x01,0x57,0x03,0x00,0x06
	.byte 0x00,0x00,0x01,0x49,0x10,0x00,0x00,0x89
	.byte 0xa7,0x07,0x00,0x00,0x01,0x57,0x03,0x00
	.byte 0x06,0x00,0x00,0x01,0x49,0x10,0x00,0x00
	.byte 0x89,0xb8,0x07,0x00,0x00,0x01,0x57,0x03
	.byte 0x00,0x0c,0x00,0x00,0x31,0x2a,0x04,0x00
	.byte 0x00,0x00,0x89,0xcb,0x0d,0x00,0x00,0x01
	.byte 0x57,0x03,0xff,0x00,0x0e
	.ascii "gl_texture_attrib\0"
	.byte 0x04,0xd8,0x02,0x00,0x00,0x8b,0xfa,0x0b
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x00,0x0b
	.ascii "EnvMode\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x04,0x0b
	.ascii "EnvColor\0"
	.byte 0x00,0x00,0x89,0x1f,0x02,0x23,0x08,0x0b
	.ascii "TexGenEnabled\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x18,0x0b
	.ascii "GenModeS\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x1c,0x0b
	.ascii "GenModeT\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x20,0x0b
	.ascii "GenModeR\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x24,0x0b
	.ascii "GenModeQ\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x28,0x0b
	.ascii "ObjectPlaneS\0"
	.byte 0x00,0x00,0x89,0x30,0x02,0x23,0x2c,0x0b
	.ascii "ObjectPlaneT\0"
	.byte 0x00,0x00,0x89,0x41,0x02,0x23,0x3c,0x0b
	.ascii "ObjectPlaneR\0"
	.byte 0x00,0x00,0x89,0x52,0x02,0x23,0x4c,0x0b
	.ascii "ObjectPlaneQ\0"
	.byte 0x00,0x00,0x89,0x63,0x02,0x23,0x5c,0x0b
	.ascii "EyePlaneS\0"
	.byte 0x00,0x00,0x89,0x74,0x02,0x23,0x6c,0x0b
	.ascii "EyePlaneT\0"
	.byte 0x00,0x00,0x89,0x85,0x02,0x23,0x7c,0x0b
	.ascii "EyePlaneR\0"
	.byte 0x00,0x00,0x89,0x96,0x03,0x23,0x8c,0x01
	.byte 0x0b
	.ascii "EyePlaneQ\0"
	.byte 0x00,0x00,0x89,0xa7,0x03,0x23,0x9c,0x01
	.byte 0x0b
	.ascii "Current1D\0"
	.byte 0x00,0x00,0x34,0xa9,0x03,0x23,0xac,0x01
	.byte 0x0b
	.ascii "Current2D\0"
	.byte 0x00,0x00,0x34,0xa9,0x03,0x23,0xb0,0x01
	.byte 0x0b
	.ascii "Current3D\0"
	.byte 0x00,0x00,0x34,0xa9,0x03,0x23,0xb4,0x01
	.byte 0x0b
	.ascii "Current\0"
	.byte 0x00,0x00,0x34,0xa9,0x03,0x23,0xb8,0x01
	.byte 0x0b
	.ascii "Proxy1D\0"
	.byte 0x00,0x00,0x34,0xa9,0x03,0x23,0xbc,0x01
	.byte 0x0b
	.ascii "Proxy2D\0"
	.byte 0x00,0x00,0x34,0xa9,0x03,0x23,0xc0,0x01
	.byte 0x0b
	.ascii "Proxy3D\0"
	.byte 0x00,0x00,0x34,0xa9,0x03,0x23,0xc4,0x01
	.byte 0x0b
	.ascii "SharedPalette\0"
	.byte 0x00,0x00,0x32,0x7c,0x03,0x23,0xc8,0x01
	.byte 0x0b
	.ascii "Palette\0"
	.byte 0x00,0x00,0x89,0xb8,0x03,0x23,0xc9,0x01
	.byte 0x0b
	.ascii "PaletteSize\0"
	.byte 0x00,0x00,0x01,0x33,0x03,0x23,0xcc,0x09
	.byte 0x0b
	.ascii "PaletteIntFormat\0"
	.byte 0x00,0x00,0x31,0x0c,0x03,0x23,0xd0,0x09
	.byte 0x0b
	.ascii "PaletteFormat\0"
	.byte 0x00,0x00,0x31,0x0c,0x03,0x23,0xd4,0x09
	.byte 0x00,0x06,0x00,0x00,0x01,0x40,0x10,0x00
	.byte 0x00,0x8c,0x0b,0x07,0x00,0x00,0x01,0x57
	.byte 0x03,0x00,0x06,0x00,0x00,0x8b,0xfa,0x60
	.byte 0x00,0x00,0x8c,0x1c,0x07,0x00,0x00,0x01
	.byte 0x57,0x05,0x00,0x06,0x00,0x00,0x32,0x7c
	.byte 0x06,0x00,0x00,0x8c,0x2d,0x07,0x00,0x00
	.byte 0x01,0x57,0x05,0x00,0x0a
	.ascii "gl_transform_attrib\0"
	.byte 0x6c,0x02,0x00,0x00,0x8c,0xa7,0x0b
	.ascii "MatrixMode\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x00,0x0b
	.ascii "ClipEquation\0"
	.byte 0x00,0x00,0x8c,0x0b,0x02,0x23,0x04,0x0b
	.ascii "ClipEnabled\0"
	.byte 0x00,0x00,0x8c,0x1c,0x02,0x23,0x64,0x0b
	.ascii "AnyClip\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x6a,0x0b
	.ascii "Normalize\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x6b,0x00
	.byte 0x0a
	.ascii "gl_viewport_attrib\0"
	.byte 0x30,0x02,0x00,0x00,0x8d,0x4e,0x0b
	.ascii "X\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x00,0x0b
	.ascii "Y\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x04,0x0b
	.ascii "Width\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x08,0x0b
	.ascii "Height\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x0c,0x0b
	.ascii "Near\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x10,0x0b
	.ascii "Far\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x14,0x0b
	.ascii "Sx\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x18,0x0b
	.ascii "Sy\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x1c,0x0b
	.ascii "Sz\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x20,0x0b
	.ascii "Tx\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x24,0x0b
	.ascii "Ty\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x28,0x0b
	.ascii "Tz\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x2c,0x00
	.byte 0x06,0x00,0x00,0x74,0xee,0x40,0x00,0x00
	.byte 0x8d,0x5f,0x07,0x00,0x00,0x01,0x57,0x0f
	.byte 0x00,0x05,0x00,0x00,0x32,0x7c,0x0a
	.ascii "gl_array_attrib\0"
	.byte 0x80,0x02,0x00,0x00,0x90,0x0f,0x0b
	.ascii "VertexSize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x00,0x0b
	.ascii "VertexType\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x04,0x0b
	.ascii "VertexStride\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x08,0x0b
	.ascii "VertexStrideB\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x0c,0x0b
	.ascii "VertexPtr\0"
	.byte 0x00,0x00,0x31,0x45,0x02,0x23,0x10,0x0b
	.ascii "VertexEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x14,0x0b
	.ascii "NormalType\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x18,0x0b
	.ascii "NormalStride\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x1c,0x0b
	.ascii "NormalStrideB\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x20,0x0b
	.ascii "NormalPtr\0"
	.byte 0x00,0x00,0x31,0x45,0x02,0x23,0x24,0x0b
	.ascii "NormalEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x28,0x0b
	.ascii "ColorSize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x2c,0x0b
	.ascii "ColorType\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x30,0x0b
	.ascii "ColorStride\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x34,0x0b
	.ascii "ColorStrideB\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x38,0x0b
	.ascii "ColorPtr\0"
	.byte 0x00,0x00,0x31,0x45,0x02,0x23,0x3c,0x0b
	.ascii "ColorEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x40,0x0b
	.ascii "IndexType\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x44,0x0b
	.ascii "IndexStride\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x48,0x0b
	.ascii "IndexStrideB\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x4c,0x0b
	.ascii "IndexPtr\0"
	.byte 0x00,0x00,0x31,0x45,0x02,0x23,0x50,0x0b
	.ascii "IndexEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x54,0x0b
	.ascii "TexCoordSize\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x58,0x0b
	.ascii "TexCoordType\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x5c,0x0b
	.ascii "TexCoordStride\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x60,0x0b
	.ascii "TexCoordStrideB\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x64,0x0b
	.ascii "TexCoordPtr\0"
	.byte 0x00,0x00,0x31,0x45,0x02,0x23,0x68,0x0b
	.ascii "TexCoordEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x6c,0x0b
	.ascii "EdgeFlagStride\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x70,0x0b
	.ascii "EdgeFlagStrideB\0"
	.byte 0x00,0x00,0x88,0x08,0x02,0x23,0x74,0x0b
	.ascii "EdgeFlagPtr\0"
	.byte 0x00,0x00,0x8d,0x5f,0x02,0x23,0x78,0x0b
	.ascii "EdgeFlagEnabled\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x7c,0x00
	.byte 0x0a
	.ascii "gl_pixelstore_attrib\0"
	.byte 0x1c,0x02,0x00,0x00,0x90,0xbe,0x0b
	.ascii "Alignment\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x00,0x0b
	.ascii "RowLength\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x04,0x0b
	.ascii "SkipPixels\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x08,0x0b
	.ascii "SkipRows\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x0c,0x0b
	.ascii "ImageHeight\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x10,0x0b
	.ascii "SkipImages\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x14,0x0b
	.ascii "SwapBytes\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x18,0x0b
	.ascii "LsbFirst\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x19,0x00
	.byte 0x05,0x00,0x00,0x01,0x49,0x0a
	.ascii "gl_1d_map\0"
	.byte 0x14,0x02,0x00,0x00,0x91,0x17,0x0b
	.ascii "Order\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x00,0x0b
	.ascii "u1\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x04,0x0b
	.ascii "u2\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x08,0x0b
	.ascii "Points\0"
	.byte 0x00,0x00,0x90,0xbe,0x02,0x23,0x0c,0x0b
	.ascii "Retain\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x10,0x00
	.byte 0x0a
	.ascii "gl_2d_map\0"
	.byte 0x20,0x02,0x00,0x00,0x91,0x91,0x0b
	.ascii "Uorder\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x00,0x0b
	.ascii "Vorder\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x04,0x0b
	.ascii "u1\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x08,0x0b
	.ascii "u2\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x0c,0x0b
	.ascii "v1\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x10,0x0b
	.ascii "v2\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x14,0x0b
	.ascii "Points\0"
	.byte 0x00,0x00,0x90,0xbe,0x02,0x23,0x18,0x0b
	.ascii "Retain\0"
	.byte 0x00,0x00,0x32,0x7c,0x02,0x23,0x1c,0x00
	.byte 0x0e
	.ascii "gl_evaluators\0"
	.byte 0x01,0xd4,0x02,0x00,0x00,0x93,0x1b,0x0b
	.ascii "Map1Vertex3\0"
	.byte 0x00,0x00,0x90,0xc3,0x02,0x23,0x00,0x0b
	.ascii "Map1Vertex4\0"
	.byte 0x00,0x00,0x90,0xc3,0x02,0x23,0x14,0x0b
	.ascii "Map1Index\0"
	.byte 0x00,0x00,0x90,0xc3,0x02,0x23,0x28,0x0b
	.ascii "Map1Color4\0"
	.byte 0x00,0x00,0x90,0xc3,0x02,0x23,0x3c,0x0b
	.ascii "Map1Normal\0"
	.byte 0x00,0x00,0x90,0xc3,0x02,0x23,0x50,0x0b
	.ascii "Map1Texture1\0"
	.byte 0x00,0x00,0x90,0xc3,0x02,0x23,0x64,0x0b
	.ascii "Map1Texture2\0"
	.byte 0x00,0x00,0x90,0xc3,0x02,0x23,0x78,0x0b
	.ascii "Map1Texture3\0"
	.byte 0x00,0x00,0x90,0xc3,0x03,0x23,0x8c,0x01
	.byte 0x0b
	.ascii "Map1Texture4\0"
	.byte 0x00,0x00,0x90,0xc3,0x03,0x23,0xa0,0x01
	.byte 0x0b
	.ascii "Map2Vertex3\0"
	.byte 0x00,0x00,0x91,0x17,0x03,0x23,0xb4,0x01
	.byte 0x0b
	.ascii "Map2Vertex4\0"
	.byte 0x00,0x00,0x91,0x17,0x03,0x23,0xd4,0x01
	.byte 0x0b
	.ascii "Map2Index\0"
	.byte 0x00,0x00,0x91,0x17,0x03,0x23,0xf4,0x01
	.byte 0x0b
	.ascii "Map2Color4\0"
	.byte 0x00,0x00,0x91,0x17,0x03,0x23,0x94,0x02
	.byte 0x0b
	.ascii "Map2Normal\0"
	.byte 0x00,0x00,0x91,0x17,0x03,0x23,0xb4,0x02
	.byte 0x0b
	.ascii "Map2Texture1\0"
	.byte 0x00,0x00,0x91,0x17,0x03,0x23,0xd4,0x02
	.byte 0x0b
	.ascii "Map2Texture2\0"
	.byte 0x00,0x00,0x91,0x17,0x03,0x23,0xf4,0x02
	.byte 0x0b
	.ascii "Map2Texture3\0"
	.byte 0x00,0x00,0x91,0x17,0x03,0x23,0x94,0x03
	.byte 0x0b
	.ascii "Map2Texture4\0"
	.byte 0x00,0x00,0x91,0x17,0x03,0x23,0xb4,0x03
	.byte 0x00,0x0a
	.ascii "gl_feedback\0"
	.byte 0x14,0x02,0x00,0x00,0x93,0x79,0x0b
	.ascii "Type\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x00,0x0b
	.ascii "Mask\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x04,0x0b
	.ascii "Buffer\0"
	.byte 0x00,0x00,0x90,0xbe,0x02,0x23,0x08,0x0b
	.ascii "BufferSize\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x0c,0x0b
	.ascii "Count\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x10,0x00
	.byte 0x05,0x00,0x00,0x01,0x33,0x0c,0x00,0x00
	.byte 0x01,0x33,0x01,0x00,0x00,0x00,0x93,0x90
	.byte 0x07,0x00,0x00,0x01,0x57,0x3f,0x00,0x0e
	.ascii "gl_selection\0"
	.byte 0x01,0x20,0x02,0x00,0x00,0x94,0x45,0x0b
	.ascii "Buffer\0"
	.byte 0x00,0x00,0x93,0x79,0x02,0x23,0x00,0x0b
	.ascii "BufferSize\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x04,0x0b
	.ascii "BufferCount\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x08,0x0b
	.ascii "Hits\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x0c,0x0b
	.ascii "NameStackDepth\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x10,0x0b
	.ascii "NameStack\0"
	.byte 0x00,0x00,0x93,0x7e,0x02,0x23,0x14,0x0b
	.ascii "HitFlag\0"
	.byte 0x00,0x00,0x32,0x7c,0x03,0x23,0x94,0x02
	.byte 0x0b
	.ascii "HitMinZ\0"
	.byte 0x00,0x00,0x01,0x49,0x03,0x23,0x98,0x02
	.byte 0x0b
	.ascii "HitMaxZ\0"
	.byte 0x00,0x00,0x01,0x49,0x03,0x23,0x9c,0x02
	.byte 0x00,0x06,0x00,0x00,0x01,0x40,0x10,0x00
	.byte 0x00,0x94,0x56,0x07,0x00,0x00,0x01,0x57
	.byte 0x03,0x00,0x0c,0x00,0x00,0x94,0x45,0x1f
	.byte 0x80,0x00,0x00,0x94,0x69,0x0d,0x00,0x00
	.byte 0x01,0x57,0x01,0xf7,0x00,0x06,0x00,0x00
	.byte 0x01,0x40,0x10,0x00,0x00,0x94,0x7a,0x07
	.byte 0x00,0x00,0x01,0x57,0x03,0x00,0x0c,0x00
	.byte 0x00,0x94,0x69,0x1f,0x80,0x00,0x00,0x94
	.byte 0x8d,0x0d,0x00,0x00,0x01,0x57,0x01,0xf7
	.byte 0x00,0x06,0x00,0x00,0x01,0x40,0x10,0x00
	.byte 0x00,0x94,0x9e,0x07,0x00,0x00,0x01,0x57
	.byte 0x03,0x00,0x0c,0x00,0x00,0x94,0x8d,0x1f
	.byte 0x80,0x00,0x00,0x94,0xb1,0x0d,0x00,0x00
	.byte 0x01,0x57,0x01,0xf7,0x00,0x06,0x00,0x00
	.byte 0x01,0x40,0x0c,0x00,0x00,0x94,0xc2,0x07
	.byte 0x00,0x00,0x01,0x57,0x02,0x00,0x0c,0x00
	.byte 0x00,0x94,0xb1,0x17,0xa0,0x00,0x00,0x94
	.byte 0xd5,0x0d,0x00,0x00,0x01,0x57,0x01,0xf7
	.byte 0x00,0x06,0x00,0x00,0x01,0x40,0x0c,0x00
	.byte 0x00,0x94,0xe6,0x07,0x00,0x00,0x01,0x57
	.byte 0x02,0x00,0x0c,0x00,0x00,0x94,0xd5,0x17
	.byte 0xa0,0x00,0x00,0x94,0xf9,0x0d,0x00,0x00
	.byte 0x01,0x57,0x01,0xf7,0x00,0x06,0x00,0x00
	.byte 0x31,0x19,0x04,0x00,0x00,0x95,0x0a,0x07
	.byte 0x00,0x00,0x01,0x57,0x03,0x00,0x0c,0x00
	.byte 0x00,0x94,0xf9,0x07,0xe0,0x00,0x00,0x95
	.byte 0x1d,0x0d,0x00,0x00,0x01,0x57,0x01,0xf7
	.byte 0x00,0x06,0x00,0x00,0x31,0x19,0x04,0x00
	.byte 0x00,0x95,0x2e,0x07,0x00,0x00,0x01,0x57
	.byte 0x03,0x00,0x0c,0x00,0x00,0x95,0x1d,0x07
	.byte 0xe0,0x00,0x00,0x95,0x41,0x0d,0x00,0x00
	.byte 0x01,0x57,0x01,0xf7,0x00,0x06,0x00,0x00
	.byte 0x31,0x19,0x04,0x00,0x00,0x95,0x52,0x07
	.byte 0x00,0x00,0x01,0x57,0x03,0x00,0x05,0x00
	.byte 0x00,0x95,0x41,0x0c,0x00,0x00,0x01,0x33
	.byte 0x07,0xe0,0x00,0x00,0x95,0x6a,0x0d,0x00
	.byte 0x00,0x01,0x57,0x01,0xf7,0x00,0x0c,0x00
	.byte 0x00,0x01,0x33,0x07,0xe0,0x00,0x00,0x95
	.byte 0x7d,0x0d,0x00,0x00,0x01,0x57,0x01,0xf7
	.byte 0x00,0x0c,0x00,0x00,0x32,0x7c,0x01,0xf8
	.byte 0x00,0x00,0x95,0x90,0x0d,0x00,0x00,0x01
	.byte 0x57,0x01,0xf7,0x00,0x06,0x00,0x00,0x01
	.byte 0x40,0x10,0x00,0x00,0x95,0xa1,0x07,0x00
	.byte 0x00,0x01,0x57,0x03,0x00,0x0c,0x00,0x00
	.byte 0x95,0x90,0x1f,0x80,0x00,0x00,0x95,0xb4
	.byte 0x0d,0x00,0x00,0x01,0x57,0x01,0xf7,0x00
	.byte 0x0c,0x00,0x00,0x31,0x2a,0x01,0xf8,0x00
	.byte 0x00,0x95,0xc7,0x0d,0x00,0x00,0x01,0x57
	.byte 0x01,0xf7,0x00,0x0c,0x00,0x00,0x01,0x33
	.byte 0x07,0xe0,0x00,0x00,0x95,0xda,0x0d,0x00
	.byte 0x00,0x01,0x57,0x01,0xf7,0x00,0x0c,0x00
	.byte 0x00,0x7f,0xfc,0x06,0xe0,0x00,0x00,0x95
	.byte 0xec,0x07,0x00,0x00,0x01,0x57,0x01,0x00
	.byte 0x14,0x00,0x00,0x95,0xda,0x00,0x0d,0x89
	.byte 0x00,0x00,0x00,0x96,0x01,0x0d,0x00,0x00
	.byte 0x01,0x57,0x01,0xf7,0x00,0x15
	.ascii "vertex_buffer\0"
	.byte 0x00,0x0e,0x61,0xb4,0x05,0x00,0x00,0x97
	.byte 0xf1,0x0b
	.ascii "Obj\0"
	.byte 0x00,0x00,0x94,0x56,0x02,0x23,0x00,0x0b
	.ascii "Eye\0"
	.byte 0x00,0x00,0x94,0x7a,0x03,0x23,0x80,0x3f
	.byte 0x0b
	.ascii "Clip\0"
	.byte 0x00,0x00,0x94,0x9e,0x03,0x23,0x80,0x7e
	.byte 0x0b
	.ascii "Win\0"
	.byte 0x00,0x00,0x94,0xc2,0x04,0x23,0x80,0xbd
	.byte 0x01,0x0b
	.ascii "Normal\0"
	.byte 0x00,0x00,0x94,0xe6,0x04,0x23,0xa0,0xec
	.byte 0x01,0x0b
	.ascii "Fcolor\0"
	.byte 0x00,0x00,0x95,0x0a,0x04,0x23,0xc0,0x9b
	.byte 0x02,0x0b
	.ascii "Bcolor\0"
	.byte 0x00,0x00,0x95,0x2e,0x04,0x23,0xa0,0xab
	.byte 0x02,0x0b
	.ascii "Color\0"
	.byte 0x00,0x00,0x95,0x52,0x04,0x23,0x80,0xbb
	.byte 0x02,0x0b
	.ascii "Findex\0"
	.byte 0x00,0x00,0x95,0x57,0x04,0x23,0x84,0xbb
	.byte 0x02,0x0b
	.ascii "Bindex\0"
	.byte 0x00,0x00,0x95,0x6a,0x04,0x23,0xe4,0xca
	.byte 0x02,0x0b
	.ascii "Index\0"
	.byte 0x00,0x00,0x93,0x79,0x04,0x23,0xc4,0xda
	.byte 0x02,0x0b
	.ascii "Edgeflag\0"
	.byte 0x00,0x00,0x95,0x7d,0x04,0x23,0xc8,0xda
	.byte 0x02,0x0b
	.ascii "TexCoord\0"
	.byte 0x00,0x00,0x95,0xa1,0x04,0x23,0xc0,0xde
	.byte 0x02,0x0b
	.ascii "ClipMask\0"
	.byte 0x00,0x00,0x95,0xb4,0x04,0x23,0xc0,0x9d
	.byte 0x03,0x0b
	.ascii "ClipOrMask\0"
	.byte 0x00,0x00,0x31,0x2a,0x04,0x23,0xb8,0xa1
	.byte 0x03,0x0b
	.ascii "ClipAndMask\0"
	.byte 0x00,0x00,0x31,0x2a,0x04,0x23,0xb9,0xa1
	.byte 0x03,0x0b
	.ascii "Start\0"
	.byte 0x00,0x00,0x01,0x33,0x04,0x23,0xbc,0xa1
	.byte 0x03,0x0b
	.ascii "Count\0"
	.byte 0x00,0x00,0x01,0x33,0x04,0x23,0xc0,0xa1
	.byte 0x03,0x0b
	.ascii "Free\0"
	.byte 0x00,0x00,0x01,0x33,0x04,0x23,0xc4,0xa1
	.byte 0x03,0x0b
	.ascii "VertexSizeMask\0"
	.byte 0x00,0x00,0x01,0x33,0x04,0x23,0xc8,0xa1
	.byte 0x03,0x0b
	.ascii "TexCoordSize\0"
	.byte 0x00,0x00,0x01,0x33,0x04,0x23,0xcc,0xa1
	.byte 0x03,0x0b
	.ascii "MonoColor\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0xd0,0xa1
	.byte 0x03,0x0b
	.ascii "MonoNormal\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0xd1,0xa1
	.byte 0x03,0x0b
	.ascii "MonoMaterial\0"
	.byte 0x00,0x00,0x32,0x7c,0x04,0x23,0xd2,0xa1
	.byte 0x03,0x0b
	.ascii "MaterialMask\0"
	.byte 0x00,0x00,0x95,0xc7,0x04,0x23,0xd4,0xa1
	.byte 0x03,0x0b
	.ascii "Material\0"
	.byte 0x00,0x00,0x95,0xec,0x04,0x23,0xb4,0xb1
	.byte 0x03,0x00,0x05,0x00,0x00,0x96,0x01,0x04
	.ascii "pixel_buffer\0"
	.byte 0x01,0x05,0x00,0x00,0x97,0xf6,0x03,0x00
	.byte 0x00,0x35,0x4f
	.ascii "GLcontext\0"
	.byte 0x02,0x05,0x00,0x00,0x98,0x0a,0x0c,0x00
	.byte 0x00,0x31,0x45,0x12,0xc0,0x00,0x00,0x98
	.byte 0x32,0x0d,0x00,0x00,0x01,0x57,0x04,0xaf
	.byte 0x00,0x16
	.ascii "osmesa_context\0"
	.byte 0x13,0x0c,0x00,0x00,0x99,0x80,0x0b
	.ascii "gl_ctx\0"
	.byte 0x00,0x00,0x98,0x1a,0x02,0x23,0x00,0x0b
	.ascii "gl_visual\0"
	.byte 0x00,0x00,0x65,0x62,0x02,0x23,0x04,0x0b
	.ascii "gl_buffer\0"
	.byte 0x00,0x00,0x66,0x96,0x02,0x23,0x08,0x0b
	.ascii "format\0"
	.byte 0x00,0x00,0x31,0x0c,0x02,0x23,0x0c,0x0b
	.ascii "buffer\0"
	.byte 0x00,0x00,0x31,0x45,0x02,0x23,0x10,0x0b
	.ascii "width\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x14,0x0b
	.ascii "height\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x18,0x0b
	.ascii "pixel\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x1c,0x0b
	.ascii "clearpixel\0"
	.byte 0x00,0x00,0x01,0x33,0x02,0x23,0x20,0x0b
	.ascii "rowlength\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x24,0x0b
	.ascii "userRowLength\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x28,0x0b
	.ascii "rshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x2c,0x0b
	.ascii "gshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x30,0x0b
	.ascii "bshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x34,0x0b
	.ascii "ashift\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x38,0x0b
	.ascii "rind\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x3c,0x0b
	.ascii "gind\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x40,0x0b
	.ascii "bind\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x44,0x0b
	.ascii "rowaddr\0"
	.byte 0x00,0x00,0x98,0x1f,0x02,0x23,0x48,0x0b
	.ascii "yup\0"
	.byte 0x00,0x00,0x32,0x7c,0x03,0x23,0x88,0x26
	.byte 0x00,0x05,0x00,0x00,0x98,0x32,0x03,0x00
	.byte 0x00,0x99,0x80
	.ascii "OSMesaContext\0"
	.byte 0x06,0x17
	.ascii "Current\0"
	.byte 0x00,0x00,0x99,0x85,0x03,0x01,0x86,0x05
	.byte 0x03
	.uaword $XAa59JCSsd3LG_K.Current
	.byte 0x18
	.ascii "OSMesaCreateContext\0"
	.byte 0x01,0x02,0x01,0x9f
	.uaword OSMesaCreateContext
	.uaword .L266
	.byte 0x01,0x6e,0x01,0x00,0x00,0x99,0x85,0x01
	.byte 0x00,0x00,0x9b,0x49,0x19,0x00,0x00,0x31
	.byte 0x0c
	.ascii "format\0"
	.byte 0x01,0x9e,0x03,0x91,0xc4,0x00,0x19,0x00
	.byte 0x00,0x99,0x85
	.ascii "sharelist\0"
	.byte 0x01,0x9e,0x03,0x91,0xc8,0x00,0x17
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0xa0,0x02
	.byte 0x91,0x78,0x17
	.ascii "rscale\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x01,0xa1,0x02
	.byte 0x91,0x74,0x17
	.ascii "gscale\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x01,0xa1,0x02
	.byte 0x91,0x70,0x17
	.ascii "bscale\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x01,0xa1,0x02
	.byte 0x91,0x6c,0x17
	.ascii "ascale\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x01,0xa1,0x02
	.byte 0x91,0x68,0x17
	.ascii "rshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0xa2,0x02
	.byte 0x91,0x64,0x17
	.ascii "gshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0xa2,0x02
	.byte 0x91,0x60,0x17
	.ascii "bshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0xa2,0x02
	.byte 0x91,0x5c,0x17
	.ascii "ashift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0xa2,0x02
	.byte 0x91,0x58,0x17
	.ascii "rind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0xa3,0x02
	.byte 0x91,0x54,0x17
	.ascii "gind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0xa3,0x02
	.byte 0x91,0x50,0x17
	.ascii "bind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0xa3,0x02
	.byte 0x91,0x4c,0x17
	.ascii "index_bits\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0xa4,0x02
	.byte 0x91,0x48,0x17
	.ascii "rgbmode\0"
	.byte 0x00,0x00,0x32,0x7c,0x01,0x01,0xa5,0x02
	.byte 0x91,0x47,0x17
	.ascii "swalpha\0"
	.byte 0x00,0x00,0x32,0x7c,0x01,0x01,0xa6,0x02
	.byte 0x91,0x46,0x17
	.ascii "i4\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0xa7,0x02
	.byte 0x91,0x40,0x17
	.ascii "i1\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0xa8,0x03
	.byte 0x91,0xbc,0x7f,0x17
	.ascii "little_endian\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0xa9,0x03
	.byte 0x91,0xb8,0x7f,0x00,0x1a
	.ascii "OSMesaDestroyContext\0"
	.byte 0x01,0x02,0x01,0x01,0x3f
	.uaword OSMesaDestroyContext
	.uaword .L286
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9b,0x85
	.byte 0x1b,0x00,0x00,0x99,0x85
	.ascii "ctx\0"
	.byte 0x01,0x01,0x3e,0x03,0x91,0xc4,0x00,0x00
	.byte 0x1c
	.ascii "compute_row_addresses\0"
	.byte 0x03,0x01,0x01,0x4e
	.uaword compute_row_addresses
	.uaword .L457
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9d,0x3b
	.byte 0x1b,0x00,0x00,0x99,0x85
	.ascii "ctx\0"
	.byte 0x01,0x01,0x4d,0x03,0x91,0xc4,0x00,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x01,0x4f
	.byte 0x02,0x91,0x7c,0x1e
	.uaword .L292
	.uaword .L455
	.byte 0x1e
	.uaword .L296
	.uaword .L374
	.byte 0x1e
	.uaword .L297
	.uaword .L373
	.byte 0x1e
	.uaword .L298
	.uaword .L372
	.byte 0x1e
	.uaword .L302
	.uaword .L320
	.byte 0x1e
	.uaword .L303
	.uaword .L319
	.byte 0x1d
	.ascii "origin\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x01,0x55
	.byte 0x02,0x91,0x78,0x00,0x00,0x1e
	.uaword .L322
	.uaword .L371
	.byte 0x1e
	.uaword .L323
	.uaword .L370
	.byte 0x1e
	.uaword .L324
	.uaword .L369
	.byte 0x1e
	.uaword .L330
	.uaword .L348
	.byte 0x1e
	.uaword .L331
	.uaword .L347
	.byte 0x1d
	.ascii "origin\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x01,0x5d
	.byte 0x02,0x91,0x78,0x00,0x00,0x1e
	.uaword .L350
	.uaword .L368
	.byte 0x1e
	.uaword .L351
	.uaword .L367
	.byte 0x1d
	.ascii "origin\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x01,0x01,0x63
	.byte 0x02,0x91,0x78,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x1e
	.uaword .L376
	.uaword .L454
	.byte 0x1e
	.uaword .L377
	.uaword .L453
	.byte 0x1e
	.uaword .L378
	.uaword .L452
	.byte 0x1e
	.uaword .L382
	.uaword .L400
	.byte 0x1e
	.uaword .L383
	.uaword .L399
	.byte 0x1d
	.ascii "origin\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x01,0x6e
	.byte 0x02,0x91,0x78,0x00,0x00,0x1e
	.uaword .L402
	.uaword .L451
	.byte 0x1e
	.uaword .L403
	.uaword .L450
	.byte 0x1e
	.uaword .L404
	.uaword .L449
	.byte 0x1e
	.uaword .L410
	.uaword .L428
	.byte 0x1e
	.uaword .L411
	.uaword .L427
	.byte 0x1d
	.ascii "origin\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x01,0x76
	.byte 0x02,0x91,0x78,0x00,0x00,0x1e
	.uaword .L430
	.uaword .L448
	.byte 0x1e
	.uaword .L431
	.uaword .L447
	.byte 0x1d
	.ascii "origin\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x01,0x01,0x7c
	.byte 0x02,0x91,0x78,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x1f
	.ascii "OSMesaMakeCurrent\0"
	.byte 0x01,0x02,0x01,0x01,0xa3
	.uaword OSMesaMakeCurrent
	.uaword .L513
	.byte 0x01,0x6e,0x01,0x00,0x00,0x32,0x7c,0x01
	.byte 0x00,0x00,0x9d,0xc1,0x1b,0x00,0x00,0x99
	.byte 0x85
	.ascii "ctx\0"
	.byte 0x01,0x01,0xa1,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x31,0x45
	.ascii "buffer\0"
	.byte 0x01,0x01,0xa1,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x31,0x0c
	.ascii "type\0"
	.byte 0x01,0x01,0xa1,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x88,0x08
	.ascii "width\0"
	.byte 0x01,0x01,0xa2,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0x88,0x08
	.ascii "height\0"
	.byte 0x01,0x01,0xa2,0x03,0x91,0xd4,0x00,0x00
	.byte 0x20
	.ascii "OSMesaGetCurrentContext\0"
	.byte 0x01,0x02,0x01,0x01,0xce
	.uaword OSMesaGetCurrentContext
	.uaword .L521
	.byte 0x01,0x6e,0x01,0x00,0x00,0x99,0x85,0x01
	.byte 0x1a
	.ascii "OSMesaPixelStore\0"
	.byte 0x01,0x02,0x01,0x01,0xda
	.uaword OSMesaPixelStore
	.uaword .L567
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9e,0x4b
	.byte 0x1b,0x00,0x00,0x01,0x0a
	.ascii "pname\0"
	.byte 0x01,0x01,0xd9,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "value\0"
	.byte 0x01,0x01,0xd9,0x03,0x91,0xc8,0x00,0x1d
	.ascii "ctx\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x01,0xdb
	.byte 0x02,0x91,0x7c,0x00,0x1a
	.ascii "OSMesaGetIntegerv\0"
	.byte 0x01,0x02,0x01,0x01,0xf4
	.uaword OSMesaGetIntegerv
	.uaword .L608
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9e,0xa8
	.byte 0x1b,0x00,0x00,0x01,0x0a
	.ascii "pname\0"
	.byte 0x01,0x01,0xf3,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x9e,0xa8
	.ascii "value\0"
	.byte 0x01,0x01,0xf3,0x03,0x91,0xc8,0x00,0x1d
	.ascii "ctx\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x01,0xf5
	.byte 0x02,0x91,0x7c,0x00,0x05,0x00,0x00,0x01
	.byte 0x0a,0x1f
	.ascii "OSMesaGetDepthBuffer\0"
	.byte 0x01,0x02,0x01,0x02,0x1c
	.uaword OSMesaGetDepthBuffer
	.uaword .L640
	.byte 0x01,0x6e,0x01,0x00,0x00,0x32,0x7c,0x01
	.byte 0x00,0x00,0x9f,0x3d,0x1b,0x00,0x00,0x99
	.byte 0x85
	.ascii "c\0"
	.byte 0x01,0x02,0x1a,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x9e,0xa8
	.ascii "width\0"
	.byte 0x01,0x02,0x1a,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x9e,0xa8
	.ascii "height\0"
	.byte 0x01,0x02,0x1a,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x9e,0xa8
	.ascii "bytesPerValue\0"
	.byte 0x01,0x02,0x1b,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0x48,0x0b
	.ascii "buffer\0"
	.byte 0x01,0x02,0x1b,0x03,0x91,0xd4,0x00,0x00
	.byte 0x21
	.ascii "set_buffer\0"
	.byte 0x03,0x01,0x02,0x4f
	.uaword set_buffer
	.uaword .L662
	.byte 0x01,0x6e,0x01,0x00,0x00,0x32,0x7c,0x01
	.byte 0x00,0x00,0x9f,0x83,0x1b,0x00,0x00,0x98
	.byte 0x1a
	.ascii "ctx\0"
	.byte 0x01,0x02,0x4e,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x31,0x0c
	.ascii "mode\0"
	.byte 0x01,0x02,0x4e,0x03,0x91,0xc8,0x00,0x00
	.byte 0x1c
	.ascii "clear_index\0"
	.byte 0x03,0x01,0x02,0x5a
	.uaword clear_index
	.uaword .L671
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9f,0xda
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x02,0x59,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "index\0"
	.byte 0x01,0x02,0x59,0x03,0x91,0xc8,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x02,0x5b
	.byte 0x02,0x91,0x7c,0x00,0x1c
	.ascii "clear_color\0"
	.byte 0x03,0x01,0x02,0x63
	.uaword clear_color
	.uaword .L680
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xa0,0x57
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x02,0x61,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x31,0x2a
	.ascii "r\0"
	.byte 0x01,0x02,0x62,0x03,0x91,0xcb,0x00,0x1b
	.byte 0x00,0x00,0x31,0x2a
	.ascii "g\0"
	.byte 0x01,0x02,0x62,0x03,0x91,0xcf,0x00,0x1b
	.byte 0x00,0x00,0x31,0x2a
	.ascii "b\0"
	.byte 0x01,0x02,0x62,0x03,0x91,0xd3,0x00,0x1b
	.byte 0x00,0x00,0x31,0x2a
	.ascii "a\0"
	.byte 0x01,0x02,0x62,0x03,0x91,0xd7,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x02,0x64
	.byte 0x02,0x91,0x7c,0x00,0x1c
	.ascii "clear\0"
	.byte 0x03,0x01,0x02,0x6c
	.uaword clear
	.uaword .L887
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xa3,0x64
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x02,0x6a,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x32,0x7c
	.ascii "all\0"
	.byte 0x01,0x02,0x6b,0x03,0x91,0xcb,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "x\0"
	.byte 0x01,0x02,0x6b,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "y\0"
	.byte 0x01,0x02,0x6b,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "width\0"
	.byte 0x01,0x02,0x6b,0x03,0x91,0xd4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "height\0"
	.byte 0x01,0x02,0x6b,0x03,0x91,0xd8,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x02,0x6d
	.byte 0x02,0x91,0x7c,0x1e
	.uaword .L687
	.uaword .L885
	.byte 0x1e
	.uaword .L691
	.uaword .L737
	.byte 0x1e
	.uaword .L692
	.uaword .L736
	.byte 0x1e
	.uaword .L693
	.uaword .L735
	.byte 0x1e
	.uaword .L703
	.uaword .L734
	.byte 0x1e
	.uaword .L704
	.uaword .L733
	.byte 0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x02,0x75
	.byte 0x02,0x91,0x78,0x1d
	.ascii "j\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x02,0x75
	.byte 0x02,0x91,0x74,0x1e
	.uaword .L705
	.uaword .L732
	.byte 0x1e
	.uaword .L711
	.uaword .L729
	.byte 0x1e
	.uaword .L712
	.uaword .L728
	.byte 0x1d
	.ascii "ptr1\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x02,0x77
	.byte 0x02,0x91,0x70,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x1e
	.uaword .L739
	.uaword .L884
	.byte 0x1e
	.uaword .L740
	.uaword .L883
	.byte 0x1e
	.uaword .L746
	.uaword .L819
	.byte 0x1e
	.uaword .L747
	.uaword .L818
	.byte 0x1d
	.ascii "rval\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x01,0x02,0x7f
	.byte 0x02,0x91,0x7b,0x1d
	.ascii "gval\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x01,0x02,0x80
	.byte 0x02,0x91,0x7a,0x1d
	.ascii "bval\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x01,0x02,0x81
	.byte 0x02,0x91,0x79,0x1d
	.ascii "rind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x02,0x82
	.byte 0x02,0x91,0x74,0x1d
	.ascii "gind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x02,0x83
	.byte 0x02,0x91,0x70,0x1d
	.ascii "bind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x02,0x84
	.byte 0x02,0x91,0x6c,0x1e
	.uaword .L754
	.uaword .L817
	.byte 0x1e
	.uaword .L758
	.uaword .L780
	.byte 0x1e
	.uaword .L759
	.uaword .L779
	.byte 0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x02,0x86
	.byte 0x02,0x91,0x68,0x1d
	.ascii "n\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x02,0x86
	.byte 0x02,0x91,0x64,0x1d
	.ascii "ptr3\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x02,0x87
	.byte 0x02,0x91,0x60,0x00,0x00,0x1e
	.uaword .L782
	.uaword .L816
	.byte 0x1e
	.uaword .L783
	.uaword .L815
	.byte 0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x02,0x93
	.byte 0x02,0x91,0x68,0x1d
	.ascii "j\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x02,0x93
	.byte 0x02,0x91,0x64,0x1e
	.uaword .L784
	.uaword .L814
	.byte 0x1e
	.uaword .L790
	.uaword .L811
	.byte 0x1e
	.uaword .L791
	.uaword .L810
	.byte 0x1d
	.ascii "ptr3\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x02,0x95
	.byte 0x02,0x91,0x60,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x1e
	.uaword .L821
	.uaword .L882
	.byte 0x1e
	.uaword .L822
	.uaword .L881
	.byte 0x1e
	.uaword .L823
	.uaword .L880
	.byte 0x1e
	.uaword .L827
	.uaword .L846
	.byte 0x1e
	.uaword .L828
	.uaword .L845
	.byte 0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x02,0xa2
	.byte 0x02,0x91,0x78,0x1d
	.ascii "n\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x02,0xa2
	.byte 0x02,0x91,0x74,0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x01,0x02,0xa2
	.byte 0x02,0x91,0x70,0x00,0x00,0x1e
	.uaword .L848
	.uaword .L879
	.byte 0x1e
	.uaword .L849
	.uaword .L878
	.byte 0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x02,0xab
	.byte 0x02,0x91,0x78,0x1d
	.ascii "j\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x02,0xab
	.byte 0x02,0x91,0x74,0x1e
	.uaword .L850
	.uaword .L877
	.byte 0x1e
	.uaword .L856
	.uaword .L874
	.byte 0x1e
	.uaword .L857
	.uaword .L873
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x01,0x02,0xad
	.byte 0x02,0x91,0x70,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c
	.ascii "set_index\0"
	.byte 0x03,0x01,0x02,0xb9
	.uaword set_index
	.uaword .L896
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xa3,0xb9
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x02,0xb8,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "index\0"
	.byte 0x01,0x02,0xb8,0x03,0x91,0xc8,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x02,0xba
	.byte 0x02,0x91,0x7c,0x00,0x1c
	.ascii "set_color\0"
	.byte 0x03,0x01,0x02,0xc2
	.uaword set_color
	.uaword .L905
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xa4,0x34
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x02,0xc0,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x31,0x2a
	.ascii "r\0"
	.byte 0x01,0x02,0xc1,0x03,0x91,0xcb,0x00,0x1b
	.byte 0x00,0x00,0x31,0x2a
	.ascii "g\0"
	.byte 0x01,0x02,0xc1,0x03,0x91,0xcf,0x00,0x1b
	.byte 0x00,0x00,0x31,0x2a
	.ascii "b\0"
	.byte 0x01,0x02,0xc1,0x03,0x91,0xd3,0x00,0x1b
	.byte 0x00,0x00,0x31,0x2a
	.ascii "a\0"
	.byte 0x01,0x02,0xc1,0x03,0x91,0xd7,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x02,0xc3
	.byte 0x02,0x91,0x7c,0x00,0x1c
	.ascii "buffer_size\0"
	.byte 0x03,0x01,0x02,0xca
	.uaword buffer_size
	.uaword .L915
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xa4,0x9e
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x02,0xc9,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x93,0x79
	.ascii "width\0"
	.byte 0x01,0x02,0xc9,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x93,0x79
	.ascii "height\0"
	.byte 0x01,0x02,0xc9,0x03,0x91,0xcc,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x02,0xcb
	.byte 0x02,0x91,0x7c,0x00,0x1c
	.ascii "write_color_span\0"
	.byte 0x03,0x01,0x02,0xda
	.uaword write_color_span
	.uaword .L979
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xa5,0xd3
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x02,0xd5,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x02,0xd6,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "x\0"
	.byte 0x01,0x02,0xd6,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "y\0"
	.byte 0x01,0x02,0xd6,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0xa5,0xd8
	.ascii "red\0"
	.byte 0x01,0x02,0xd7,0x03,0x91,0xd4,0x00,0x1b
	.byte 0x00,0x00,0xa5,0xe2
	.ascii "green\0"
	.byte 0x01,0x02,0xd7,0x03,0x91,0xd8,0x00,0x1b
	.byte 0x00,0x00,0xa5,0xec
	.ascii "blue\0"
	.byte 0x01,0x02,0xd8,0x03,0x91,0xdc,0x00,0x1b
	.byte 0x00,0x00,0xa5,0xf6
	.ascii "alpha\0"
	.byte 0x01,0x02,0xd8,0x03,0x91,0xe0,0x00,0x1b
	.byte 0x00,0x00,0xa6,0x00
	.ascii "mask\0"
	.byte 0x01,0x02,0xd9,0x03,0x91,0xe4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x02,0xdb
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x01,0x02,0xdc
	.byte 0x02,0x91,0x78,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x02,0xdd
	.byte 0x02,0x91,0x74,0x1d
	.ascii "rshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x02,0xde
	.byte 0x02,0x91,0x70,0x1d
	.ascii "gshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x02,0xdf
	.byte 0x02,0x91,0x6c,0x1d
	.ascii "bshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x02,0xe0
	.byte 0x02,0x91,0x68,0x1d
	.ascii "ashift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x02,0xe1
	.byte 0x02,0x91,0x64,0x00,0x0f,0x00,0x00,0x31
	.byte 0x2a,0x05,0x00,0x00,0xa5,0xd3,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xa5,0xdd
	.byte 0x0f,0x00,0x00,0x31,0x2a,0x05,0x00,0x00
	.byte 0xa5,0xe7,0x0f,0x00,0x00,0x31,0x2a,0x05
	.byte 0x00,0x00,0xa5,0xf1,0x0f,0x00,0x00,0x31
	.byte 0x2a,0x05,0x00,0x00,0xa5,0xfb,0x1c
	.ascii "write_monocolor_span\0"
	.byte 0x03,0x01,0x02,0xf5
	.uaword write_monocolor_span
	.uaword .L1011
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xa6,0xad
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x02,0xf2,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x02,0xf3,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "x\0"
	.byte 0x01,0x02,0xf3,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "y\0"
	.byte 0x01,0x02,0xf3,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0xa6,0xb2
	.ascii "mask\0"
	.byte 0x01,0x02,0xf4,0x03,0x91,0xd4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x02,0xf6
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x01,0x02,0xf7
	.byte 0x02,0x91,0x78,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x02,0xf8
	.byte 0x02,0x91,0x74,0x00,0x0f,0x00,0x00,0x31
	.byte 0x2a,0x05,0x00,0x00,0xa6,0xad,0x1c
	.ascii "write_color_pixels\0"
	.byte 0x03,0x01,0x03,0x07
	.uaword write_color_pixels
	.uaword .L1047
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xa8,0x2a
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0x02,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0x03,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0xa8,0x2f
	.ascii "x\0"
	.byte 0x01,0x03,0x03,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0xa8,0x39
	.ascii "y\0"
	.byte 0x01,0x03,0x03,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0xa8,0x43
	.ascii "red\0"
	.byte 0x01,0x03,0x04,0x03,0x91,0xd4,0x00,0x1b
	.byte 0x00,0x00,0xa8,0x4d
	.ascii "green\0"
	.byte 0x01,0x03,0x04,0x03,0x91,0xd8,0x00,0x1b
	.byte 0x00,0x00,0xa8,0x57
	.ascii "blue\0"
	.byte 0x01,0x03,0x05,0x03,0x91,0xdc,0x00,0x1b
	.byte 0x00,0x00,0xa8,0x61
	.ascii "alpha\0"
	.byte 0x01,0x03,0x05,0x03,0x91,0xe0,0x00,0x1b
	.byte 0x00,0x00,0xa8,0x6b
	.ascii "mask\0"
	.byte 0x01,0x03,0x06,0x03,0x91,0xe4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0x08
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0x09
	.byte 0x02,0x91,0x78,0x1d
	.ascii "rshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0x0a
	.byte 0x02,0x91,0x74,0x1d
	.ascii "gshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0x0b
	.byte 0x02,0x91,0x70,0x1d
	.ascii "bshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0x0c
	.byte 0x02,0x91,0x6c,0x1d
	.ascii "ashift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0x0d
	.byte 0x02,0x91,0x68,0x1e
	.uaword .L1022
	.uaword .L1045
	.byte 0x1e
	.uaword .L1028
	.uaword .L1042
	.byte 0x1e
	.uaword .L1029
	.uaword .L1041
	.byte 0x1e
	.uaword .L1030
	.uaword .L1040
	.byte 0x1e
	.uaword .L1034
	.uaword .L1039
	.byte 0x1e
	.uaword .L1035
	.uaword .L1038
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x01,0x03,0x10
	.byte 0x02,0x91,0x64,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x0f,0x00,0x00,0x01,0x0a,0x05
	.byte 0x00,0x00,0xa8,0x2a,0x0f,0x00,0x00,0x01
	.byte 0x0a,0x05,0x00,0x00,0xa8,0x34,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xa8,0x3e
	.byte 0x0f,0x00,0x00,0x31,0x2a,0x05,0x00,0x00
	.byte 0xa8,0x48,0x0f,0x00,0x00,0x31,0x2a,0x05
	.byte 0x00,0x00,0xa8,0x52,0x0f,0x00,0x00,0x31
	.byte 0x2a,0x05,0x00,0x00,0xa8,0x5c,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xa8,0x66
	.byte 0x1c
	.ascii "write_monocolor_pixels\0"
	.byte 0x03,0x01,0x03,0x1b
	.uaword write_monocolor_pixels
	.uaword .L1079
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xa9,0x56
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0x18,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0x19,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0xa9,0x5b
	.ascii "x\0"
	.byte 0x01,0x03,0x19,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0xa9,0x65
	.ascii "y\0"
	.byte 0x01,0x03,0x19,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0xa9,0x6f
	.ascii "mask\0"
	.byte 0x01,0x03,0x1a,0x03,0x91,0xd4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0x1c
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0x1d
	.byte 0x02,0x91,0x78,0x1e
	.uaword .L1054
	.uaword .L1077
	.byte 0x1e
	.uaword .L1060
	.uaword .L1074
	.byte 0x1e
	.uaword .L1061
	.uaword .L1073
	.byte 0x1e
	.uaword .L1062
	.uaword .L1072
	.byte 0x1e
	.uaword .L1066
	.uaword .L1071
	.byte 0x1e
	.uaword .L1067
	.uaword .L1070
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x01,0x03,0x20
	.byte 0x02,0x91,0x74,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x0f,0x00,0x00,0x01,0x0a,0x05
	.byte 0x00,0x00,0xa9,0x56,0x0f,0x00,0x00,0x01
	.byte 0x0a,0x05,0x00,0x00,0xa9,0x60,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xa9,0x6a
	.byte 0x1c
	.ascii "write_index_span\0"
	.byte 0x03,0x01,0x03,0x2b
	.uaword write_index_span
	.uaword .L1111
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xaa,0x2a
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0x28,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0x29,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "x\0"
	.byte 0x01,0x03,0x29,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "y\0"
	.byte 0x01,0x03,0x29,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0xaa,0x2f
	.ascii "index\0"
	.byte 0x01,0x03,0x29,0x03,0x91,0xd4,0x00,0x1b
	.byte 0x00,0x00,0xaa,0x39
	.ascii "mask\0"
	.byte 0x01,0x03,0x2a,0x03,0x91,0xd8,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0x2c
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "ptr1\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x03,0x2d
	.byte 0x02,0x91,0x78,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0x2e
	.byte 0x02,0x91,0x74,0x00,0x0f,0x00,0x00,0x01
	.byte 0x33,0x05,0x00,0x00,0xaa,0x2a,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xaa,0x34
	.byte 0x1c
	.ascii "write_monoindex_span\0"
	.byte 0x03,0x01,0x03,0x3b
	.uaword write_monoindex_span
	.uaword .L1143
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xaa,0xe6
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0x38,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0x39,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "x\0"
	.byte 0x01,0x03,0x39,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "y\0"
	.byte 0x01,0x03,0x39,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0xaa,0xeb
	.ascii "mask\0"
	.byte 0x01,0x03,0x3a,0x03,0x91,0xd4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0x3c
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "ptr1\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x03,0x3d
	.byte 0x02,0x91,0x78,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0x3e
	.byte 0x02,0x91,0x74,0x00,0x0f,0x00,0x00,0x31
	.byte 0x2a,0x05,0x00,0x00,0xaa,0xe6,0x1c
	.ascii "write_index_pixels\0"
	.byte 0x03,0x01,0x03,0x4b
	.uaword write_index_pixels
	.uaword .L1175
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xab,0xe4
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0x48,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0x49,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0xab,0xe9
	.ascii "x\0"
	.byte 0x01,0x03,0x49,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0xab,0xf3
	.ascii "y\0"
	.byte 0x01,0x03,0x49,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0xab,0xfd
	.ascii "index\0"
	.byte 0x01,0x03,0x4a,0x03,0x91,0xd4,0x00,0x1b
	.byte 0x00,0x00,0xac,0x07
	.ascii "mask\0"
	.byte 0x01,0x03,0x4a,0x03,0x91,0xd8,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0x4c
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0x4d
	.byte 0x02,0x91,0x78,0x1e
	.uaword .L1150
	.uaword .L1173
	.byte 0x1e
	.uaword .L1156
	.uaword .L1170
	.byte 0x1e
	.uaword .L1157
	.uaword .L1169
	.byte 0x1e
	.uaword .L1158
	.uaword .L1168
	.byte 0x1e
	.uaword .L1162
	.uaword .L1167
	.byte 0x1e
	.uaword .L1163
	.uaword .L1166
	.byte 0x1d
	.ascii "ptr1\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x03,0x50
	.byte 0x02,0x91,0x74,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x0f,0x00,0x00,0x01,0x0a,0x05
	.byte 0x00,0x00,0xab,0xe4,0x0f,0x00,0x00,0x01
	.byte 0x0a,0x05,0x00,0x00,0xab,0xee,0x0f,0x00
	.byte 0x00,0x01,0x33,0x05,0x00,0x00,0xab,0xf8
	.byte 0x0f,0x00,0x00,0x31,0x2a,0x05,0x00,0x00
	.byte 0xac,0x02,0x1c
	.ascii "write_monoindex_pixels\0"
	.byte 0x03,0x01,0x03,0x5b
	.uaword write_monoindex_pixels
	.uaword .L1207
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xac,0xf2
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0x58,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0x59,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0xac,0xf7
	.ascii "x\0"
	.byte 0x01,0x03,0x59,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0xad,0x01
	.ascii "y\0"
	.byte 0x01,0x03,0x59,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0xad,0x0b
	.ascii "mask\0"
	.byte 0x01,0x03,0x5a,0x03,0x91,0xd4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0x5c
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0x5d
	.byte 0x02,0x91,0x78,0x1e
	.uaword .L1182
	.uaword .L1205
	.byte 0x1e
	.uaword .L1188
	.uaword .L1202
	.byte 0x1e
	.uaword .L1189
	.uaword .L1201
	.byte 0x1e
	.uaword .L1190
	.uaword .L1200
	.byte 0x1e
	.uaword .L1194
	.uaword .L1199
	.byte 0x1e
	.uaword .L1195
	.uaword .L1198
	.byte 0x1d
	.ascii "ptr1\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x03,0x60
	.byte 0x02,0x91,0x74,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x0f,0x00,0x00,0x01,0x0a,0x05
	.byte 0x00,0x00,0xac,0xf2,0x0f,0x00,0x00,0x01
	.byte 0x0a,0x05,0x00,0x00,0xac,0xfc,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xad,0x06
	.byte 0x1c
	.ascii "read_index_span\0"
	.byte 0x03,0x01,0x03,0x6a
	.uaword read_index_span
	.uaword .L1230
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xad,0xb4
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0x68,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0x69,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "x\0"
	.byte 0x01,0x03,0x69,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "y\0"
	.byte 0x01,0x03,0x69,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0x93,0x79
	.ascii "index\0"
	.byte 0x01,0x03,0x69,0x03,0x91,0xd4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0x6b
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0x6c
	.byte 0x02,0x91,0x78,0x1d
	.ascii "ptr1\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x03,0x6d
	.byte 0x02,0x91,0x74,0x00,0x1c
	.ascii "read_color_span\0"
	.byte 0x03,0x01,0x03,0x78
	.uaword read_color_span
	.uaword .L1257
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xae,0xbb
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0x74,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0x75,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "x\0"
	.byte 0x01,0x03,0x75,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "y\0"
	.byte 0x01,0x03,0x75,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "red\0"
	.byte 0x01,0x03,0x76,0x03,0x91,0xd4,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "green\0"
	.byte 0x01,0x03,0x76,0x03,0x91,0xd8,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "blue\0"
	.byte 0x01,0x03,0x77,0x03,0x91,0xdc,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "alpha\0"
	.byte 0x01,0x03,0x77,0x03,0x91,0xe0,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0x79
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0x7a
	.byte 0x02,0x91,0x78,0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x01,0x03,0x7b
	.byte 0x02,0x91,0x74,0x1e
	.uaword .L1238
	.uaword .L1255
	.byte 0x1e
	.uaword .L1244
	.uaword .L1252
	.byte 0x1e
	.uaword .L1245
	.uaword .L1251
	.byte 0x1d
	.ascii "pixel\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0x7d
	.byte 0x02,0x91,0x70,0x00,0x00,0x00,0x00,0x1c
	.ascii "read_index_pixels\0"
	.byte 0x03,0x01,0x03,0x89
	.uaword read_index_pixels
	.uaword .L1289
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xaf,0xae
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01
	.byte 0x03,0x86,0x03,0x91,0xc4,0x00,0x1b,0x00
	.byte 0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0x87,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0xaf,0xb3
	.ascii "x\0"
	.byte 0x01,0x03,0x87,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0xaf,0xbd
	.ascii "y\0"
	.byte 0x01,0x03,0x87,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0x93,0x79
	.ascii "index\0"
	.byte 0x01,0x03,0x88,0x03,0x91,0xd4,0x00,0x1b
	.byte 0x00,0x00,0xaf,0xc7
	.ascii "mask\0"
	.byte 0x01,0x03,0x88,0x03,0x91,0xd8,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0x8a
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0x8b
	.byte 0x02,0x91,0x78,0x1e
	.uaword .L1264
	.uaword .L1287
	.byte 0x1e
	.uaword .L1270
	.uaword .L1284
	.byte 0x1e
	.uaword .L1271
	.uaword .L1283
	.byte 0x1e
	.uaword .L1272
	.uaword .L1282
	.byte 0x1e
	.uaword .L1276
	.uaword .L1281
	.byte 0x1e
	.uaword .L1277
	.uaword .L1280
	.byte 0x1d
	.ascii "ptr1\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x03,0x8e
	.byte 0x02,0x91,0x74,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x0f,0x00,0x00,0x01,0x0a,0x05
	.byte 0x00,0x00,0xaf,0xae,0x0f,0x00,0x00,0x01
	.byte 0x0a,0x05,0x00,0x00,0xaf,0xb8,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xaf,0xc2
	.byte 0x1c
	.ascii "read_color_pixels\0"
	.byte 0x03,0x01,0x03,0x9a
	.uaword read_color_pixels
	.uaword .L1325
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xb1,0x04
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0x95,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0x96,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0xb1,0x09
	.ascii "x\0"
	.byte 0x01,0x03,0x96,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0xb1,0x13
	.ascii "y\0"
	.byte 0x01,0x03,0x96,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "red\0"
	.byte 0x01,0x03,0x97,0x03,0x91,0xd4,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "green\0"
	.byte 0x01,0x03,0x97,0x03,0x91,0xd8,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "blue\0"
	.byte 0x01,0x03,0x98,0x03,0x91,0xdc,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "alpha\0"
	.byte 0x01,0x03,0x98,0x03,0x91,0xe0,0x00,0x1b
	.byte 0x00,0x00,0xb1,0x1d
	.ascii "mask\0"
	.byte 0x01,0x03,0x99,0x03,0x91,0xe4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0x9b
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0x9c
	.byte 0x02,0x91,0x78,0x1e
	.uaword .L1296
	.uaword .L1323
	.byte 0x1e
	.uaword .L1302
	.uaword .L1320
	.byte 0x1e
	.uaword .L1303
	.uaword .L1319
	.byte 0x1e
	.uaword .L1304
	.uaword .L1318
	.byte 0x1e
	.uaword .L1308
	.uaword .L1317
	.byte 0x1e
	.uaword .L1309
	.uaword .L1316
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x01,0x03,0x9f
	.byte 0x02,0x91,0x74,0x1d
	.ascii "pixel\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0xa0
	.byte 0x02,0x91,0x70,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x0f,0x00,0x00,0x01,0x0a,0x05
	.byte 0x00,0x00,0xb1,0x04,0x0f,0x00,0x00,0x01
	.byte 0x0a,0x05,0x00,0x00,0xb1,0x0e,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xb1,0x18
	.byte 0x1c
	.ascii "write_color_span3\0"
	.byte 0x03,0x01,0x03,0xb2
	.uaword write_color_span3
	.uaword .L1392
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xb2,0x3f
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0xad,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0xae,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "x\0"
	.byte 0x01,0x03,0xae,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "y\0"
	.byte 0x01,0x03,0xae,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0xb2,0x44
	.ascii "red\0"
	.byte 0x01,0x03,0xaf,0x03,0x91,0xd4,0x00,0x1b
	.byte 0x00,0x00,0xb2,0x4e
	.ascii "green\0"
	.byte 0x01,0x03,0xaf,0x03,0x91,0xd8,0x00,0x1b
	.byte 0x00,0x00,0xb2,0x58
	.ascii "blue\0"
	.byte 0x01,0x03,0xb0,0x03,0x91,0xdc,0x00,0x1b
	.byte 0x00,0x00,0xb2,0x62
	.ascii "alpha\0"
	.byte 0x01,0x03,0xb0,0x03,0x91,0xe0,0x00,0x1b
	.byte 0x00,0x00,0xb2,0x6c
	.ascii "mask\0"
	.byte 0x01,0x03,0xb1,0x03,0x91,0xe4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0xb3
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "ptr3\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x03,0xb4
	.byte 0x02,0x91,0x78,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0xb5
	.byte 0x02,0x91,0x74,0x1d
	.ascii "rind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0xb6
	.byte 0x02,0x91,0x70,0x1d
	.ascii "gind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0xb7
	.byte 0x02,0x91,0x6c,0x1d
	.ascii "bind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0xb8
	.byte 0x02,0x91,0x68,0x00,0x0f,0x00,0x00,0x31
	.byte 0x2a,0x05,0x00,0x00,0xb2,0x3f,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xb2,0x49
	.byte 0x0f,0x00,0x00,0x31,0x2a,0x05,0x00,0x00
	.byte 0xb2,0x53,0x0f,0x00,0x00,0x31,0x2a,0x05
	.byte 0x00,0x00,0xb2,0x5d,0x0f,0x00,0x00,0x31
	.byte 0x2a,0x05,0x00,0x00,0xb2,0x67,0x1c
	.ascii "write_monocolor_span3\0"
	.byte 0x03,0x01,0x03,0xce
	.uaword write_monocolor_span3
	.uaword .L1432
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xb3,0x80
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0xcb,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0xcc,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "x\0"
	.byte 0x01,0x03,0xcc,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "y\0"
	.byte 0x01,0x03,0xcc,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0xb3,0x85
	.ascii "mask\0"
	.byte 0x01,0x03,0xcd,0x03,0x91,0xd4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0xcf
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "rval\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x01,0x03,0xd1
	.byte 0x02,0x91,0x7b,0x1d
	.ascii "gval\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x01,0x03,0xd2
	.byte 0x02,0x91,0x7a,0x1d
	.ascii "bval\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x01,0x03,0xd3
	.byte 0x02,0x91,0x79,0x1d
	.ascii "rind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0xd4
	.byte 0x02,0x91,0x74,0x1d
	.ascii "gind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0xd5
	.byte 0x02,0x91,0x70,0x1d
	.ascii "bind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0xd6
	.byte 0x02,0x91,0x6c,0x1d
	.ascii "ptr3\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x03,0xd9
	.byte 0x02,0x91,0x68,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0xda
	.byte 0x02,0x91,0x64,0x00,0x0f,0x00,0x00,0x31
	.byte 0x2a,0x05,0x00,0x00,0xb3,0x80,0x1c
	.ascii "write_color_pixels3\0"
	.byte 0x03,0x01,0x03,0xe9
	.uaword write_color_pixels3
	.uaword .L1469
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xb4,0xe5
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0xe4,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0xe5,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0xb4,0xea
	.ascii "x\0"
	.byte 0x01,0x03,0xe5,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0xb4,0xf4
	.ascii "y\0"
	.byte 0x01,0x03,0xe5,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0xb4,0xfe
	.ascii "red\0"
	.byte 0x01,0x03,0xe6,0x03,0x91,0xd4,0x00,0x1b
	.byte 0x00,0x00,0xb5,0x08
	.ascii "green\0"
	.byte 0x01,0x03,0xe6,0x03,0x91,0xd8,0x00,0x1b
	.byte 0x00,0x00,0xb5,0x12
	.ascii "blue\0"
	.byte 0x01,0x03,0xe7,0x03,0x91,0xdc,0x00,0x1b
	.byte 0x00,0x00,0xb5,0x1c
	.ascii "alpha\0"
	.byte 0x01,0x03,0xe7,0x03,0x91,0xe0,0x00,0x1b
	.byte 0x00,0x00,0xb5,0x26
	.ascii "mask\0"
	.byte 0x01,0x03,0xe8,0x03,0x91,0xe4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0xea
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0xeb
	.byte 0x02,0x91,0x78,0x1d
	.ascii "rind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0xec
	.byte 0x02,0x91,0x74,0x1d
	.ascii "gind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0xed
	.byte 0x02,0x91,0x70,0x1d
	.ascii "bind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x03,0xee
	.byte 0x02,0x91,0x6c,0x1e
	.uaword .L1442
	.uaword .L1467
	.byte 0x1e
	.uaword .L1448
	.uaword .L1464
	.byte 0x1e
	.uaword .L1449
	.uaword .L1463
	.byte 0x1e
	.uaword .L1450
	.uaword .L1462
	.byte 0x1e
	.uaword .L1454
	.uaword .L1461
	.byte 0x1e
	.uaword .L1455
	.uaword .L1460
	.byte 0x1d
	.ascii "ptr3\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x03,0xf2
	.byte 0x02,0x91,0x68,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x0f,0x00,0x00,0x01,0x0a,0x05
	.byte 0x00,0x00,0xb4,0xe5,0x0f,0x00,0x00,0x01
	.byte 0x0a,0x05,0x00,0x00,0xb4,0xef,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xb4,0xf9
	.byte 0x0f,0x00,0x00,0x31,0x2a,0x05,0x00,0x00
	.byte 0xb5,0x03,0x0f,0x00,0x00,0x31,0x2a,0x05
	.byte 0x00,0x00,0xb5,0x0d,0x0f,0x00,0x00,0x31
	.byte 0x2a,0x05,0x00,0x00,0xb5,0x17,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xb5,0x21
	.byte 0x1c
	.ascii "write_monocolor_pixels3\0"
	.byte 0x03,0x01,0x03,0xfd
	.uaword write_monocolor_pixels3
	.uaword .L1509
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xb6,0x78
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x03,0xfa,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x03,0xfb,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0xb6,0x7d
	.ascii "x\0"
	.byte 0x01,0x03,0xfb,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0xb6,0x87
	.ascii "y\0"
	.byte 0x01,0x03,0xfb,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0xb6,0x91
	.ascii "mask\0"
	.byte 0x01,0x03,0xfc,0x03,0x91,0xd4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x03,0xfe
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x03,0xff
	.byte 0x02,0x91,0x78,0x1d
	.ascii "rind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x00
	.byte 0x02,0x91,0x74,0x1d
	.ascii "gind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x01
	.byte 0x02,0x91,0x70,0x1d
	.ascii "bind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x02
	.byte 0x02,0x91,0x6c,0x1d
	.ascii "rval\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x01,0x04,0x03
	.byte 0x02,0x91,0x6b,0x1d
	.ascii "gval\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x01,0x04,0x04
	.byte 0x02,0x91,0x6a,0x1d
	.ascii "bval\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x01,0x04,0x05
	.byte 0x02,0x91,0x69,0x1e
	.uaword .L1482
	.uaword .L1507
	.byte 0x1e
	.uaword .L1488
	.uaword .L1504
	.byte 0x1e
	.uaword .L1489
	.uaword .L1503
	.byte 0x1e
	.uaword .L1490
	.uaword .L1502
	.byte 0x1e
	.uaword .L1494
	.uaword .L1501
	.byte 0x1e
	.uaword .L1495
	.uaword .L1500
	.byte 0x1d
	.ascii "ptr3\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x04,0x08
	.byte 0x02,0x91,0x64,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x0f,0x00,0x00,0x01,0x0a,0x05
	.byte 0x00,0x00,0xb6,0x78,0x0f,0x00,0x00,0x01
	.byte 0x0a,0x05,0x00,0x00,0xb6,0x82,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xb6,0x8c
	.byte 0x1c
	.ascii "read_color_span3\0"
	.byte 0x03,0x01,0x04,0x14
	.uaword read_color_span3
	.uaword .L1538
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xb7,0xa1
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x04,0x10,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x04,0x11,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "x\0"
	.byte 0x01,0x04,0x11,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x0a
	.ascii "y\0"
	.byte 0x01,0x04,0x11,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "red\0"
	.byte 0x01,0x04,0x12,0x03,0x91,0xd4,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "green\0"
	.byte 0x01,0x04,0x12,0x03,0x91,0xd8,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "blue\0"
	.byte 0x01,0x04,0x13,0x03,0x91,0xdc,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "alpha\0"
	.byte 0x01,0x04,0x13,0x03,0x91,0xe0,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x04,0x15
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x04,0x16
	.byte 0x02,0x91,0x78,0x1d
	.ascii "rind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x17
	.byte 0x02,0x91,0x74,0x1d
	.ascii "gind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x18
	.byte 0x02,0x91,0x70,0x1d
	.ascii "bind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x19
	.byte 0x02,0x91,0x6c,0x1d
	.ascii "ptr3\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x04,0x1a
	.byte 0x02,0x91,0x68,0x00,0x1c
	.ascii "read_color_pixels3\0"
	.byte 0x03,0x01,0x04,0x28
	.uaword read_color_pixels3
	.uaword .L1576
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xb8,0xfb
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x04,0x23,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "n\0"
	.byte 0x01,0x04,0x24,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0xb9,0x00
	.ascii "x\0"
	.byte 0x01,0x04,0x24,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0xb9,0x0a
	.ascii "y\0"
	.byte 0x01,0x04,0x24,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "red\0"
	.byte 0x01,0x04,0x25,0x03,0x91,0xd4,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "green\0"
	.byte 0x01,0x04,0x25,0x03,0x91,0xd8,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "blue\0"
	.byte 0x01,0x04,0x26,0x03,0x91,0xdc,0x00,0x1b
	.byte 0x00,0x00,0x31,0x38
	.ascii "alpha\0"
	.byte 0x01,0x04,0x26,0x03,0x91,0xe0,0x00,0x1b
	.byte 0x00,0x00,0xb9,0x14
	.ascii "mask\0"
	.byte 0x01,0x04,0x27,0x03,0x91,0xe4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x04,0x29
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x01,0x04,0x2a
	.byte 0x02,0x91,0x78,0x1d
	.ascii "rind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x2b
	.byte 0x02,0x91,0x74,0x1d
	.ascii "gind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x2c
	.byte 0x02,0x91,0x70,0x1d
	.ascii "bind\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x2d
	.byte 0x02,0x91,0x6c,0x1e
	.uaword .L1548
	.uaword .L1574
	.byte 0x1e
	.uaword .L1554
	.uaword .L1571
	.byte 0x1e
	.uaword .L1555
	.uaword .L1570
	.byte 0x1e
	.uaword .L1556
	.uaword .L1569
	.byte 0x1e
	.uaword .L1560
	.uaword .L1568
	.byte 0x1e
	.uaword .L1561
	.uaword .L1567
	.byte 0x1d
	.ascii "ptr3\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x04,0x30
	.byte 0x02,0x91,0x68,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x0f,0x00,0x00,0x01,0x0a,0x05
	.byte 0x00,0x00,0xb8,0xfb,0x0f,0x00,0x00,0x01
	.byte 0x0a,0x05,0x00,0x00,0xb9,0x05,0x0f,0x00
	.byte 0x00,0x31,0x2a,0x05,0x00,0x00,0xb9,0x0f
	.byte 0x1c
	.ascii "flat_color_line\0"
	.byte 0x03,0x01,0x04,0x44
	.uaword flat_color_line
	.uaword .L1768
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xbb,0xa4
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x04,0x42,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "vert0\0"
	.byte 0x01,0x04,0x43,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "vert1\0"
	.byte 0x01,0x04,0x43,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "pvert\0"
	.byte 0x01,0x04,0x43,0x03,0x91,0xd0,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x04,0x45
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "color\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x04,0x46
	.byte 0x02,0x91,0x78,0x1d
	.ascii "pixel\0"
	.byte 0x00,0x00,0xbb,0xa4,0x01,0x01,0x04,0x47
	.byte 0x02,0x91,0x74,0x1e
	.uaword .L1585
	.uaword .L1766
	.byte 0x17
	.ascii "VB\0"
	.byte 0x00,0x00,0x97,0xf1,0x01,0x07,0x57,0x02
	.byte 0x91,0x70,0x17
	.ascii "x0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x5c,0x02
	.byte 0x91,0x6c,0x17
	.ascii "x1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x5c,0x02
	.byte 0x91,0x68,0x17
	.ascii "y0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x5d,0x02
	.byte 0x91,0x64,0x17
	.ascii "y1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x5d,0x02
	.byte 0x91,0x60,0x17
	.ascii "dx\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x5e,0x02
	.byte 0x91,0x5c,0x17
	.ascii "dy\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x5e,0x02
	.byte 0x91,0x58,0x17
	.ascii "xstep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x60,0x02
	.byte 0x91,0x54,0x17
	.ascii "ystep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x60,0x02
	.byte 0x91,0x50,0x1e
	.uaword .L1589
	.uaword .L1630
	.byte 0x17
	.ascii "w\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x99,0x02
	.byte 0x91,0x4c,0x17
	.ascii "h\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x9a,0x02
	.byte 0x91,0x48,0x00,0x1e
	.uaword .L1678
	.uaword .L1765
	.byte 0x1e
	.uaword .L1682
	.uaword .L1722
	.byte 0x1e
	.uaword .L1683
	.uaword .L1721
	.byte 0x17
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0xfc,0x02
	.byte 0x91,0x4c,0x17
	.ascii "errorInc\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0xfd,0x02
	.byte 0x91,0x48,0x17
	.ascii "error\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0xfe,0x02
	.byte 0x91,0x44,0x17
	.ascii "errorDec\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0xff,0x02
	.byte 0x91,0x40,0x1e
	.uaword .L1687
	.uaword .L1720
	.byte 0x1e
	.uaword .L1693
	.uaword .L1717
	.byte 0x1e
	.uaword .L1694
	.uaword .L1716
	.byte 0x1e
	.uaword .L1695
	.uaword .L1697
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x07,0x01,0x39
	.byte 0x03,0x91,0xbc,0x7f,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x1e
	.uaword .L1724
	.uaword .L1764
	.byte 0x1e
	.uaword .L1725
	.uaword .L1763
	.byte 0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x01,0x77
	.byte 0x02,0x91,0x4c,0x1d
	.ascii "errorInc\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x01,0x78
	.byte 0x02,0x91,0x48,0x1d
	.ascii "error\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x01,0x79
	.byte 0x02,0x91,0x44,0x1d
	.ascii "errorDec\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x07,0x01,0x7a
	.byte 0x02,0x91,0x40,0x1e
	.uaword .L1729
	.uaword .L1762
	.byte 0x1e
	.uaword .L1735
	.uaword .L1759
	.byte 0x1e
	.uaword .L1736
	.uaword .L1758
	.byte 0x1e
	.uaword .L1737
	.uaword .L1739
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x07,0x01,0xb4
	.byte 0x03,0x91,0xbc,0x7f,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x02
	.ascii "unsigned long\0"
	.byte 0x07,0x04,0x1c
	.ascii "flat_color_z_line\0"
	.byte 0x03,0x01,0x04,0x56
	.uaword flat_color_z_line
	.uaword .L1989
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xbe,0xf8
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x04,0x54,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "vert0\0"
	.byte 0x01,0x04,0x55,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "vert1\0"
	.byte 0x01,0x04,0x55,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "pvert\0"
	.byte 0x01,0x04,0x55,0x03,0x91,0xd0,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x04,0x57
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "color\0"
	.byte 0x00,0x00,0x31,0x38,0x01,0x01,0x04,0x58
	.byte 0x02,0x91,0x78,0x1d
	.ascii "pixel\0"
	.byte 0x00,0x00,0xbb,0xa4,0x01,0x01,0x04,0x59
	.byte 0x02,0x91,0x74,0x1e
	.uaword .L1777
	.uaword .L1987
	.byte 0x17
	.ascii "VB\0"
	.byte 0x00,0x00,0x97,0xf1,0x01,0x08,0x57,0x02
	.byte 0x91,0x70,0x17
	.ascii "x0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x5c,0x02
	.byte 0x91,0x6c,0x17
	.ascii "x1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x5c,0x02
	.byte 0x91,0x68,0x17
	.ascii "y0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x5d,0x02
	.byte 0x91,0x64,0x17
	.ascii "y1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x5d,0x02
	.byte 0x91,0x60,0x17
	.ascii "dx\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x5e,0x02
	.byte 0x91,0x5c,0x17
	.ascii "dy\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x5e,0x02
	.byte 0x91,0x58,0x17
	.ascii "xstep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x60,0x02
	.byte 0x91,0x54,0x17
	.ascii "ystep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x60,0x02
	.byte 0x91,0x50,0x17
	.ascii "z0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x63,0x02
	.byte 0x91,0x4c,0x17
	.ascii "z1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x63,0x02
	.byte 0x91,0x48,0x17
	.ascii "dz\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x63,0x02
	.byte 0x91,0x44,0x17
	.ascii "zPtrXstep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x63,0x02
	.byte 0x91,0x40,0x17
	.ascii "zPtrYstep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x63,0x03
	.byte 0x91,0xbc,0x7f,0x17
	.ascii "zPtr\0"
	.byte 0x00,0x00,0x65,0x75,0x01,0x08,0x64,0x03
	.byte 0x91,0xb8,0x7f,0x1e
	.uaword .L1781
	.uaword .L1822
	.byte 0x17
	.ascii "w\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x99,0x03
	.byte 0x91,0xb4,0x7f,0x17
	.ascii "h\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x9a,0x03
	.byte 0x91,0xb0,0x7f,0x00,0x1e
	.uaword .L1877
	.uaword .L1986
	.byte 0x1e
	.uaword .L1881
	.uaword .L1932
	.byte 0x1e
	.uaword .L1882
	.uaword .L1931
	.byte 0x17
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0xfc,0x03
	.byte 0x91,0xb4,0x7f,0x17
	.ascii "errorInc\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0xfd,0x03
	.byte 0x91,0xb0,0x7f,0x17
	.ascii "error\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0xfe,0x03
	.byte 0x91,0xac,0x7f,0x17
	.ascii "errorDec\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0xff,0x03
	.byte 0x91,0xa8,0x7f,0x1e
	.uaword .L1887
	.uaword .L1930
	.byte 0x1e
	.uaword .L1893
	.uaword .L1927
	.byte 0x1e
	.uaword .L1894
	.uaword .L1926
	.byte 0x1d
	.ascii "Z\0"
	.byte 0x00,0x00,0x65,0x67,0x01,0x08,0x01,0x26
	.byte 0x03,0x91,0xa6,0x7f,0x1e
	.uaword .L1896
	.uaword .L1904
	.byte 0x1e
	.uaword .L1900
	.uaword .L1903
	.byte 0x1e
	.uaword .L1901
	.uaword .L1902
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x08,0x01,0x39
	.byte 0x03,0x91,0xa0,0x7f,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x1e
	.uaword .L1934
	.uaword .L1985
	.byte 0x1e
	.uaword .L1935
	.uaword .L1984
	.byte 0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x01,0x77
	.byte 0x03,0x91,0xb4,0x7f,0x1d
	.ascii "errorInc\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x01,0x78
	.byte 0x03,0x91,0xb0,0x7f,0x1d
	.ascii "error\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x01,0x79
	.byte 0x03,0x91,0xac,0x7f,0x1d
	.ascii "errorDec\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x08,0x01,0x7a
	.byte 0x03,0x91,0xa8,0x7f,0x1e
	.uaword .L1940
	.uaword .L1983
	.byte 0x1e
	.uaword .L1946
	.uaword .L1980
	.byte 0x1e
	.uaword .L1947
	.uaword .L1979
	.byte 0x1d
	.ascii "Z\0"
	.byte 0x00,0x00,0x65,0x67,0x01,0x08,0x01,0xa1
	.byte 0x03,0x91,0xa6,0x7f,0x1e
	.uaword .L1949
	.uaword .L1957
	.byte 0x1e
	.uaword .L1953
	.uaword .L1956
	.byte 0x1e
	.uaword .L1954
	.uaword .L1955
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x08,0x01,0xb4
	.byte 0x03,0x91,0xa0,0x7f,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c
	.ascii "flat_blend_color_line\0"
	.byte 0x03,0x01,0x04,0x6e
	.uaword flat_blend_color_line
	.uaword .L2188
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xc2,0x41
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x04,0x6c,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "vert0\0"
	.byte 0x01,0x04,0x6d,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "vert1\0"
	.byte 0x01,0x04,0x6d,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "pvert\0"
	.byte 0x01,0x04,0x6d,0x03,0x91,0xd0,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x04,0x6f
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "VB\0"
	.byte 0x00,0x00,0x97,0xf1,0x01,0x01,0x04,0x70
	.byte 0x02,0x91,0x78,0x1d
	.ascii "rshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x71
	.byte 0x02,0x91,0x74,0x1d
	.ascii "gshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x72
	.byte 0x02,0x91,0x70,0x1d
	.ascii "bshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x73
	.byte 0x02,0x91,0x6c,0x1d
	.ascii "avalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x74
	.byte 0x02,0x91,0x68,0x1d
	.ascii "msavalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x75
	.byte 0x02,0x91,0x64,0x1d
	.ascii "rvalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x76
	.byte 0x02,0x91,0x60,0x1d
	.ascii "gvalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x77
	.byte 0x02,0x91,0x5c,0x1d
	.ascii "bvalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x78
	.byte 0x02,0x91,0x58,0x1e
	.uaword .L2005
	.uaword .L2186
	.byte 0x17
	.ascii "VB\0"
	.byte 0x00,0x00,0x97,0xf1,0x01,0x09,0x57,0x02
	.byte 0x91,0x54,0x17
	.ascii "x0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x5c,0x02
	.byte 0x91,0x50,0x17
	.ascii "x1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x5c,0x02
	.byte 0x91,0x4c,0x17
	.ascii "y0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x5d,0x02
	.byte 0x91,0x48,0x17
	.ascii "y1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x5d,0x02
	.byte 0x91,0x44,0x17
	.ascii "dx\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x5e,0x02
	.byte 0x91,0x40,0x17
	.ascii "dy\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x5e,0x03
	.byte 0x91,0xbc,0x7f,0x17
	.ascii "xstep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x60,0x03
	.byte 0x91,0xb8,0x7f,0x17
	.ascii "ystep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x60,0x03
	.byte 0x91,0xb4,0x7f,0x1e
	.uaword .L2009
	.uaword .L2050
	.byte 0x17
	.ascii "w\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x99,0x03
	.byte 0x91,0xb0,0x7f,0x17
	.ascii "h\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x9a,0x03
	.byte 0x91,0xac,0x7f,0x00,0x1e
	.uaword .L2098
	.uaword .L2185
	.byte 0x1e
	.uaword .L2102
	.uaword .L2142
	.byte 0x1e
	.uaword .L2103
	.uaword .L2141
	.byte 0x17
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0xfc,0x03
	.byte 0x91,0xb0,0x7f,0x17
	.ascii "errorInc\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0xfd,0x03
	.byte 0x91,0xac,0x7f,0x17
	.ascii "error\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0xfe,0x03
	.byte 0x91,0xa8,0x7f,0x17
	.ascii "errorDec\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0xff,0x03
	.byte 0x91,0xa4,0x7f,0x1e
	.uaword .L2107
	.uaword .L2140
	.byte 0x1e
	.uaword .L2113
	.uaword .L2137
	.byte 0x1e
	.uaword .L2114
	.uaword .L2136
	.byte 0x1e
	.uaword .L2115
	.uaword .L2117
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x09,0x01,0x39
	.byte 0x03,0x91,0xa0,0x7f,0x1d
	.ascii "pixel\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x09,0x01,0x39
	.byte 0x03,0x91,0x9c,0x7f,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x1e
	.uaword .L2144
	.uaword .L2184
	.byte 0x1e
	.uaword .L2145
	.uaword .L2183
	.byte 0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x01,0x77
	.byte 0x03,0x91,0xb0,0x7f,0x1d
	.ascii "errorInc\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x01,0x78
	.byte 0x03,0x91,0xac,0x7f,0x1d
	.ascii "error\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x01,0x79
	.byte 0x03,0x91,0xa8,0x7f,0x1d
	.ascii "errorDec\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x09,0x01,0x7a
	.byte 0x03,0x91,0xa4,0x7f,0x1e
	.uaword .L2149
	.uaword .L2182
	.byte 0x1e
	.uaword .L2155
	.uaword .L2179
	.byte 0x1e
	.uaword .L2156
	.uaword .L2178
	.byte 0x1e
	.uaword .L2157
	.uaword .L2159
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x09,0x01,0xb4
	.byte 0x03,0x91,0xa0,0x7f,0x1d
	.ascii "pixel\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x09,0x01,0xb4
	.byte 0x03,0x91,0x9c,0x7f,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x1c
	.ascii "flat_blend_color_z_line\0"
	.byte 0x03,0x01,0x04,0x8d
	.uaword flat_blend_color_z_line
	.uaword .L2420
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xc6,0x50
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x04,0x8b,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "vert0\0"
	.byte 0x01,0x04,0x8c,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "vert1\0"
	.byte 0x01,0x04,0x8c,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "pvert\0"
	.byte 0x01,0x04,0x8c,0x03,0x91,0xd0,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x04,0x8e
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "VB\0"
	.byte 0x00,0x00,0x97,0xf1,0x01,0x01,0x04,0x8f
	.byte 0x02,0x91,0x78,0x1d
	.ascii "rshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x90
	.byte 0x02,0x91,0x74,0x1d
	.ascii "gshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x91
	.byte 0x02,0x91,0x70,0x1d
	.ascii "bshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x92
	.byte 0x02,0x91,0x6c,0x1d
	.ascii "avalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x93
	.byte 0x02,0x91,0x68,0x1d
	.ascii "msavalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x94
	.byte 0x02,0x91,0x64,0x1d
	.ascii "rvalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x95
	.byte 0x02,0x91,0x60,0x1d
	.ascii "gvalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x96
	.byte 0x02,0x91,0x5c,0x1d
	.ascii "bvalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0x97
	.byte 0x02,0x91,0x58,0x1e
	.uaword .L2204
	.uaword .L2418
	.byte 0x17
	.ascii "VB\0"
	.byte 0x00,0x00,0x97,0xf1,0x01,0x0a,0x57,0x02
	.byte 0x91,0x54,0x17
	.ascii "x0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x5c,0x02
	.byte 0x91,0x50,0x17
	.ascii "x1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x5c,0x02
	.byte 0x91,0x4c,0x17
	.ascii "y0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x5d,0x02
	.byte 0x91,0x48,0x17
	.ascii "y1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x5d,0x02
	.byte 0x91,0x44,0x17
	.ascii "dx\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x5e,0x02
	.byte 0x91,0x40,0x17
	.ascii "dy\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x5e,0x03
	.byte 0x91,0xbc,0x7f,0x17
	.ascii "xstep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x60,0x03
	.byte 0x91,0xb8,0x7f,0x17
	.ascii "ystep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x60,0x03
	.byte 0x91,0xb4,0x7f,0x17
	.ascii "z0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x63,0x03
	.byte 0x91,0xb0,0x7f,0x17
	.ascii "z1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x63,0x03
	.byte 0x91,0xac,0x7f,0x17
	.ascii "dz\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x63,0x03
	.byte 0x91,0xa8,0x7f,0x17
	.ascii "zPtrXstep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x63,0x03
	.byte 0x91,0xa4,0x7f,0x17
	.ascii "zPtrYstep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x63,0x03
	.byte 0x91,0xa0,0x7f,0x17
	.ascii "zPtr\0"
	.byte 0x00,0x00,0x65,0x75,0x01,0x0a,0x64,0x03
	.byte 0x91,0x9c,0x7f,0x1e
	.uaword .L2208
	.uaword .L2249
	.byte 0x17
	.ascii "w\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x99,0x03
	.byte 0x91,0x98,0x7f,0x17
	.ascii "h\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x9a,0x03
	.byte 0x91,0x94,0x7f,0x00,0x1e
	.uaword .L2304
	.uaword .L2417
	.byte 0x1e
	.uaword .L2308
	.uaword .L2361
	.byte 0x1e
	.uaword .L2309
	.uaword .L2360
	.byte 0x17
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0xfc,0x03
	.byte 0x91,0x98,0x7f,0x17
	.ascii "errorInc\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0xfd,0x03
	.byte 0x91,0x94,0x7f,0x17
	.ascii "error\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0xfe,0x03
	.byte 0x91,0x90,0x7f,0x17
	.ascii "errorDec\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0xff,0x03
	.byte 0x91,0x8c,0x7f,0x1e
	.uaword .L2314
	.uaword .L2359
	.byte 0x1e
	.uaword .L2320
	.uaword .L2356
	.byte 0x1e
	.uaword .L2321
	.uaword .L2355
	.byte 0x1d
	.ascii "Z\0"
	.byte 0x00,0x00,0x65,0x67,0x01,0x0a,0x01,0x26
	.byte 0x03,0x91,0x8a,0x7f,0x1e
	.uaword .L2323
	.uaword .L2333
	.byte 0x1e
	.uaword .L2327
	.uaword .L2332
	.byte 0x1e
	.uaword .L2328
	.uaword .L2331
	.byte 0x1e
	.uaword .L2329
	.uaword .L2330
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x0a,0x01,0x39
	.byte 0x03,0x91,0x84,0x7f,0x1d
	.ascii "pixel\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x0a,0x01,0x39
	.byte 0x03,0x91,0x80,0x7f,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x1e
	.uaword .L2363
	.uaword .L2416
	.byte 0x1e
	.uaword .L2364
	.uaword .L2415
	.byte 0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x01,0x77
	.byte 0x03,0x91,0x98,0x7f,0x1d
	.ascii "errorInc\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x01,0x78
	.byte 0x03,0x91,0x94,0x7f,0x1d
	.ascii "error\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x01,0x79
	.byte 0x03,0x91,0x90,0x7f,0x1d
	.ascii "errorDec\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0a,0x01,0x7a
	.byte 0x03,0x91,0x8c,0x7f,0x1e
	.uaword .L2369
	.uaword .L2414
	.byte 0x1e
	.uaword .L2375
	.uaword .L2411
	.byte 0x1e
	.uaword .L2376
	.uaword .L2410
	.byte 0x1d
	.ascii "Z\0"
	.byte 0x00,0x00,0x65,0x67,0x01,0x0a,0x01,0xa1
	.byte 0x03,0x91,0x8a,0x7f,0x1e
	.uaword .L2378
	.uaword .L2388
	.byte 0x1e
	.uaword .L2382
	.uaword .L2387
	.byte 0x1e
	.uaword .L2383
	.uaword .L2386
	.byte 0x1e
	.uaword .L2384
	.uaword .L2385
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x0a,0x01,0xb4
	.byte 0x03,0x91,0x84,0x7f,0x1d
	.ascii "pixel\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x0a,0x01,0xb4
	.byte 0x03,0x91,0x80,0x7f,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte 0x1c
	.ascii "flat_blend_color_z_line_write\0"
	.byte 0x03,0x01,0x04,0xaf
	.uaword flat_blend_color_z_line_write
	.uaword .L2652
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xca,0x65
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x04,0xad,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "vert0\0"
	.byte 0x01,0x04,0xae,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "vert1\0"
	.byte 0x01,0x04,0xae,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "pvert\0"
	.byte 0x01,0x04,0xae,0x03,0x91,0xd0,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x04,0xb0
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "VB\0"
	.byte 0x00,0x00,0x97,0xf1,0x01,0x01,0x04,0xb1
	.byte 0x02,0x91,0x78,0x1d
	.ascii "rshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0xb2
	.byte 0x02,0x91,0x74,0x1d
	.ascii "gshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0xb3
	.byte 0x02,0x91,0x70,0x1d
	.ascii "bshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0xb4
	.byte 0x02,0x91,0x6c,0x1d
	.ascii "avalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0xb5
	.byte 0x02,0x91,0x68,0x1d
	.ascii "msavalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0xb6
	.byte 0x02,0x91,0x64,0x1d
	.ascii "rvalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0xb7
	.byte 0x02,0x91,0x60,0x1d
	.ascii "gvalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0xb8
	.byte 0x02,0x91,0x5c,0x1d
	.ascii "bvalue\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x04,0xb9
	.byte 0x02,0x91,0x58,0x1e
	.uaword .L2436
	.uaword .L2650
	.byte 0x17
	.ascii "VB\0"
	.byte 0x00,0x00,0x97,0xf1,0x01,0x0b,0x57,0x02
	.byte 0x91,0x54,0x17
	.ascii "x0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x5c,0x02
	.byte 0x91,0x50,0x17
	.ascii "x1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x5c,0x02
	.byte 0x91,0x4c,0x17
	.ascii "y0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x5d,0x02
	.byte 0x91,0x48,0x17
	.ascii "y1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x5d,0x02
	.byte 0x91,0x44,0x17
	.ascii "dx\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x5e,0x02
	.byte 0x91,0x40,0x17
	.ascii "dy\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x5e,0x03
	.byte 0x91,0xbc,0x7f,0x17
	.ascii "xstep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x60,0x03
	.byte 0x91,0xb8,0x7f,0x17
	.ascii "ystep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x60,0x03
	.byte 0x91,0xb4,0x7f,0x17
	.ascii "z0\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x63,0x03
	.byte 0x91,0xb0,0x7f,0x17
	.ascii "z1\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x63,0x03
	.byte 0x91,0xac,0x7f,0x17
	.ascii "dz\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x63,0x03
	.byte 0x91,0xa8,0x7f,0x17
	.ascii "zPtrXstep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x63,0x03
	.byte 0x91,0xa4,0x7f,0x17
	.ascii "zPtrYstep\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x63,0x03
	.byte 0x91,0xa0,0x7f,0x17
	.ascii "zPtr\0"
	.byte 0x00,0x00,0x65,0x75,0x01,0x0b,0x64,0x03
	.byte 0x91,0x9c,0x7f,0x1e
	.uaword .L2440
	.uaword .L2481
	.byte 0x17
	.ascii "w\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x99,0x03
	.byte 0x91,0x98,0x7f,0x17
	.ascii "h\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x9a,0x03
	.byte 0x91,0x94,0x7f,0x00,0x1e
	.uaword .L2536
	.uaword .L2649
	.byte 0x1e
	.uaword .L2540
	.uaword .L2593
	.byte 0x1e
	.uaword .L2541
	.uaword .L2592
	.byte 0x17
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0xfc,0x03
	.byte 0x91,0x98,0x7f,0x17
	.ascii "errorInc\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0xfd,0x03
	.byte 0x91,0x94,0x7f,0x17
	.ascii "error\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0xfe,0x03
	.byte 0x91,0x90,0x7f,0x17
	.ascii "errorDec\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0xff,0x03
	.byte 0x91,0x8c,0x7f,0x1e
	.uaword .L2546
	.uaword .L2591
	.byte 0x1e
	.uaword .L2552
	.uaword .L2588
	.byte 0x1e
	.uaword .L2553
	.uaword .L2587
	.byte 0x1d
	.ascii "Z\0"
	.byte 0x00,0x00,0x65,0x67,0x01,0x0b,0x01,0x26
	.byte 0x03,0x91,0x8a,0x7f,0x1e
	.uaword .L2555
	.uaword .L2565
	.byte 0x1e
	.uaword .L2559
	.uaword .L2564
	.byte 0x1e
	.uaword .L2560
	.uaword .L2563
	.byte 0x1e
	.uaword .L2561
	.uaword .L2562
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x0b,0x01,0x39
	.byte 0x03,0x91,0x84,0x7f,0x1d
	.ascii "pixel\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x0b,0x01,0x39
	.byte 0x03,0x91,0x80,0x7f,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x1e
	.uaword .L2595
	.uaword .L2648
	.byte 0x1e
	.uaword .L2596
	.uaword .L2647
	.byte 0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x01,0x77
	.byte 0x03,0x91,0x98,0x7f,0x1d
	.ascii "errorInc\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x01,0x78
	.byte 0x03,0x91,0x94,0x7f,0x1d
	.ascii "error\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x01,0x79
	.byte 0x03,0x91,0x90,0x7f,0x1d
	.ascii "errorDec\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0b,0x01,0x7a
	.byte 0x03,0x91,0x8c,0x7f,0x1e
	.uaword .L2601
	.uaword .L2646
	.byte 0x1e
	.uaword .L2607
	.uaword .L2643
	.byte 0x1e
	.uaword .L2608
	.uaword .L2642
	.byte 0x1d
	.ascii "Z\0"
	.byte 0x00,0x00,0x65,0x67,0x01,0x0b,0x01,0xa1
	.byte 0x03,0x91,0x8a,0x7f,0x1e
	.uaword .L2610
	.uaword .L2620
	.byte 0x1e
	.uaword .L2614
	.uaword .L2619
	.byte 0x1e
	.uaword .L2615
	.uaword .L2618
	.byte 0x1e
	.uaword .L2616
	.uaword .L2617
	.byte 0x1d
	.ascii "ptr4\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x0b,0x01,0xb4
	.byte 0x03,0x91,0x84,0x7f,0x1d
	.ascii "pixel\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x0b,0x01,0xb4
	.byte 0x03,0x91,0x80,0x7f,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte 0x21
	.ascii "choose_line_function\0"
	.byte 0x03,0x01,0x04,0xd3
	.uaword choose_line_function
	.uaword .L2837
	.byte 0x01,0x6e,0x01,0x00,0x00,0x6d,0x13,0x01
	.byte 0x00,0x00,0xca,0xb7,0x1b,0x00,0x00,0x98
	.byte 0x1a
	.ascii "ctx\0"
	.byte 0x01,0x04,0xd2,0x03,0x91,0xc4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x04,0xd4
	.byte 0x02,0x91,0x78,0x00,0x1c
	.ascii "smooth_color_z_triangle\0"
	.byte 0x03,0x01,0x05,0x3c
	.uaword smooth_color_z_triangle
	.uaword .L3365
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xd5,0x3a
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x05,0x3a,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "v0\0"
	.byte 0x01,0x05,0x3a,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "v1\0"
	.byte 0x01,0x05,0x3a,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "v2\0"
	.byte 0x01,0x05,0x3b,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "pv\0"
	.byte 0x01,0x05,0x3b,0x03,0x91,0xd4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x05,0x3d
	.byte 0x02,0x91,0x7c,0x1d
	.ascii "rshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x05,0x3e
	.byte 0x02,0x91,0x78,0x1d
	.ascii "gshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x05,0x3f
	.byte 0x02,0x91,0x74,0x1d
	.ascii "bshift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x05,0x40
	.byte 0x02,0x91,0x70,0x1d
	.ascii "ashift\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x01,0x05,0x41
	.byte 0x02,0x91,0x6c,0x1e
	.uaword .L2848
	.uaword .L3363
	.byte 0x22,0x28,0x0c,0x0b
	.ascii "v0\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x00,0x0b
	.ascii "v1\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x04,0x0b
	.ascii "dx\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x08,0x0b
	.ascii "dy\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x0c,0x0b
	.ascii "fdxdy\0"
	.byte 0x00,0x00,0xd5,0x3a,0x02,0x23,0x10,0x0b
	.ascii "fsx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x02,0x23,0x14,0x0b
	.ascii "fsy\0"
	.byte 0x00,0x00,0xd5,0x3a,0x02,0x23,0x18,0x0b
	.ascii "adjy\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x1c,0x0b
	.ascii "lines\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x20,0x0b
	.ascii "fx0\0"
	.byte 0x00,0x00,0xd5,0x3a,0x02,0x23,0x24,0x00
	.byte 0x03,0x00,0x00,0xcb,0x98
	.ascii "EdgeT\0"
	.byte 0x0c,0x17
	.ascii "VB\0"
	.byte 0x00,0x00,0x97,0xf1,0x01,0x0c,0x88,0x02
	.byte 0x91,0x68,0x17
	.ascii "eMaj\0"
	.byte 0x00,0x00,0xcc,0x15,0x01,0x0c,0x89,0x02
	.byte 0x91,0x40,0x17
	.ascii "eTop\0"
	.byte 0x00,0x00,0xcc,0x15,0x01,0x0c,0x89,0x03
	.byte 0x91,0x98,0x7f,0x17
	.ascii "eBot\0"
	.byte 0x00,0x00,0xcc,0x15,0x01,0x0c,0x89,0x03
	.byte 0x91,0xf0,0x7e,0x17
	.ascii "oneOverArea\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x8a,0x03
	.byte 0x91,0xec,0x7e,0x17
	.ascii "vMin\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0c,0x8b,0x03
	.byte 0x91,0xe8,0x7e,0x17
	.ascii "vMid\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0c,0x8b,0x03
	.byte 0x91,0xe4,0x7e,0x17
	.ascii "vMax\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0c,0x8b,0x03
	.byte 0x91,0xe0,0x7e,0x1e
	.uaword .L2850
	.uaword .L2926
	.byte 0x17
	.ascii "y0\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x8f,0x03
	.byte 0x91,0xdc,0x7e,0x17
	.ascii "y1\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x90,0x03
	.byte 0x91,0xd8,0x7e,0x17
	.ascii "y2\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x91,0x03
	.byte 0x91,0xd4,0x7e,0x00,0x1e
	.uaword .L2936
	.uaword .L2950
	.byte 0x17
	.ascii "area\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0xba,0x03
	.byte 0x91,0xdc,0x7e,0x00,0x1e
	.uaword .L2951
	.uaword .L3011
	.byte 0x17
	.ascii "vMin_fx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0xc4,0x03
	.byte 0x91,0xdc,0x7e,0x17
	.ascii "vMin_fy\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0xc5,0x03
	.byte 0x91,0xd8,0x7e,0x17
	.ascii "vMid_fx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0xc6,0x03
	.byte 0x91,0xd4,0x7e,0x17
	.ascii "vMid_fy\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0xc7,0x03
	.byte 0x91,0xd0,0x7e,0x17
	.ascii "vMax_fy\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0xc8,0x03
	.byte 0x91,0xcc,0x7e,0x1e
	.uaword .L2959
	.uaword .L2978
	.byte 0x1e
	.uaword .L2963
	.uaword .L2971
	.byte 0x1e
	.uaword .L2964
	.uaword .L2970
	.byte 0x17
	.ascii "dxdy\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0xcd,0x03
	.byte 0x91,0xc8,0x7e,0x00,0x00,0x00,0x1e
	.uaword .L2981
	.uaword .L2994
	.byte 0x1e
	.uaword .L2985
	.uaword .L2993
	.byte 0x1e
	.uaword .L2986
	.uaword .L2992
	.byte 0x17
	.ascii "dxdy\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0xda,0x03
	.byte 0x91,0xc8,0x7e,0x00,0x00,0x00,0x1e
	.uaword .L2997
	.uaword .L3010
	.byte 0x1e
	.uaword .L3001
	.uaword .L3009
	.byte 0x1e
	.uaword .L3002
	.uaword .L3008
	.byte 0x17
	.ascii "dxdy\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0xe4,0x03
	.byte 0x91,0xc8,0x7e,0x00,0x00,0x00,0x00,0x1e
	.uaword .L3012
	.uaword .L3362
	.byte 0x1d
	.ascii "ltor\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0c,0x01,0x0f
	.byte 0x03,0x91,0xdc,0x7e,0x1d
	.ascii "dzdx\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x11
	.byte 0x03,0x91,0xd8,0x7e,0x1d
	.ascii "dzdy\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x11
	.byte 0x03,0x91,0xd4,0x7e,0x1d
	.ascii "fdzdx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0x11
	.byte 0x03,0x91,0xd0,0x7e,0x1d
	.ascii "drdx\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x14
	.byte 0x03,0x91,0xcc,0x7e,0x1d
	.ascii "drdy\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x14
	.byte 0x03,0x91,0xc8,0x7e,0x1d
	.ascii "fdrdx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0x14
	.byte 0x03,0x91,0xc4,0x7e,0x1d
	.ascii "dgdx\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x15
	.byte 0x03,0x91,0xc0,0x7e,0x1d
	.ascii "dgdy\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x15
	.byte 0x03,0x91,0xbc,0x7e,0x1d
	.ascii "fdgdx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0x15
	.byte 0x03,0x91,0xb8,0x7e,0x1d
	.ascii "dbdx\0"
	.byte 0x00,0x00,0x01,0x49
	.byte 0x01,0x0c,0x01,0x16,0x03,0x91,0xb4,0x7e
	.byte 0x1d
	.ascii "dbdy\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x16
	.byte 0x03,0x91,0xb0,0x7e,0x1d
	.ascii "fdbdx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0x16
	.byte 0x03,0x91,0xac,0x7e,0x1d
	.ascii "dadx\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x19
	.byte 0x03,0x91,0xa8,0x7e,0x1d
	.ascii "dady\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x19
	.byte 0x03,0x91,0xa4,0x7e,0x1d
	.ascii "fdadx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0x19
	.byte 0x03,0x91,0xa0,0x7e,0x1e
	.uaword .L3014
	.uaword .L3038
	.byte 0x1d
	.ascii "eMaj_dz\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x38
	.byte 0x03,0x91,0x9c,0x7e,0x1d
	.ascii "eBot_dz\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x38
	.byte 0x03,0x91,0x98,0x7e,0x00,0x1e
	.uaword .L3039
	.uaword .L3045
	.byte 0x1d
	.ascii "eMaj_dr\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x4d
	.byte 0x03,0x91,0x9c,0x7e,0x1d
	.ascii "eBot_dr\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x4d
	.byte 0x03,0x91,0x98,0x7e,0x00,0x1e
	.uaword .L3046
	.uaword .L3052
	.byte 0x1d
	.ascii "eMaj_dg\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x55
	.byte 0x03,0x91,0x9c,0x7e,0x1d
	.ascii "eBot_dg\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x55
	.byte 0x03,0x91,0x98,0x7e,0x00,0x1e
	.uaword .L3053
	.uaword .L3059
	.byte 0x1d
	.ascii "eMaj_db\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x5d
	.byte 0x03,0x91,0x9c,0x7e,0x1d
	.ascii "eBot_db\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x5d
	.byte 0x03,0x91,0x98,0x7e,0x00,0x1e
	.uaword .L3060
	.uaword .L3066
	.byte 0x1d
	.ascii "eMaj_da\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x67
	.byte 0x03,0x91,0x9c,0x7e,0x1d
	.ascii "eBot_da\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x01,0x67
	.byte 0x03,0x91,0x98,0x7e,0x00,0x1e
	.uaword .L3067
	.uaword .L3361
	.byte 0x1d
	.ascii "subTriangle\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0c,0x01,0xe4
	.byte 0x03,0x91,0x9c,0x7e,0x1d
	.ascii "fx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xe5
	.byte 0x03,0x91,0x98,0x7e,0x1d
	.ascii "fxLeftEdge\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xe5
	.byte 0x03,0x91,0x94,0x7e,0x1d
	.ascii "fxRightEdge\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xe5
	.byte 0x03,0x91,0x90,0x7e,0x1d
	.ascii "fdxLeftEdge\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xe5
	.byte 0x03,0x91,0x8c,0x7e,0x1d
	.ascii "fdxRightEdge\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xe5
	.byte 0x03,0x91,0x88,0x7e,0x1d
	.ascii "fdxOuter\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xe6
	.byte 0x03,0x91,0x84,0x7e,0x1d
	.ascii "idxOuter\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0c,0x01,0xe7
	.byte 0x03,0x91,0x80,0x7e,0x1d
	.ascii "dxOuter\0"
	.byte 0x00,0x00,0x01,0x40,0x01,0x0c,0x01,0xe8
	.byte 0x03,0x91,0xfc,0x7d,0x1d
	.ascii "fError\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xe9
	.byte 0x03,0x91,0xf8,0x7d,0x1d
	.ascii "fdError\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xe9
	.byte 0x03,0x91,0xf4,0x7d,0x1d
	.ascii "adjx\0"
	.byte 0x00,0x00,0x01,0x40,0x01,0x0c,0x01,0xea
	.byte 0x03,0x91,0xf0,0x7d,0x1d
	.ascii "adjy\0"
	.byte 0x00,0x00,0x01,0x40,0x01,0x0c,0x01,0xea
	.byte 0x03,0x91,0xec,0x7d,0x1d
	.ascii "fy\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xeb
	.byte 0x03,0x91,0xe8,0x7d,0x1d
	.ascii "iy\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0c,0x01,0xec
	.byte 0x03,0x91,0xe4,0x7d,0x1d
	.ascii "zRow\0"
	.byte 0x00,0x00,0x65,0x75,0x01,0x0c,0x01,0xf2
	.byte 0x03,0x91,0xe0,0x7d,0x1d
	.ascii "dZRowOuter\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0c,0x01,0xf3
	.byte 0x03,0x91,0xdc,0x7d,0x1d
	.ascii "dZRowInner\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0c,0x01,0xf3
	.byte 0x03,0x91,0xd8,0x7d,0x1d
	.ascii "fz\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xf4
	.byte 0x03,0x91,0xd4,0x7d,0x1d
	.ascii "fdzOuter\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xf4
	.byte 0x03,0x91,0xd0,0x7d,0x1d
	.ascii "fdzInner\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xf4
	.byte 0x03,0x91,0xcc,0x7d,0x1d
	.ascii "fr\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xf7
	.byte 0x03,0x91,0xc8,0x7d,0x1d
	.ascii "fdrOuter\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xf7
	.byte 0x03,0x91,0xc4,0x7d,0x1d
	.ascii "fdrInner\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xf7
	.byte 0x03,0x91,0xc0,0x7d,0x1d
	.ascii "fg\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xf8
	.byte 0x03,0x91,0xbc,0x7d,0x1d
	.ascii "fdgOuter\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xf8
	.byte 0x03,0x91,0xb8,0x7d,0x1d
	.ascii "fdgInner\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xf8
	.byte 0x03,0x91,0xb4,0x7d,0x1d
	.ascii "fb\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xf9
	.byte 0x03,0x91,0xb0,0x7d,0x1d
	.ascii "fdbOuter\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xf9
	.byte 0x03,0x91,0xac,0x7d,0x1d
	.ascii "fdbInner\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xf9
	.byte 0x03,0x91,0xa8,0x7d,0x1d
	.ascii "fa\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xfc
	.byte 0x03,0x91,0xa4,0x7d,0x1d
	.ascii "fdaOuter\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xfc
	.byte 0x03,0x91,0xa0,0x7d,0x1d
	.ascii "fdaInner\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x01,0xfc
	.byte 0x03,0x91,0x9c,0x7d,0x1e
	.uaword .L3068
	.uaword .L3360
	.byte 0x1e
	.uaword .L3074
	.uaword .L3357
	.byte 0x1e
	.uaword .L3075
	.uaword .L3356
	.byte 0x1d
	.ascii "eLeft\0"
	.byte 0x00,0x00,0xd5,0x48,0x01,0x0c,0x02,0x10
	.byte 0x03,0x91,0x98,0x7d,0x1d
	.ascii "eRight\0"
	.byte 0x00,0x00,0xd5,0x48,0x01,0x0c,0x02,0x10
	.byte 0x03,0x91,0x94,0x7d,0x1d
	.ascii "setupLeft\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0c,0x02,0x11
	.byte 0x03,0x91,0x90,0x7d,0x1d
	.ascii "setupRight\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0c,0x02,0x11
	.byte 0x03,0x91,0x8c,0x7d,0x1d
	.ascii "lines\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0c,0x02,0x12
	.byte 0x03,0x91,0x88,0x7d,0x1e
	.uaword .L3145
	.uaword .L3195
	.byte 0x1e
	.uaword .L3150
	.uaword .L3194
	.byte 0x1e
	.uaword .L3151
	.uaword .L3193
	.byte 0x1d
	.ascii "vLower\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0c,0x02,0x39
	.byte 0x03,0x91,0x84,0x7d,0x1d
	.ascii "fsx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x02,0x3a
	.byte 0x03,0x91,0x80,0x7d,0x1e
	.uaword .L3166
	.uaword .L3184
	.byte 0x1d
	.ascii "z0\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x02,0x5f
	.byte 0x03,0x91,0xfc,0x7c,0x1d
	.ascii "tmp\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0c,0x02,0x5f
	.byte 0x03,0x91,0xf8,0x7c,0x00,0x00,0x00,0x00
	.byte 0x1e
	.uaword .L3224
	.uaword .L3355
	.byte 0x1e
	.uaword .L3230
	.uaword .L3352
	.byte 0x1e
	.uaword .L3231
	.uaword .L3351
	.byte 0x1d
	.ascii "ffz\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x02,0xde
	.byte 0x03,0x91,0x84,0x7d,0x1d
	.ascii "ffr\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x02,0xe2
	.byte 0x03,0x91,0x80,0x7d,0x1d
	.ascii "ffg\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x02,0xe2
	.byte 0x03,0x91,0xfc,0x7c,0x1d
	.ascii "ffb\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x02,0xe2
	.byte 0x03,0x91,0xf8,0x7c,0x1d
	.ascii "ffa\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x02,0xe5
	.byte 0x03,0x91,0xf4,0x7c,0x1d
	.ascii "left\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0c,0x02,0xf3
	.byte 0x03,0x91,0xf0,0x7c,0x1d
	.ascii "right\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0c,0x02,0xf4
	.byte 0x03,0x91,0xec,0x7c,0x1e
	.uaword .L3237
	.uaword .L3283
	.byte 0x1d
	.ascii "ffrend\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x02,0xf9
	.byte 0x03,0x91,0xe8,0x7c,0x1d
	.ascii "ffgend\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x02,0xfa
	.byte 0x03,0x91,0xe4,0x7c,0x1d
	.ascii "ffbend\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x02,0xfb
	.byte 0x03,0x91,0xe0,0x7c,0x00,0x1e
	.uaword .L3284
	.uaword .L3300
	.byte 0x1d
	.ascii "ffaend\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0c,0x03,0x06
	.byte 0x03,0x91,0xe8,0x7c,0x00,0x1e
	.uaword .L3301
	.uaword .L3322
	.byte 0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0c,0x03,0x0f
	.byte 0x03,0x91,0xe8,0x7c,0x1d
	.ascii "len\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0c,0x03,0x0f
	.byte 0x03,0x91,0xe4,0x7c,0x1d
	.ascii "img\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x0c,0x03,0x0f
	.byte 0x03,0x91,0xe0,0x7c,0x1e
	.uaword .L3303
	.uaword .L3321
	.byte 0x1e
	.uaword .L3308
	.uaword .L3319
	.byte 0x1e
	.uaword .L3309
	.uaword .L3318
	.byte 0x1d
	.ascii "z\0"
	.byte 0x00,0x00,0x65,0x67,0x01,0x0c,0x03,0x0f
	.byte 0x03,0x91,0xde,0x7c,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x03,0x00,0x00,0x01,0x03
	.ascii "GLfixed\0"
	.byte 0x0d,0x05,0x00,0x00,0xcc,0x15,0x1c
	.ascii "flat_color_z_triangle\0"
	.byte 0x03,0x01,0x05,0x5f
	.uaword flat_color_z_triangle
	.uaword .L3780
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xdc,0x8d
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x05,0x5d,0x03,0x91,0xc4,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "v0\0"
	.byte 0x01,0x05,0x5d,0x03,0x91,0xc8,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "v1\0"
	.byte 0x01,0x05,0x5d,0x03,0x91,0xcc,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "v2\0"
	.byte 0x01,0x05,0x5e,0x03,0x91,0xd0,0x00,0x1b
	.byte 0x00,0x00,0x01,0x33
	.ascii "pv\0"
	.byte 0x01,0x05,0x5e,0x03,0x91,0xd4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x05,0x60
	.byte 0x02,0x91,0x7c,0x1e
	.uaword .L3372
	.uaword .L3778
	.byte 0x22,0x28,0x0e,0x0b
	.ascii "v0\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x00,0x0b
	.ascii "v1\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x04,0x0b
	.ascii "dx\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x08,0x0b
	.ascii "dy\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x0c,0x0b
	.ascii "fdxdy\0"
	.byte 0x00,0x00,0xd5,0x3a,0x02,0x23,0x10,0x0b
	.ascii "fsx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x02,0x23,0x14,0x0b
	.ascii "fsy\0"
	.byte 0x00,0x00,0xd5,0x3a,0x02,0x23,0x18,0x0b
	.ascii "adjy\0"
	.byte 0x00,0x00,0x01,0x49,0x02,0x23,0x1c,0x0b
	.ascii "lines\0"
	.byte 0x00,0x00,0x01,0x0a,0x02,0x23,0x20,0x0b
	.ascii "fx0\0"
	.byte 0x00,0x00,0xd5,0x3a,0x02,0x23,0x24,0x00
	.byte 0x03,0x00,0x00,0xd5,0xe0
	.ascii "EdgeT\0"
	.byte 0x0e,0x17
	.ascii "VB\0"
	.byte 0x00,0x00,0x97,0xf1,0x01,0x0e,0x88,0x02
	.byte 0x91,0x78,0x17
	.ascii "eMaj\0"
	.byte 0x00,0x00,0xd6,0x5d,0x01,0x0e,0x89,0x02
	.byte 0x91,0x50,0x17
	.ascii "eTop\0"
	.byte 0x00,0x00,0xd6,0x5d,0x01,0x0e,0x89,0x03
	.byte 0x91,0xa8,0x7f,0x17
	.ascii "eBot\0"
	.byte 0x00,0x00,0xd6,0x5d,0x01,0x0e,0x89,0x03
	.byte 0x91,0x80,0x7f,0x17
	.ascii "oneOverArea\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0x8a,0x03
	.byte 0x91,0xfc,0x7e,0x17
	.ascii "vMin\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0e,0x8b,0x03
	.byte 0x91,0xf8,0x7e,0x17
	.ascii "vMid\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0e,0x8b,0x03
	.byte 0x91,0xf4,0x7e,0x17
	.ascii "vMax\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0e,0x8b,0x03
	.byte 0x91,0xf0,0x7e,0x1e
	.uaword .L3374
	.uaword .L3450
	.byte 0x17
	.ascii "y0\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0x8f,0x03
	.byte 0x91,0xec,0x7e,0x17
	.ascii "y1\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0x90,0x03
	.byte 0x91,0xe8,0x7e,0x17
	.ascii "y2\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0x91,0x03
	.byte 0x91,0xe4,0x7e,0x00,0x1e
	.uaword .L3460
	.uaword .L3474
	.byte 0x17
	.ascii "area\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0xba,0x03
	.byte 0x91,0xec,0x7e,0x00,0x1e
	.uaword .L3475
	.uaword .L3535
	.byte 0x17
	.ascii "vMin_fx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0xc4,0x03
	.byte 0x91,0xec,0x7e,0x17
	.ascii "vMin_fy\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0xc5,0x03
	.byte 0x91,0xe8,0x7e,0x17
	.ascii "vMid_fx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0xc6,0x03
	.byte 0x91,0xe4,0x7e,0x17
	.ascii "vMid_fy\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0xc7,0x03
	.byte 0x91,0xe0,0x7e,0x17
	.ascii "vMax_fy\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0xc8,0x03
	.byte 0x91,0xdc,0x7e,0x1e
	.uaword .L3483
	.uaword .L3502
	.byte 0x1e
	.uaword .L3487
	.uaword .L3495
	.byte 0x1e
	.uaword .L3488
	.uaword .L3494
	.byte 0x17
	.ascii "dxdy\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0xcd,0x03
	.byte 0x91,0xd8,0x7e,0x00,0x00,0x00,0x1e
	.uaword .L3505
	.uaword .L3518
	.byte 0x1e
	.uaword .L3509
	.uaword .L3517
	.byte 0x1e
	.uaword .L3510
	.uaword .L3516
	.byte 0x17
	.ascii "dxdy\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0xda,0x03
	.byte 0x91,0xd8,0x7e,0x00,0x00,0x00,0x1e
	.uaword .L3521
	.uaword .L3534
	.byte 0x1e
	.uaword .L3525
	.uaword .L3533
	.byte 0x1e
	.uaword .L3526
	.uaword .L3532
	.byte 0x17
	.ascii "dxdy\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0xe4,0x03
	.byte 0x91,0xd8,0x7e,0x00,0x00,0x00,0x00,0x1e
	.uaword .L3536
	.uaword .L3777
	.byte 0x1d
	.ascii "ltor\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0e,0x01,0x0f
	.byte 0x03,0x91,0xec,0x7e,0x1d
	.ascii "dzdx\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0x01,0x11
	.byte 0x03,0x91,0xe8,0x7e,0x1d
	.ascii "dzdy\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0x01,0x11
	.byte 0x03,0x91,0xe4,0x7e,0x1d
	.ascii "fdzdx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0x11
	.byte 0x03,0x91,0xe0,0x7e,0x1d
	.ascii "r\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x0e,0x01,0x30
	.byte 0x03,0x91,0xdf,0x7e,0x1d
	.ascii "g\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x0e,0x01,0x30
	.byte 0x03,0x91,0xde,0x7e,0x1d
	.ascii "b\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x0e,0x01,0x30
	.byte 0x03,0x91,0xdd,0x7e,0x1d
	.ascii "a\0"
	.byte 0x00,0x00,0x31,0x2a,0x01,0x0e,0x01,0x30
	.byte 0x03,0x91,0xdc,0x7e,0x1d
	.ascii "pixel\0"
	.byte 0x00,0x00,0x01,0x33,0x01,0x0e,0x01,0x30
	.byte 0x03,0x91,0xd8,0x7e,0x1e
	.uaword .L3539
	.uaword .L3563
	.byte 0x1d
	.ascii "eMaj_dz\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0x01,0x38
	.byte 0x03,0x91,0xd4,0x7e,0x1d
	.ascii "eBot_dz\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0x01,0x38
	.byte 0x03,0x91,0xd0,0x7e,0x00,0x1e
	.uaword .L3564
	.uaword .L3776
	.byte 0x1d
	.ascii "subTriangle\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0e,0x01,0xe4
	.byte 0x03,0x91,0xd4,0x7e,0x1d
	.ascii "fx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0xe5
	.byte 0x03,0x91,0xd0,0x7e,0x1d
	.ascii "fxLeftEdge\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0xe5
	.byte 0x03,0x91,0xcc,0x7e,0x1d
	.ascii "fxRightEdge\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0xe5
	.byte 0x03,0x91,0xc8,0x7e,0x1d
	.ascii "fdxLeftEdge\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0xe5
	.byte 0x03,0x91,0xc4,0x7e,0x1d
	.ascii "fdxRightEdge\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0xe5
	.byte 0x03,0x91,0xc0,0x7e,0x1d
	.ascii "fdxOuter\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0xe6
	.byte 0x03,0x91,0xbc,0x7e,0x1d
	.ascii "idxOuter\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0e,0x01,0xe7
	.byte 0x03,0x91,0xb8,0x7e,0x1d
	.ascii "dxOuter\0"
	.byte 0x00,0x00,0x01,0x40,0x01,0x0e,0x01,0xe8
	.byte 0x03,0x91,0xb4,0x7e,0x1d
	.ascii "fError\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0xe9
	.byte 0x03,0x91,0xb0,0x7e,0x1d
	.ascii "fdError\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0xe9
	.byte 0x03,0x91,0xac,0x7e,0x1d
	.ascii "adjx\0"
	.byte 0x00,0x00,0x01,0x40,0x01,0x0e,0x01,0xea
	.byte 0x03,0x91,0xa8,0x7e,0x1d
	.ascii "adjy\0"
	.byte 0x00,0x00,0x01,0x40,0x01,0x0e,0x01,0xea
	.byte 0x03,0x91,0xa4,0x7e,0x1d
	.ascii "fy\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0xeb
	.byte 0x03,0x91,0xa0,0x7e,0x1d
	.ascii "iy\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0e,0x01,0xec
	.byte 0x03,0x91,0x9c,0x7e,0x1d
	.ascii "zRow\0"
	.byte 0x00,0x00,0x65,0x75,0x01,0x0e,0x01,0xf2
	.byte 0x03,0x91,0x98,0x7e,0x1d
	.ascii "dZRowOuter\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0e,0x01,0xf3
	.byte 0x03,0x91,0x94,0x7e,0x1d
	.ascii "dZRowInner\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0e,0x01,0xf3
	.byte 0x03,0x91,0x90,0x7e,0x1d
	.ascii "fz\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0xf4
	.byte 0x03,0x91,0x8c,0x7e,0x1d
	.ascii "fdzOuter\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0xf4
	.byte 0x03,0x91,0x88,0x7e,0x1d
	.ascii "fdzInner\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x01,0xf4
	.byte 0x03,0x91,0x84,0x7e,0x1e
	.uaword .L3565
	.uaword .L3775
	.byte 0x1e
	.uaword .L3571
	.uaword .L3772
	.byte 0x1e
	.uaword .L3572
	.uaword .L3771
	.byte 0x1d
	.ascii "eLeft\0"
	.byte 0x00,0x00,0xdc,0x8d,0x01,0x0e,0x02,0x10
	.byte 0x03,0x91,0x80,0x7e,0x1d
	.ascii "eRight\0"
	.byte 0x00,0x00,0xdc,0x8d,0x01,0x0e,0x02,0x10
	.byte 0x03,0x91,0xfc,0x7d,0x1d
	.ascii "setupLeft\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0e,0x02,0x11
	.byte 0x03,0x91,0xf8,0x7d,0x1d
	.ascii "setupRight\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0e,0x02,0x11
	.byte 0x03,0x91,0xf4,0x7d,0x1d
	.ascii "lines\0"
	.byte 0x00,0x00,0x01,0x03,0x01,0x0e,0x02,0x12
	.byte 0x03,0x91,0xf0,0x7d,0x1e
	.uaword .L3642
	.uaword .L3684
	.byte 0x1e
	.uaword .L3647
	.uaword .L3683
	.byte 0x1e
	.uaword .L3648
	.uaword .L3682
	.byte 0x1d
	.ascii "vLower\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0e,0x02,0x39
	.byte 0x03,0x91,0xec,0x7d,0x1d
	.ascii "fsx\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x02,0x3a
	.byte 0x03,0x91,0xe8,0x7d,0x1e
	.uaword .L3663
	.uaword .L3681
	.byte 0x1d
	.ascii "z0\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0x02,0x5f
	.byte 0x03,0x91,0xe4,0x7d,0x1d
	.ascii "tmp\0"
	.byte 0x00,0x00,0x01,0x49,0x01,0x0e,0x02,0x5f
	.byte 0x03,0x91,0xe0,0x7d,0x00,0x00,0x00,0x00
	.byte 0x1e
	.uaword .L3709
	.uaword .L3770
	.byte 0x1e
	.uaword .L3715
	.uaword .L3767
	.byte 0x1e
	.uaword .L3716
	.uaword .L3766
	.byte 0x1d
	.ascii "ffz\0"
	.byte 0x00,0x00,0xd5,0x3a,0x01,0x0e,0x02,0xde
	.byte 0x03,0x91,0xec,0x7d,0x1d
	.ascii "left\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0e,0x02,0xf3
	.byte 0x03,0x91,0xe8,0x7d,0x1d
	.ascii "right\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0e,0x02,0xf4
	.byte 0x03,0x91,0xe4,0x7d,0x1e
	.uaword .L3720
	.uaword .L3741
	.byte 0x1d
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0e,0x03,0x0f
	.byte 0x03,0x91,0xe0,0x7d,0x1d
	.ascii "len\0"
	.byte 0x00,0x00,0x01,0x0a,0x01,0x0e,0x03,0x0f
	.byte 0x03,0x91,0xdc,0x7d,0x1d
	.ascii "img\0"
	.byte 0x00,0x00,0x93,0x79,0x01,0x0e,0x03,0x0f
	.byte 0x03,0x91,0xd8,0x7d,0x1e
	.uaword .L3722
	.uaword .L3740
	.byte 0x1e
	.uaword .L3727
	.uaword .L3738
	.byte 0x1e
	.uaword .L3728
	.uaword .L3737
	.byte 0x1d
	.ascii "z\0"
	.byte 0x00,0x00,0x65,0x67,0x01,0x0e,0x03,0x0f
	.byte 0x03,0x91,0xd6,0x7d,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x05,0x00,0x00,0xd6,0x5d,0x21
	.ascii "choose_triangle_function\0"
	.byte 0x03,0x01,0x05,0x7f
	.uaword choose_triangle_function
	.uaword .L3846
	.byte 0x01,0x6e,0x01,0x00,0x00,0x6d,0x49,0x01
	.byte 0x00,0x00,0xdc,0xe8,0x1b,0x00,0x00,0x98
	.byte 0x1a
	.ascii "ctx\0"
	.byte 0x01,0x05,0x7e,0x03,0x91,0xc4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x05,0x80
	.byte 0x02,0x91,0x78,0x00,0x23
	.ascii "renderer_string\0"
	.byte 0x03,0x01,0x05,0x99
	.uaword renderer_string
	.uaword .L3855
	.byte 0x01,0x6e,0x01,0x00,0x00,0xdd,0x12,0x01
	.byte 0x0f,0x00,0x00,0x66,0x9b,0x05,0x00,0x00
	.byte 0xdd,0x0d,0x1c
	.ascii "osmesa_setup_DD_pointers\0"
	.byte 0x03,0x01,0x05,0x9f
	.uaword osmesa_setup_DD_pointers
	.uaword .L3909
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xdd,0x69
	.byte 0x1b,0x00,0x00,0x98,0x1a
	.ascii "ctx\0"
	.byte 0x01,0x05,0x9e,0x03,0x91,0xc4,0x00,0x1d
	.ascii "osmesa\0"
	.byte 0x00,0x00,0x99,0x85,0x01,0x01,0x05,0xa0
	.byte 0x02,0x91,0x7c,0x00,0x24
	.ascii "gl_Viewport\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xdd,0x98
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x03,0x11,0x00,0x00,0x01
	.byte 0x03,0x00,0x0f,0x00,0x00,0x66,0x9b,0x05
	.byte 0x00,0x00,0xdd,0x98,0x24
	.ascii "gl_error\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xdd,0xc4
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0x01,0x70,0x11,0x00,0x00,0xdd,0x9d,0x00
	.byte 0x05,0x00,0x00,0x65,0xab,0x24
	.ascii "gl_make_current\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xdd,0xed
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x11,0x00,0x00
	.byte 0xdd,0xc4,0x00,0x24
	.ascii "gl_destroy_framebuffer\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xde,0x13
	.byte 0x11,0x00,0x00,0xdd,0xc4,0x00,0x05,0x00
	.byte 0x00,0x63,0xab,0x25
	.ascii "gl_create_framebuffer\0"
	.byte 0x01,0x01,0x01,0x00,0x00,0x66,0x96,0x01
	.byte 0x00,0x00,0xde,0x41,0x11,0x00,0x00,0xde
	.byte 0x13,0x00,0x24
	.ascii "gl_destroy_context\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xde,0x63
	.byte 0x11,0x00,0x00,0x3c,0x1c,0x00,0x05,0x00
	.byte 0x00,0x63,0xab,0x05,0x00,0x00,0x31,0x3d
	.byte 0x25
	.ascii "gl_create_context\0"
	.byte 0x01,0x01,0x01,0x00,0x00,0x98,0x1a,0x01
	.byte 0x00,0x00,0xde,0x9c,0x11,0x00,0x00,0xde
	.byte 0x63,0x11,0x00,0x00,0x98,0x1a,0x11,0x00
	.byte 0x00,0xde,0x68,0x00,0x05,0x00,0x00,0x63
	.byte 0xab,0x24
	.ascii "gl_destroy_visual\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xde,0xc2
	.byte 0x11,0x00,0x00,0xde,0x9c,0x00,0x25
	.ascii "gl_create_visual\0"
	.byte 0x01,0x01,0x01,0x00,0x00,0x65,0x62,0x01
	.byte 0x00,0x00,0xdf,0x2c,0x11,0x00,0x00,0x31
	.byte 0x19,0x11,0x00,0x00,0x31,0x19,0x11,0x00
	.byte 0x00,0x31,0x19,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x11
	.byte 0x00,0x00,0x01,0x40,0x11,0x00,0x00,0x01
	.byte 0x40,0x11,0x00,0x00,0x01,0x40,0x11,0x00
	.byte 0x00,0x01,0x40,0x11,0x00,0x00,0x01,0x03
	.byte 0x11,0x00,0x00,0x01,0x03,0x11,0x00,0x00
	.byte 0x01,0x03,0x11,0x00,0x00,0x01,0x03,0x00
	.byte 0x25
	.ascii "memset\0"
	.byte 0x01,0x01,0x01,0x00,0x00,0x31,0x45,0x01
	.byte 0x00,0x00,0xdf,0x50,0x11,0x00,0x00,0x31
	.byte 0x45,0x11,0x00,0x00,0x01,0x03,0x11,0x00
	.byte 0x00,0x01,0x27,0x00,0x24
	.ascii "free\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xdf,0x64
	.byte 0x11,0x00,0x00,0x31,0x45,0x00,0x26
	.ascii "calloc\0"
	.byte 0x01,0x01,0x01,0x00,0x00,0x31,0x45,0x01
	.byte 0x11,0x00,0x00,0x01,0x27,0x11,0x00,0x00
	.byte 0x01,0x27,0x00,0x00,0x00,0x00,0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_line
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=0, off=253, siz=4, lab1=OSMesaCreateContext, lab2=, loff=0
!   reloc[1]: knd=0, off=260, siz=4, lab1=.L16, lab2=, loff=0
!   reloc[2]: knd=0, off=272, siz=4, lab1=.L17, lab2=, loff=0
!   reloc[3]: knd=0, off=280, siz=4, lab1=.L18, lab2=, loff=0
!   reloc[4]: knd=0, off=288, siz=4, lab1=.L19, lab2=, loff=0
!   reloc[5]: knd=0, off=296, siz=4, lab1=.L20, lab2=, loff=0
!   reloc[6]: knd=0, off=304, siz=4, lab1=.L23, lab2=, loff=0
!   reloc[7]: knd=0, off=312, siz=4, lab1=.L27, lab2=, loff=0
!   reloc[8]: knd=0, off=320, siz=4, lab1=.L28, lab2=, loff=0
!   reloc[9]: knd=0, off=328, siz=4, lab1=.L29, lab2=, loff=0
!   reloc[10]: knd=0, off=336, siz=4, lab1=.L30, lab2=, loff=0
!   reloc[11]: knd=0, off=344, siz=4, lab1=.L37, lab2=, loff=0
!   reloc[12]: knd=0, off=352, siz=4, lab1=.L41, lab2=, loff=0
!   reloc[13]: knd=0, off=360, siz=4, lab1=.L42, lab2=, loff=0
!   reloc[14]: knd=0, off=368, siz=4, lab1=.L45, lab2=, loff=0
!   reloc[15]: knd=0, off=376, siz=4, lab1=.L49, lab2=, loff=0
!   reloc[16]: knd=0, off=384, siz=4, lab1=.L50, lab2=, loff=0
!   reloc[17]: knd=0, off=392, siz=4, lab1=.L51, lab2=, loff=0
!   reloc[18]: knd=0, off=400, siz=4, lab1=.L52, lab2=, loff=0
!   reloc[19]: knd=0, off=408, siz=4, lab1=.L58, lab2=, loff=0
!   reloc[20]: knd=0, off=418, siz=4, lab1=.L59, lab2=, loff=0
!   reloc[21]: knd=0, off=426, siz=4, lab1=.L60, lab2=, loff=0
!   reloc[22]: knd=0, off=434, siz=4, lab1=.L61, lab2=, loff=0
!   reloc[23]: knd=0, off=442, siz=4, lab1=.L65, lab2=, loff=0
!   reloc[24]: knd=0, off=450, siz=4, lab1=.L72, lab2=, loff=0
!   reloc[25]: knd=0, off=458, siz=4, lab1=.L76, lab2=, loff=0
!   reloc[26]: knd=0, off=466, siz=4, lab1=.L77, lab2=, loff=0
!   reloc[27]: knd=0, off=474, siz=4, lab1=.L80, lab2=, loff=0
!   reloc[28]: knd=0, off=482, siz=4, lab1=.L84, lab2=, loff=0
!   reloc[29]: knd=0, off=490, siz=4, lab1=.L85, lab2=, loff=0
!   reloc[30]: knd=0, off=498, siz=4, lab1=.L86, lab2=, loff=0
!   reloc[31]: knd=0, off=506, siz=4, lab1=.L87, lab2=, loff=0
!   reloc[32]: knd=0, off=514, siz=4, lab1=.L93, lab2=, loff=0
!   reloc[33]: knd=0, off=524, siz=4, lab1=.L94, lab2=, loff=0
!   reloc[34]: knd=0, off=532, siz=4, lab1=.L95, lab2=, loff=0
!   reloc[35]: knd=0, off=540, siz=4, lab1=.L96, lab2=, loff=0
!   reloc[36]: knd=0, off=548, siz=4, lab1=.L100, lab2=, loff=0
!   reloc[37]: knd=0, off=556, siz=4, lab1=.L107, lab2=, loff=0
!   reloc[38]: knd=0, off=564, siz=4, lab1=.L111, lab2=, loff=0
!   reloc[39]: knd=0, off=572, siz=4, lab1=.L112, lab2=, loff=0
!   reloc[40]: knd=0, off=580, siz=4, lab1=.L115, lab2=, loff=0
!   reloc[41]: knd=0, off=588, siz=4, lab1=.L119, lab2=, loff=0
!   reloc[42]: knd=0, off=596, siz=4, lab1=.L120, lab2=, loff=0
!   reloc[43]: knd=0, off=604, siz=4, lab1=.L121, lab2=, loff=0
!   reloc[44]: knd=0, off=612, siz=4, lab1=.L122, lab2=, loff=0
!   reloc[45]: knd=0, off=620, siz=4, lab1=.L128, lab2=, loff=0
!   reloc[46]: knd=0, off=630, siz=4, lab1=.L129, lab2=, loff=0
!   reloc[47]: knd=0, off=638, siz=4, lab1=.L130, lab2=, loff=0
!   reloc[48]: knd=0, off=646, siz=4, lab1=.L131, lab2=, loff=0
!   reloc[49]: knd=0, off=654, siz=4, lab1=.L135, lab2=, loff=0
!   reloc[50]: knd=0, off=662, siz=4, lab1=.L142, lab2=, loff=0
!   reloc[51]: knd=0, off=670, siz=4, lab1=.L146, lab2=, loff=0
!   reloc[52]: knd=0, off=678, siz=4, lab1=.L147, lab2=, loff=0
!   reloc[53]: knd=0, off=686, siz=4, lab1=.L148, lab2=, loff=0
!   reloc[54]: knd=0, off=694, siz=4, lab1=.L149, lab2=, loff=0
!   reloc[55]: knd=0, off=702, siz=4, lab1=.L150, lab2=, loff=0
!   reloc[56]: knd=0, off=710, siz=4, lab1=.L151, lab2=, loff=0
!   reloc[57]: knd=0, off=718, siz=4, lab1=.L152, lab2=, loff=0
!   reloc[58]: knd=0, off=726, siz=4, lab1=.L153, lab2=, loff=0
!   reloc[59]: knd=0, off=734, siz=4, lab1=.L154, lab2=, loff=0
!   reloc[60]: knd=0, off=742, siz=4, lab1=.L155, lab2=, loff=0
!   reloc[61]: knd=0, off=750, siz=4, lab1=.L156, lab2=, loff=0
!   reloc[62]: knd=0, off=758, siz=4, lab1=.L163, lab2=, loff=0
!   reloc[63]: knd=0, off=766, siz=4, lab1=.L167, lab2=, loff=0
!   reloc[64]: knd=0, off=774, siz=4, lab1=.L168, lab2=, loff=0
!   reloc[65]: knd=0, off=782, siz=4, lab1=.L169, lab2=, loff=0
!   reloc[66]: knd=0, off=790, siz=4, lab1=.L170, lab2=, loff=0
!   reloc[67]: knd=0, off=798, siz=4, lab1=.L171, lab2=, loff=0
!   reloc[68]: knd=0, off=806, siz=4, lab1=.L172, lab2=, loff=0
!   reloc[69]: knd=0, off=814, siz=4, lab1=.L173, lab2=, loff=0
!   reloc[70]: knd=0, off=822, siz=4, lab1=.L174, lab2=, loff=0
!   reloc[71]: knd=0, off=830, siz=4, lab1=.L175, lab2=, loff=0
!   reloc[72]: knd=0, off=838, siz=4, lab1=.L176, lab2=, loff=0
!   reloc[73]: knd=0, off=846, siz=4, lab1=.L177, lab2=, loff=0
!   reloc[74]: knd=0, off=854, siz=4, lab1=.L183, lab2=, loff=0
!   reloc[75]: knd=0, off=864, siz=4, lab1=.L197, lab2=, loff=0
!   reloc[76]: knd=0, off=874, siz=4, lab1=.L200, lab2=, loff=0
!   reloc[77]: knd=0, off=882, siz=4, lab1=.L204, lab2=, loff=0
!   reloc[78]: knd=0, off=892, siz=4, lab1=.L207, lab2=, loff=0
!   reloc[79]: knd=0, off=900, siz=4, lab1=.L211, lab2=, loff=0
!   reloc[80]: knd=0, off=908, siz=4, lab1=.L215, lab2=, loff=0
!   reloc[81]: knd=0, off=918, siz=4, lab1=.L221, lab2=, loff=0
!   reloc[82]: knd=0, off=926, siz=4, lab1=.L225, lab2=, loff=0
!   reloc[83]: knd=0, off=934, siz=4, lab1=.L226, lab2=, loff=0
!   reloc[84]: knd=0, off=942, siz=4, lab1=.L227, lab2=, loff=0
!   reloc[85]: knd=0, off=950, siz=4, lab1=.L231, lab2=, loff=0
!   reloc[86]: knd=0, off=958, siz=4, lab1=.L234, lab2=, loff=0
!   reloc[87]: knd=0, off=966, siz=4, lab1=.L238, lab2=, loff=0
!   reloc[88]: knd=0, off=974, siz=4, lab1=.L239, lab2=, loff=0
!   reloc[89]: knd=0, off=982, siz=4, lab1=.L240, lab2=, loff=0
!   reloc[90]: knd=0, off=990, siz=4, lab1=.L241, lab2=, loff=0
!   reloc[91]: knd=0, off=998, siz=4, lab1=.L245, lab2=, loff=0
!   reloc[92]: knd=0, off=1006, siz=4, lab1=.L246, lab2=, loff=0
!   reloc[93]: knd=0, off=1014, siz=4, lab1=.L247, lab2=, loff=0
!   reloc[94]: knd=0, off=1022, siz=4, lab1=.L248, lab2=, loff=0
!   reloc[95]: knd=0, off=1030, siz=4, lab1=.L249, lab2=, loff=0
!   reloc[96]: knd=0, off=1038, siz=4, lab1=.L250, lab2=, loff=0
!   reloc[97]: knd=0, off=1046, siz=4, lab1=.L251, lab2=, loff=0
!   reloc[98]: knd=0, off=1054, siz=4, lab1=.L252, lab2=, loff=0
!   reloc[99]: knd=0, off=1062, siz=4, lab1=.L253, lab2=, loff=0
!   reloc[100]: knd=0, off=1070, siz=4, lab1=.L254, lab2=, loff=0
!   reloc[101]: knd=0, off=1078, siz=4, lab1=.L255, lab2=, loff=0
!   reloc[102]: knd=0, off=1086, siz=4, lab1=.L256, lab2=, loff=0
!   reloc[103]: knd=0, off=1094, siz=4, lab1=.L257, lab2=, loff=0
!   reloc[104]: knd=0, off=1102, siz=4, lab1=.L258, lab2=, loff=0
!   reloc[105]: knd=0, off=1110, siz=4, lab1=.L259, lab2=, loff=0
!   reloc[106]: knd=0, off=1118, siz=4, lab1=.L260, lab2=, loff=0
!   reloc[107]: knd=0, off=1126, siz=4, lab1=.L264, lab2=, loff=0
!   reloc[108]: knd=0, off=1134, siz=4, lab1=.L265, lab2=, loff=0
!   reloc[109]: knd=0, off=1147, siz=4, lab1=OSMesaDestroyContext, lab2=, loff=0
!   reloc[110]: knd=0, off=1154, siz=4, lab1=.L274, lab2=, loff=0
!   reloc[111]: knd=0, off=1166, siz=4, lab1=.L278, lab2=, loff=0
!   reloc[112]: knd=0, off=1174, siz=4, lab1=.L279, lab2=, loff=0
!   reloc[113]: knd=0, off=1182, siz=4, lab1=.L280, lab2=, loff=0
!   reloc[114]: knd=0, off=1190, siz=4, lab1=.L281, lab2=, loff=0
!   reloc[115]: knd=0, off=1198, siz=4, lab1=.L285, lab2=, loff=0
!   reloc[116]: knd=0, off=1211, siz=4, lab1=compute_row_addresses, lab2=, loff=0
!   reloc[117]: knd=0, off=1218, siz=4, lab1=.L294, lab2=, loff=0
!   reloc[118]: knd=0, off=1230, siz=4, lab1=.L300, lab2=, loff=0
!   reloc[119]: knd=0, off=1238, siz=4, lab1=.L304, lab2=, loff=0
!   reloc[120]: knd=0, off=1246, siz=4, lab1=.L306, lab2=, loff=0
!   reloc[121]: knd=0, off=1254, siz=4, lab1=.L313, lab2=, loff=0
!   reloc[122]: knd=0, off=1262, siz=4, lab1=.L316, lab2=, loff=0
!   reloc[123]: knd=0, off=1270, siz=4, lab1=.L326, lab2=, loff=0
!   reloc[124]: knd=0, off=1280, siz=4, lab1=.L332, lab2=, loff=0
!   reloc[125]: knd=0, off=1288, siz=4, lab1=.L334, lab2=, loff=0
!   reloc[126]: knd=0, off=1296, siz=4, lab1=.L341, lab2=, loff=0
!   reloc[127]: knd=0, off=1304, siz=4, lab1=.L344, lab2=, loff=0
!   reloc[128]: knd=0, off=1312, siz=4, lab1=.L352, lab2=, loff=0
!   reloc[129]: knd=0, off=1322, siz=4, lab1=.L354, lab2=, loff=0
!   reloc[130]: knd=0, off=1330, siz=4, lab1=.L361, lab2=, loff=0
!   reloc[131]: knd=0, off=1338, siz=4, lab1=.L364, lab2=, loff=0
!   reloc[132]: knd=0, off=1346, siz=4, lab1=.L380, lab2=, loff=0
!   reloc[133]: knd=0, off=1356, siz=4, lab1=.L384, lab2=, loff=0
!   reloc[134]: knd=0, off=1364, siz=4, lab1=.L386, lab2=, loff=0
!   reloc[135]: knd=0, off=1372, siz=4, lab1=.L393, lab2=, loff=0
!   reloc[136]: knd=0, off=1380, siz=4, lab1=.L396, lab2=, loff=0
!   reloc[137]: knd=0, off=1388, siz=4, lab1=.L406, lab2=, loff=0
!   reloc[138]: knd=0, off=1398, siz=4, lab1=.L412, lab2=, loff=0
!   reloc[139]: knd=0, off=1406, siz=4, lab1=.L414, lab2=, loff=0
!   reloc[140]: knd=0, off=1414, siz=4, lab1=.L421, lab2=, loff=0
!   reloc[141]: knd=0, off=1422, siz=4, lab1=.L424, lab2=, loff=0
!   reloc[142]: knd=0, off=1430, siz=4, lab1=.L432, lab2=, loff=0
!   reloc[143]: knd=0, off=1440, siz=4, lab1=.L434, lab2=, loff=0
!   reloc[144]: knd=0, off=1448, siz=4, lab1=.L441, lab2=, loff=0
!   reloc[145]: knd=0, off=1456, siz=4, lab1=.L444, lab2=, loff=0
!   reloc[146]: knd=0, off=1464, siz=4, lab1=.L456, lab2=, loff=0
!   reloc[147]: knd=0, off=1479, siz=4, lab1=OSMesaMakeCurrent, lab2=, loff=0
!   reloc[148]: knd=0, off=1486, siz=4, lab1=.L465, lab2=, loff=0
!   reloc[149]: knd=0, off=1498, siz=4, lab1=.L476, lab2=, loff=0
!   reloc[150]: knd=0, off=1506, siz=4, lab1=.L480, lab2=, loff=0
!   reloc[151]: knd=0, off=1516, siz=4, lab1=.L481, lab2=, loff=0
!   reloc[152]: knd=0, off=1524, siz=4, lab1=.L482, lab2=, loff=0
!   reloc[153]: knd=0, off=1532, siz=4, lab1=.L483, lab2=, loff=0
!   reloc[154]: knd=0, off=1540, siz=4, lab1=.L486, lab2=, loff=0
!   reloc[155]: knd=0, off=1548, siz=4, lab1=.L489, lab2=, loff=0
!   reloc[156]: knd=0, off=1556, siz=4, lab1=.L493, lab2=, loff=0
!   reloc[157]: knd=0, off=1564, siz=4, lab1=.L496, lab2=, loff=0
!   reloc[158]: knd=0, off=1572, siz=4, lab1=.L497, lab2=, loff=0
!   reloc[159]: knd=0, off=1582, siz=4, lab1=.L498, lab2=, loff=0
!   reloc[160]: knd=0, off=1592, siz=4, lab1=.L501, lab2=, loff=0
!   reloc[161]: knd=0, off=1602, siz=4, lab1=.L505, lab2=, loff=0
!   reloc[162]: knd=0, off=1610, siz=4, lab1=.L506, lab2=, loff=0
!   reloc[163]: knd=0, off=1618, siz=4, lab1=.L507, lab2=, loff=0
!   reloc[164]: knd=0, off=1626, siz=4, lab1=.L511, lab2=, loff=0
!   reloc[165]: knd=0, off=1636, siz=4, lab1=.L512, lab2=, loff=0
!   reloc[166]: knd=0, off=1649, siz=4, lab1=OSMesaGetCurrentContext, lab2=, loff=0
!   reloc[167]: knd=0, off=1656, siz=4, lab1=.L519, lab2=, loff=0
!   reloc[168]: knd=0, off=1668, siz=4, lab1=.L520, lab2=, loff=0
!   reloc[169]: knd=0, off=1681, siz=4, lab1=OSMesaPixelStore, lab2=, loff=0
!   reloc[170]: knd=0, off=1688, siz=4, lab1=.L527, lab2=, loff=0
!   reloc[171]: knd=0, off=1700, siz=4, lab1=.L531, lab2=, loff=0
!   reloc[172]: knd=0, off=1708, siz=4, lab1=.L537, lab2=, loff=0
!   reloc[173]: knd=0, off=1716, siz=4, lab1=.L541, lab2=, loff=0
!   reloc[174]: knd=0, off=1724, siz=4, lab1=.L543, lab2=, loff=0
!   reloc[175]: knd=0, off=1732, siz=4, lab1=.L547, lab2=, loff=0
!   reloc[176]: knd=0, off=1740, siz=4, lab1=.L548, lab2=, loff=0
!   reloc[177]: knd=0, off=1748, siz=4, lab1=.L549, lab2=, loff=0
!   reloc[178]: knd=0, off=1756, siz=4, lab1=.L551, lab2=, loff=0
!   reloc[179]: knd=0, off=1764, siz=4, lab1=.L555, lab2=, loff=0
!   reloc[180]: knd=0, off=1772, siz=4, lab1=.L557, lab2=, loff=0
!   reloc[181]: knd=0, off=1780, siz=4, lab1=.L559, lab2=, loff=0
!   reloc[182]: knd=0, off=1788, siz=4, lab1=.L562, lab2=, loff=0
!   reloc[183]: knd=0, off=1798, siz=4, lab1=.L565, lab2=, loff=0
!   reloc[184]: knd=0, off=1808, siz=4, lab1=.L566, lab2=, loff=0
!   reloc[185]: knd=0, off=1821, siz=4, lab1=OSMesaGetIntegerv, lab2=, loff=0
!   reloc[186]: knd=0, off=1828, siz=4, lab1=.L573, lab2=, loff=0
!   reloc[187]: knd=0, off=1840, siz=4, lab1=.L577, lab2=, loff=0
!   reloc[188]: knd=0, off=1848, siz=4, lab1=.L581, lab2=, loff=0
!   reloc[189]: knd=0, off=1856, siz=4, lab1=.L582, lab2=, loff=0
!   reloc[190]: knd=0, off=1864, siz=4, lab1=.L584, lab2=, loff=0
!   reloc[191]: knd=0, off=1872, siz=4, lab1=.L585, lab2=, loff=0
!   reloc[192]: knd=0, off=1880, siz=4, lab1=.L587, lab2=, loff=0
!   reloc[193]: knd=0, off=1888, siz=4, lab1=.L588, lab2=, loff=0
!   reloc[194]: knd=0, off=1896, siz=4, lab1=.L590, lab2=, loff=0
!   reloc[195]: knd=0, off=1904, siz=4, lab1=.L591, lab2=, loff=0
!   reloc[196]: knd=0, off=1912, siz=4, lab1=.L593, lab2=, loff=0
!   reloc[197]: knd=0, off=1920, siz=4, lab1=.L594, lab2=, loff=0
!   reloc[198]: knd=0, off=1928, siz=4, lab1=.L596, lab2=, loff=0
!   reloc[199]: knd=0, off=1936, siz=4, lab1=.L597, lab2=, loff=0
!   reloc[200]: knd=0, off=1944, siz=4, lab1=.L599, lab2=, loff=0
!   reloc[201]: knd=0, off=1952, siz=4, lab1=.L601, lab2=, loff=0
!   reloc[202]: knd=0, off=1960, siz=4, lab1=.L604, lab2=, loff=0
!   reloc[203]: knd=0, off=1970, siz=4, lab1=.L607, lab2=, loff=0
!   reloc[204]: knd=0, off=1985, siz=4, lab1=OSMesaGetDepthBuffer, lab2=, loff=0
!   reloc[205]: knd=0, off=1992, siz=4, lab1=.L616, lab2=, loff=0
!   reloc[206]: knd=0, off=2004, siz=4, lab1=.L622, lab2=, loff=0
!   reloc[207]: knd=0, off=2012, siz=4, lab1=.L623, lab2=, loff=0
!   reloc[208]: knd=0, off=2020, siz=4, lab1=.L624, lab2=, loff=0
!   reloc[209]: knd=0, off=2028, siz=4, lab1=.L625, lab2=, loff=0
!   reloc[210]: knd=0, off=2036, siz=4, lab1=.L626, lab2=, loff=0
!   reloc[211]: knd=0, off=2044, siz=4, lab1=.L631, lab2=, loff=0
!   reloc[212]: knd=0, off=2054, siz=4, lab1=.L632, lab2=, loff=0
!   reloc[213]: knd=0, off=2062, siz=4, lab1=.L633, lab2=, loff=0
!   reloc[214]: knd=0, off=2070, siz=4, lab1=.L634, lab2=, loff=0
!   reloc[215]: knd=0, off=2078, siz=4, lab1=.L635, lab2=, loff=0
!   reloc[216]: knd=0, off=2086, siz=4, lab1=.L639, lab2=, loff=0
!   reloc[217]: knd=0, off=2099, siz=4, lab1=set_buffer, lab2=, loff=0
!   reloc[218]: knd=0, off=2106, siz=4, lab1=.L648, lab2=, loff=0
!   reloc[219]: knd=0, off=2118, siz=4, lab1=.L652, lab2=, loff=0
!   reloc[220]: knd=0, off=2126, siz=4, lab1=.L657, lab2=, loff=0
!   reloc[221]: knd=0, off=2136, siz=4, lab1=.L661, lab2=, loff=0
!   reloc[222]: knd=0, off=2149, siz=4, lab1=clear_index, lab2=, loff=0
!   reloc[223]: knd=0, off=2156, siz=4, lab1=.L668, lab2=, loff=0
!   reloc[224]: knd=0, off=2168, siz=4, lab1=.L669, lab2=, loff=0
!   reloc[225]: knd=0, off=2176, siz=4, lab1=.L670, lab2=, loff=0
!   reloc[226]: knd=0, off=2189, siz=4, lab1=clear_color, lab2=, loff=0
!   reloc[227]: knd=0, off=2196, siz=4, lab1=.L677, lab2=, loff=0
!   reloc[228]: knd=0, off=2208, siz=4, lab1=.L678, lab2=, loff=0
!   reloc[229]: knd=0, off=2216, siz=4, lab1=.L679, lab2=, loff=0
!   reloc[230]: knd=0, off=2229, siz=4, lab1=clear, lab2=, loff=0
!   reloc[231]: knd=0, off=2236, siz=4, lab1=.L686, lab2=, loff=0
!   reloc[232]: knd=0, off=2248, siz=4, lab1=.L689, lab2=, loff=0
!   reloc[233]: knd=0, off=2256, siz=4, lab1=.L695, lab2=, loff=0
!   reloc[234]: knd=0, off=2264, siz=4, lab1=.L699, lab2=, loff=0
!   reloc[235]: knd=0, off=2272, siz=4, lab1=.L706, lab2=, loff=0
!   reloc[236]: knd=0, off=2282, siz=4, lab1=.L713, lab2=, loff=0
!   reloc[237]: knd=0, off=2290, siz=4, lab1=.L715, lab2=, loff=0
!   reloc[238]: knd=0, off=2298, siz=4, lab1=.L722, lab2=, loff=0
!   reloc[239]: knd=0, off=2306, siz=4, lab1=.L725, lab2=, loff=0
!   reloc[240]: knd=0, off=2314, siz=4, lab1=.L730, lab2=, loff=0
!   reloc[241]: knd=0, off=2324, siz=4, lab1=.L742, lab2=, loff=0
!   reloc[242]: knd=0, off=2334, siz=4, lab1=.L748, lab2=, loff=0
!   reloc[243]: knd=0, off=2342, siz=4, lab1=.L749, lab2=, loff=0
!   reloc[244]: knd=0, off=2350, siz=4, lab1=.L750, lab2=, loff=0
!   reloc[245]: knd=0, off=2358, siz=4, lab1=.L751, lab2=, loff=0
!   reloc[246]: knd=0, off=2366, siz=4, lab1=.L752, lab2=, loff=0
!   reloc[247]: knd=0, off=2374, siz=4, lab1=.L753, lab2=, loff=0
!   reloc[248]: knd=0, off=2382, siz=4, lab1=.L756, lab2=, loff=0
!   reloc[249]: knd=0, off=2390, siz=4, lab1=.L760, lab2=, loff=0
!   reloc[250]: knd=0, off=2398, siz=4, lab1=.L761, lab2=, loff=0
!   reloc[251]: knd=0, off=2406, siz=4, lab1=.L763, lab2=, loff=0
!   reloc[252]: knd=0, off=2414, siz=4, lab1=.L770, lab2=, loff=0
!   reloc[253]: knd=0, off=2422, siz=4, lab1=.L771, lab2=, loff=0
!   reloc[254]: knd=0, off=2430, siz=4, lab1=.L772, lab2=, loff=0
!   reloc[255]: knd=0, off=2438, siz=4, lab1=.L773, lab2=, loff=0
!   reloc[256]: knd=0, off=2446, siz=4, lab1=.L776, lab2=, loff=0
!   reloc[257]: knd=0, off=2456, siz=4, lab1=.L785, lab2=, loff=0
!   reloc[258]: knd=0, off=2466, siz=4, lab1=.L792, lab2=, loff=0
!   reloc[259]: knd=0, off=2474, siz=4, lab1=.L794, lab2=, loff=0
!   reloc[260]: knd=0, off=2482, siz=4, lab1=.L801, lab2=, loff=0
!   reloc[261]: knd=0, off=2490, siz=4, lab1=.L802, lab2=, loff=0
!   reloc[262]: knd=0, off=2498, siz=4, lab1=.L803, lab2=, loff=0
!   reloc[263]: knd=0, off=2506, siz=4, lab1=.L804, lab2=, loff=0
!   reloc[264]: knd=0, off=2514, siz=4, lab1=.L807, lab2=, loff=0
!   reloc[265]: knd=0, off=2524, siz=4, lab1=.L812, lab2=, loff=0
!   reloc[266]: knd=0, off=2534, siz=4, lab1=.L825, lab2=, loff=0
!   reloc[267]: knd=0, off=2544, siz=4, lab1=.L829, lab2=, loff=0
!   reloc[268]: knd=0, off=2554, siz=4, lab1=.L830, lab2=, loff=0
!   reloc[269]: knd=0, off=2562, siz=4, lab1=.L832, lab2=, loff=0
!   reloc[270]: knd=0, off=2570, siz=4, lab1=.L839, lab2=, loff=0
!   reloc[271]: knd=0, off=2578, siz=4, lab1=.L842, lab2=, loff=0
!   reloc[272]: knd=0, off=2586, siz=4, lab1=.L851, lab2=, loff=0
!   reloc[273]: knd=0, off=2596, siz=4, lab1=.L858, lab2=, loff=0
!   reloc[274]: knd=0, off=2604, siz=4, lab1=.L860, lab2=, loff=0
!   reloc[275]: knd=0, off=2612, siz=4, lab1=.L867, lab2=, loff=0
!   reloc[276]: knd=0, off=2620, siz=4, lab1=.L870, lab2=, loff=0
!   reloc[277]: knd=0, off=2628, siz=4, lab1=.L875, lab2=, loff=0
!   reloc[278]: knd=0, off=2638, siz=4, lab1=.L886, lab2=, loff=0
!   reloc[279]: knd=0, off=2653, siz=4, lab1=set_index, lab2=, loff=0
!   reloc[280]: knd=0, off=2660, siz=4, lab1=.L893, lab2=, loff=0
!   reloc[281]: knd=0, off=2672, siz=4, lab1=.L894, lab2=, loff=0
!   reloc[282]: knd=0, off=2680, siz=4, lab1=.L895, lab2=, loff=0
!   reloc[283]: knd=0, off=2693, siz=4, lab1=set_color, lab2=, loff=0
!   reloc[284]: knd=0, off=2700, siz=4, lab1=.L902, lab2=, loff=0
!   reloc[285]: knd=0, off=2712, siz=4, lab1=.L903, lab2=, loff=0
!   reloc[286]: knd=0, off=2720, siz=4, lab1=.L904, lab2=, loff=0
!   reloc[287]: knd=0, off=2733, siz=4, lab1=buffer_size, lab2=, loff=0
!   reloc[288]: knd=0, off=2740, siz=4, lab1=.L911, lab2=, loff=0
!   reloc[289]: knd=0, off=2752, siz=4, lab1=.L912, lab2=, loff=0
!   reloc[290]: knd=0, off=2760, siz=4, lab1=.L913, lab2=, loff=0
!   reloc[291]: knd=0, off=2768, siz=4, lab1=.L914, lab2=, loff=0
!   reloc[292]: knd=0, off=2781, siz=4, lab1=write_color_span, lab2=, loff=0
!   reloc[293]: knd=0, off=2788, siz=4, lab1=.L921, lab2=, loff=0
!   reloc[294]: knd=0, off=2800, siz=4, lab1=.L922, lab2=, loff=0
!   reloc[295]: knd=0, off=2808, siz=4, lab1=.L923, lab2=, loff=0
!   reloc[296]: knd=0, off=2816, siz=4, lab1=.L924, lab2=, loff=0
!   reloc[297]: knd=0, off=2824, siz=4, lab1=.L925, lab2=, loff=0
!   reloc[298]: knd=0, off=2832, siz=4, lab1=.L926, lab2=, loff=0
!   reloc[299]: knd=0, off=2840, siz=4, lab1=.L929, lab2=, loff=0
!   reloc[300]: knd=0, off=2848, siz=4, lab1=.L934, lab2=, loff=0
!   reloc[301]: knd=0, off=2856, siz=4, lab1=.L943, lab2=, loff=0
!   reloc[302]: knd=0, off=2864, siz=4, lab1=.L947, lab2=, loff=0
!   reloc[303]: knd=0, off=2872, siz=4, lab1=.L953, lab2=, loff=0
!   reloc[304]: knd=0, off=2882, siz=4, lab1=.L962, lab2=, loff=0
!   reloc[305]: knd=0, off=2892, siz=4, lab1=.L969, lab2=, loff=0
!   reloc[306]: knd=0, off=2900, siz=4, lab1=.L972, lab2=, loff=0
!   reloc[307]: knd=0, off=2908, siz=4, lab1=.L978, lab2=, loff=0
!   reloc[308]: knd=0, off=2923, siz=4, lab1=write_monocolor_span, lab2=, loff=0
!   reloc[309]: knd=0, off=2930, siz=4, lab1=.L985, lab2=, loff=0
!   reloc[310]: knd=0, off=2942, siz=4, lab1=.L986, lab2=, loff=0
!   reloc[311]: knd=0, off=2950, siz=4, lab1=.L988, lab2=, loff=0
!   reloc[312]: knd=0, off=2958, siz=4, lab1=.L997, lab2=, loff=0
!   reloc[313]: knd=0, off=2966, siz=4, lab1=.L1001, lab2=, loff=0
!   reloc[314]: knd=0, off=2974, siz=4, lab1=.L1007, lab2=, loff=0
!   reloc[315]: knd=0, off=2984, siz=4, lab1=.L1010, lab2=, loff=0
!   reloc[316]: knd=0, off=2999, siz=4, lab1=write_color_pixels, lab2=, loff=0
!   reloc[317]: knd=0, off=3006, siz=4, lab1=.L1017, lab2=, loff=0
!   reloc[318]: knd=0, off=3018, siz=4, lab1=.L1018, lab2=, loff=0
!   reloc[319]: knd=0, off=3026, siz=4, lab1=.L1019, lab2=, loff=0
!   reloc[320]: knd=0, off=3034, siz=4, lab1=.L1020, lab2=, loff=0
!   reloc[321]: knd=0, off=3042, siz=4, lab1=.L1021, lab2=, loff=0
!   reloc[322]: knd=0, off=3050, siz=4, lab1=.L1023, lab2=, loff=0
!   reloc[323]: knd=0, off=3058, siz=4, lab1=.L1032, lab2=, loff=0
!   reloc[324]: knd=0, off=3066, siz=4, lab1=.L1036, lab2=, loff=0
!   reloc[325]: knd=0, off=3074, siz=4, lab1=.L1037, lab2=, loff=0
!   reloc[326]: knd=0, off=3082, siz=4, lab1=.L1043, lab2=, loff=0
!   reloc[327]: knd=0, off=3092, siz=4, lab1=.L1046, lab2=, loff=0
!   reloc[328]: knd=0, off=3107, siz=4, lab1=write_monocolor_pixels, lab2=, loff=0
!   reloc[329]: knd=0, off=3114, siz=4, lab1=.L1053, lab2=, loff=0
!   reloc[330]: knd=0, off=3126, siz=4, lab1=.L1055, lab2=, loff=0
!   reloc[331]: knd=0, off=3134, siz=4, lab1=.L1064, lab2=, loff=0
!   reloc[332]: knd=0, off=3142, siz=4, lab1=.L1068, lab2=, loff=0
!   reloc[333]: knd=0, off=3150, siz=4, lab1=.L1069, lab2=, loff=0
!   reloc[334]: knd=0, off=3158, siz=4, lab1=.L1075, lab2=, loff=0
!   reloc[335]: knd=0, off=3168, siz=4, lab1=.L1078, lab2=, loff=0
!   reloc[336]: knd=0, off=3183, siz=4, lab1=write_index_span, lab2=, loff=0
!   reloc[337]: knd=0, off=3190, siz=4, lab1=.L1085, lab2=, loff=0
!   reloc[338]: knd=0, off=3202, siz=4, lab1=.L1086, lab2=, loff=0
!   reloc[339]: knd=0, off=3210, siz=4, lab1=.L1088, lab2=, loff=0
!   reloc[340]: knd=0, off=3218, siz=4, lab1=.L1097, lab2=, loff=0
!   reloc[341]: knd=0, off=3226, siz=4, lab1=.L1101, lab2=, loff=0
!   reloc[342]: knd=0, off=3234, siz=4, lab1=.L1107, lab2=, loff=0
!   reloc[343]: knd=0, off=3244, siz=4, lab1=.L1110, lab2=, loff=0
!   reloc[344]: knd=0, off=3259, siz=4, lab1=write_monoindex_span, lab2=, loff=0
!   reloc[345]: knd=0, off=3266, siz=4, lab1=.L1117, lab2=, loff=0
!   reloc[346]: knd=0, off=3278, siz=4, lab1=.L1118, lab2=, loff=0
!   reloc[347]: knd=0, off=3286, siz=4, lab1=.L1120, lab2=, loff=0
!   reloc[348]: knd=0, off=3294, siz=4, lab1=.L1129, lab2=, loff=0
!   reloc[349]: knd=0, off=3302, siz=4, lab1=.L1133, lab2=, loff=0
!   reloc[350]: knd=0, off=3310, siz=4, lab1=.L1139, lab2=, loff=0
!   reloc[351]: knd=0, off=3320, siz=4, lab1=.L1142, lab2=, loff=0
!   reloc[352]: knd=0, off=3335, siz=4, lab1=write_index_pixels, lab2=, loff=0
!   reloc[353]: knd=0, off=3342, siz=4, lab1=.L1149, lab2=, loff=0
!   reloc[354]: knd=0, off=3354, siz=4, lab1=.L1151, lab2=, loff=0
!   reloc[355]: knd=0, off=3362, siz=4, lab1=.L1160, lab2=, loff=0
!   reloc[356]: knd=0, off=3370, siz=4, lab1=.L1164, lab2=, loff=0
!   reloc[357]: knd=0, off=3378, siz=4, lab1=.L1165, lab2=, loff=0
!   reloc[358]: knd=0, off=3386, siz=4, lab1=.L1171, lab2=, loff=0
!   reloc[359]: knd=0, off=3396, siz=4, lab1=.L1174, lab2=, loff=0
!   reloc[360]: knd=0, off=3411, siz=4, lab1=write_monoindex_pixels, lab2=, loff=0
!   reloc[361]: knd=0, off=3418, siz=4, lab1=.L1181, lab2=, loff=0
!   reloc[362]: knd=0, off=3430, siz=4, lab1=.L1183, lab2=, loff=0
!   reloc[363]: knd=0, off=3438, siz=4, lab1=.L1192, lab2=, loff=0
!   reloc[364]: knd=0, off=3446, siz=4, lab1=.L1196, lab2=, loff=0
!   reloc[365]: knd=0, off=3454, siz=4, lab1=.L1197, lab2=, loff=0
!   reloc[366]: knd=0, off=3462, siz=4, lab1=.L1203, lab2=, loff=0
!   reloc[367]: knd=0, off=3472, siz=4, lab1=.L1206, lab2=, loff=0
!   reloc[368]: knd=0, off=3487, siz=4, lab1=read_index_span, lab2=, loff=0
!   reloc[369]: knd=0, off=3494, siz=4, lab1=.L1213, lab2=, loff=0
!   reloc[370]: knd=0, off=3506, siz=4, lab1=.L1214, lab2=, loff=0
!   reloc[371]: knd=0, off=3514, siz=4, lab1=.L1216, lab2=, loff=0
!   reloc[372]: knd=0, off=3522, siz=4, lab1=.L1223, lab2=, loff=0
!   reloc[373]: knd=0, off=3530, siz=4, lab1=.L1226, lab2=, loff=0
!   reloc[374]: knd=0, off=3538, siz=4, lab1=.L1229, lab2=, loff=0
!   reloc[375]: knd=0, off=3553, siz=4, lab1=read_color_span, lab2=, loff=0
!   reloc[376]: knd=0, off=3560, siz=4, lab1=.L1236, lab2=, loff=0
!   reloc[377]: knd=0, off=3572, siz=4, lab1=.L1237, lab2=, loff=0
!   reloc[378]: knd=0, off=3580, siz=4, lab1=.L1239, lab2=, loff=0
!   reloc[379]: knd=0, off=3588, siz=4, lab1=.L1246, lab2=, loff=0
!   reloc[380]: knd=0, off=3596, siz=4, lab1=.L1247, lab2=, loff=0
!   reloc[381]: knd=0, off=3604, siz=4, lab1=.L1248, lab2=, loff=0
!   reloc[382]: knd=0, off=3612, siz=4, lab1=.L1249, lab2=, loff=0
!   reloc[383]: knd=0, off=3620, siz=4, lab1=.L1250, lab2=, loff=0
!   reloc[384]: knd=0, off=3628, siz=4, lab1=.L1253, lab2=, loff=0
!   reloc[385]: knd=0, off=3638, siz=4, lab1=.L1256, lab2=, loff=0
!   reloc[386]: knd=0, off=3653, siz=4, lab1=read_index_pixels, lab2=, loff=0
!   reloc[387]: knd=0, off=3660, siz=4, lab1=.L1263, lab2=, loff=0
!   reloc[388]: knd=0, off=3672, siz=4, lab1=.L1265, lab2=, loff=0
!   reloc[389]: knd=0, off=3680, siz=4, lab1=.L1274, lab2=, loff=0
!   reloc[390]: knd=0, off=3688, siz=4, lab1=.L1278, lab2=, loff=0
!   reloc[391]: knd=0, off=3696, siz=4, lab1=.L1279, lab2=, loff=0
!   reloc[392]: knd=0, off=3704, siz=4, lab1=.L1285, lab2=, loff=0
!   reloc[393]: knd=0, off=3714, siz=4, lab1=.L1288, lab2=, loff=0
!   reloc[394]: knd=0, off=3729, siz=4, lab1=read_color_pixels, lab2=, loff=0
!   reloc[395]: knd=0, off=3736, siz=4, lab1=.L1295, lab2=, loff=0
!   reloc[396]: knd=0, off=3748, siz=4, lab1=.L1297, lab2=, loff=0
!   reloc[397]: knd=0, off=3756, siz=4, lab1=.L1306, lab2=, loff=0
!   reloc[398]: knd=0, off=3764, siz=4, lab1=.L1310, lab2=, loff=0
!   reloc[399]: knd=0, off=3772, siz=4, lab1=.L1311, lab2=, loff=0
!   reloc[400]: knd=0, off=3780, siz=4, lab1=.L1312, lab2=, loff=0
!   reloc[401]: knd=0, off=3788, siz=4, lab1=.L1313, lab2=, loff=0
!   reloc[402]: knd=0, off=3796, siz=4, lab1=.L1314, lab2=, loff=0
!   reloc[403]: knd=0, off=3804, siz=4, lab1=.L1315, lab2=, loff=0
!   reloc[404]: knd=0, off=3812, siz=4, lab1=.L1321, lab2=, loff=0
!   reloc[405]: knd=0, off=3822, siz=4, lab1=.L1324, lab2=, loff=0
!   reloc[406]: knd=0, off=3837, siz=4, lab1=write_color_span3, lab2=, loff=0
!   reloc[407]: knd=0, off=3844, siz=4, lab1=.L1331, lab2=, loff=0
!   reloc[408]: knd=0, off=3856, siz=4, lab1=.L1332, lab2=, loff=0
!   reloc[409]: knd=0, off=3864, siz=4, lab1=.L1333, lab2=, loff=0
!   reloc[410]: knd=0, off=3872, siz=4, lab1=.L1334, lab2=, loff=0
!   reloc[411]: knd=0, off=3880, siz=4, lab1=.L1335, lab2=, loff=0
!   reloc[412]: knd=0, off=3888, siz=4, lab1=.L1338, lab2=, loff=0
!   reloc[413]: knd=0, off=3896, siz=4, lab1=.L1343, lab2=, loff=0
!   reloc[414]: knd=0, off=3904, siz=4, lab1=.L1352, lab2=, loff=0
!   reloc[415]: knd=0, off=3912, siz=4, lab1=.L1356, lab2=, loff=0
!   reloc[416]: knd=0, off=3920, siz=4, lab1=.L1357, lab2=, loff=0
!   reloc[417]: knd=0, off=3928, siz=4, lab1=.L1358, lab2=, loff=0
!   reloc[418]: knd=0, off=3936, siz=4, lab1=.L1364, lab2=, loff=0
!   reloc[419]: knd=0, off=3946, siz=4, lab1=.L1373, lab2=, loff=0
!   reloc[420]: knd=0, off=3956, siz=4, lab1=.L1380, lab2=, loff=0
!   reloc[421]: knd=0, off=3964, siz=4, lab1=.L1381, lab2=, loff=0
!   reloc[422]: knd=0, off=3972, siz=4, lab1=.L1382, lab2=, loff=0
!   reloc[423]: knd=0, off=3980, siz=4, lab1=.L1385, lab2=, loff=0
!   reloc[424]: knd=0, off=3990, siz=4, lab1=.L1391, lab2=, loff=0
!   reloc[425]: knd=0, off=4005, siz=4, lab1=write_monocolor_span3, lab2=, loff=0
!   reloc[426]: knd=0, off=4012, siz=4, lab1=.L1398, lab2=, loff=0
!   reloc[427]: knd=0, off=4024, siz=4, lab1=.L1399, lab2=, loff=0
!   reloc[428]: knd=0, off=4032, siz=4, lab1=.L1400, lab2=, loff=0
!   reloc[429]: knd=0, off=4040, siz=4, lab1=.L1401, lab2=, loff=0
!   reloc[430]: knd=0, off=4048, siz=4, lab1=.L1402, lab2=, loff=0
!   reloc[431]: knd=0, off=4056, siz=4, lab1=.L1403, lab2=, loff=0
!   reloc[432]: knd=0, off=4064, siz=4, lab1=.L1404, lab2=, loff=0
!   reloc[433]: knd=0, off=4072, siz=4, lab1=.L1405, lab2=, loff=0
!   reloc[434]: knd=0, off=4082, siz=4, lab1=.L1407, lab2=, loff=0
!   reloc[435]: knd=0, off=4090, siz=4, lab1=.L1416, lab2=, loff=0
!   reloc[436]: knd=0, off=4098, siz=4, lab1=.L1420, lab2=, loff=0
!   reloc[437]: knd=0, off=4106, siz=4, lab1=.L1421, lab2=, loff=0
!   reloc[438]: knd=0, off=4114, siz=4, lab1=.L1422, lab2=, loff=0
!   reloc[439]: knd=0, off=4122, siz=4, lab1=.L1428, lab2=, loff=0
!   reloc[440]: knd=0, off=4132, siz=4, lab1=.L1431, lab2=, loff=0
!   reloc[441]: knd=0, off=4147, siz=4, lab1=write_color_pixels3, lab2=, loff=0
!   reloc[442]: knd=0, off=4154, siz=4, lab1=.L1438, lab2=, loff=0
!   reloc[443]: knd=0, off=4166, siz=4, lab1=.L1439, lab2=, loff=0
!   reloc[444]: knd=0, off=4174, siz=4, lab1=.L1440, lab2=, loff=0
!   reloc[445]: knd=0, off=4182, siz=4, lab1=.L1441, lab2=, loff=0
!   reloc[446]: knd=0, off=4190, siz=4, lab1=.L1443, lab2=, loff=0
!   reloc[447]: knd=0, off=4198, siz=4, lab1=.L1452, lab2=, loff=0
!   reloc[448]: knd=0, off=4206, siz=4, lab1=.L1456, lab2=, loff=0
!   reloc[449]: knd=0, off=4214, siz=4, lab1=.L1457, lab2=, loff=0
!   reloc[450]: knd=0, off=4222, siz=4, lab1=.L1458, lab2=, loff=0
!   reloc[451]: knd=0, off=4230, siz=4, lab1=.L1459, lab2=, loff=0
!   reloc[452]: knd=0, off=4238, siz=4, lab1=.L1465, lab2=, loff=0
!   reloc[453]: knd=0, off=4248, siz=4, lab1=.L1468, lab2=, loff=0
!   reloc[454]: knd=0, off=4263, siz=4, lab1=write_monocolor_pixels3, lab2=, loff=0
!   reloc[455]: knd=0, off=4270, siz=4, lab1=.L1475, lab2=, loff=0
!   reloc[456]: knd=0, off=4282, siz=4, lab1=.L1476, lab2=, loff=0
!   reloc[457]: knd=0, off=4290, siz=4, lab1=.L1477, lab2=, loff=0
!   reloc[458]: knd=0, off=4298, siz=4, lab1=.L1478, lab2=, loff=0
!   reloc[459]: knd=0, off=4306, siz=4, lab1=.L1479, lab2=, loff=0
!   reloc[460]: knd=0, off=4314, siz=4, lab1=.L1480, lab2=, loff=0
!   reloc[461]: knd=0, off=4322, siz=4, lab1=.L1481, lab2=, loff=0
!   reloc[462]: knd=0, off=4330, siz=4, lab1=.L1483, lab2=, loff=0
!   reloc[463]: knd=0, off=4338, siz=4, lab1=.L1492, lab2=, loff=0
!   reloc[464]: knd=0, off=4346, siz=4, lab1=.L1496, lab2=, loff=0
!   reloc[465]: knd=0, off=4354, siz=4, lab1=.L1497, lab2=, loff=0
!   reloc[466]: knd=0, off=4362, siz=4, lab1=.L1498, lab2=, loff=0
!   reloc[467]: knd=0, off=4370, siz=4, lab1=.L1499, lab2=, loff=0
!   reloc[468]: knd=0, off=4378, siz=4, lab1=.L1505, lab2=, loff=0
!   reloc[469]: knd=0, off=4388, siz=4, lab1=.L1508, lab2=, loff=0
!   reloc[470]: knd=0, off=4403, siz=4, lab1=read_color_span3, lab2=, loff=0
!   reloc[471]: knd=0, off=4410, siz=4, lab1=.L1515, lab2=, loff=0
!   reloc[472]: knd=0, off=4422, siz=4, lab1=.L1516, lab2=, loff=0
!   reloc[473]: knd=0, off=4430, siz=4, lab1=.L1517, lab2=, loff=0
!   reloc[474]: knd=0, off=4438, siz=4, lab1=.L1518, lab2=, loff=0
!   reloc[475]: knd=0, off=4446, siz=4, lab1=.L1519, lab2=, loff=0
!   reloc[476]: knd=0, off=4454, siz=4, lab1=.L1521, lab2=, loff=0
!   reloc[477]: knd=0, off=4462, siz=4, lab1=.L1528, lab2=, loff=0
!   reloc[478]: knd=0, off=4470, siz=4, lab1=.L1529, lab2=, loff=0
!   reloc[479]: knd=0, off=4478, siz=4, lab1=.L1530, lab2=, loff=0
!   reloc[480]: knd=0, off=4486, siz=4, lab1=.L1531, lab2=, loff=0
!   reloc[481]: knd=0, off=4494, siz=4, lab1=.L1534, lab2=, loff=0
!   reloc[482]: knd=0, off=4504, siz=4, lab1=.L1537, lab2=, loff=0
!   reloc[483]: knd=0, off=4519, siz=4, lab1=read_color_pixels3, lab2=, loff=0
!   reloc[484]: knd=0, off=4526, siz=4, lab1=.L1544, lab2=, loff=0
!   reloc[485]: knd=0, off=4538, siz=4, lab1=.L1545, lab2=, loff=0
!   reloc[486]: knd=0, off=4546, siz=4, lab1=.L1546, lab2=, loff=0
!   reloc[487]: knd=0, off=4554, siz=4, lab1=.L1547, lab2=, loff=0
!   reloc[488]: knd=0, off=4562, siz=4, lab1=.L1549, lab2=, loff=0
!   reloc[489]: knd=0, off=4570, siz=4, lab1=.L1558, lab2=, loff=0
!   reloc[490]: knd=0, off=4578, siz=4, lab1=.L1562, lab2=, loff=0
!   reloc[491]: knd=0, off=4586, siz=4, lab1=.L1563, lab2=, loff=0
!   reloc[492]: knd=0, off=4594, siz=4, lab1=.L1564, lab2=, loff=0
!   reloc[493]: knd=0, off=4602, siz=4, lab1=.L1565, lab2=, loff=0
!   reloc[494]: knd=0, off=4610, siz=4, lab1=.L1566, lab2=, loff=0
!   reloc[495]: knd=0, off=4618, siz=4, lab1=.L1572, lab2=, loff=0
!   reloc[496]: knd=0, off=4628, siz=4, lab1=.L1575, lab2=, loff=0
!   reloc[497]: knd=0, off=4643, siz=4, lab1=flat_color_line, lab2=, loff=0
!   reloc[498]: knd=0, off=4650, siz=4, lab1=.L1582, lab2=, loff=0
!   reloc[499]: knd=0, off=4662, siz=4, lab1=.L1583, lab2=, loff=0
!   reloc[500]: knd=0, off=4670, siz=4, lab1=.L1584, lab2=, loff=0
!   reloc[501]: knd=0, off=4678, siz=4, lab1=.L1586, lab2=, loff=0
!   reloc[502]: knd=0, off=4691, siz=4, lab1=.L1587, lab2=, loff=0
!   reloc[503]: knd=0, off=4701, siz=4, lab1=.L1588, lab2=, loff=0
!   reloc[504]: knd=0, off=4709, siz=4, lab1=.L1590, lab2=, loff=0
!   reloc[505]: knd=0, off=4719, siz=4, lab1=.L1591, lab2=, loff=0
!   reloc[506]: knd=0, off=4727, siz=4, lab1=.L1594, lab2=, loff=0
!   reloc[507]: knd=0, off=4735, siz=4, lab1=.L1600, lab2=, loff=0
!   reloc[508]: knd=0, off=4743, siz=4, lab1=.L1603, lab2=, loff=0
!   reloc[509]: knd=0, off=4751, siz=4, lab1=.L1606, lab2=, loff=0
!   reloc[510]: knd=0, off=4759, siz=4, lab1=.L1607, lab2=, loff=0
!   reloc[511]: knd=0, off=4767, siz=4, lab1=.L1613, lab2=, loff=0
!   reloc[512]: knd=0, off=4775, siz=4, lab1=.L1619, lab2=, loff=0
!   reloc[513]: knd=0, off=4783, siz=4, lab1=.L1622, lab2=, loff=0
!   reloc[514]: knd=0, off=4791, siz=4, lab1=.L1625, lab2=, loff=0
!   reloc[515]: knd=0, off=4799, siz=4, lab1=.L1626, lab2=, loff=0
!   reloc[516]: knd=0, off=4807, siz=4, lab1=.L1631, lab2=, loff=0
!   reloc[517]: knd=0, off=4817, siz=4, lab1=.L1632, lab2=, loff=0
!   reloc[518]: knd=0, off=4825, siz=4, lab1=.L1635, lab2=, loff=0
!   reloc[519]: knd=0, off=4833, siz=4, lab1=.L1640, lab2=, loff=0
!   reloc[520]: knd=0, off=4841, siz=4, lab1=.L1646, lab2=, loff=0
!   reloc[521]: knd=0, off=4851, siz=4, lab1=.L1650, lab2=, loff=0
!   reloc[522]: knd=0, off=4859, siz=4, lab1=.L1651, lab2=, loff=0
!   reloc[523]: knd=0, off=4867, siz=4, lab1=.L1657, lab2=, loff=0
!   reloc[524]: knd=0, off=4877, siz=4, lab1=.L1663, lab2=, loff=0
!   reloc[525]: knd=0, off=4887, siz=4, lab1=.L1667, lab2=, loff=0
!   reloc[526]: knd=0, off=4895, siz=4, lab1=.L1668, lab2=, loff=0
!   reloc[527]: knd=0, off=4903, siz=4, lab1=.L1674, lab2=, loff=0
!   reloc[528]: knd=0, off=4913, siz=4, lab1=.L1680, lab2=, loff=0
!   reloc[529]: knd=0, off=4923, siz=4, lab1=.L1684, lab2=, loff=0
!   reloc[530]: knd=0, off=4933, siz=4, lab1=.L1685, lab2=, loff=0
!   reloc[531]: knd=0, off=4941, siz=4, lab1=.L1686, lab2=, loff=0
!   reloc[532]: knd=0, off=4949, siz=4, lab1=.L1688, lab2=, loff=0
!   reloc[533]: knd=0, off=4959, siz=4, lab1=.L1696, lab2=, loff=0
!   reloc[534]: knd=0, off=4969, siz=4, lab1=.L1698, lab2=, loff=0
!   reloc[535]: knd=0, off=4979, siz=4, lab1=.L1701, lab2=, loff=0
!   reloc[536]: knd=0, off=4989, siz=4, lab1=.L1705, lab2=, loff=0
!   reloc[537]: knd=0, off=4997, siz=4, lab1=.L1711, lab2=, loff=0
!   reloc[538]: knd=0, off=5007, siz=4, lab1=.L1712, lab2=, loff=0
!   reloc[539]: knd=0, off=5015, siz=4, lab1=.L1718, lab2=, loff=0
!   reloc[540]: knd=0, off=5026, siz=4, lab1=.L1726, lab2=, loff=0
!   reloc[541]: knd=0, off=5037, siz=4, lab1=.L1727, lab2=, loff=0
!   reloc[542]: knd=0, off=5045, siz=4, lab1=.L1728, lab2=, loff=0
!   reloc[543]: knd=0, off=5053, siz=4, lab1=.L1730, lab2=, loff=0
!   reloc[544]: knd=0, off=5063, siz=4, lab1=.L1738, lab2=, loff=0
!   reloc[545]: knd=0, off=5073, siz=4, lab1=.L1740, lab2=, loff=0
!   reloc[546]: knd=0, off=5083, siz=4, lab1=.L1743, lab2=, loff=0
!   reloc[547]: knd=0, off=5093, siz=4, lab1=.L1747, lab2=, loff=0
!   reloc[548]: knd=0, off=5101, siz=4, lab1=.L1753, lab2=, loff=0
!   reloc[549]: knd=0, off=5111, siz=4, lab1=.L1754, lab2=, loff=0
!   reloc[550]: knd=0, off=5119, siz=4, lab1=.L1760, lab2=, loff=0
!   reloc[551]: knd=0, off=5130, siz=4, lab1=.L1767, lab2=, loff=0
!   reloc[552]: knd=0, off=5148, siz=4, lab1=flat_color_z_line, lab2=, loff=0
!   reloc[553]: knd=0, off=5155, siz=4, lab1=.L1774, lab2=, loff=0
!   reloc[554]: knd=0, off=5167, siz=4, lab1=.L1775, lab2=, loff=0
!   reloc[555]: knd=0, off=5175, siz=4, lab1=.L1776, lab2=, loff=0
!   reloc[556]: knd=0, off=5183, siz=4, lab1=.L1778, lab2=, loff=0
!   reloc[557]: knd=0, off=5196, siz=4, lab1=.L1779, lab2=, loff=0
!   reloc[558]: knd=0, off=5206, siz=4, lab1=.L1780, lab2=, loff=0
!   reloc[559]: knd=0, off=5214, siz=4, lab1=.L1782, lab2=, loff=0
!   reloc[560]: knd=0, off=5224, siz=4, lab1=.L1783, lab2=, loff=0
!   reloc[561]: knd=0, off=5232, siz=4, lab1=.L1786, lab2=, loff=0
!   reloc[562]: knd=0, off=5240, siz=4, lab1=.L1792, lab2=, loff=0
!   reloc[563]: knd=0, off=5248, siz=4, lab1=.L1795, lab2=, loff=0
!   reloc[564]: knd=0, off=5256, siz=4, lab1=.L1798, lab2=, loff=0
!   reloc[565]: knd=0, off=5264, siz=4, lab1=.L1799, lab2=, loff=0
!   reloc[566]: knd=0, off=5272, siz=4, lab1=.L1805, lab2=, loff=0
!   reloc[567]: knd=0, off=5280, siz=4, lab1=.L1811, lab2=, loff=0
!   reloc[568]: knd=0, off=5288, siz=4, lab1=.L1814, lab2=, loff=0
!   reloc[569]: knd=0, off=5296, siz=4, lab1=.L1817, lab2=, loff=0
!   reloc[570]: knd=0, off=5304, siz=4, lab1=.L1818, lab2=, loff=0
!   reloc[571]: knd=0, off=5312, siz=4, lab1=.L1823, lab2=, loff=0
!   reloc[572]: knd=0, off=5322, siz=4, lab1=.L1824, lab2=, loff=0
!   reloc[573]: knd=0, off=5330, siz=4, lab1=.L1827, lab2=, loff=0
!   reloc[574]: knd=0, off=5338, siz=4, lab1=.L1832, lab2=, loff=0
!   reloc[575]: knd=0, off=5346, siz=4, lab1=.L1836, lab2=, loff=0
!   reloc[576]: knd=0, off=5356, siz=4, lab1=.L1837, lab2=, loff=0
!   reloc[577]: knd=0, off=5364, siz=4, lab1=.L1838, lab2=, loff=0
!   reloc[578]: knd=0, off=5372, siz=4, lab1=.L1841, lab2=, loff=0
!   reloc[579]: knd=0, off=5382, siz=4, lab1=.L1845, lab2=, loff=0
!   reloc[580]: knd=0, off=5390, siz=4, lab1=.L1846, lab2=, loff=0
!   reloc[581]: knd=0, off=5398, siz=4, lab1=.L1847, lab2=, loff=0
!   reloc[582]: knd=0, off=5408, siz=4, lab1=.L1853, lab2=, loff=0
!   reloc[583]: knd=0, off=5418, siz=4, lab1=.L1854, lab2=, loff=0
!   reloc[584]: knd=0, off=5428, siz=4, lab1=.L1860, lab2=, loff=0
!   reloc[585]: knd=0, off=5438, siz=4, lab1=.L1864, lab2=, loff=0
!   reloc[586]: knd=0, off=5446, siz=4, lab1=.L1865, lab2=, loff=0
!   reloc[587]: knd=0, off=5454, siz=4, lab1=.L1866, lab2=, loff=0
!   reloc[588]: knd=0, off=5464, siz=4, lab1=.L1872, lab2=, loff=0
!   reloc[589]: knd=0, off=5474, siz=4, lab1=.L1873, lab2=, loff=0
!   reloc[590]: knd=0, off=5484, siz=4, lab1=.L1879, lab2=, loff=0
!   reloc[591]: knd=0, off=5494, siz=4, lab1=.L1883, lab2=, loff=0
!   reloc[592]: knd=0, off=5504, siz=4, lab1=.L1884, lab2=, loff=0
!   reloc[593]: knd=0, off=5512, siz=4, lab1=.L1885, lab2=, loff=0
!   reloc[594]: knd=0, off=5520, siz=4, lab1=.L1886, lab2=, loff=0
!   reloc[595]: knd=0, off=5528, siz=4, lab1=.L1888, lab2=, loff=0
!   reloc[596]: knd=0, off=5538, siz=4, lab1=.L1895, lab2=, loff=0
!   reloc[597]: knd=0, off=5548, siz=4, lab1=.L1898, lab2=, loff=0
!   reloc[598]: knd=0, off=5558, siz=4, lab1=.L1905, lab2=, loff=0
!   reloc[599]: knd=0, off=5568, siz=4, lab1=.L1906, lab2=, loff=0
!   reloc[600]: knd=0, off=5578, siz=4, lab1=.L1907, lab2=, loff=0
!   reloc[601]: knd=0, off=5586, siz=4, lab1=.L1910, lab2=, loff=0
!   reloc[602]: knd=0, off=5596, siz=4, lab1=.L1914, lab2=, loff=0
!   reloc[603]: knd=0, off=5604, siz=4, lab1=.L1920, lab2=, loff=0
!   reloc[604]: knd=0, off=5614, siz=4, lab1=.L1921, lab2=, loff=0
!   reloc[605]: knd=0, off=5622, siz=4, lab1=.L1922, lab2=, loff=0
!   reloc[606]: knd=0, off=5632, siz=4, lab1=.L1928, lab2=, loff=0
!   reloc[607]: knd=0, off=5643, siz=4, lab1=.L1936, lab2=, loff=0
!   reloc[608]: knd=0, off=5654, siz=4, lab1=.L1937, lab2=, loff=0
!   reloc[609]: knd=0, off=5662, siz=4, lab1=.L1938, lab2=, loff=0
!   reloc[610]: knd=0, off=5670, siz=4, lab1=.L1939, lab2=, loff=0
!   reloc[611]: knd=0, off=5678, siz=4, lab1=.L1941, lab2=, loff=0
!   reloc[612]: knd=0, off=5688, siz=4, lab1=.L1948, lab2=, loff=0
!   reloc[613]: knd=0, off=5698, siz=4, lab1=.L1951, lab2=, loff=0
!   reloc[614]: knd=0, off=5708, siz=4, lab1=.L1958, lab2=, loff=0
!   reloc[615]: knd=0, off=5718, siz=4, lab1=.L1959, lab2=, loff=0
!   reloc[616]: knd=0, off=5728, siz=4, lab1=.L1960, lab2=, loff=0
!   reloc[617]: knd=0, off=5736, siz=4, lab1=.L1963, lab2=, loff=0
!   reloc[618]: knd=0, off=5746, siz=4, lab1=.L1967, lab2=, loff=0
!   reloc[619]: knd=0, off=5754, siz=4, lab1=.L1973, lab2=, loff=0
!   reloc[620]: knd=0, off=5764, siz=4, lab1=.L1974, lab2=, loff=0
!   reloc[621]: knd=0, off=5772, siz=4, lab1=.L1975, lab2=, loff=0
!   reloc[622]: knd=0, off=5782, siz=4, lab1=.L1981, lab2=, loff=0
!   reloc[623]: knd=0, off=5793, siz=4, lab1=.L1988, lab2=, loff=0
!   reloc[624]: knd=0, off=5811, siz=4, lab1=flat_blend_color_line, lab2=, loff=0
!   reloc[625]: knd=0, off=5818, siz=4, lab1=.L1995, lab2=, loff=0
!   reloc[626]: knd=0, off=5830, siz=4, lab1=.L1996, lab2=, loff=0
!   reloc[627]: knd=0, off=5838, siz=4, lab1=.L1997, lab2=, loff=0
!   reloc[628]: knd=0, off=5846, siz=4, lab1=.L1998, lab2=, loff=0
!   reloc[629]: knd=0, off=5854, siz=4, lab1=.L1999, lab2=, loff=0
!   reloc[630]: knd=0, off=5862, siz=4, lab1=.L2000, lab2=, loff=0
!   reloc[631]: knd=0, off=5870, siz=4, lab1=.L2001, lab2=, loff=0
!   reloc[632]: knd=0, off=5878, siz=4, lab1=.L2002, lab2=, loff=0
!   reloc[633]: knd=0, off=5886, siz=4, lab1=.L2003, lab2=, loff=0
!   reloc[634]: knd=0, off=5894, siz=4, lab1=.L2004, lab2=, loff=0
!   reloc[635]: knd=0, off=5902, siz=4, lab1=.L2006, lab2=, loff=0
!   reloc[636]: knd=0, off=5915, siz=4, lab1=.L2007, lab2=, loff=0
!   reloc[637]: knd=0, off=5925, siz=4, lab1=.L2008, lab2=, loff=0
!   reloc[638]: knd=0, off=5933, siz=4, lab1=.L2010, lab2=, loff=0
!   reloc[639]: knd=0, off=5943, siz=4, lab1=.L2011, lab2=, loff=0
!   reloc[640]: knd=0, off=5951, siz=4, lab1=.L2014, lab2=, loff=0
!   reloc[641]: knd=0, off=5959, siz=4, lab1=.L2020, lab2=, loff=0
!   reloc[642]: knd=0, off=5967, siz=4, lab1=.L2023, lab2=, loff=0
!   reloc[643]: knd=0, off=5975, siz=4, lab1=.L2026, lab2=, loff=0
!   reloc[644]: knd=0, off=5983, siz=4, lab1=.L2027, lab2=, loff=0
!   reloc[645]: knd=0, off=5991, siz=4, lab1=.L2033, lab2=, loff=0
!   reloc[646]: knd=0, off=5999, siz=4, lab1=.L2039, lab2=, loff=0
!   reloc[647]: knd=0, off=6007, siz=4, lab1=.L2042, lab2=, loff=0
!   reloc[648]: knd=0, off=6015, siz=4, lab1=.L2045, lab2=, loff=0
!   reloc[649]: knd=0, off=6023, siz=4, lab1=.L2046, lab2=, loff=0
!   reloc[650]: knd=0, off=6031, siz=4, lab1=.L2051, lab2=, loff=0
!   reloc[651]: knd=0, off=6041, siz=4, lab1=.L2052, lab2=, loff=0
!   reloc[652]: knd=0, off=6049, siz=4, lab1=.L2055, lab2=, loff=0
!   reloc[653]: knd=0, off=6057, siz=4, lab1=.L2060, lab2=, loff=0
!   reloc[654]: knd=0, off=6065, siz=4, lab1=.L2066, lab2=, loff=0
!   reloc[655]: knd=0, off=6075, siz=4, lab1=.L2070, lab2=, loff=0
!   reloc[656]: knd=0, off=6083, siz=4, lab1=.L2071, lab2=, loff=0
!   reloc[657]: knd=0, off=6091, siz=4, lab1=.L2077, lab2=, loff=0
!   reloc[658]: knd=0, off=6101, siz=4, lab1=.L2083, lab2=, loff=0
!   reloc[659]: knd=0, off=6111, siz=4, lab1=.L2087, lab2=, loff=0
!   reloc[660]: knd=0, off=6119, siz=4, lab1=.L2088, lab2=, loff=0
!   reloc[661]: knd=0, off=6127, siz=4, lab1=.L2094, lab2=, loff=0
!   reloc[662]: knd=0, off=6137, siz=4, lab1=.L2100, lab2=, loff=0
!   reloc[663]: knd=0, off=6147, siz=4, lab1=.L2104, lab2=, loff=0
!   reloc[664]: knd=0, off=6157, siz=4, lab1=.L2105, lab2=, loff=0
!   reloc[665]: knd=0, off=6165, siz=4, lab1=.L2106, lab2=, loff=0
!   reloc[666]: knd=0, off=6173, siz=4, lab1=.L2108, lab2=, loff=0
!   reloc[667]: knd=0, off=6183, siz=4, lab1=.L2116, lab2=, loff=0
!   reloc[668]: knd=0, off=6193, siz=4, lab1=.L2118, lab2=, loff=0
!   reloc[669]: knd=0, off=6203, siz=4, lab1=.L2121, lab2=, loff=0
!   reloc[670]: knd=0, off=6213, siz=4, lab1=.L2125, lab2=, loff=0
!   reloc[671]: knd=0, off=6221, siz=4, lab1=.L2131, lab2=, loff=0
!   reloc[672]: knd=0, off=6231, siz=4, lab1=.L2132, lab2=, loff=0
!   reloc[673]: knd=0, off=6239, siz=4, lab1=.L2138, lab2=, loff=0
!   reloc[674]: knd=0, off=6250, siz=4, lab1=.L2146, lab2=, loff=0
!   reloc[675]: knd=0, off=6261, siz=4, lab1=.L2147, lab2=, loff=0
!   reloc[676]: knd=0, off=6269, siz=4, lab1=.L2148, lab2=, loff=0
!   reloc[677]: knd=0, off=6277, siz=4, lab1=.L2150, lab2=, loff=0
!   reloc[678]: knd=0, off=6287, siz=4, lab1=.L2158, lab2=, loff=0
!   reloc[679]: knd=0, off=6297, siz=4, lab1=.L2160, lab2=, loff=0
!   reloc[680]: knd=0, off=6307, siz=4, lab1=.L2163, lab2=, loff=0
!   reloc[681]: knd=0, off=6317, siz=4, lab1=.L2167, lab2=, loff=0
!   reloc[682]: knd=0, off=6325, siz=4, lab1=.L2173, lab2=, loff=0
!   reloc[683]: knd=0, off=6335, siz=4, lab1=.L2174, lab2=, loff=0
!   reloc[684]: knd=0, off=6343, siz=4, lab1=.L2180, lab2=, loff=0
!   reloc[685]: knd=0, off=6354, siz=4, lab1=.L2187, lab2=, loff=0
!   reloc[686]: knd=0, off=6372, siz=4, lab1=flat_blend_color_z_line, lab2=, loff=0
!   reloc[687]: knd=0, off=6379, siz=4, lab1=.L2194, lab2=, loff=0
!   reloc[688]: knd=0, off=6391, siz=4, lab1=.L2195, lab2=, loff=0
!   reloc[689]: knd=0, off=6399, siz=4, lab1=.L2196, lab2=, loff=0
!   reloc[690]: knd=0, off=6407, siz=4, lab1=.L2197, lab2=, loff=0
!   reloc[691]: knd=0, off=6415, siz=4, lab1=.L2198, lab2=, loff=0
!   reloc[692]: knd=0, off=6423, siz=4, lab1=.L2199, lab2=, loff=0
!   reloc[693]: knd=0, off=6431, siz=4, lab1=.L2200, lab2=, loff=0
!   reloc[694]: knd=0, off=6439, siz=4, lab1=.L2201, lab2=, loff=0
!   reloc[695]: knd=0, off=6447, siz=4, lab1=.L2202, lab2=, loff=0
!   reloc[696]: knd=0, off=6455, siz=4, lab1=.L2203, lab2=, loff=0
!   reloc[697]: knd=0, off=6463, siz=4, lab1=.L2205, lab2=, loff=0
!   reloc[698]: knd=0, off=6476, siz=4, lab1=.L2206, lab2=, loff=0
!   reloc[699]: knd=0, off=6486, siz=4, lab1=.L2207, lab2=, loff=0
!   reloc[700]: knd=0, off=6494, siz=4, lab1=.L2209, lab2=, loff=0
!   reloc[701]: knd=0, off=6504, siz=4, lab1=.L2210, lab2=, loff=0
!   reloc[702]: knd=0, off=6512, siz=4, lab1=.L2213, lab2=, loff=0
!   reloc[703]: knd=0, off=6520, siz=4, lab1=.L2219, lab2=, loff=0
!   reloc[704]: knd=0, off=6528, siz=4, lab1=.L2222, lab2=, loff=0
!   reloc[705]: knd=0, off=6536, siz=4, lab1=.L2225, lab2=, loff=0
!   reloc[706]: knd=0, off=6544, siz=4, lab1=.L2226, lab2=, loff=0
!   reloc[707]: knd=0, off=6552, siz=4, lab1=.L2232, lab2=, loff=0
!   reloc[708]: knd=0, off=6560, siz=4, lab1=.L2238, lab2=, loff=0
!   reloc[709]: knd=0, off=6568, siz=4, lab1=.L2241, lab2=, loff=0
!   reloc[710]: knd=0, off=6576, siz=4, lab1=.L2244, lab2=, loff=0
!   reloc[711]: knd=0, off=6584, siz=4, lab1=.L2245, lab2=, loff=0
!   reloc[712]: knd=0, off=6592, siz=4, lab1=.L2250, lab2=, loff=0
!   reloc[713]: knd=0, off=6602, siz=4, lab1=.L2251, lab2=, loff=0
!   reloc[714]: knd=0, off=6610, siz=4, lab1=.L2254, lab2=, loff=0
!   reloc[715]: knd=0, off=6618, siz=4, lab1=.L2259, lab2=, loff=0
!   reloc[716]: knd=0, off=6626, siz=4, lab1=.L2263, lab2=, loff=0
!   reloc[717]: knd=0, off=6636, siz=4, lab1=.L2264, lab2=, loff=0
!   reloc[718]: knd=0, off=6644, siz=4, lab1=.L2265, lab2=, loff=0
!   reloc[719]: knd=0, off=6652, siz=4, lab1=.L2268, lab2=, loff=0
!   reloc[720]: knd=0, off=6662, siz=4, lab1=.L2272, lab2=, loff=0
!   reloc[721]: knd=0, off=6670, siz=4, lab1=.L2273, lab2=, loff=0
!   reloc[722]: knd=0, off=6678, siz=4, lab1=.L2274, lab2=, loff=0
!   reloc[723]: knd=0, off=6688, siz=4, lab1=.L2280, lab2=, loff=0
!   reloc[724]: knd=0, off=6698, siz=4, lab1=.L2281, lab2=, loff=0
!   reloc[725]: knd=0, off=6708, siz=4, lab1=.L2287, lab2=, loff=0
!   reloc[726]: knd=0, off=6718, siz=4, lab1=.L2291, lab2=, loff=0
!   reloc[727]: knd=0, off=6726, siz=4, lab1=.L2292, lab2=, loff=0
!   reloc[728]: knd=0, off=6734, siz=4, lab1=.L2293, lab2=, loff=0
!   reloc[729]: knd=0, off=6744, siz=4, lab1=.L2299, lab2=, loff=0
!   reloc[730]: knd=0, off=6754, siz=4, lab1=.L2300, lab2=, loff=0
!   reloc[731]: knd=0, off=6764, siz=4, lab1=.L2306, lab2=, loff=0
!   reloc[732]: knd=0, off=6774, siz=4, lab1=.L2310, lab2=, loff=0
!   reloc[733]: knd=0, off=6784, siz=4, lab1=.L2311, lab2=, loff=0
!   reloc[734]: knd=0, off=6792, siz=4, lab1=.L2312, lab2=, loff=0
!   reloc[735]: knd=0, off=6800, siz=4, lab1=.L2313, lab2=, loff=0
!   reloc[736]: knd=0, off=6808, siz=4, lab1=.L2315, lab2=, loff=0
!   reloc[737]: knd=0, off=6818, siz=4, lab1=.L2322, lab2=, loff=0
!   reloc[738]: knd=0, off=6828, siz=4, lab1=.L2325, lab2=, loff=0
!   reloc[739]: knd=0, off=6838, siz=4, lab1=.L2334, lab2=, loff=0
!   reloc[740]: knd=0, off=6848, siz=4, lab1=.L2335, lab2=, loff=0
!   reloc[741]: knd=0, off=6858, siz=4, lab1=.L2336, lab2=, loff=0
!   reloc[742]: knd=0, off=6866, siz=4, lab1=.L2339, lab2=, loff=0
!   reloc[743]: knd=0, off=6876, siz=4, lab1=.L2343, lab2=, loff=0
!   reloc[744]: knd=0, off=6884, siz=4, lab1=.L2349, lab2=, loff=0
!   reloc[745]: knd=0, off=6894, siz=4, lab1=.L2350, lab2=, loff=0
!   reloc[746]: knd=0, off=6902, siz=4, lab1=.L2351, lab2=, loff=0
!   reloc[747]: knd=0, off=6912, siz=4, lab1=.L2357, lab2=, loff=0
!   reloc[748]: knd=0, off=6923, siz=4, lab1=.L2365, lab2=, loff=0
!   reloc[749]: knd=0, off=6934, siz=4, lab1=.L2366, lab2=, loff=0
!   reloc[750]: knd=0, off=6942, siz=4, lab1=.L2367, lab2=, loff=0
!   reloc[751]: knd=0, off=6950, siz=4, lab1=.L2368, lab2=, loff=0
!   reloc[752]: knd=0, off=6958, siz=4, lab1=.L2370, lab2=, loff=0
!   reloc[753]: knd=0, off=6968, siz=4, lab1=.L2377, lab2=, loff=0
!   reloc[754]: knd=0, off=6978, siz=4, lab1=.L2380, lab2=, loff=0
!   reloc[755]: knd=0, off=6988, siz=4, lab1=.L2389, lab2=, loff=0
!   reloc[756]: knd=0, off=6998, siz=4, lab1=.L2390, lab2=, loff=0
!   reloc[757]: knd=0, off=7008, siz=4, lab1=.L2391, lab2=, loff=0
!   reloc[758]: knd=0, off=7016, siz=4, lab1=.L2394, lab2=, loff=0
!   reloc[759]: knd=0, off=7026, siz=4, lab1=.L2398, lab2=, loff=0
!   reloc[760]: knd=0, off=7034, siz=4, lab1=.L2404, lab2=, loff=0
!   reloc[761]: knd=0, off=7044, siz=4, lab1=.L2405, lab2=, loff=0
!   reloc[762]: knd=0, off=7052, siz=4, lab1=.L2406, lab2=, loff=0
!   reloc[763]: knd=0, off=7062, siz=4, lab1=.L2412, lab2=, loff=0
!   reloc[764]: knd=0, off=7073, siz=4, lab1=.L2419, lab2=, loff=0
!   reloc[765]: knd=0, off=7091, siz=4, lab1=flat_blend_color_z_line_write, lab2=, loff=0
!   reloc[766]: knd=0, off=7098, siz=4, lab1=.L2426, lab2=, loff=0
!   reloc[767]: knd=0, off=7110, siz=4, lab1=.L2427, lab2=, loff=0
!   reloc[768]: knd=0, off=7118, siz=4, lab1=.L2428, lab2=, loff=0
!   reloc[769]: knd=0, off=7126, siz=4, lab1=.L2429, lab2=, loff=0
!   reloc[770]: knd=0, off=7134, siz=4, lab1=.L2430, lab2=, loff=0
!   reloc[771]: knd=0, off=7142, siz=4, lab1=.L2431, lab2=, loff=0
!   reloc[772]: knd=0, off=7150, siz=4, lab1=.L2432, lab2=, loff=0
!   reloc[773]: knd=0, off=7158, siz=4, lab1=.L2433, lab2=, loff=0
!   reloc[774]: knd=0, off=7166, siz=4, lab1=.L2434, lab2=, loff=0
!   reloc[775]: knd=0, off=7174, siz=4, lab1=.L2435, lab2=, loff=0
!   reloc[776]: knd=0, off=7182, siz=4, lab1=.L2437, lab2=, loff=0
!   reloc[777]: knd=0, off=7195, siz=4, lab1=.L2438, lab2=, loff=0
!   reloc[778]: knd=0, off=7205, siz=4, lab1=.L2439, lab2=, loff=0
!   reloc[779]: knd=0, off=7213, siz=4, lab1=.L2441, lab2=, loff=0
!   reloc[780]: knd=0, off=7223, siz=4, lab1=.L2442, lab2=, loff=0
!   reloc[781]: knd=0, off=7231, siz=4, lab1=.L2445, lab2=, loff=0
!   reloc[782]: knd=0, off=7239, siz=4, lab1=.L2451, lab2=, loff=0
!   reloc[783]: knd=0, off=7247, siz=4, lab1=.L2454, lab2=, loff=0
!   reloc[784]: knd=0, off=7255, siz=4, lab1=.L2457, lab2=, loff=0
!   reloc[785]: knd=0, off=7263, siz=4, lab1=.L2458, lab2=, loff=0
!   reloc[786]: knd=0, off=7271, siz=4, lab1=.L2464, lab2=, loff=0
!   reloc[787]: knd=0, off=7279, siz=4, lab1=.L2470, lab2=, loff=0
!   reloc[788]: knd=0, off=7287, siz=4, lab1=.L2473, lab2=, loff=0
!   reloc[789]: knd=0, off=7295, siz=4, lab1=.L2476, lab2=, loff=0
!   reloc[790]: knd=0, off=7303, siz=4, lab1=.L2477, lab2=, loff=0
!   reloc[791]: knd=0, off=7311, siz=4, lab1=.L2482, lab2=, loff=0
!   reloc[792]: knd=0, off=7321, siz=4, lab1=.L2483, lab2=, loff=0
!   reloc[793]: knd=0, off=7329, siz=4, lab1=.L2486, lab2=, loff=0
!   reloc[794]: knd=0, off=7337, siz=4, lab1=.L2491, lab2=, loff=0
!   reloc[795]: knd=0, off=7345, siz=4, lab1=.L2495, lab2=, loff=0
!   reloc[796]: knd=0, off=7355, siz=4, lab1=.L2496, lab2=, loff=0
!   reloc[797]: knd=0, off=7363, siz=4, lab1=.L2497, lab2=, loff=0
!   reloc[798]: knd=0, off=7371, siz=4, lab1=.L2500, lab2=, loff=0
!   reloc[799]: knd=0, off=7381, siz=4, lab1=.L2504, lab2=, loff=0
!   reloc[800]: knd=0, off=7389, siz=4, lab1=.L2505, lab2=, loff=0
!   reloc[801]: knd=0, off=7397, siz=4, lab1=.L2506, lab2=, loff=0
!   reloc[802]: knd=0, off=7407, siz=4, lab1=.L2512, lab2=, loff=0
!   reloc[803]: knd=0, off=7417, siz=4, lab1=.L2513, lab2=, loff=0
!   reloc[804]: knd=0, off=7427, siz=4, lab1=.L2519, lab2=, loff=0
!   reloc[805]: knd=0, off=7437, siz=4, lab1=.L2523, lab2=, loff=0
!   reloc[806]: knd=0, off=7445, siz=4, lab1=.L2524, lab2=, loff=0
!   reloc[807]: knd=0, off=7453, siz=4, lab1=.L2525, lab2=, loff=0
!   reloc[808]: knd=0, off=7463, siz=4, lab1=.L2531, lab2=, loff=0
!   reloc[809]: knd=0, off=7473, siz=4, lab1=.L2532, lab2=, loff=0
!   reloc[810]: knd=0, off=7483, siz=4, lab1=.L2538, lab2=, loff=0
!   reloc[811]: knd=0, off=7493, siz=4, lab1=.L2542, lab2=, loff=0
!   reloc[812]: knd=0, off=7503, siz=4, lab1=.L2543, lab2=, loff=0
!   reloc[813]: knd=0, off=7511, siz=4, lab1=.L2544, lab2=, loff=0
!   reloc[814]: knd=0, off=7519, siz=4, lab1=.L2545, lab2=, loff=0
!   reloc[815]: knd=0, off=7527, siz=4, lab1=.L2547, lab2=, loff=0
!   reloc[816]: knd=0, off=7537, siz=4, lab1=.L2554, lab2=, loff=0
!   reloc[817]: knd=0, off=7547, siz=4, lab1=.L2557, lab2=, loff=0
!   reloc[818]: knd=0, off=7557, siz=4, lab1=.L2566, lab2=, loff=0
!   reloc[819]: knd=0, off=7567, siz=4, lab1=.L2567, lab2=, loff=0
!   reloc[820]: knd=0, off=7577, siz=4, lab1=.L2568, lab2=, loff=0
!   reloc[821]: knd=0, off=7585, siz=4, lab1=.L2571, lab2=, loff=0
!   reloc[822]: knd=0, off=7595, siz=4, lab1=.L2575, lab2=, loff=0
!   reloc[823]: knd=0, off=7603, siz=4, lab1=.L2581, lab2=, loff=0
!   reloc[824]: knd=0, off=7613, siz=4, lab1=.L2582, lab2=, loff=0
!   reloc[825]: knd=0, off=7621, siz=4, lab1=.L2583, lab2=, loff=0
!   reloc[826]: knd=0, off=7631, siz=4, lab1=.L2589, lab2=, loff=0
!   reloc[827]: knd=0, off=7642, siz=4, lab1=.L2597, lab2=, loff=0
!   reloc[828]: knd=0, off=7653, siz=4, lab1=.L2598, lab2=, loff=0
!   reloc[829]: knd=0, off=7661, siz=4, lab1=.L2599, lab2=, loff=0
!   reloc[830]: knd=0, off=7669, siz=4, lab1=.L2600, lab2=, loff=0
!   reloc[831]: knd=0, off=7677, siz=4, lab1=.L2602, lab2=, loff=0
!   reloc[832]: knd=0, off=7687, siz=4, lab1=.L2609, lab2=, loff=0
!   reloc[833]: knd=0, off=7697, siz=4, lab1=.L2612, lab2=, loff=0
!   reloc[834]: knd=0, off=7707, siz=4, lab1=.L2621, lab2=, loff=0
!   reloc[835]: knd=0, off=7717, siz=4, lab1=.L2622, lab2=, loff=0
!   reloc[836]: knd=0, off=7727, siz=4, lab1=.L2623, lab2=, loff=0
!   reloc[837]: knd=0, off=7735, siz=4, lab1=.L2626, lab2=, loff=0
!   reloc[838]: knd=0, off=7745, siz=4, lab1=.L2630, lab2=, loff=0
!   reloc[839]: knd=0, off=7753, siz=4, lab1=.L2636, lab2=, loff=0
!   reloc[840]: knd=0, off=7763, siz=4, lab1=.L2637, lab2=, loff=0
!   reloc[841]: knd=0, off=7771, siz=4, lab1=.L2638, lab2=, loff=0
!   reloc[842]: knd=0, off=7781, siz=4, lab1=.L2644, lab2=, loff=0
!   reloc[843]: knd=0, off=7792, siz=4, lab1=.L2651, lab2=, loff=0
!   reloc[844]: knd=0, off=7810, siz=4, lab1=choose_line_function, lab2=, loff=0
!   reloc[845]: knd=0, off=7817, siz=4, lab1=.L2658, lab2=, loff=0
!   reloc[846]: knd=0, off=7829, siz=4, lab1=.L2661, lab2=, loff=0
!   reloc[847]: knd=0, off=7837, siz=4, lab1=.L2668, lab2=, loff=0
!   reloc[848]: knd=0, off=7845, siz=4, lab1=.L2675, lab2=, loff=0
!   reloc[849]: knd=0, off=7853, siz=4, lab1=.L2682, lab2=, loff=0
!   reloc[850]: knd=0, off=7863, siz=4, lab1=.L2689, lab2=, loff=0
!   reloc[851]: knd=0, off=7873, siz=4, lab1=.L2698, lab2=, loff=0
!   reloc[852]: knd=0, off=7881, siz=4, lab1=.L2704, lab2=, loff=0
!   reloc[853]: knd=0, off=7891, siz=4, lab1=.L2706, lab2=, loff=0
!   reloc[854]: knd=0, off=7901, siz=4, lab1=.L2709, lab2=, loff=0
!   reloc[855]: knd=0, off=7911, siz=4, lab1=.L2717, lab2=, loff=0
!   reloc[856]: knd=0, off=7921, siz=4, lab1=.L2724, lab2=, loff=0
!   reloc[857]: knd=0, off=7929, siz=4, lab1=.L2730, lab2=, loff=0
!   reloc[858]: knd=0, off=7939, siz=4, lab1=.L2732, lab2=, loff=0
!   reloc[859]: knd=0, off=7949, siz=4, lab1=.L2735, lab2=, loff=0
!   reloc[860]: knd=0, off=7959, siz=4, lab1=.L2743, lab2=, loff=0
!   reloc[861]: knd=0, off=7969, siz=4, lab1=.L2755, lab2=, loff=0
!   reloc[862]: knd=0, off=7977, siz=4, lab1=.L2761, lab2=, loff=0
!   reloc[863]: knd=0, off=7987, siz=4, lab1=.L2763, lab2=, loff=0
!   reloc[864]: knd=0, off=7997, siz=4, lab1=.L2766, lab2=, loff=0
!   reloc[865]: knd=0, off=8007, siz=4, lab1=.L2774, lab2=, loff=0
!   reloc[866]: knd=0, off=8017, siz=4, lab1=.L2786, lab2=, loff=0
!   reloc[867]: knd=0, off=8025, siz=4, lab1=.L2792, lab2=, loff=0
!   reloc[868]: knd=0, off=8035, siz=4, lab1=.L2794, lab2=, loff=0
!   reloc[869]: knd=0, off=8045, siz=4, lab1=.L2797, lab2=, loff=0
!   reloc[870]: knd=0, off=8055, siz=4, lab1=.L2805, lab2=, loff=0
!   reloc[871]: knd=0, off=8065, siz=4, lab1=.L2815, lab2=, loff=0
!   reloc[872]: knd=0, off=8073, siz=4, lab1=.L2821, lab2=, loff=0
!   reloc[873]: knd=0, off=8083, siz=4, lab1=.L2823, lab2=, loff=0
!   reloc[874]: knd=0, off=8093, siz=4, lab1=.L2826, lab2=, loff=0
!   reloc[875]: knd=0, off=8103, siz=4, lab1=.L2835, lab2=, loff=0
!   reloc[876]: knd=0, off=8113, siz=4, lab1=.L2836, lab2=, loff=0
!   reloc[877]: knd=0, off=8126, siz=4, lab1=smooth_color_z_triangle, lab2=, loff=0
!   reloc[878]: knd=0, off=8133, siz=4, lab1=.L2843, lab2=, loff=0
!   reloc[879]: knd=0, off=8145, siz=4, lab1=.L2844, lab2=, loff=0
!   reloc[880]: knd=0, off=8153, siz=4, lab1=.L2845, lab2=, loff=0
!   reloc[881]: knd=0, off=8161, siz=4, lab1=.L2846, lab2=, loff=0
!   reloc[882]: knd=0, off=8169, siz=4, lab1=.L2847, lab2=, loff=0
!   reloc[883]: knd=0, off=8177, siz=4, lab1=.L2849, lab2=, loff=0
!   reloc[884]: knd=0, off=8190, siz=4, lab1=.L2851, lab2=, loff=0
!   reloc[885]: knd=0, off=8200, siz=4, lab1=.L2852, lab2=, loff=0
!   reloc[886]: knd=0, off=8208, siz=4, lab1=.L2853, lab2=, loff=0
!   reloc[887]: knd=0, off=8216, siz=4, lab1=.L2856, lab2=, loff=0
!   reloc[888]: knd=0, off=8224, siz=4, lab1=.L2862, lab2=, loff=0
!   reloc[889]: knd=0, off=8232, siz=4, lab1=.L2866, lab2=, loff=0
!   reloc[890]: knd=0, off=8240, siz=4, lab1=.L2873, lab2=, loff=0
!   reloc[891]: knd=0, off=8248, siz=4, lab1=.L2877, lab2=, loff=0
!   reloc[892]: knd=0, off=8256, siz=4, lab1=.L2883, lab2=, loff=0
!   reloc[893]: knd=0, off=8266, siz=4, lab1=.L2896, lab2=, loff=0
!   reloc[894]: knd=0, off=8276, siz=4, lab1=.L2900, lab2=, loff=0
!   reloc[895]: knd=0, off=8284, siz=4, lab1=.L2907, lab2=, loff=0
!   reloc[896]: knd=0, off=8292, siz=4, lab1=.L2911, lab2=, loff=0
!   reloc[897]: knd=0, off=8300, siz=4, lab1=.L2917, lab2=, loff=0
!   reloc[898]: knd=0, off=8310, siz=4, lab1=.L2927, lab2=, loff=0
!   reloc[899]: knd=0, off=8320, siz=4, lab1=.L2928, lab2=, loff=0
!   reloc[900]: knd=0, off=8328, siz=4, lab1=.L2929, lab2=, loff=0
!   reloc[901]: knd=0, off=8336, siz=4, lab1=.L2930, lab2=, loff=0
!   reloc[902]: knd=0, off=8346, siz=4, lab1=.L2931, lab2=, loff=0
!   reloc[903]: knd=0, off=8354, siz=4, lab1=.L2932, lab2=, loff=0
!   reloc[904]: knd=0, off=8362, siz=4, lab1=.L2933, lab2=, loff=0
!   reloc[905]: knd=0, off=8370, siz=4, lab1=.L2934, lab2=, loff=0
!   reloc[906]: knd=0, off=8378, siz=4, lab1=.L2935, lab2=, loff=0
!   reloc[907]: knd=0, off=8386, siz=4, lab1=.L2937, lab2=, loff=0
!   reloc[908]: knd=0, off=8396, siz=4, lab1=.L2940, lab2=, loff=0
!   reloc[909]: knd=0, off=8404, siz=4, lab1=.L2945, lab2=, loff=0
!   reloc[910]: knd=0, off=8412, siz=4, lab1=.L2949, lab2=, loff=0
!   reloc[911]: knd=0, off=8420, siz=4, lab1=.L2952, lab2=, loff=0
!   reloc[912]: knd=0, off=8430, siz=4, lab1=.L2953, lab2=, loff=0
!   reloc[913]: knd=0, off=8438, siz=4, lab1=.L2954, lab2=, loff=0
!   reloc[914]: knd=0, off=8446, siz=4, lab1=.L2955, lab2=, loff=0
!   reloc[915]: knd=0, off=8454, siz=4, lab1=.L2956, lab2=, loff=0
!   reloc[916]: knd=0, off=8462, siz=4, lab1=.L2957, lab2=, loff=0
!   reloc[917]: knd=0, off=8470, siz=4, lab1=.L2958, lab2=, loff=0
!   reloc[918]: knd=0, off=8478, siz=4, lab1=.L2961, lab2=, loff=0
!   reloc[919]: knd=0, off=8486, siz=4, lab1=.L2965, lab2=, loff=0
!   reloc[920]: knd=0, off=8494, siz=4, lab1=.L2966, lab2=, loff=0
!   reloc[921]: knd=0, off=8502, siz=4, lab1=.L2967, lab2=, loff=0
!   reloc[922]: knd=0, off=8510, siz=4, lab1=.L2968, lab2=, loff=0
!   reloc[923]: knd=0, off=8518, siz=4, lab1=.L2969, lab2=, loff=0
!   reloc[924]: knd=0, off=8526, siz=4, lab1=.L2975, lab2=, loff=0
!   reloc[925]: knd=0, off=8536, siz=4, lab1=.L2979, lab2=, loff=0
!   reloc[926]: knd=0, off=8546, siz=4, lab1=.L2980, lab2=, loff=0
!   reloc[927]: knd=0, off=8554, siz=4, lab1=.L2983, lab2=, loff=0
!   reloc[928]: knd=0, off=8562, siz=4, lab1=.L2987, lab2=, loff=0
!   reloc[929]: knd=0, off=8570, siz=4, lab1=.L2988, lab2=, loff=0
!   reloc[930]: knd=0, off=8578, siz=4, lab1=.L2989, lab2=, loff=0
!   reloc[931]: knd=0, off=8586, siz=4, lab1=.L2990, lab2=, loff=0
!   reloc[932]: knd=0, off=8594, siz=4, lab1=.L2991, lab2=, loff=0
!   reloc[933]: knd=0, off=8602, siz=4, lab1=.L2995, lab2=, loff=0
!   reloc[934]: knd=0, off=8612, siz=4, lab1=.L2996, lab2=, loff=0
!   reloc[935]: knd=0, off=8620, siz=4, lab1=.L2999, lab2=, loff=0
!   reloc[936]: knd=0, off=8628, siz=4, lab1=.L3003, lab2=, loff=0
!   reloc[937]: knd=0, off=8636, siz=4, lab1=.L3004, lab2=, loff=0
!   reloc[938]: knd=0, off=8644, siz=4, lab1=.L3005, lab2=, loff=0
!   reloc[939]: knd=0, off=8652, siz=4, lab1=.L3006, lab2=, loff=0
!   reloc[940]: knd=0, off=8660, siz=4, lab1=.L3007, lab2=, loff=0
!   reloc[941]: knd=0, off=8668, siz=4, lab1=.L3013, lab2=, loff=0
!   reloc[942]: knd=0, off=8679, siz=4, lab1=.L3015, lab2=, loff=0
!   reloc[943]: knd=0, off=8689, siz=4, lab1=.L3016, lab2=, loff=0
!   reloc[944]: knd=0, off=8697, siz=4, lab1=.L3017, lab2=, loff=0
!   reloc[945]: knd=0, off=8705, siz=4, lab1=.L3020, lab2=, loff=0
!   reloc[946]: knd=0, off=8713, siz=4, lab1=.L3026, lab2=, loff=0
!   reloc[947]: knd=0, off=8721, siz=4, lab1=.L3027, lab2=, loff=0
!   reloc[948]: knd=0, off=8729, siz=4, lab1=.L3033, lab2=, loff=0
!   reloc[949]: knd=0, off=8739, siz=4, lab1=.L3037, lab2=, loff=0
!   reloc[950]: knd=0, off=8749, siz=4, lab1=.L3040, lab2=, loff=0
!   reloc[951]: knd=0, off=8759, siz=4, lab1=.L3041, lab2=, loff=0
!   reloc[952]: knd=0, off=8767, siz=4, lab1=.L3042, lab2=, loff=0
!   reloc[953]: knd=0, off=8775, siz=4, lab1=.L3043, lab2=, loff=0
!   reloc[954]: knd=0, off=8783, siz=4, lab1=.L3044, lab2=, loff=0
!   reloc[955]: knd=0, off=8791, siz=4, lab1=.L3047, lab2=, loff=0
!   reloc[956]: knd=0, off=8801, siz=4, lab1=.L3048, lab2=, loff=0
!   reloc[957]: knd=0, off=8809, siz=4, lab1=.L3049, lab2=, loff=0
!   reloc[958]: knd=0, off=8817, siz=4, lab1=.L3050, lab2=, loff=0
!   reloc[959]: knd=0, off=8825, siz=4, lab1=.L3051, lab2=, loff=0
!   reloc[960]: knd=0, off=8833, siz=4, lab1=.L3054, lab2=, loff=0
!   reloc[961]: knd=0, off=8843, siz=4, lab1=.L3055, lab2=, loff=0
!   reloc[962]: knd=0, off=8851, siz=4, lab1=.L3056, lab2=, loff=0
!   reloc[963]: knd=0, off=8859, siz=4, lab1=.L3057, lab2=, loff=0
!   reloc[964]: knd=0, off=8867, siz=4, lab1=.L3058, lab2=, loff=0
!   reloc[965]: knd=0, off=8875, siz=4, lab1=.L3061, lab2=, loff=0
!   reloc[966]: knd=0, off=8885, siz=4, lab1=.L3062, lab2=, loff=0
!   reloc[967]: knd=0, off=8893, siz=4, lab1=.L3063, lab2=, loff=0
!   reloc[968]: knd=0, off=8901, siz=4, lab1=.L3064, lab2=, loff=0
!   reloc[969]: knd=0, off=8909, siz=4, lab1=.L3065, lab2=, loff=0
!   reloc[970]: knd=0, off=8917, siz=4, lab1=.L3069, lab2=, loff=0
!   reloc[971]: knd=0, off=8928, siz=4, lab1=.L3078, lab2=, loff=0
!   reloc[972]: knd=0, off=8938, siz=4, lab1=.L3084, lab2=, loff=0
!   reloc[973]: knd=0, off=8946, siz=4, lab1=.L3088, lab2=, loff=0
!   reloc[974]: knd=0, off=8954, siz=4, lab1=.L3089, lab2=, loff=0
!   reloc[975]: knd=0, off=8962, siz=4, lab1=.L3090, lab2=, loff=0
!   reloc[976]: knd=0, off=8970, siz=4, lab1=.L3091, lab2=, loff=0
!   reloc[977]: knd=0, off=8978, siz=4, lab1=.L3092, lab2=, loff=0
!   reloc[978]: knd=0, off=8986, siz=4, lab1=.L3098, lab2=, loff=0
!   reloc[979]: knd=0, off=8996, siz=4, lab1=.L3099, lab2=, loff=0
!   reloc[980]: knd=0, off=9004, siz=4, lab1=.L3100, lab2=, loff=0
!   reloc[981]: knd=0, off=9012, siz=4, lab1=.L3101, lab2=, loff=0
!   reloc[982]: knd=0, off=9020, siz=4, lab1=.L3102, lab2=, loff=0
!   reloc[983]: knd=0, off=9028, siz=4, lab1=.L3113, lab2=, loff=0
!   reloc[984]: knd=0, off=9038, siz=4, lab1=.L3117, lab2=, loff=0
!   reloc[985]: knd=0, off=9046, siz=4, lab1=.L3118, lab2=, loff=0
!   reloc[986]: knd=0, off=9054, siz=4, lab1=.L3119, lab2=, loff=0
!   reloc[987]: knd=0, off=9062, siz=4, lab1=.L3120, lab2=, loff=0
!   reloc[988]: knd=0, off=9070, siz=4, lab1=.L3121, lab2=, loff=0
!   reloc[989]: knd=0, off=9078, siz=4, lab1=.L3127, lab2=, loff=0
!   reloc[990]: knd=0, off=9088, siz=4, lab1=.L3128, lab2=, loff=0
!   reloc[991]: knd=0, off=9096, siz=4, lab1=.L3129, lab2=, loff=0
!   reloc[992]: knd=0, off=9104, siz=4, lab1=.L3130, lab2=, loff=0
!   reloc[993]: knd=0, off=9112, siz=4, lab1=.L3131, lab2=, loff=0
!   reloc[994]: knd=0, off=9120, siz=4, lab1=.L3137, lab2=, loff=0
!   reloc[995]: knd=0, off=9128, siz=4, lab1=.L3147, lab2=, loff=0
!   reloc[996]: knd=0, off=9138, siz=4, lab1=.L3152, lab2=, loff=0
!   reloc[997]: knd=0, off=9146, siz=4, lab1=.L3153, lab2=, loff=0
!   reloc[998]: knd=0, off=9154, siz=4, lab1=.L3154, lab2=, loff=0
!   reloc[999]: knd=0, off=9162, siz=4, lab1=.L3155, lab2=, loff=0
!   reloc[1000]: knd=0, off=9170, siz=4, lab1=.L3156, lab2=, loff=0
!   reloc[1001]: knd=0, off=9178, siz=4, lab1=.L3157, lab2=, loff=0
!   reloc[1002]: knd=0, off=9186, siz=4, lab1=.L3158, lab2=, loff=0
!   reloc[1003]: knd=0, off=9194, siz=4, lab1=.L3159, lab2=, loff=0
!   reloc[1004]: knd=0, off=9202, siz=4, lab1=.L3160, lab2=, loff=0
!   reloc[1005]: knd=0, off=9210, siz=4, lab1=.L3161, lab2=, loff=0
!   reloc[1006]: knd=0, off=9218, siz=4, lab1=.L3162, lab2=, loff=0
!   reloc[1007]: knd=0, off=9226, siz=4, lab1=.L3163, lab2=, loff=0
!   reloc[1008]: knd=0, off=9234, siz=4, lab1=.L3164, lab2=, loff=0
!   reloc[1009]: knd=0, off=9242, siz=4, lab1=.L3165, lab2=, loff=0
!   reloc[1010]: knd=0, off=9250, siz=4, lab1=.L3167, lab2=, loff=0
!   reloc[1011]: knd=0, off=9260, siz=4, lab1=.L3168, lab2=, loff=0
!   reloc[1012]: knd=0, off=9270, siz=4, lab1=.L3171, lab2=, loff=0
!   reloc[1013]: knd=0, off=9278, siz=4, lab1=.L3174, lab2=, loff=0
!   reloc[1014]: knd=0, off=9286, siz=4, lab1=.L3178, lab2=, loff=0
!   reloc[1015]: knd=0, off=9294, siz=4, lab1=.L3181, lab2=, loff=0
!   reloc[1016]: knd=0, off=9302, siz=4, lab1=.L3182, lab2=, loff=0
!   reloc[1017]: knd=0, off=9312, siz=4, lab1=.L3183, lab2=, loff=0
!   reloc[1018]: knd=0, off=9320, siz=4, lab1=.L3185, lab2=, loff=0
!   reloc[1019]: knd=0, off=9330, siz=4, lab1=.L3186, lab2=, loff=0
!   reloc[1020]: knd=0, off=9338, siz=4, lab1=.L3187, lab2=, loff=0
!   reloc[1021]: knd=0, off=9348, siz=4, lab1=.L3188, lab2=, loff=0
!   reloc[1022]: knd=0, off=9356, siz=4, lab1=.L3189, lab2=, loff=0
!   reloc[1023]: knd=0, off=9366, siz=4, lab1=.L3190, lab2=, loff=0
!   reloc[1024]: knd=0, off=9374, siz=4, lab1=.L3191, lab2=, loff=0
!   reloc[1025]: knd=0, off=9384, siz=4, lab1=.L3192, lab2=, loff=0
!   reloc[1026]: knd=0, off=9392, siz=4, lab1=.L3198, lab2=, loff=0
!   reloc[1027]: knd=0, off=9402, siz=4, lab1=.L3203, lab2=, loff=0
!   reloc[1028]: knd=0, off=9410, siz=4, lab1=.L3204, lab2=, loff=0
!   reloc[1029]: knd=0, off=9418, siz=4, lab1=.L3210, lab2=, loff=0
!   reloc[1030]: knd=0, off=9428, siz=4, lab1=.L3214, lab2=, loff=0
!   reloc[1031]: knd=0, off=9436, siz=4, lab1=.L3218, lab2=, loff=0
!   reloc[1032]: knd=0, off=9446, siz=4, lab1=.L3219, lab2=, loff=0
!   reloc[1033]: knd=0, off=9454, siz=4, lab1=.L3220, lab2=, loff=0
!   reloc[1034]: knd=0, off=9464, siz=4, lab1=.L3221, lab2=, loff=0
!   reloc[1035]: knd=0, off=9472, siz=4, lab1=.L3222, lab2=, loff=0
!   reloc[1036]: knd=0, off=9480, siz=4, lab1=.L3223, lab2=, loff=0
!   reloc[1037]: knd=0, off=9490, siz=4, lab1=.L3228, lab2=, loff=0
!   reloc[1038]: knd=0, off=9500, siz=4, lab1=.L3232, lab2=, loff=0
!   reloc[1039]: knd=0, off=9510, siz=4, lab1=.L3233, lab2=, loff=0
!   reloc[1040]: knd=0, off=9520, siz=4, lab1=.L3234, lab2=, loff=0
!   reloc[1041]: knd=0, off=9530, siz=4, lab1=.L3235, lab2=, loff=0
!   reloc[1042]: knd=0, off=9540, siz=4, lab1=.L3236, lab2=, loff=0
!   reloc[1043]: knd=0, off=9548, siz=4, lab1=.L3238, lab2=, loff=0
!   reloc[1044]: knd=0, off=9558, siz=4, lab1=.L3239, lab2=, loff=0
!   reloc[1045]: knd=0, off=9566, siz=4, lab1=.L3240, lab2=, loff=0
!   reloc[1046]: knd=0, off=9574, siz=4, lab1=.L3243, lab2=, loff=0
!   reloc[1047]: knd=0, off=9582, siz=4, lab1=.L3250, lab2=, loff=0
!   reloc[1048]: knd=0, off=9590, siz=4, lab1=.L3257, lab2=, loff=0
!   reloc[1049]: knd=0, off=9598, siz=4, lab1=.L3264, lab2=, loff=0
!   reloc[1050]: knd=0, off=9606, siz=4, lab1=.L3271, lab2=, loff=0
!   reloc[1051]: knd=0, off=9614, siz=4, lab1=.L3278, lab2=, loff=0
!   reloc[1052]: knd=0, off=9622, siz=4, lab1=.L3285, lab2=, loff=0
!   reloc[1053]: knd=0, off=9632, siz=4, lab1=.L3288, lab2=, loff=0
!   reloc[1054]: knd=0, off=9640, siz=4, lab1=.L3295, lab2=, loff=0
!   reloc[1055]: knd=0, off=9648, siz=4, lab1=.L3302, lab2=, loff=0
!   reloc[1056]: knd=0, off=9658, siz=4, lab1=.L3323, lab2=, loff=0
!   reloc[1057]: knd=0, off=9668, siz=4, lab1=.L3324, lab2=, loff=0
!   reloc[1058]: knd=0, off=9676, siz=4, lab1=.L3325, lab2=, loff=0
!   reloc[1059]: knd=0, off=9684, siz=4, lab1=.L3326, lab2=, loff=0
!   reloc[1060]: knd=0, off=9692, siz=4, lab1=.L3327, lab2=, loff=0
!   reloc[1061]: knd=0, off=9702, siz=4, lab1=.L3330, lab2=, loff=0
!   reloc[1062]: knd=0, off=9710, siz=4, lab1=.L3334, lab2=, loff=0
!   reloc[1063]: knd=0, off=9718, siz=4, lab1=.L3335, lab2=, loff=0
!   reloc[1064]: knd=0, off=9728, siz=4, lab1=.L3336, lab2=, loff=0
!   reloc[1065]: knd=0, off=9736, siz=4, lab1=.L3337, lab2=, loff=0
!   reloc[1066]: knd=0, off=9746, siz=4, lab1=.L3338, lab2=, loff=0
!   reloc[1067]: knd=0, off=9756, siz=4, lab1=.L3344, lab2=, loff=0
!   reloc[1068]: knd=0, off=9766, siz=4, lab1=.L3345, lab2=, loff=0
!   reloc[1069]: knd=0, off=9774, siz=4, lab1=.L3346, lab2=, loff=0
!   reloc[1070]: knd=0, off=9784, siz=4, lab1=.L3347, lab2=, loff=0
!   reloc[1071]: knd=0, off=9794, siz=4, lab1=.L3353, lab2=, loff=0
!   reloc[1072]: knd=0, off=9805, siz=4, lab1=.L3358, lab2=, loff=0
!   reloc[1073]: knd=0, off=9816, siz=4, lab1=.L3364, lab2=, loff=0
!   reloc[1074]: knd=0, off=9834, siz=4, lab1=flat_color_z_triangle, lab2=, loff=0
!   reloc[1075]: knd=0, off=9841, siz=4, lab1=.L3371, lab2=, loff=0
!   reloc[1076]: knd=0, off=9853, siz=4, lab1=.L3373, lab2=, loff=0
!   reloc[1077]: knd=0, off=9866, siz=4, lab1=.L3375, lab2=, loff=0
!   reloc[1078]: knd=0, off=9876, siz=4, lab1=.L3376, lab2=, loff=0
!   reloc[1079]: knd=0, off=9884, siz=4, lab1=.L3377, lab2=, loff=0
!   reloc[1080]: knd=0, off=9892, siz=4, lab1=.L3380, lab2=, loff=0
!   reloc[1081]: knd=0, off=9900, siz=4, lab1=.L3386, lab2=, loff=0
!   reloc[1082]: knd=0, off=9908, siz=4, lab1=.L3390, lab2=, loff=0
!   reloc[1083]: knd=0, off=9916, siz=4, lab1=.L3397, lab2=, loff=0
!   reloc[1084]: knd=0, off=9924, siz=4, lab1=.L3401, lab2=, loff=0
!   reloc[1085]: knd=0, off=9932, siz=4, lab1=.L3407, lab2=, loff=0
!   reloc[1086]: knd=0, off=9942, siz=4, lab1=.L3420, lab2=, loff=0
!   reloc[1087]: knd=0, off=9952, siz=4, lab1=.L3424, lab2=, loff=0
!   reloc[1088]: knd=0, off=9960, siz=4, lab1=.L3431, lab2=, loff=0
!   reloc[1089]: knd=0, off=9968, siz=4, lab1=.L3435, lab2=, loff=0
!   reloc[1090]: knd=0, off=9976, siz=4, lab1=.L3441, lab2=, loff=0
!   reloc[1091]: knd=0, off=9986, siz=4, lab1=.L3451, lab2=, loff=0
!   reloc[1092]: knd=0, off=9996, siz=4, lab1=.L3452, lab2=, loff=0
!   reloc[1093]: knd=0, off=10004, siz=4, lab1=.L3453, lab2=, loff=0
!   reloc[1094]: knd=0, off=10012, siz=4, lab1=.L3454, lab2=, loff=0
!   reloc[1095]: knd=0, off=10022, siz=4, lab1=.L3455, lab2=, loff=0
!   reloc[1096]: knd=0, off=10030, siz=4, lab1=.L3456, lab2=, loff=0
!   reloc[1097]: knd=0, off=10038, siz=4, lab1=.L3457, lab2=, loff=0
!   reloc[1098]: knd=0, off=10046, siz=4, lab1=.L3458, lab2=, loff=0
!   reloc[1099]: knd=0, off=10054, siz=4, lab1=.L3459, lab2=, loff=0
!   reloc[1100]: knd=0, off=10062, siz=4, lab1=.L3461, lab2=, loff=0
!   reloc[1101]: knd=0, off=10072, siz=4, lab1=.L3464, lab2=, loff=0
!   reloc[1102]: knd=0, off=10080, siz=4, lab1=.L3469, lab2=, loff=0
!   reloc[1103]: knd=0, off=10088, siz=4, lab1=.L3473, lab2=, loff=0
!   reloc[1104]: knd=0, off=10096, siz=4, lab1=.L3476, lab2=, loff=0
!   reloc[1105]: knd=0, off=10106, siz=4, lab1=.L3477, lab2=, loff=0
!   reloc[1106]: knd=0, off=10114, siz=4, lab1=.L3478, lab2=, loff=0
!   reloc[1107]: knd=0, off=10122, siz=4, lab1=.L3479, lab2=, loff=0
!   reloc[1108]: knd=0, off=10130, siz=4, lab1=.L3480, lab2=, loff=0
!   reloc[1109]: knd=0, off=10138, siz=4, lab1=.L3481, lab2=, loff=0
!   reloc[1110]: knd=0, off=10146, siz=4, lab1=.L3482, lab2=, loff=0
!   reloc[1111]: knd=0, off=10154, siz=4, lab1=.L3485, lab2=, loff=0
!   reloc[1112]: knd=0, off=10162, siz=4, lab1=.L3489, lab2=, loff=0
!   reloc[1113]: knd=0, off=10170, siz=4, lab1=.L3490, lab2=, loff=0
!   reloc[1114]: knd=0, off=10178, siz=4, lab1=.L3491, lab2=, loff=0
!   reloc[1115]: knd=0, off=10186, siz=4, lab1=.L3492, lab2=, loff=0
!   reloc[1116]: knd=0, off=10194, siz=4, lab1=.L3493, lab2=, loff=0
!   reloc[1117]: knd=0, off=10202, siz=4, lab1=.L3499, lab2=, loff=0
!   reloc[1118]: knd=0, off=10212, siz=4, lab1=.L3503, lab2=, loff=0
!   reloc[1119]: knd=0, off=10222, siz=4, lab1=.L3504, lab2=, loff=0
!   reloc[1120]: knd=0, off=10230, siz=4, lab1=.L3507, lab2=, loff=0
!   reloc[1121]: knd=0, off=10238, siz=4, lab1=.L3511, lab2=, loff=0
!   reloc[1122]: knd=0, off=10246, siz=4, lab1=.L3512, lab2=, loff=0
!   reloc[1123]: knd=0, off=10254, siz=4, lab1=.L3513, lab2=, loff=0
!   reloc[1124]: knd=0, off=10262, siz=4, lab1=.L3514, lab2=, loff=0
!   reloc[1125]: knd=0, off=10270, siz=4, lab1=.L3515, lab2=, loff=0
!   reloc[1126]: knd=0, off=10278, siz=4, lab1=.L3519, lab2=, loff=0
!   reloc[1127]: knd=0, off=10288, siz=4, lab1=.L3520, lab2=, loff=0
!   reloc[1128]: knd=0, off=10296, siz=4, lab1=.L3523, lab2=, loff=0
!   reloc[1129]: knd=0, off=10304, siz=4, lab1=.L3527, lab2=, loff=0
!   reloc[1130]: knd=0, off=10312, siz=4, lab1=.L3528, lab2=, loff=0
!   reloc[1131]: knd=0, off=10320, siz=4, lab1=.L3529, lab2=, loff=0
!   reloc[1132]: knd=0, off=10328, siz=4, lab1=.L3530, lab2=, loff=0
!   reloc[1133]: knd=0, off=10336, siz=4, lab1=.L3531, lab2=, loff=0
!   reloc[1134]: knd=0, off=10344, siz=4, lab1=.L3537, lab2=, loff=0
!   reloc[1135]: knd=0, off=10355, siz=4, lab1=.L3538, lab2=, loff=0
!   reloc[1136]: knd=0, off=10365, siz=4, lab1=.L3540, lab2=, loff=0
!   reloc[1137]: knd=0, off=10375, siz=4, lab1=.L3541, lab2=, loff=0
!   reloc[1138]: knd=0, off=10383, siz=4, lab1=.L3542, lab2=, loff=0
!   reloc[1139]: knd=0, off=10391, siz=4, lab1=.L3545, lab2=, loff=0
!   reloc[1140]: knd=0, off=10399, siz=4, lab1=.L3551, lab2=, loff=0
!   reloc[1141]: knd=0, off=10407, siz=4, lab1=.L3552, lab2=, loff=0
!   reloc[1142]: knd=0, off=10415, siz=4, lab1=.L3558, lab2=, loff=0
!   reloc[1143]: knd=0, off=10425, siz=4, lab1=.L3562, lab2=, loff=0
!   reloc[1144]: knd=0, off=10435, siz=4, lab1=.L3566, lab2=, loff=0
!   reloc[1145]: knd=0, off=10446, siz=4, lab1=.L3575, lab2=, loff=0
!   reloc[1146]: knd=0, off=10456, siz=4, lab1=.L3581, lab2=, loff=0
!   reloc[1147]: knd=0, off=10464, siz=4, lab1=.L3585, lab2=, loff=0
!   reloc[1148]: knd=0, off=10472, siz=4, lab1=.L3586, lab2=, loff=0
!   reloc[1149]: knd=0, off=10480, siz=4, lab1=.L3587, lab2=, loff=0
!   reloc[1150]: knd=0, off=10488, siz=4, lab1=.L3588, lab2=, loff=0
!   reloc[1151]: knd=0, off=10496, siz=4, lab1=.L3589, lab2=, loff=0
!   reloc[1152]: knd=0, off=10504, siz=4, lab1=.L3595, lab2=, loff=0
!   reloc[1153]: knd=0, off=10514, siz=4, lab1=.L3596, lab2=, loff=0
!   reloc[1154]: knd=0, off=10522, siz=4, lab1=.L3597, lab2=, loff=0
!   reloc[1155]: knd=0, off=10530, siz=4, lab1=.L3598, lab2=, loff=0
!   reloc[1156]: knd=0, off=10538, siz=4, lab1=.L3599, lab2=, loff=0
!   reloc[1157]: knd=0, off=10546, siz=4, lab1=.L3610, lab2=, loff=0
!   reloc[1158]: knd=0, off=10556, siz=4, lab1=.L3614, lab2=, loff=0
!   reloc[1159]: knd=0, off=10564, siz=4, lab1=.L3615, lab2=, loff=0
!   reloc[1160]: knd=0, off=10572, siz=4, lab1=.L3616, lab2=, loff=0
!   reloc[1161]: knd=0, off=10580, siz=4, lab1=.L3617, lab2=, loff=0
!   reloc[1162]: knd=0, off=10588, siz=4, lab1=.L3618, lab2=, loff=0
!   reloc[1163]: knd=0, off=10596, siz=4, lab1=.L3624, lab2=, loff=0
!   reloc[1164]: knd=0, off=10606, siz=4, lab1=.L3625, lab2=, loff=0
!   reloc[1165]: knd=0, off=10614, siz=4, lab1=.L3626, lab2=, loff=0
!   reloc[1166]: knd=0, off=10622, siz=4, lab1=.L3627, lab2=, loff=0
!   reloc[1167]: knd=0, off=10630, siz=4, lab1=.L3628, lab2=, loff=0
!   reloc[1168]: knd=0, off=10638, siz=4, lab1=.L3634, lab2=, loff=0
!   reloc[1169]: knd=0, off=10646, siz=4, lab1=.L3644, lab2=, loff=0
!   reloc[1170]: knd=0, off=10656, siz=4, lab1=.L3649, lab2=, loff=0
!   reloc[1171]: knd=0, off=10664, siz=4, lab1=.L3650, lab2=, loff=0
!   reloc[1172]: knd=0, off=10672, siz=4, lab1=.L3651, lab2=, loff=0
!   reloc[1173]: knd=0, off=10680, siz=4, lab1=.L3652, lab2=, loff=0
!   reloc[1174]: knd=0, off=10688, siz=4, lab1=.L3653, lab2=, loff=0
!   reloc[1175]: knd=0, off=10696, siz=4, lab1=.L3654, lab2=, loff=0
!   reloc[1176]: knd=0, off=10704, siz=4, lab1=.L3655, lab2=, loff=0
!   reloc[1177]: knd=0, off=10712, siz=4, lab1=.L3656, lab2=, loff=0
!   reloc[1178]: knd=0, off=10720, siz=4, lab1=.L3657, lab2=, loff=0
!   reloc[1179]: knd=0, off=10728, siz=4, lab1=.L3658, lab2=, loff=0
!   reloc[1180]: knd=0, off=10736, siz=4, lab1=.L3659, lab2=, loff=0
!   reloc[1181]: knd=0, off=10744, siz=4, lab1=.L3660, lab2=, loff=0
!   reloc[1182]: knd=0, off=10752, siz=4, lab1=.L3661, lab2=, loff=0
!   reloc[1183]: knd=0, off=10760, siz=4, lab1=.L3662, lab2=, loff=0
!   reloc[1184]: knd=0, off=10768, siz=4, lab1=.L3664, lab2=, loff=0
!   reloc[1185]: knd=0, off=10778, siz=4, lab1=.L3665, lab2=, loff=0
!   reloc[1186]: knd=0, off=10788, siz=4, lab1=.L3668, lab2=, loff=0
!   reloc[1187]: knd=0, off=10796, siz=4, lab1=.L3671, lab2=, loff=0
!   reloc[1188]: knd=0, off=10804, siz=4, lab1=.L3675, lab2=, loff=0
!   reloc[1189]: knd=0, off=10812, siz=4, lab1=.L3678, lab2=, loff=0
!   reloc[1190]: knd=0, off=10820, siz=4, lab1=.L3679, lab2=, loff=0
!   reloc[1191]: knd=0, off=10830, siz=4, lab1=.L3680, lab2=, loff=0
!   reloc[1192]: knd=0, off=10838, siz=4, lab1=.L3687, lab2=, loff=0
!   reloc[1193]: knd=0, off=10849, siz=4, lab1=.L3692, lab2=, loff=0
!   reloc[1194]: knd=0, off=10857, siz=4, lab1=.L3693, lab2=, loff=0
!   reloc[1195]: knd=0, off=10865, siz=4, lab1=.L3699, lab2=, loff=0
!   reloc[1196]: knd=0, off=10875, siz=4, lab1=.L3703, lab2=, loff=0
!   reloc[1197]: knd=0, off=10883, siz=4, lab1=.L3707, lab2=, loff=0
!   reloc[1198]: knd=0, off=10893, siz=4, lab1=.L3708, lab2=, loff=0
!   reloc[1199]: knd=0, off=10901, siz=4, lab1=.L3713, lab2=, loff=0
!   reloc[1200]: knd=0, off=10911, siz=4, lab1=.L3717, lab2=, loff=0
!   reloc[1201]: knd=0, off=10921, siz=4, lab1=.L3718, lab2=, loff=0
!   reloc[1202]: knd=0, off=10931, siz=4, lab1=.L3719, lab2=, loff=0
!   reloc[1203]: knd=0, off=10939, siz=4, lab1=.L3721, lab2=, loff=0
!   reloc[1204]: knd=0, off=10949, siz=4, lab1=.L3742, lab2=, loff=0
!   reloc[1205]: knd=0, off=10959, siz=4, lab1=.L3743, lab2=, loff=0
!   reloc[1206]: knd=0, off=10967, siz=4, lab1=.L3744, lab2=, loff=0
!   reloc[1207]: knd=0, off=10975, siz=4, lab1=.L3745, lab2=, loff=0
!   reloc[1208]: knd=0, off=10983, siz=4, lab1=.L3746, lab2=, loff=0
!   reloc[1209]: knd=0, off=10993, siz=4, lab1=.L3749, lab2=, loff=0
!   reloc[1210]: knd=0, off=11001, siz=4, lab1=.L3753, lab2=, loff=0
!   reloc[1211]: knd=0, off=11009, siz=4, lab1=.L3754, lab2=, loff=0
!   reloc[1212]: knd=0, off=11019, siz=4, lab1=.L3755, lab2=, loff=0
!   reloc[1213]: knd=0, off=11027, siz=4, lab1=.L3761, lab2=, loff=0
!   reloc[1214]: knd=0, off=11037, siz=4, lab1=.L3762, lab2=, loff=0
!   reloc[1215]: knd=0, off=11045, siz=4, lab1=.L3768, lab2=, loff=0
!   reloc[1216]: knd=0, off=11056, siz=4, lab1=.L3773, lab2=, loff=0
!   reloc[1217]: knd=0, off=11067, siz=4, lab1=.L3779, lab2=, loff=0
!   reloc[1218]: knd=0, off=11085, siz=4, lab1=choose_triangle_function, lab2=, loff=0
!   reloc[1219]: knd=0, off=11092, siz=4, lab1=.L3786, lab2=, loff=0
!   reloc[1220]: knd=0, off=11104, siz=4, lab1=.L3789, lab2=, loff=0
!   reloc[1221]: knd=0, off=11112, siz=4, lab1=.L3798, lab2=, loff=0
!   reloc[1222]: knd=0, off=11120, siz=4, lab1=.L3805, lab2=, loff=0
!   reloc[1223]: knd=0, off=11128, siz=4, lab1=.L3812, lab2=, loff=0
!   reloc[1224]: knd=0, off=11136, siz=4, lab1=.L3819, lab2=, loff=0
!   reloc[1225]: knd=0, off=11146, siz=4, lab1=.L3828, lab2=, loff=0
!   reloc[1226]: knd=0, off=11154, siz=4, lab1=.L3832, lab2=, loff=0
!   reloc[1227]: knd=0, off=11162, siz=4, lab1=.L3837, lab2=, loff=0
!   reloc[1228]: knd=0, off=11172, siz=4, lab1=.L3844, lab2=, loff=0
!   reloc[1229]: knd=0, off=11182, siz=4, lab1=.L3845, lab2=, loff=0
!   reloc[1230]: knd=0, off=11195, siz=4, lab1=renderer_string, lab2=, loff=0
!   reloc[1231]: knd=0, off=11202, siz=4, lab1=.L3852, lab2=, loff=0
!   reloc[1232]: knd=0, off=11214, siz=4, lab1=.L3854, lab2=, loff=0
!   reloc[1233]: knd=0, off=11227, siz=4, lab1=osmesa_setup_DD_pointers, lab2=, loff=0
!   reloc[1234]: knd=0, off=11234, siz=4, lab1=.L3861, lab2=, loff=0
!   reloc[1235]: knd=0, off=11246, siz=4, lab1=.L3862, lab2=, loff=0
!   reloc[1236]: knd=0, off=11254, siz=4, lab1=.L3863, lab2=, loff=0
!   reloc[1237]: knd=0, off=11262, siz=4, lab1=.L3864, lab2=, loff=0
!   reloc[1238]: knd=0, off=11270, siz=4, lab1=.L3865, lab2=, loff=0
!   reloc[1239]: knd=0, off=11278, siz=4, lab1=.L3866, lab2=, loff=0
!   reloc[1240]: knd=0, off=11286, siz=4, lab1=.L3867, lab2=, loff=0
!   reloc[1241]: knd=0, off=11294, siz=4, lab1=.L3868, lab2=, loff=0
!   reloc[1242]: knd=0, off=11302, siz=4, lab1=.L3869, lab2=, loff=0
!   reloc[1243]: knd=0, off=11310, siz=4, lab1=.L3870, lab2=, loff=0
!   reloc[1244]: knd=0, off=11318, siz=4, lab1=.L3871, lab2=, loff=0
!   reloc[1245]: knd=0, off=11326, siz=4, lab1=.L3872, lab2=, loff=0
!   reloc[1246]: knd=0, off=11334, siz=4, lab1=.L3873, lab2=, loff=0
!   reloc[1247]: knd=0, off=11342, siz=4, lab1=.L3876, lab2=, loff=0
!   reloc[1248]: knd=0, off=11352, siz=4, lab1=.L3882, lab2=, loff=0
!   reloc[1249]: knd=0, off=11360, siz=4, lab1=.L3883, lab2=, loff=0
!   reloc[1250]: knd=0, off=11368, siz=4, lab1=.L3884, lab2=, loff=0
!   reloc[1251]: knd=0, off=11376, siz=4, lab1=.L3885, lab2=, loff=0
!   reloc[1252]: knd=0, off=11384, siz=4, lab1=.L3886, lab2=, loff=0
!   reloc[1253]: knd=0, off=11392, siz=4, lab1=.L3887, lab2=, loff=0
!   reloc[1254]: knd=0, off=11400, siz=4, lab1=.L3893, lab2=, loff=0
!   reloc[1255]: knd=0, off=11410, siz=4, lab1=.L3894, lab2=, loff=0
!   reloc[1256]: knd=0, off=11418, siz=4, lab1=.L3895, lab2=, loff=0
!   reloc[1257]: knd=0, off=11426, siz=4, lab1=.L3896, lab2=, loff=0
!   reloc[1258]: knd=0, off=11434, siz=4, lab1=.L3897, lab2=, loff=0
!   reloc[1259]: knd=0, off=11442, siz=4, lab1=.L3898, lab2=, loff=0
!   reloc[1260]: knd=0, off=11450, siz=4, lab1=.L3902, lab2=, loff=0
!   reloc[1261]: knd=0, off=11460, siz=4, lab1=.L3903, lab2=, loff=0
!   reloc[1262]: knd=0, off=11468, siz=4, lab1=.L3904, lab2=, loff=0
!   reloc[1263]: knd=0, off=11476, siz=4, lab1=.L3905, lab2=, loff=0
!   reloc[1264]: knd=0, off=11484, siz=4, lab1=.L3906, lab2=, loff=0
!   reloc[1265]: knd=0, off=11492, siz=4, lab1=.L3907, lab2=, loff=0
!   reloc[1266]: knd=0, off=11500, siz=4, lab1=.L3908, lab2=, loff=0
	.section ".debug_line"
	.byte 0x00,0x00,0x2c,0xf2,0x00,0x02,0x00,0x00
	.byte 0x00,0xf0,0x04,0x00,0xff,0x04,0x0a,0x00
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x01
	.byte 0x2f,0x68,0x6f,0x6d,0x65,0x2f,0x66,0x61
	.byte 0x63,0x75,0x6c,0x74,0x79,0x2f,0x6b,0x6f
	.byte 0x70,0x70,0x65,0x6c,0x2f,0x74,0x65,0x61
	.byte 0x63,0x68,0x2f,0x67,0x70,0x63,0x6f,0x6d
	.byte 0x2f,0x67,0x70,0x75,0x70,0x2f,0x72,0x73
	.byte 0x69,0x6d,0x2f,0x6d,0x65,0x73,0x61,0x2f
	.byte 0x6e,0x6f,0x2d,0x6f,0x70,0x74,0x00,0x47
	.byte 0x4c,0x00,0x00,0x6f,0x73,0x6d,0x65,0x73
	.byte 0x61,0x2e,0x63,0x00,0x01,0x00,0x00,0x74
	.byte 0x79,0x70,0x65,0x73,0x2e,0x68,0x00,0x01
	.byte 0x00,0x00,0x67,0x6c,0x2e,0x68,0x00,0x02
	.byte 0x00,0x00,0x64,0x64,0x2e,0x68,0x00,0x01
	.byte 0x00,0x00,0x76,0x62,0x2e,0x68,0x00,0x01
	.byte 0x00,0x00,0x6f,0x73,0x6d,0x65,0x73,0x61
	.byte 0x2e,0x68,0x00,0x02,0x00,0x00,0x6c,0x69
	.byte 0x6e,0x65,0x74,0x65,0x6d,0x70,0x2e,0x68
	.byte 0x00,0x01,0x00,0x00,0x6c,0x69,0x6e,0x65
	.byte 0x74,0x65,0x6d,0x70,0x2e,0x68,0x00,0x01
	.byte 0x00,0x00,0x6c,0x69,0x6e,0x65,0x74,0x65
	.byte 0x6d,0x70,0x2e,0x68,0x00,0x01,0x00,0x00
	.byte 0x6c,0x69,0x6e,0x65,0x74,0x65,0x6d,0x70
	.byte 0x2e,0x68,0x00,0x01,0x00,0x00,0x6c,0x69
	.byte 0x6e,0x65,0x74,0x65,0x6d,0x70,0x2e,0x68
	.byte 0x00,0x01,0x00,0x00,0x74,0x72,0x69,0x74
	.byte 0x65,0x6d,0x70,0x2e,0x68,0x00,0x01,0x00
	.byte 0x00,0x66,0x69,0x78,0x65,0x64,0x2e,0x68
	.byte 0x00,0x01,0x00,0x00,0x74,0x72,0x69,0x74
	.byte 0x65,0x6d,0x70,0x2e,0x68,0x00,0x01,0x00
	.byte 0x00,0x00,0x00,0x05,0x02
	.uaword OSMesaCreateContext
	.byte 0x00,0x05,0x02
	.uaword .L16
	.byte 0x06,0x03,0xa6,0x01,0x01,0x00,0x05,0x02
	.uaword .L17
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L18
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L19
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L20
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L23
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L27
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L28
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L29
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L30
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L37
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L41
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L42
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L45
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L49
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L50
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L51
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L52
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L58
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L59
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L60
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L61
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L65
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L72
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L76
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L77
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L80
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L84
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L85
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L86
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L87
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L93
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L94
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L95
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L96
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L100
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L107
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L111
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L112
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L115
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L119
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L120
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L121
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L122
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L128
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L129
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L130
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L131
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L135
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L142
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L146
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L147
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L148
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L149
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L150
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L151
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L152
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L153
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L154
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L155
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L156
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L163
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L167
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L168
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L169
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L170
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L171
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L172
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L173
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L174
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L175
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L176
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L177
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L183
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L197
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L200
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L204
	.byte 0x03,0x09,0x01,0x00,0x05,0x02
	.uaword .L207
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L211
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L215
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L221
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L225
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L226
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L227
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L231
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L234
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L238
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L239
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L240
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L241
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L245
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L246
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L247
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L248
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L249
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L250
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L251
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L252
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L253
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L254
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L255
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L256
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L257
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L258
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L259
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L260
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L264
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L265
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword OSMesaDestroyContext
	.byte 0x00,0x05,0x02
	.uaword .L274
	.byte 0x06,0x03,0xbf,0x02,0x01,0x00,0x05,0x02
	.uaword .L278
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L279
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L280
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L281
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L285
	.byte 0x0d,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword compute_row_addresses
	.byte 0x00,0x05,0x02
	.uaword .L294
	.byte 0x06,0x03,0xd0,0x02,0x01,0x00,0x05,0x02
	.uaword .L300
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L304
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L306
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L313
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L316
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L326
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L332
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L334
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L341
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L344
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L352
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L354
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L361
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L364
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L380
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L384
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L386
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L393
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L396
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L406
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L412
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L414
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L421
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L424
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L432
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L434
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L441
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L444
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L456
	.byte 0x03,0x06,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword OSMesaMakeCurrent
	.byte 0x00,0x05,0x02
	.uaword .L465
	.byte 0x06,0x03,0xa4,0x03,0x01,0x00,0x05,0x02
	.uaword .L476
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L480
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L481
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L482
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L483
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L486
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L489
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L493
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L496
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L497
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L498
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L501
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L505
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L506
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L507
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L511
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L512
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword OSMesaGetCurrentContext
	.byte 0x00,0x05,0x02
	.uaword .L519
	.byte 0x06,0x03,0xd2,0x03,0x01,0x00,0x05,0x02
	.uaword .L520
	.byte 0x0d,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword OSMesaPixelStore
	.byte 0x00,0x05,0x02
	.uaword .L527
	.byte 0x06,0x03,0xda,0x03,0x01,0x00,0x05,0x02
	.uaword .L531
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L537
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L541
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L543
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L547
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L548
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L549
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L551
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L555
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L557
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L559
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L562
	.byte 0x03,0x71,0x01,0x00,0x05,0x02
	.uaword .L565
	.byte 0x03,0x12,0x01,0x00,0x05,0x02
	.uaword .L566
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword OSMesaGetIntegerv
	.byte 0x00,0x05,0x02
	.uaword .L573
	.byte 0x06,0x03,0xf4,0x03,0x01,0x00,0x05,0x02
	.uaword .L577
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L581
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L582
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L584
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L585
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L587
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L588
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L590
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L591
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L593
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L594
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L596
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L597
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L599
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L601
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L604
	.byte 0x03,0x6b,0x01,0x00,0x05,0x02
	.uaword .L607
	.byte 0x03,0x17,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword OSMesaGetDepthBuffer
	.byte 0x00,0x05,0x02
	.uaword .L616
	.byte 0x06,0x03,0x9c,0x04,0x01,0x00,0x05,0x02
	.uaword .L622
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L623
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L624
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L625
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L626
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L631
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L632
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L633
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L634
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L635
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L639
	.byte 0x0d,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword set_buffer
	.byte 0x00,0x05,0x02
	.uaword .L648
	.byte 0x06,0x03,0xcf,0x04,0x01,0x00,0x05,0x02
	.uaword .L652
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L657
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L661
	.byte 0x0d,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword clear_index
	.byte 0x00,0x05,0x02
	.uaword .L668
	.byte 0x06,0x03,0xda,0x04,0x01,0x00,0x05,0x02
	.uaword .L669
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L670
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword clear_color
	.byte 0x00,0x05,0x02
	.uaword .L677
	.byte 0x06,0x03,0xe3,0x04,0x01,0x00,0x05,0x02
	.uaword .L678
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L679
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword clear
	.byte 0x00,0x05,0x02
	.uaword .L686
	.byte 0x06,0x03,0xec,0x04,0x01,0x00,0x05,0x02
	.uaword .L689
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L695
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L699
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L706
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L713
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L715
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L722
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L725
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L730
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L742
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L748
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L749
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L750
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L751
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L752
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L753
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L756
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L760
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L761
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L763
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L770
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L771
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L772
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L773
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L776
	.byte 0x03,0x7c,0x01,0x00,0x05,0x02
	.uaword .L785
	.byte 0x03,0x0a,0x01,0x00,0x05,0x02
	.uaword .L792
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L794
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L801
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L802
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L803
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L804
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L807
	.byte 0x03,0x7c,0x01,0x00,0x05,0x02
	.uaword .L812
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L825
	.byte 0x03,0x0c,0x01,0x00,0x05,0x02
	.uaword .L829
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L830
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L832
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L839
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L842
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L851
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L858
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L860
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L867
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L870
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L875
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L886
	.byte 0x03,0x08,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword set_index
	.byte 0x00,0x05,0x02
	.uaword .L893
	.byte 0x06,0x03,0xb9,0x05,0x01,0x00,0x05,0x02
	.uaword .L894
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L895
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword set_color
	.byte 0x00,0x05,0x02
	.uaword .L902
	.byte 0x06,0x03,0xc2,0x05,0x01,0x00,0x05,0x02
	.uaword .L903
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L904
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword buffer_size
	.byte 0x00,0x05,0x02
	.uaword .L911
	.byte 0x06,0x03,0xca,0x05,0x01,0x00,0x05,0x02
	.uaword .L912
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L913
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L914
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword write_color_span
	.byte 0x00,0x05,0x02
	.uaword .L921
	.byte 0x06,0x03,0xda,0x05,0x01,0x00,0x05,0x02
	.uaword .L922
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L923
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L924
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L925
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L926
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L929
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L934
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L943
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L947
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L953
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L962
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L969
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L972
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L978
	.byte 0x03,0x04,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword write_monocolor_span
	.byte 0x00,0x05,0x02
	.uaword .L985
	.byte 0x06,0x03,0xf5,0x05,0x01,0x00,0x05,0x02
	.uaword .L986
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L988
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L997
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1001
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1007
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L1010
	.byte 0x03,0x05,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword write_color_pixels
	.byte 0x00,0x05,0x02
	.uaword .L1017
	.byte 0x06,0x03,0x87,0x06,0x01,0x00,0x05,0x02
	.uaword .L1018
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1019
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1020
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1021
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1023
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1032
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1036
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1037
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1043
	.byte 0x03,0x7d,0x01,0x00,0x05,0x02
	.uaword .L1046
	.byte 0x03,0x06,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword write_monocolor_pixels
	.byte 0x00,0x05,0x02
	.uaword .L1053
	.byte 0x06,0x03,0x9b,0x06,0x01,0x00,0x05,0x02
	.uaword .L1055
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1064
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1068
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1069
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1075
	.byte 0x03,0x7d,0x01,0x00,0x05,0x02
	.uaword .L1078
	.byte 0x03,0x06,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword write_index_span
	.byte 0x00,0x05,0x02
	.uaword .L1085
	.byte 0x06,0x03,0xab,0x06,0x01,0x00,0x05,0x02
	.uaword .L1086
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1088
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1097
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1101
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1107
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L1110
	.byte 0x03,0x05,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword write_monoindex_span
	.byte 0x00,0x05,0x02
	.uaword .L1117
	.byte 0x06,0x03,0xbb,0x06,0x01,0x00,0x05,0x02
	.uaword .L1118
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1120
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1129
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1133
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1139
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L1142
	.byte 0x03,0x05,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword write_index_pixels
	.byte 0x00,0x05,0x02
	.uaword .L1149
	.byte 0x06,0x03,0xcb,0x06,0x01,0x00,0x05,0x02
	.uaword .L1151
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1160
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1164
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1165
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1171
	.byte 0x03,0x7d,0x01,0x00,0x05,0x02
	.uaword .L1174
	.byte 0x03,0x06,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword write_monoindex_pixels
	.byte 0x00,0x05,0x02
	.uaword .L1181
	.byte 0x06,0x03,0xdb,0x06,0x01,0x00,0x05,0x02
	.uaword .L1183
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1192
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1196
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1197
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1203
	.byte 0x03,0x7d,0x01,0x00,0x05,0x02
	.uaword .L1206
	.byte 0x03,0x06,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword read_index_span
	.byte 0x00,0x05,0x02
	.uaword .L1213
	.byte 0x06,0x03,0xea,0x06,0x01,0x00,0x05,0x02
	.uaword .L1214
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1216
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1223
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1226
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L1229
	.byte 0x03,0x03,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword read_color_span
	.byte 0x00,0x05,0x02
	.uaword .L1236
	.byte 0x06,0x03,0xf8,0x06,0x01,0x00,0x05,0x02
	.uaword .L1237
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1239
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1246
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1247
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1248
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1249
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1250
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1253
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1256
	.byte 0x03,0x07,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword read_index_pixels
	.byte 0x00,0x05,0x02
	.uaword .L1263
	.byte 0x06,0x03,0x89,0x07,0x01,0x00,0x05,0x02
	.uaword .L1265
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1274
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1278
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1279
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1285
	.byte 0x03,0x7d,0x01,0x00,0x05,0x02
	.uaword .L1288
	.byte 0x03,0x06,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword read_color_pixels
	.byte 0x00,0x05,0x02
	.uaword .L1295
	.byte 0x06,0x03,0x9a,0x07,0x01,0x00,0x05,0x02
	.uaword .L1297
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1306
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1310
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1311
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1312
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1313
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1314
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1315
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1321
	.byte 0x03,0x79,0x01,0x00,0x05,0x02
	.uaword .L1324
	.byte 0x03,0x0a,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword write_color_span3
	.byte 0x00,0x05,0x02
	.uaword .L1331
	.byte 0x06,0x03,0xb2,0x07,0x01,0x00,0x05,0x02
	.uaword .L1332
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1333
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1334
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1335
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1338
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1343
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1352
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1356
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1357
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1358
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1364
	.byte 0x03,0x7c,0x01,0x00,0x05,0x02
	.uaword .L1373
	.byte 0x03,0x09,0x01,0x00,0x05,0x02
	.uaword .L1380
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1381
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1382
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1385
	.byte 0x03,0x7d,0x01,0x00,0x05,0x02
	.uaword .L1391
	.byte 0x03,0x06,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword write_monocolor_span3
	.byte 0x00,0x05,0x02
	.uaword .L1398
	.byte 0x06,0x03,0xce,0x07,0x01,0x00,0x05,0x02
	.uaword .L1399
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1400
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1401
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1402
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1403
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1404
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1405
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1407
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1416
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1420
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1421
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1422
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1428
	.byte 0x03,0x7c,0x01,0x00,0x05,0x02
	.uaword .L1431
	.byte 0x03,0x07,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword write_color_pixels3
	.byte 0x00,0x05,0x02
	.uaword .L1438
	.byte 0x06,0x03,0xe9,0x07,0x01,0x00,0x05,0x02
	.uaword .L1439
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1440
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1441
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1443
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1452
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1456
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1457
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1458
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1459
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1465
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1468
	.byte 0x03,0x08,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword write_monocolor_pixels3
	.byte 0x00,0x05,0x02
	.uaword .L1475
	.byte 0x06,0x03,0xfd,0x07,0x01,0x00,0x05,0x02
	.uaword .L1476
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1477
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1478
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1479
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1480
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1481
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1483
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1492
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1496
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1497
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1498
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1499
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1505
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1508
	.byte 0x03,0x08,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword read_color_span3
	.byte 0x00,0x05,0x02
	.uaword .L1515
	.byte 0x06,0x03,0x94,0x08,0x01,0x00,0x05,0x02
	.uaword .L1516
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1517
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1518
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1519
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1521
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1528
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1529
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1530
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1531
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1534
	.byte 0x03,0x7c,0x01,0x00,0x05,0x02
	.uaword .L1537
	.byte 0x03,0x06,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword read_color_pixels3
	.byte 0x00,0x05,0x02
	.uaword .L1544
	.byte 0x06,0x03,0xa8,0x08,0x01,0x00,0x05,0x02
	.uaword .L1545
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1546
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1547
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1549
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1558
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1562
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1563
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1564
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1565
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1566
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1572
	.byte 0x03,0x7a,0x01,0x00,0x05,0x02
	.uaword .L1575
	.byte 0x03,0x09,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword flat_color_line
	.byte 0x00,0x05,0x02
	.uaword .L1582
	.byte 0x06,0x03,0xc4,0x08,0x01,0x00,0x05,0x02
	.uaword .L1583
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1584
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1586
	.byte 0x04,0x07,0x03,0x90,0x78,0x01,0x00,0x05
	.byte 0x02
	.uaword .L1587
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1588
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1590
	.byte 0x03,0x3c,0x01,0x00,0x05,0x02
	.uaword .L1591
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1594
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1600
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1603
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1606
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1607
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1613
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1619
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1622
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1625
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1626
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1631
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1632
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1635
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1640
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1646
	.byte 0x03,0x18,0x01,0x00,0x05,0x02
	.uaword .L1650
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1651
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1657
	.byte 0x03,0x0b,0x01,0x00,0x05,0x02
	.uaword .L1663
	.byte 0x03,0x0a,0x01,0x00,0x05,0x02
	.uaword .L1667
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1668
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1674
	.byte 0x03,0x0b,0x01,0x00,0x05,0x02
	.uaword .L1680
	.byte 0x03,0x0e,0x01,0x00,0x05,0x02
	.uaword .L1684
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1685
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1686
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1688
	.byte 0x03,0x1f,0x01,0x00,0x05,0x02
	.uaword .L1696
	.byte 0x03,0x1b,0x01,0x00,0x05,0x02
	.uaword .L1698
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1701
	.byte 0x03,0x21,0x01,0x00,0x05,0x02
	.uaword .L1705
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1711
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1712
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1718
	.byte 0x03,0xb6,0x7f,0x01,0x00,0x05,0x02
	.uaword .L1726
	.byte 0x03,0xda,0x00,0x01,0x00,0x05,0x02
	.uaword .L1727
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1728
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1730
	.byte 0x03,0x1f,0x01,0x00,0x05,0x02
	.uaword .L1738
	.byte 0x03,0x1b,0x01,0x00,0x05,0x02
	.uaword .L1740
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1743
	.byte 0x03,0x21,0x01,0x00,0x05,0x02
	.uaword .L1747
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1753
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1754
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1760
	.byte 0x03,0xb6,0x7f,0x01,0x00,0x05,0x02
	.uaword .L1767
	.byte 0x04,0x01,0x03,0xb5,0x05,0x01,0x02,0x01
	.byte 0x00,0x01,0x01,0x00,0x05,0x02
	.uaword flat_color_z_line
	.byte 0x00,0x05,0x02
	.uaword .L1774
	.byte 0x06,0x03,0xd6,0x08,0x01,0x00,0x05,0x02
	.uaword .L1775
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1776
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1778
	.byte 0x04,0x08,0x03,0xfe,0x77,0x01,0x00,0x05
	.byte 0x02
	.uaword .L1779
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1780
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1782
	.byte 0x03,0x3c,0x01,0x00,0x05,0x02
	.uaword .L1783
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1786
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1792
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1795
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1798
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1799
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1805
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1811
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1814
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1817
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1818
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1823
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1824
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1827
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1832
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1836
	.byte 0x03,0x0b,0x01,0x00,0x05,0x02
	.uaword .L1837
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1838
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1841
	.byte 0x03,0x0a,0x01,0x00,0x05,0x02
	.uaword .L1845
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1846
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1847
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1853
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1854
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1860
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L1864
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1865
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1866
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1872
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1873
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1879
	.byte 0x03,0x0b,0x01,0x00,0x05,0x02
	.uaword .L1883
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1884
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1885
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1886
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1888
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L1895
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1898
	.byte 0x03,0x13,0x01,0x00,0x05,0x02
	.uaword .L1905
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1906
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1907
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1910
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L1914
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1920
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1921
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1922
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1928
	.byte 0x03,0xb3,0x7f,0x01,0x00,0x05,0x02
	.uaword .L1936
	.byte 0x03,0xda,0x00,0x01,0x00,0x05,0x02
	.uaword .L1937
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1938
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1939
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1941
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L1948
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1951
	.byte 0x03,0x13,0x01,0x00,0x05,0x02
	.uaword .L1958
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1959
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1960
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1963
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L1967
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1973
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1974
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1975
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1981
	.byte 0x03,0xb3,0x7f,0x01,0x00,0x05,0x02
	.uaword .L1988
	.byte 0x04,0x01,0x03,0xcd,0x05,0x01,0x02,0x01
	.byte 0x00,0x01,0x01,0x00,0x05,0x02
	.uaword flat_blend_color_line
	.byte 0x00,0x05,0x02
	.uaword .L1995
	.byte 0x06,0x03,0xee,0x08,0x01,0x00,0x05,0x02
	.uaword .L1996
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1997
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1998
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1999
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2000
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2001
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2002
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2003
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2004
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2006
	.byte 0x04,0x09,0x03,0xdf,0x77,0x01,0x00,0x05
	.byte 0x02
	.uaword .L2007
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L2008
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2010
	.byte 0x03,0x3c,0x01,0x00,0x05,0x02
	.uaword .L2011
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2014
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2020
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2023
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2026
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2027
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2033
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2039
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2042
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2045
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2046
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2051
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L2052
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2055
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2060
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2066
	.byte 0x03,0x18,0x01,0x00,0x05,0x02
	.uaword .L2070
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2071
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2077
	.byte 0x03,0x0b,0x01,0x00,0x05,0x02
	.uaword .L2083
	.byte 0x03,0x0a,0x01,0x00,0x05,0x02
	.uaword .L2087
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2088
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2094
	.byte 0x03,0x0b,0x01,0x00,0x05,0x02
	.uaword .L2100
	.byte 0x03,0x0e,0x01,0x00,0x05,0x02
	.uaword .L2104
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L2105
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2106
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2108
	.byte 0x03,0x1f,0x01,0x00,0x05,0x02
	.uaword .L2116
	.byte 0x03,0x1b,0x01,0x00,0x05,0x02
	.uaword .L2118
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2121
	.byte 0x03,0x21,0x01,0x00,0x05,0x02
	.uaword .L2125
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2131
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2132
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2138
	.byte 0x03,0xb6,0x7f,0x01,0x00,0x05,0x02
	.uaword .L2146
	.byte 0x03,0xda,0x00,0x01,0x00,0x05,0x02
	.uaword .L2147
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2148
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2150
	.byte 0x03,0x1f,0x01,0x00,0x05,0x02
	.uaword .L2158
	.byte 0x03,0x1b,0x01,0x00,0x05,0x02
	.uaword .L2160
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2163
	.byte 0x03,0x21,0x01,0x00,0x05,0x02
	.uaword .L2167
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2173
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2174
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2180
	.byte 0x03,0xb6,0x7f,0x01,0x00,0x05,0x02
	.uaword .L2187
	.byte 0x04,0x01,0x03,0xed,0x05,0x01,0x02,0x01
	.byte 0x00,0x01,0x01,0x00,0x05,0x02
	.uaword flat_blend_color_z_line
	.byte 0x00,0x05,0x02
	.uaword .L2194
	.byte 0x06,0x03,0x8d,0x09,0x01,0x00,0x05,0x02
	.uaword .L2195
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2196
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2197
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2198
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2199
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2200
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2201
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2202
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2203
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2205
	.byte 0x04,0x0a,0x03,0xc0,0x77,0x01,0x00,0x05
	.byte 0x02
	.uaword .L2206
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L2207
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2209
	.byte 0x03,0x3c,0x01,0x00,0x05,0x02
	.uaword .L2210
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2213
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2219
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2222
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2225
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2226
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2232
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2238
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2241
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2244
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2245
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2250
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L2251
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2254
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2259
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2263
	.byte 0x03,0x0b,0x01,0x00,0x05,0x02
	.uaword .L2264
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2265
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2268
	.byte 0x03,0x0a,0x01,0x00,0x05,0x02
	.uaword .L2272
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2273
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2274
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2280
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2281
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2287
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L2291
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2292
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2293
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2299
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2300
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2306
	.byte 0x03,0x0b,0x01,0x00,0x05,0x02
	.uaword .L2310
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L2311
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2312
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2313
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2315
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L2322
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2325
	.byte 0x03,0x13,0x01,0x00,0x05,0x02
	.uaword .L2334
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2335
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2336
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2339
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L2343
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2349
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2350
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2351
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2357
	.byte 0x03,0xb3,0x7f,0x01,0x00,0x05,0x02
	.uaword .L2365
	.byte 0x03,0xda,0x00,0x01,0x00,0x05,0x02
	.uaword .L2366
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2367
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2368
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2370
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L2377
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2380
	.byte 0x03,0x13,0x01,0x00,0x05,0x02
	.uaword .L2389
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2390
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2391
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2394
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L2398
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2404
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2405
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2406
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2412
	.byte 0x03,0xb3,0x7f,0x01,0x00,0x05,0x02
	.uaword .L2419
	.byte 0x04,0x01,0x03,0x8f,0x06,0x01,0x02,0x01
	.byte 0x00,0x01,0x01,0x00,0x05,0x02
	.uaword flat_blend_color_z_line_write
	.byte 0x00,0x05,0x02
	.uaword .L2426
	.byte 0x06,0x03,0xaf,0x09,0x01,0x00,0x05,0x02
	.uaword .L2427
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2428
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2429
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2430
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2431
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2432
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2433
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2434
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2435
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2437
	.byte 0x04,0x0b,0x03,0x9e,0x77,0x01,0x00,0x05
	.byte 0x02
	.uaword .L2438
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L2439
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2441
	.byte 0x03,0x3c,0x01,0x00,0x05,0x02
	.uaword .L2442
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2445
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2451
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2454
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2457
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2458
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2464
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2470
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2473
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2476
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2477
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2482
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L2483
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2486
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2491
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2495
	.byte 0x03,0x0b,0x01,0x00,0x05,0x02
	.uaword .L2496
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2497
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2500
	.byte 0x03,0x0a,0x01,0x00,0x05,0x02
	.uaword .L2504
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2505
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2506
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2512
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2513
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2519
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L2523
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2524
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2525
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2531
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2532
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2538
	.byte 0x03,0x0b,0x01,0x00,0x05,0x02
	.uaword .L2542
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L2543
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2544
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2545
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2547
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L2554
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2557
	.byte 0x03,0x13,0x01,0x00,0x05,0x02
	.uaword .L2566
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2567
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2568
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2571
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L2575
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2581
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2582
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2583
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2589
	.byte 0x03,0xb3,0x7f,0x01,0x00,0x05,0x02
	.uaword .L2597
	.byte 0x03,0xda,0x00,0x01,0x00,0x05,0x02
	.uaword .L2598
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2599
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2600
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2602
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L2609
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2612
	.byte 0x03,0x13,0x01,0x00,0x05,0x02
	.uaword .L2621
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L2622
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2623
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2626
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L2630
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2636
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2637
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2638
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2644
	.byte 0x03,0xb3,0x7f,0x01,0x00,0x05,0x02
	.uaword .L2651
	.byte 0x04,0x01,0x03,0xb2,0x06,0x01,0x02,0x01
	.byte 0x00,0x01,0x01,0x00,0x05,0x02
	.uaword choose_line_function
	.byte 0x00,0x05,0x02
	.uaword .L2658
	.byte 0x06,0x03,0xd3,0x09,0x01,0x00,0x05,0x02
	.uaword .L2661
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2668
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2675
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2682
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2689
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L2698
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2704
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L2706
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2709
	.byte 0x03,0x79,0x01,0x00,0x05,0x02
	.uaword .L2717
	.byte 0x03,0x0c,0x01,0x00,0x05,0x02
	.uaword .L2724
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2730
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L2732
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2735
	.byte 0x03,0x79,0x01,0x00,0x05,0x02
	.uaword .L2743
	.byte 0x03,0x11,0x01,0x00,0x05,0x02
	.uaword .L2755
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2761
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L2763
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2766
	.byte 0x03,0x79,0x01,0x00,0x05,0x02
	.uaword .L2774
	.byte 0x03,0x11,0x01,0x00,0x05,0x02
	.uaword .L2786
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2792
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L2794
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2797
	.byte 0x03,0x79,0x01,0x00,0x05,0x02
	.uaword .L2805
	.byte 0x03,0x0f,0x01,0x00,0x05,0x02
	.uaword .L2815
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2821
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L2823
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2826
	.byte 0x03,0x79,0x01,0x00,0x05,0x02
	.uaword .L2835
	.byte 0x03,0x0d,0x01,0x00,0x05,0x02
	.uaword .L2836
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword smooth_color_z_triangle
	.byte 0x00,0x05,0x02
	.uaword .L2843
	.byte 0x06,0x03,0xbc,0x0a,0x01,0x00,0x05,0x02
	.uaword .L2844
	.byte 0x0c,0x00,0x05
	.byte 0x02
	.uaword .L2845
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2846
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2847
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2849
	.byte 0x04,0x0c,0x03,0xc7,0x76,0x01,0x00,0x05
	.byte 0x02
	.uaword .L2851
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L2852
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2853
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2856
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2862
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2866
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2873
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2877
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2883
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2896
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L2900
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2907
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2911
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2917
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2927
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L2928
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2929
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2930
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2931
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2932
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2933
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2934
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2935
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2937
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L2940
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2945
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2949
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2952
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L2953
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2954
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2955
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2956
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2957
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L2958
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2961
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2965
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2966
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2967
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2968
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2969
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2975
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2979
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2980
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2983
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2987
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2988
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2989
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2990
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2991
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2995
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L2996
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L2999
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3003
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3004
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3005
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3006
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3007
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3013
	.byte 0x03,0xcb,0x00,0x01,0x00,0x05,0x02
	.uaword .L3015
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L3016
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3017
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3020
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3026
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3027
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3033
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3037
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3040
	.byte 0x03,0x09,0x01,0x00,0x05,0x02
	.uaword .L3041
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3042
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3043
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3044
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3047
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L3048
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3049
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3050
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3051
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3054
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L3055
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3056
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3057
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3058
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3061
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L3062
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3063
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3064
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3065
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3069
	.byte 0x03,0xa3,0x01,0x01,0x00,0x05,0x02
	.uaword .L3078
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L3084
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3088
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3089
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3090
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3091
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3092
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3098
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3099
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3100
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3101
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3102
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3113
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L3117
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3118
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3119
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3120
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3121
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3127
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3128
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3129
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3130
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3131
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3137
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3147
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3152
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3153
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3154
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3155
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3156
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3157
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3158
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3159
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3160
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3161
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3162
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3163
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3164
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3165
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3167
	.byte 0x03,0x16,0x01,0x00,0x05,0x02
	.uaword .L3168
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3171
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3174
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3178
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3181
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3182
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L3183
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3185
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L3186
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3187
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3188
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3189
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3190
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3191
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L3192
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3198
	.byte 0x03,0x2d,0x01,0x00,0x05,0x02
	.uaword .L3203
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3204
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3210
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3214
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3218
	.byte 0x03,0x09,0x01,0x00,0x05,0x02
	.uaword .L3219
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3220
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3221
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3222
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3223
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3228
	.byte 0x03,0x13,0x01,0x00,0x05,0x02
	.uaword .L3232
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L3233
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L3234
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3235
	.byte 0x03,0x0e,0x01,0x00,0x05,0x02
	.uaword .L3236
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3238
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L3239
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3240
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3243
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3250
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3257
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3264
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3271
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3278
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3285
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L3288
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3295
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3302
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L3323
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L3324
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3325
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3326
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3327
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3330
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3334
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3335
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L3336
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3337
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3338
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3344
	.byte 0x03,0x17,0x01,0x00,0x05,0x02
	.uaword .L3345
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3346
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3347
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3353
	.byte 0x03,0x90,0x7f,0x01,0x00,0x05,0x02
	.uaword .L3358
	.byte 0x03,0xb5,0x7e,0x01,0x00,0x05,0x02
	.uaword .L3364
	.byte 0x04,0x01,0x03,0xc6,0x06,0x01,0x02,0x01
	.byte 0x00,0x01,0x01,0x00,0x05,0x02
	.uaword flat_color_z_triangle
	.byte 0x00,0x05,0x02
	.uaword .L3371
	.byte 0x06,0x03,0xdf,0x0a,0x01,0x00,0x05,0x02
	.uaword .L3373
	.byte 0x04,0x0e,0x03,0xa8,0x76,0x01,0x00,0x05
	.byte 0x02
	.uaword .L3375
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L3376
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3377
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3380
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3386
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3390
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3397
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3401
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3407
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3420
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L3424
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3431
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3435
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3441
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3451
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L3452
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3453
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3454
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3455
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3456
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3457
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3458
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3459
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3461
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L3464
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3469
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3473
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3476
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L3477
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3478
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3479
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3480
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3481
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3482
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3485
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3489
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3490
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3491
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3492
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3493
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3499
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3503
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3504
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3507
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3511
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3512
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3513
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3514
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3515
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3519
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3520
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3523
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3527
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3528
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3529
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3530
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3531
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3537
	.byte 0x03,0xc8,0x00,0x01,0x00,0x05,0x02
	.uaword .L3538
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3540
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L3541
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3542
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3545
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3551
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3552
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3558
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3562
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3566
	.byte 0x03,0xca,0x01,0x01,0x00,0x05,0x02
	.uaword .L3575
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L3581
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3585
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3586
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3587
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3588
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3589
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3595
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3596
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3597
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3598
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3599
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3610
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L3614
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3615
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3616
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3617
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3618
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3624
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3625
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3626
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3627
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3628
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3634
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3644
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3649
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3650
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3651
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3652
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3653
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3654
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3655
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3656
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3657
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3658
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3659
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3660
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3661
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3662
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3664
	.byte 0x03,0x16,0x01,0x00,0x05,0x02
	.uaword .L3665
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3668
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3671
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3675
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3678
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3679
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L3680
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3687
	.byte 0x03,0xc0,0x00,0x01,0x00,0x05,0x02
	.uaword .L3692
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3693
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3699
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3703
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3707
	.byte 0x03,0x09,0x01,0x00,0x05,0x02
	.uaword .L3708
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3713
	.byte 0x03,0x1b,0x01,0x00,0x05,0x02
	.uaword .L3717
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L3718
	.byte 0x03,0x15,0x01,0x00,0x05,0x02
	.uaword .L3719
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3721
	.byte 0x03,0x1b,0x01,0x00,0x05,0x02
	.uaword .L3742
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L3743
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3744
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3745
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3746
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3749
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3753
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3754
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L3755
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3761
	.byte 0x03,0x1d,0x01,0x00,0x05,0x02
	.uaword .L3762
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3768
	.byte 0x03,0x96,0x7f,0x01,0x00,0x05,0x02
	.uaword .L3773
	.byte 0x03,0xb5,0x7e,0x01,0x00,0x05,0x02
	.uaword .L3779
	.byte 0x04,0x01,0x03,0xe8,0x06,0x01,0x02,0x01
	.byte 0x00,0x01,0x01,0x00,0x05,0x02
	.uaword choose_triangle_function
	.byte 0x00,0x05,0x02
	.uaword .L3786
	.byte 0x06,0x03,0xff,0x0a,0x01,0x00,0x05,0x02
	.uaword .L3789
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3798
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3805
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3812
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3819
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L3828
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3832
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3837
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3844
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3845
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword renderer_string
	.byte 0x00,0x05,0x02
	.uaword .L3852
	.byte 0x06,0x03,0x99,0x0b,0x01,0x00,0x05,0x02
	.uaword .L3854
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword osmesa_setup_DD_pointers
	.byte 0x00,0x05,0x02
	.uaword .L3861
	.byte 0x06,0x03,0x9f,0x0b,0x01,0x00,0x05,0x02
	.uaword .L3862
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3863
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3864
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3865
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3866
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3867
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3868
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3869
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3870
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3871
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L3872
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3873
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3876
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3882
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3883
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3884
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3885
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3886
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3887
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3893
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L3894
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3895
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3896
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3897
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3898
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3902
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L3903
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3904
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3905
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3906
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3907
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L3908
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01
!  End sdCreateSection
!  Begin sdCreateSection : .debug_abbrev
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
	.section ".debug_abbrev"
	.byte 0x01,0x11,0x01,0x03,0x08,0x13,0x0b,0x1b
	.byte 0x08,0x85,0x44,0x08,0x87,0x44,0x08,0x25
	.byte 0x08,0x10,0x06,0x00,0x00,0x02,0x24,0x00
	.byte 0x03,0x08,0x3e,0x0b,0x0b,0x0b,0x00,0x00
	.byte 0x03,0x16,0x00,0x49,0x13,0x03,0x08,0x3a
	.byte 0x0b,0x00,0x00,0x04,0x13,0x00,0x03,0x08
	.byte 0x3c,0x0c,0x00,0x00,0x05,0x0f,0x00,0x49
	.byte 0x13,0x00,0x00,0x06,0x01,0x01,0x49,0x13
	.byte 0x0b,0x0b,0x01,0x13,0x00,0x00,0x07,0x21
	.byte 0x00,0x49,0x13,0x2f,0x0b,0x00,0x00,0x08
	.byte 0x04,0x01,0x0b,0x0b,0x3a,0x0b,0x01,0x13
	.byte 0x00,0x00,0x09,0x28,0x00,0x03,0x08,0x1c
	.byte 0x0d,0x00,0x00,0x0a,0x13,0x01,0x03,0x08
	.byte 0x0b,0x0b,0x3a,0x0b,0x01,0x13,0x00,0x00
	.byte 0x0b,0x0d,0x00,0x03,0x08,0x49,0x13,0x38
	.byte 0x0a,0x00,0x00,0x0c,0x01,0x01,0x49,0x13
	.byte 0x0b,0x05,0x01,0x13,0x00,0x00,0x0d,0x21
	.byte 0x00,0x49,0x13,0x2f,0x05,0x00,0x00,0x0e
	.byte 0x13,0x01,0x03,0x08,0x0b,0x05,0x3a,0x0b
	.byte 0x01,0x13,0x00,0x00,0x0f,0x26,0x00,0x49
	.byte 0x13,0x00,0x00,0x10,0x15,0x01,0x27,0x0c
	.byte 0x88,0x44,0x0b,0x01,0x13,0x00,0x00,0x11
	.byte 0x05,0x00,0x49,0x13,0x00,0x00,0x12,0x15
	.byte 0x01,0x27,0x0c,0x49,0x13,0x88,0x44,0x0b
	.byte 0x01,0x13,0x00,0x00,0x13,0x15,0x00,0x27
	.byte 0x0c,0x49,0x13,0x88,0x44,0x0b,0x00,0x00
	.byte 0x14,0x01,0x01,0x49,0x13,0x0b,0x06,0x01
	.byte 0x13,0x00,0x00,0x15,0x13,0x01,0x03,0x08
	.byte 0x0b,0x06,0x3a,0x0b,0x01,0x13,0x00,0x00
	.byte 0x16,0x13,0x01,0x03,0x08,0x0b,0x05,0x01
	.byte 0x13,0x00,0x00,0x17,0x34,0x00,0x03,0x08
	.byte 0x49,0x13,0x17,0x0b,0x3a,0x0b,0x3b,0x0b
	.byte 0x02,0x0a,0x00,0x00,0x18,0x2e,0x01,0x03
	.byte 0x08,0x3f,0x0c,0x17,0x0b,0x3a,0x0b,0x3b
	.byte 0x0b,0x11,0x01,0x12,0x01,0x40,0x0a,0x27
	.byte 0x0c,0x49,0x13,0x88,0x44,0x0b,0x01,0x13
	.byte 0x00,0x00,0x19,0x05,0x00,0x49,0x13,0x03
	.byte 0x08,0x3a,0x0b,0x3b,0x0b,0x02,0x0a,0x00
	.byte 0x00,0x1a,0x2e,0x01,0x03,0x08,0x3f,0x0c
	.byte 0x17,0x0b,0x3a,0x0b,0x3b,0x05,0x11,0x01
	.byte 0x12,0x01,0x40,0x0a,0x27,0x0c,0x88,0x44
	.byte 0x0b,0x01,0x13,0x00,0x00,0x1b,0x05,0x00
	.byte 0x49,0x13,0x03,0x08,0x3a,0x0b,0x3b,0x05
	.byte 0x02,0x0a,0x00,0x00,0x1c,0x2e,0x01,0x03
	.byte 0x08,0x17,0x0b,0x3a,0x0b,0x3b,0x05,0x11
	.byte 0x01,0x12,0x01,0x40,0x0a,0x27,0x0c,0x88
	.byte 0x44,0x0b,0x01,0x13,0x00,0x00,0x1d,0x34
	.byte 0x00,0x03,0x08,0x49,0x13,0x17,0x0b,0x3a
	.byte 0x0b,0x3b,0x05,0x02,0x0a,0x00,0x00,0x1e
	.byte 0x0b,0x01,0x11,0x01,0x12,0x01,0x00,0x00
	.byte 0x1f,0x2e,0x01,0x03,0x08,0x3f,0x0c,0x17
	.byte 0x0b,0x3a,0x0b,0x3b,0x05,0x11,0x01,0x12
	.byte 0x01,0x40,0x0a,0x27,0x0c,0x49,0x13,0x88
	.byte 0x44,0x0b,0x01,0x13,0x00,0x00,0x20,0x2e
	.byte 0x00,0x03,0x08,0x3f,0x0c,0x17,0x0b,0x3a
	.byte 0x0b,0x3b,0x05,0x11,0x01,0x12,0x01,0x40
	.byte 0x0a,0x27,0x0c,0x49,0x13,0x88,0x44,0x0b
	.byte 0x00,0x00,0x21,0x2e,0x01,0x03,0x08,0x17
	.byte 0x0b,0x3a,0x0b,0x3b,0x05,0x11,0x01,0x12
	.byte 0x01,0x40,0x0a,0x27,0x0c,0x49,0x13,0x88
	.byte 0x44,0x0b,0x01,0x13,0x00,0x00,0x22,0x13
	.byte 0x01,0x0b,0x0b,0x3a,0x0b,0x00,0x00,0x23
	.byte 0x2e,0x00,0x03,0x08,0x17,0x0b,0x3a,0x0b
	.byte 0x3b,0x05,0x11,0x01,0x12,0x01,0x40,0x0a
	.byte 0x27,0x0c,0x49,0x13,0x88,0x44,0x0b,0x00
	.byte 0x00,0x24,0x2e,0x01,0x03,0x08,0x3f,0x0c
	.byte 0x3c,0x0c,0x27,0x0c,0x88,0x44,0x0b,0x01
	.byte 0x13,0x00,0x00,0x25,0x2e,0x01,0x03,0x08
	.byte 0x3f,0x0c,0x3c,0x0c,0x27,0x0c,0x49,0x13
	.byte 0x88,0x44,0x0b,0x01,0x13,0x00,0x00,0x26
	.byte 0x2e,0x01,0x03,0x08,0x3f,0x0c,0x3c,0x0c
	.byte 0x27,0x0c,0x49,0x13,0x88,0x44,0x0b,0x00
	.byte 0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_pubnames
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_info, lab2=, loff=0
	.section ".debug_pubnames"
	.byte 0x00,0x00,0x00,0xb8,0x00,0x02
	.uaword %section_symbol(".debug_info")
	.byte 0x00,0x00,0xdf,0x84,0x00,0x00,0x99,0xaf
	.byte 0x4f,0x53,0x4d,0x65,0x73,0x61,0x43,0x72
	.byte 0x65,0x61,0x74,0x65,0x43,0x6f,0x6e,0x74
	.byte 0x65,0x78,0x74,0x00,0x00,0x00,0x9b,0x49
	.byte 0x4f,0x53,0x4d,0x65,0x73,0x61,0x44,0x65
	.byte 0x73,0x74,0x72,0x6f,0x79,0x43,0x6f,0x6e
	.byte 0x74,0x65,0x78,0x74,0x00,0x00,0x00,0x9d
	.byte 0x3b,0x4f,0x53,0x4d,0x65,0x73,0x61,0x4d
	.byte 0x61,0x6b,0x65,0x43,0x75,0x72,0x72,0x65
	.byte 0x6e,0x74,0x00,0x00,0x00,0x9d,0xc1,0x4f
	.byte 0x53,0x4d,0x65,0x73,0x61,0x47,0x65,0x74
	.byte 0x43,0x75,0x72,0x72,0x65,0x6e,0x74,0x43
	.byte 0x6f,0x6e,0x74,0x65,0x78,0x74,0x00,0x00
	.byte 0x00,0x9d,0xef,0x4f,0x53,0x4d,0x65,0x73
	.byte 0x61,0x50,0x69,0x78,0x65,0x6c,0x53,0x74
	.byte 0x6f,0x72,0x65,0x00,0x00,0x00,0x9e,0x4b
	.byte 0x4f,0x53,0x4d,0x65,0x73,0x61,0x47,0x65
	.byte 0x74,0x49,0x6e,0x74,0x65,0x67,0x65,0x72
	.byte 0x76,0x00,0x00,0x00,0x9e,0xad,0x4f,0x53
	.byte 0x4d,0x65,0x73,0x61,0x47,0x65,0x74,0x44
	.byte 0x65,0x70,0x74,0x68,0x42,0x75,0x66,0x66
	.byte 0x65,0x72,0x00,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_funcnames
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_info, lab2=, loff=0
	.section ".debug_funcnames"
	.byte 0x00,0x00,0x03,0x50,0x00,0x02
	.uaword %section_symbol(".debug_info")
	.byte 0x00,0x00,0xdf,0x84,0x00,0x00,0x9b,0x85
	.byte 0x63,0x6f,0x6d,0x70,0x75,0x74,0x65,0x5f
	.byte 0x72,0x6f,0x77,0x5f,0x61,0x64,0x64,0x72
	.byte 0x65,0x73,0x73,0x65,0x73,0x00,0x00,0x00
	.byte 0x9f,0x3d,0x73,0x65,0x74,0x5f,0x62,0x75
	.byte 0x66,0x66,0x65,0x72,0x00,0x00,0x00,0x9f
	.byte 0x83,0x63,0x6c,0x65,0x61,0x72,0x5f,0x69
	.byte 0x6e,0x64,0x65,0x78,0x00,0x00,0x00,0x9f
	.byte 0xda,0x63,0x6c,0x65,0x61,0x72,0x5f,0x63
	.byte 0x6f,0x6c,0x6f,0x72,0x00,0x00,0x00,0xa0
	.byte 0x57,0x63,0x6c,0x65,0x61,0x72,0x00,0x00
	.byte 0x00,0xa3,0x64,0x73,0x65,0x74,0x5f,0x69
	.byte 0x6e,0x64,0x65,0x78,0x00,0x00,0x00,0xa3
	.byte 0xb9,0x73,0x65,0x74,0x5f,0x63,0x6f,0x6c
	.byte 0x6f,0x72,0x00,0x00,0x00,0xa4,0x34,0x62
	.byte 0x75,0x66,0x66,0x65,0x72,0x5f,0x73,0x69
	.byte 0x7a,0x65,0x00,0x00,0x00,0xa4,0x9e,0x77
	.byte 0x72,0x69,0x74,0x65,0x5f,0x63,0x6f,0x6c
	.byte 0x6f,0x72,0x5f,0x73,0x70,0x61,0x6e,0x00
	.byte 0x00,0x00,0xa6,0x05,0x77,0x72,0x69,0x74
	.byte 0x65,0x5f,0x6d,0x6f,0x6e,0x6f,0x63,0x6f
	.byte 0x6c,0x6f,0x72,0x5f,0x73,0x70,0x61,0x6e
	.byte 0x00,0x00,0x00,0xa6,0xb7,0x77,0x72,0x69
	.byte 0x74,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72
	.byte 0x5f,0x70,0x69,0x78,0x65,0x6c,0x73,0x00
	.byte 0x00,0x00,0xa8,0x70,0x77,0x72,0x69,0x74
	.byte 0x65,0x5f,0x6d,0x6f,0x6e,0x6f,0x63,0x6f
	.byte 0x6c,0x6f,0x72,0x5f,0x70,0x69,0x78,0x65
	.byte 0x6c,0x73,0x00,0x00,0x00,0xa9,0x74,0x77
	.byte 0x72,0x69,0x74,0x65,0x5f,0x69,0x6e,0x64
	.byte 0x65,0x78,0x5f,0x73,0x70,0x61,0x6e,0x00
	.byte 0x00,0x00,0xaa,0x3e,0x77,0x72,0x69,0x74
	.byte 0x65,0x5f,0x6d,0x6f,0x6e,0x6f,0x69,0x6e
	.byte 0x64,0x65,0x78,0x5f,0x73,0x70,0x61,0x6e
	.byte 0x00,0x00,0x00,0xaa,0xf0,0x77,0x72,0x69
	.byte 0x74,0x65,0x5f,0x69,0x6e,0x64,0x65,0x78
	.byte 0x5f,0x70,0x69,0x78,0x65,0x6c,0x73,0x00
	.byte 0x00,0x00,0xac,0x0c,0x77,0x72,0x69,0x74
	.byte 0x65,0x5f,0x6d,0x6f,0x6e,0x6f,0x69,0x6e
	.byte 0x64,0x65,0x78,0x5f,0x70,0x69,0x78,0x65
	.byte 0x6c,0x73,0x00,0x00,0x00,0xad,0x10,0x72
	.byte 0x65,0x61,0x64,0x5f,0x69,0x6e,0x64,0x65
	.byte 0x78,0x5f,0x73,0x70,0x61,0x6e,0x00,0x00
	.byte 0x00,0xad,0xb4,0x72,0x65,0x61,0x64,0x5f
	.byte 0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x73,0x70
	.byte 0x61,0x6e,0x00,0x00,0x00,0xae,0xbb,0x72
	.byte 0x65,0x61,0x64,0x5f,0x69,0x6e,0x64,0x65
	.byte 0x78,0x5f,0x70,0x69,0x78,0x65,0x6c,0x73
	.byte 0x00,0x00,0x00,0xaf,0xcc,0x72,0x65,0x61
	.byte 0x64,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f
	.byte 0x70,0x69,0x78,0x65,0x6c,0x73,0x00,0x00
	.byte 0x00,0xb1,0x22,0x77,0x72,0x69,0x74,0x65
	.byte 0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x73
	.byte 0x70,0x61,0x6e,0x33,0x00,0x00,0x00,0xb2
	.byte 0x71,0x77,0x72,0x69,0x74,0x65,0x5f,0x6d
	.byte 0x6f,0x6e,0x6f,0x63,0x6f,0x6c,0x6f,0x72
	.byte 0x5f,0x73,0x70,0x61,0x6e,0x33,0x00,0x00
	.byte 0x00,0xb3,0x8a,0x77,0x72,0x69,0x74,0x65
	.byte 0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x70
	.byte 0x69,0x78,0x65,0x6c,0x73,0x33,0x00,0x00
	.byte 0x00,0xb5,0x2b,0x77,0x72,0x69,0x74,0x65
	.byte 0x5f,0x6d,0x6f,0x6e,0x6f,0x63,0x6f,0x6c
	.byte 0x6f,0x72,0x5f,0x70,0x69,0x78,0x65,0x6c
	.byte 0x73,0x33,0x00,0x00,0x00,0xb6,0x96,0x72
	.byte 0x65,0x61,0x64,0x5f,0x63,0x6f,0x6c,0x6f
	.byte 0x72,0x5f,0x73,0x70,0x61,0x6e,0x33,0x00
	.byte 0x00,0x00,0xb7,0xa1,0x72,0x65,0x61,0x64
	.byte 0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x70
	.byte 0x69,0x78,0x65,0x6c,0x73,0x33,0x00,0x00
	.byte 0x00,0xb9,0x19,0x66,0x6c,0x61,0x74,0x5f
	.byte 0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x6c,0x69
	.byte 0x6e,0x65,0x00,0x00,0x00,0xbb,0xb5,0x66
	.byte 0x6c,0x61,0x74,0x5f,0x63,0x6f,0x6c,0x6f
	.byte 0x72,0x5f,0x7a,0x5f,0x6c,0x69,0x6e,0x65
	.byte 0x00,0x00,0x00,0xbe,0xf8,0x66,0x6c,0x61
	.byte 0x74,0x5f,0x62,0x6c,0x65,0x6e,0x64,0x5f
	.byte 0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x6c,0x69
	.byte 0x6e,0x65,0x00,0x00,0x00,0xc2,0x41,0x66
	.byte 0x6c,0x61,0x74,0x5f,0x62,0x6c,0x65,0x6e
	.byte 0x64,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f
	.byte 0x7a,0x5f,0x6c,0x69,0x6e,0x65,0x00,0x00
	.byte 0x00,0xc6,0x50,0x66,0x6c,0x61,0x74,0x5f
	.byte 0x62,0x6c,0x65,0x6e,0x64,0x5f,0x63,0x6f
	.byte 0x6c,0x6f,0x72,0x5f,0x7a,0x5f,0x6c,0x69
	.byte 0x6e,0x65,0x5f,0x77,0x72,0x69,0x74,0x65
	.byte 0x00,0x00,0x00,0xca,0x65,0x63,0x68,0x6f
	.byte 0x6f,0x73,0x65,0x5f,0x6c,0x69,0x6e,0x65
	.byte 0x5f,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f
	.byte 0x6e,0x00,0x00,0x00,0xca,0xb7,0x73,0x6d
	.byte 0x6f,0x6f,0x74,0x68,0x5f,0x63,0x6f,0x6c
	.byte 0x6f,0x72,0x5f,0x7a,0x5f,0x74,0x72,0x69
	.byte 0x61,0x6e,0x67,0x6c,0x65,0x00,0x00,0x00
	.byte 0xd5,0x4d,0x66,0x6c,0x61,0x74,0x5f,0x63
	.byte 0x6f,0x6c,0x6f,0x72,0x5f,0x7a,0x5f,0x74
	.byte 0x72,0x69,0x61,0x6e,0x67,0x6c,0x65,0x00
	.byte 0x00,0x00,0xdc,0x92,0x63,0x68,0x6f,0x6f
	.byte 0x73,0x65,0x5f,0x74,0x72,0x69,0x61,0x6e
	.byte 0x67,0x6c,0x65,0x5f,0x66,0x75,0x6e,0x63
	.byte 0x74,0x69,0x6f,0x6e,0x00,0x00,0x00,0xdc
	.byte 0xe8,0x72,0x65,0x6e,0x64,0x65,0x72,0x65
	.byte 0x72,0x5f,0x73,0x74,0x72,0x69,0x6e,0x67
	.byte 0x00,0x00,0x00,0xdd,0x17,0x6f,0x73,0x6d
	.byte 0x65,0x73,0x61,0x5f,0x73,0x65,0x74,0x75
	.byte 0x70,0x5f,0x44,0x44,0x5f,0x70,0x6f,0x69
	.byte 0x6e,0x74,0x65,0x72,0x73,0x00,0x00,0x00
	.byte 0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_typenames
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_info, lab2=, loff=0
	.section ".debug_typenames"
	.byte 0x00,0x00,0x04,0x68,0x00,0x02
	.uaword %section_symbol(".debug_info")
	.byte 0x00,0x00,0xdf,0x84,0x00,0x00,0x01,0x0a
	.byte 0x47,0x4c,0x69,0x6e,0x74,0x00,0x00,0x00
	.byte 0x01,0x33,0x47,0x4c,0x75,0x69,0x6e,0x74
	.byte 0x00,0x00,0x00,0x01,0x49,0x47,0x4c,0x66
	.byte 0x6c,0x6f,0x61,0x74,0x00,0x00,0x00,0x01
	.byte 0x70,0x00,0x00,0x00,0x31,0x0c,0x47,0x4c
	.byte 0x65,0x6e,0x75,0x6d,0x00,0x00,0x00,0x31
	.byte 0x2a,0x47,0x4c,0x75,0x62,0x79,0x74,0x65
	.byte 0x00,0x00,0x00,0x31,0x4a,0x67,0x6c,0x5f
	.byte 0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f
	.byte 0x69,0x6d,0x61,0x67,0x65,0x00,0x00,0x00
	.byte 0x32,0x7c,0x47,0x4c,0x62,0x6f,0x6f,0x6c
	.byte 0x65,0x61,0x6e,0x00,0x00,0x00,0x34,0x91
	.byte 0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x53
	.byte 0x61,0x6d,0x70,0x6c,0x65,0x46,0x75,0x6e
	.byte 0x63,0x00,0x00,0x00,0x32,0x8c,0x67,0x6c
	.byte 0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65
	.byte 0x5f,0x6f,0x62,0x6a,0x65,0x63,0x74,0x00
	.byte 0x00,0x00,0x34,0xae,0x67,0x6c,0x5f,0x73
	.byte 0x68,0x61,0x72,0x65,0x64,0x5f,0x73,0x74
	.byte 0x61,0x74,0x65,0x00,0x00,0x00,0x3c,0xd2
	.byte 0x47,0x4c,0x76,0x6f,0x69,0x64,0x00,0x00
	.byte 0x00,0x3c,0xe4,0x67,0x6c,0x5f,0x69,0x6d
	.byte 0x61,0x67,0x65,0x00,0x00,0x00,0x55,0x07
	.byte 0x67,0x6c,0x5f,0x61,0x70,0x69,0x5f,0x74
	.byte 0x61,0x62,0x6c,0x65,0x00,0x00,0x00,0x63
	.byte 0xab,0x67,0x6c,0x5f,0x76,0x69,0x73,0x75
	.byte 0x61,0x6c,0x00,0x00,0x00,0x65,0x53,0x47
	.byte 0x4c,0x76,0x69,0x73,0x75,0x61,0x6c,0x00
	.byte 0x00,0x00,0x65,0x67,0x47,0x4c,0x64,0x65
	.byte 0x70,0x74,0x68,0x00,0x00,0x00,0x65,0x7a
	.byte 0x47,0x4c,0x73,0x74,0x65,0x6e,0x63,0x69
	.byte 0x6c,0x00,0x00,0x00,0x65,0x98,0x47,0x4c
	.byte 0x61,0x63,0x63,0x75,0x6d,0x00,0x00,0x00
	.byte 0x65,0xab,0x67,0x6c,0x5f,0x66,0x72,0x61
	.byte 0x6d,0x65,0x5f,0x62,0x75,0x66,0x66,0x65
	.byte 0x72,0x00,0x00,0x00,0x66,0x82,0x47,0x4c
	.byte 0x66,0x72,0x61,0x6d,0x65,0x62,0x75,0x66
	.byte 0x66,0x65,0x72,0x00,0x00,0x00,0x6c,0xe0
	.byte 0x70,0x6f,0x69,0x6e,0x74,0x73,0x5f,0x66
	.byte 0x75,0x6e,0x63,0x00,0x00,0x00,0x6d,0x13
	.byte 0x6c,0x69,0x6e,0x65,0x5f,0x66,0x75,0x6e
	.byte 0x63,0x00,0x00,0x00,0x6d,0x49,0x74,0x72
	.byte 0x69,0x61,0x6e,0x67,0x6c,0x65,0x5f,0x66
	.byte 0x75,0x6e,0x63,0x00,0x00,0x00,0x6d,0x88
	.byte 0x71,0x75,0x61,0x64,0x5f,0x66,0x75,0x6e
	.byte 0x63,0x00,0x00,0x00,0x6d,0xbe,0x72,0x65
	.byte 0x63,0x74,0x5f,0x66,0x75,0x6e,0x63,0x00
	.byte 0x00,0x00,0x6f,0xa5,0x64,0x64,0x5f,0x66
	.byte 0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x5f
	.byte 0x74,0x61,0x62,0x6c,0x65,0x00,0x00,0x00
	.byte 0x74,0xdd,0x47,0x4c,0x62,0x69,0x74,0x66
	.byte 0x69,0x65,0x6c,0x64,0x00,0x00,0x00,0x74
	.byte 0xf3,0x67,0x6c,0x5f,0x61,0x74,0x74,0x72
	.byte 0x69,0x62,0x5f,0x6e,0x6f,0x64,0x65,0x00
	.byte 0x00,0x00,0x75,0x53,0x67,0x6c,0x5f,0x61
	.byte 0x63,0x63,0x75,0x6d,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x75,0xa0
	.byte 0x67,0x6c,0x5f,0x63,0x6f,0x6c,0x6f,0x72
	.byte 0x62,0x75,0x66,0x66,0x65,0x72,0x5f,0x61
	.byte 0x74,0x74,0x72,0x69,0x62,0x00,0x00,0x00
	.byte 0x77,0xb5,0x67,0x6c,0x5f,0x63,0x75,0x72
	.byte 0x72,0x65,0x6e,0x74,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x78,0x9f
	.byte 0x67,0x6c,0x5f,0x64,0x65,0x70,0x74,0x68
	.byte 0x62,0x75,0x66,0x66,0x65,0x72,0x5f,0x61
	.byte 0x74,0x74,0x72,0x69,0x62,0x00,0x00,0x00
	.byte 0x78,0xf2,0x67,0x6c,0x5f,0x65,0x76,0x61
	.byte 0x6c,0x5f,0x61,0x74,0x74,0x72,0x69,0x62
	.byte 0x00,0x00,0x00,0x7b,0x68,0x67,0x6c,0x5f
	.byte 0x66,0x6f,0x67,0x5f,0x61,0x74,0x74,0x72
	.byte 0x69,0x62,0x00,0x00,0x00,0x7b,0xe1,0x67
	.byte 0x6c,0x5f,0x68,0x69,0x6e,0x74,0x5f,0x61
	.byte 0x74,0x74,0x72,0x69,0x62,0x00,0x00,0x00
	.byte 0x7c,0xb4,0x67,0x6c,0x5f,0x6c,0x69,0x67
	.byte 0x68,0x74,0x00,0x00,0x00,0x7f,0x5b,0x67
	.byte 0x6c,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d
	.byte 0x6f,0x64,0x65,0x6c,0x00,0x00,0x00,0x7f
	.byte 0xfc,0x67,0x6c,0x5f,0x6d,0x61,0x74,0x65
	.byte 0x72,0x69,0x61,0x6c,0x00,0x00,0x00,0x80
	.byte 0xec,0x67,0x6c,0x5f,0x6c,0x69,0x67,0x68
	.byte 0x74,0x5f,0x61,0x74,0x74,0x72,0x69,0x62
	.byte 0x00,0x00,0x00,0x82,0x0d,0x47,0x4c,0x75
	.byte 0x73,0x68,0x6f,0x72,0x74,0x00,0x00,0x00
	.byte 0x82,0x1c,0x67,0x6c,0x5f,0x6c,0x69,0x6e
	.byte 0x65,0x5f,0x61,0x74,0x74,0x72,0x69,0x62
	.byte 0x00,0x00,0x00,0x82,0x95,0x67,0x6c,0x5f
	.byte 0x6c,0x69,0x73,0x74,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x83,0x7b
	.byte 0x67,0x6c,0x5f,0x70,0x69,0x78,0x65,0x6c
	.byte 0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x00
	.byte 0x00,0x00,0x86,0x4b,0x67,0x6c,0x5f,0x70
	.byte 0x6f,0x69,0x6e,0x74,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x86,0xc4
	.byte 0x67,0x6c,0x5f,0x70,0x6f,0x6c,0x79,0x67
	.byte 0x6f,0x6e,0x5f,0x61,0x74,0x74,0x72,0x69
	.byte 0x62,0x00,0x00,0x00,0x88,0x08,0x47,0x4c
	.byte 0x73,0x69,0x7a,0x65,0x69,0x00,0x00,0x00
	.byte 0x88,0x16,0x67,0x6c,0x5f,0x73,0x63,0x69
	.byte 0x73,0x73,0x6f,0x72,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x88,0x71
	.byte 0x67,0x6c,0x5f,0x73,0x74,0x65,0x6e,0x63
	.byte 0x69,0x6c,0x5f,0x61,0x74,0x74,0x72,0x69
	.byte 0x62,0x00,0x00,0x00,0x89,0xcb,0x67,0x6c
	.byte 0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65
	.byte 0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x00
	.byte 0x00,0x00,0x8c,0x2d,0x67,0x6c,0x5f,0x74
	.byte 0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d
	.byte 0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x00
	.byte 0x00,0x00,0x8c,0xa7,0x67,0x6c,0x5f,0x76
	.byte 0x69,0x65,0x77,0x70,0x6f,0x72,0x74,0x5f
	.byte 0x61,0x74,0x74,0x72,0x69,0x62,0x00,0x00
	.byte 0x00,0x8d,0x64,0x67,0x6c,0x5f,0x61,0x72
	.byte 0x72,0x61,0x79,0x5f,0x61,0x74,0x74,0x72
	.byte 0x69,0x62,0x00,0x00,0x00,0x90,0x0f,0x67
	.byte 0x6c,0x5f,0x70,0x69,0x78,0x65,0x6c,0x73
	.byte 0x74,0x6f,0x72,0x65,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x90,0xc3
	.byte 0x67,0x6c,0x5f,0x31,0x64,0x5f,0x6d,0x61
	.byte 0x70,0x00,0x00,0x00,0x91,0x17,0x67,0x6c
	.byte 0x5f,0x32,0x64,0x5f,0x6d,0x61,0x70,0x00
	.byte 0x00,0x00,0x91,0x91,0x67,0x6c,0x5f,0x65
	.byte 0x76,0x61,0x6c,0x75,0x61,0x74,0x6f,0x72
	.byte 0x73,0x00,0x00,0x00,0x93,0x1b,0x67,0x6c
	.byte 0x5f,0x66,0x65,0x65,0x64,0x62,0x61,0x63
	.byte 0x6b,0x00,0x00,0x00,0x93,0x90,0x67,0x6c
	.byte 0x5f,0x73,0x65,0x6c,0x65,0x63,0x74,0x69
	.byte 0x6f,0x6e,0x00,0x00,0x00,0x96,0x01,0x76
	.byte 0x65,0x72,0x74,0x65,0x78,0x5f,0x62,0x75
	.byte 0x66,0x66,0x65,0x72,0x00,0x00,0x00,0x35
	.byte 0x4f,0x67,0x6c,0x5f,0x63,0x6f,0x6e,0x74
	.byte 0x65,0x78,0x74,0x00,0x00,0x00,0x98,0x0a
	.byte 0x47,0x4c,0x63,0x6f,0x6e,0x74,0x65,0x78
	.byte 0x74,0x00,0x00,0x00,0x98,0x32,0x6f,0x73
	.byte 0x6d,0x65,0x73,0x61,0x5f,0x63,0x6f,0x6e
	.byte 0x74,0x65,0x78,0x74,0x00,0x00,0x00,0x99
	.byte 0x85,0x4f,0x53,0x4d,0x65,0x73,0x61,0x43
	.byte 0x6f,0x6e,0x74,0x65,0x78,0x74,0x00,0x00
	.byte 0x00,0xd5,0x3a,0x47,0x4c,0x66,0x69,0x78
	.byte 0x65,0x64,0x00,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_varnames
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_info, lab2=, loff=0
	.section ".debug_varnames"
	.byte 0x00,0x00,0x00,0x1c,0x00,0x02
	.uaword %section_symbol(".debug_info")
	.byte 0x00,0x00,0xdf,0x84,0x00,0x00,0x99,0x99
	.byte 0x43,0x75,0x72,0x72,0x65,0x6e,0x74,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x00
!  End sdCreateSection
