
	.section	".text",#alloc,#execinstr
	.align	8
	.skip	16

	! block 0
	.type	stipple_polygon_span,#function
stipple_polygon_span:
	save	%sp,-112,%sp

	! block 1
.L13:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L14:
.L16:

! File span.c:
!    1	/* $Id: span.c,v 1.12 1997/08/14 01:12:37 brianp Exp $ */
!    2	
!    3	/*
!    4	 * Mesa 3-D graphics library
!    5	 * Version:  2.4
!    6	 * Copyright (C) 1995-1997  Brian Paul
!    7	 *
!    8	 * This library is free software; you can redistribute it and/or
!    9	 * modify it under the terms of the GNU Library General Public
!   10	 * License as published by the Free Software Foundation; either
!   11	 * version 2 of the License, or (at your option) any later version.
!   12	 *
!   13	 * This library is distributed in the hope that it will be useful,
!   14	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
!   15	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
!   16	 * Library General Public License for more details.
!   17	 *
!   18	 * You should have received a copy of the GNU Library General Public
!   19	 * License along with this library; if not, write to the Free
!   20	 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
!   21	 */
!   22	
!   24	/*
!   25	 * $Log: span.c,v $
!   26	 * Revision 1.12  1997/08/14 01:12:37  brianp
!   27	 * replaced a few for loops with MEMSET calls
!   28	 *
!   29	 * Revision 1.11  1997/07/24 01:21:56  brianp
!   30	 * changed precompiled header symbol from PCH to PC_HEADER
!   31	 *
!   32	 * Revision 1.10  1997/05/28 03:26:29  brianp
!   33	 * added precompiled header (PCH) support
!   34	 *
!   35	 * Revision 1.9  1997/05/03 00:51:30  brianp
!   36	 * new texturing function call: gl_texture_pixels()
!   37	 *
!   38	 * Revision 1.8  1997/04/16 23:54:11  brianp
!   39	 * do per-pixel fog if texturing is enabled
!   40	 *
!   41	 * Revision 1.7  1997/02/09 19:53:43  brianp
!   42	 * now use TEXTURE_xD enable constants
!   43	 *
!   44	 * Revision 1.6  1997/02/09 18:43:34  brianp
!   45	 * added GL_EXT_texture3D support
!   46	 *
!   47	 * Revision 1.5  1997/01/28 22:17:44  brianp
!   48	 * new RGBA mode logic op support
!   49	 *
!   50	 * Revision 1.4  1996/09/25 03:22:05  brianp
!   51	 * added NO_DRAW_BIT support
!   52	 *
!   53	 * Revision 1.3  1996/09/15 14:18:55  brianp
!   54	 * now use GLframebuffer and GLvisual
!   55	 *
!   56	 * Revision 1.2  1996/09/15 01:48:58  brianp
!   57	 * removed #define NULL 0
!   58	 *
!   59	 * Revision 1.1  1996/09/13 01:38:16  brianp
!   60	 * Initial revision
!   61	 *
!   62	 */
!   63	
!   65	/*
!   66	 * pixel span rasterization:
!   67	 * These functions simulate the rasterization pipeline.
!   68	 */
!   69	
!   71	#ifdef PC_HEADER
!   72	#include "all.h"
!   73	#else
!   74	#include <string.h>
!   75	#include "alpha.h"
!   76	#include "alphabuf.h"
!   77	#include "blend.h"
!   78	#include "depth.h"
!   79	#include "fog.h"
!   80	#include "logic.h"
!   81	#include "macros.h"
!   82	#include "masking.h"
!   83	#include "scissor.h"
!   84	#include "span.h"
!   85	#include "stencil.h"
!   86	#include "texture.h"
!   87	#include "types.h"
!   88	#endif
!   89	
!   93	/*
!   94	 * Apply the current polygon stipple pattern to a span of pixels.
!   95	 */
!   96	static void stipple_polygon_span( GLcontext *ctx,
!   97	                                  GLuint n, GLint x, GLint y, GLubyte mask[] )
!   98	{
!   99	   register GLuint i, m, stipple, highbit=0x80000000;

	sethi	%hi(0x80000000),%l0
	st	%l0,[%fp-16]

	! block 3
.L17:

!  101	   stipple = ctx->PolygonStipple[y % 32];

	ld	[%fp+68],%l3
	ld	[%fp+80],%l2
	sra	%l2,31,%l0
	and	%l0,31,%l1
	add	%l2,%l1,%l0
	and	%l0,-32,%l1
	sub	%l2,%l1,%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0xd6c8),%l1
	or	%l1,%lo(0xd6c8),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-12]

	! block 4
.L18:

!  102	   m = highbit >> (GLuint) (x % 32);

	ld	[%fp-16],%l3
	ld	[%fp+76],%l2
	sra	%l2,31,%l0
	and	%l0,31,%l1
	add	%l2,%l1,%l0
	and	%l0,-32,%l1
	sub	%l2,%l1,%l1
	srl	%l3,%l1,%l0
	st	%l0,[%fp-8]

	! block 5
.L19:
.L20:

!  104	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L23
	st	%g0,[%fp-4]

	! block 6
.L24:
.L21:
.L25:
.L26:
.L27:
.L29:

!  105	      if ((m & stipple)==0) {

	ld	[%fp-8],%l0
	ld	[%fp-12],%l1
	and	%l0,%l1,%l0
	cmp	%l0,0
	bne	.L28
	nop

	! block 7
.L30:
.L31:
.L32:
.L33:

!  106		 mask[i] = 0;

	ld	[%fp+84],%l0
	ld	[%fp-4],%l1
	stb	%g0,[%l0+%l1]

	! block 8
.L34:
.L35:
.L28:
.L36:
.L37:

!  107	      }
!  108	      m = m >> 1;

	ld	[%fp-8],%l0
	srl	%l0,1,%l0
	st	%l0,[%fp-8]

	! block 9
.L38:
.L40:

!  109	      if (m==0) {

	ld	[%fp-8],%l0
	cmp	%l0,0
	bne	.L39
	nop

	! block 10
.L41:
.L42:
.L43:
.L44:

!  110		 m = 0x80000000;

	sethi	%hi(0x80000000),%l0
	st	%l0,[%fp-8]

	! block 11
.L45:
.L46:
.L39:
.L47:
.L48:
.L49:
.L50:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L21
	nop

	! block 12
.L51:
.L23:
.L52:

	! block 13
.L53:
.L54:
.L12:
	jmp	%i7+8
	restore
	.size	stipple_polygon_span,(.-stipple_polygon_span)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	clip_span,#function
clip_span:
	save	%sp,-104,%sp

	! block 1
.L57:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L58:
.L60:
.L62:

! File span.c:
!  111	      }
!  112	   }
!  113	}
!  114	
!  117	/*
!  118	 * Clip a pixel span to the current buffer/window boundaries.
!  119	 * Return:  0 = all pixels clipped
!  120	 *          1 = at least one pixel is visible
!  121	 */
!  122	static GLuint clip_span( GLcontext *ctx,
!  123	                         GLint n, GLint x, GLint y, GLubyte mask[] )
!  124	{
!  125	   GLint i;
!  126	
!  127	   /* Clip to top and bottom */
!  128	   if (y<0 || y>=ctx->Buffer->Height) {

	ld	[%fp+80],%l0
	cmp	%l0,0
	bl	.L63
	nop

	! block 3
.L64:
	ld	[%fp+80],%l1
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+8],%l0
	cmp	%l1,%l0
	bl	.L61
	nop

	! block 4
.L65:
.L63:
.L66:
.L67:
.L68:

!  129	      return 0;

	ba	.L56
	st	%g0,[%fp-4]

	! block 5
.L69:
.L70:
.L61:
.L71:
.L72:
.L74:

!  130	   }
!  131	
!  132	   /* Clip to left and right */
!  133	   if (x>=0 && x+n<=ctx->Buffer->Width) {

	ld	[%fp+76],%l0
	cmp	%l0,0
	bl	.L73
	nop

	! block 6
.L75:
	ld	[%fp+76],%l0
	ld	[%fp+72],%l1
	add	%l0,%l1,%l1
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	cmp	%l1,%l0
	bg	.L73
	nop

	! block 7
.L76:
.L77:
.L78:
.L79:

!  134	      /* no clipping needed */
!  135	      return 1;

	mov	1,%l0
	ba	.L56
	st	%l0,[%fp-4]

	! block 8
.L80:
.L81:
.L73:
.L82:
.L83:
.L85:

!  136	   }
!  137	   else if (x+n<=0) {

	ld	[%fp+76],%l0
	ld	[%fp+72],%l1
	add	%l0,%l1,%l0
	cmp	%l0,0
	bg	.L84
	nop

	! block 9
.L86:
.L87:
.L88:
.L89:

!  138	      /* completely off left side */
!  139	      return 0;

	ba	.L56
	st	%g0,[%fp-4]

	! block 10
.L90:
.L91:
.L84:
.L92:
.L93:
.L95:

!  140	   }
!  141	   else if (x>=ctx->Buffer->Width) {

	ld	[%fp+76],%l1
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	cmp	%l1,%l0
	bl	.L94
	nop

	! block 11
.L96:
.L97:
.L98:
.L99:

!  142	      /* completely off right side */
!  143	      return 0;

	ba	.L56
	st	%g0,[%fp-4]

	! block 12
.L100:
.L101:
.L94:
.L102:
.L103:
.L104:
.L105:

!  144	   }
!  145	   else {
!  146	      /* clip-test each pixel, this could be done better */
!  147	      for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bge	.L108
	st	%g0,[%fp-8]

	! block 13
.L109:
.L106:
.L110:
.L111:
.L112:
.L114:

!  148	         if (x+i<0 || x+i>=ctx->Buffer->Width) {

	ld	[%fp+76],%l0
	ld	[%fp-8],%l1
	add	%l0,%l1,%l0
	cmp	%l0,0
	bl	.L115
	nop

	! block 14
.L116:
	ld	[%fp+76],%l0
	ld	[%fp-8],%l1
	add	%l0,%l1,%l1
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	cmp	%l1,%l0
	bl	.L113
	nop

	! block 15
.L117:
.L115:
.L118:
.L119:
.L120:

!  149	            mask[i] = 0;

	ld	[%fp+84],%l0
	ld	[%fp-8],%l1
	stb	%g0,[%l0+%l1]

	! block 16
.L121:
.L122:
.L113:
.L123:
.L124:
.L125:
.L126:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp-8],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	bl	.L106
	nop

	! block 17
.L127:
.L108:
.L128:
.L129:

!  150	         }
!  151	      }
!  152	      return 1;

	mov	1,%l0
	ba	.L56
	st	%l0,[%fp-4]

	! block 18
.L130:
.L131:
.L132:
.L133:
.L134:
.L135:
.L136:

	! block 19
.L137:
.L138:
.L56:
	ld	[%fp-4],%l0
	mov	%l0,%i0
	jmp	%i7+8
	restore
	.size	clip_span,(.-clip_span)
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	gl_write_index_span
	.type	gl_write_index_span,#function
gl_write_index_span:
	sethi	%hi(-8096),%g1
	or	%g1,%lo(-8096),%g1
	save	%sp,%g1,%sp

	! block 1
.L141:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]

	! block 2
.L142:
.L144:

! File span.c:
!  153	   }
!  154	}
!  155	
!  158	/*
!  159	 * Write a horizontal span of color index pixels to the frame buffer.
!  160	 * Stenciling, Depth-testing, etc. are done as needed.
!  161	 * Input:  n - number of pixels in the span
!  162	 *         x, y - location of leftmost pixel in the span
!  163	 *         z - array of [n] z-values
!  164	 *         index - array of [n] color indexes
!  165	 *         primitive - either GL_POINT, GL_LINE, GL_POLYGON, or GL_BITMAP
!  166	 */
!  167	void gl_write_index_span( GLcontext *ctx,
!  168	                          GLuint n, GLint x, GLint y, GLdepth z[],
!  169				  GLuint index[], GLenum primitive )
!  170	{
!  171	   GLubyte mask[MAX_WIDTH];
!  172	   GLuint index_save[MAX_WIDTH];
!  173	
!  174	   /* init mask to 1's (all pixels are to be written) */
!  175	   MEMSET(mask, 1, n);

	add	%fp,-1600,%l0
	ld	[%fp+72],%l1
	mov	%l0,%o0
	mov	1,%o1
	call	memset
	mov	%l1,%o2

	! block 3
.L145:
.L147:

!  177	   if ((ctx->RasterMask & WINCLIP_BIT) || primitive==GL_BITMAP) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	and	%l0,512,%l0
	cmp	%l0,%g0
	bne	.L148
	nop

	! block 4
.L149:
	ld	[%fp+92],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	bne	.L146
	nop

	! block 5
.L150:
.L148:
.L151:
.L152:
.L153:
.L155:

!  178	      if (clip_span(ctx,n,x,y,mask)==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	clip_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L154
	nop

	! block 6
.L156:
.L157:
.L158:
.L159:

!  179		 return;

	ba	.L140
	nop

	! block 7
.L160:
.L161:
.L154:
.L162:
.L163:
.L164:
.L146:
.L165:
.L166:
.L168:

!  180	      }
!  181	   }
!  182	
!  183	   /* Per-pixel fog */
!  184	   if (ctx->Fog.Enabled
!  185	       && (ctx->Hint.Fog==GL_NICEST || primitive==GL_BITMAP)) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1f78),%l1
	or	%l1,%lo(0x1f78),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L167
	nop

	! block 8
.L169:
	ld	[%fp+68],%l0
	sethi	%hi(0x1fb0),%l1
	or	%l1,%lo(0x1fb0),%l1
	ld	[%l0+%l1],%l1
	sethi	%hi(0x1102),%l0
	or	%l0,%lo(0x1102),%l0
	cmp	%l1,%l0
	be	.L170
	nop

	! block 9
.L171:
	ld	[%fp+92],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	bne	.L167
	nop

	! block 10
.L172:
.L170:
.L173:
.L174:
.L175:

!  186	      gl_fog_index_pixels( ctx, n, z, index );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+84],%l2
	ld	[%fp+88],%l3
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	call	gl_fog_index_pixels
	mov	%l3,%o3

	! block 11
.L176:
.L177:
.L167:
.L178:
.L179:
.L181:

!  187	   }
!  188	
!  189	   /* Do the scissor test */
!  190	   if (ctx->Scissor.Enabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd748),%l1
	or	%l1,%lo(0xd748),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L180
	nop

	! block 12
.L182:
.L183:
.L184:
.L185:
.L187:

!  191	      if (gl_scissor_span( ctx, n, x, y, mask )==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_scissor_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L186
	nop

	! block 13
.L188:
.L189:
.L190:
.L191:

!  192		 return;

	ba	.L140
	nop

	! block 14
.L192:
.L193:
.L186:
.L194:
.L195:
.L196:
.L180:
.L197:
.L198:
.L200:

!  193	      }
!  194	   }
!  195	
!  196	   /* Polygon Stippling */
!  197	   if (ctx->Polygon.StippleFlag && primitive==GL_POLYGON) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd6b9),%l1
	or	%l1,%lo(0xd6b9),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L199
	nop

	! block 15
.L201:
	ld	[%fp+92],%l0
	cmp	%l0,9
	bne	.L199
	nop

	! block 16
.L202:
.L203:
.L204:
.L205:

!  198	      stipple_polygon_span( ctx, n, x, y, mask );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	stipple_polygon_span
	mov	%l4,%o4

	! block 17
.L206:
.L207:
.L199:
.L208:
.L209:
.L211:

!  199	   }
!  200	
!  201	   if (ctx->Stencil.Enabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd75c),%l1
	or	%l1,%lo(0xd75c),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L210
	nop

	! block 18
.L212:
.L213:
.L214:
.L215:
.L217:

!  202	      /* first stencil test */
!  203	      if (gl_stencil_span( ctx, n, x, y, mask )==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_stencil_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L216
	nop

	! block 19
.L218:
.L219:
.L220:
.L221:

!  204		 return;

	ba	.L140
	nop

	! block 20
.L222:
.L223:
.L216:
.L224:
.L225:

!  205	      }
!  206	      /* depth buffering w/ stencil */
!  207	      gl_depth_stencil_span( ctx, n, x, y, z, mask );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	call	gl_depth_stencil_span
	mov	%l4,%o5

	! block 21
.L226:
.L227:
	ba	.L228
	nop

	! block 22
.L210:
.L229:
.L230:
.L232:

!  208	   }
!  209	   else if (ctx->Depth.Test) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1f3c),%l1
	or	%l1,%lo(0x1f3c),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L231
	nop

	! block 23
.L233:
.L234:
.L235:
.L236:
.L238:

!  210	      /* regular depth testing */
!  211	      if ((*ctx->Driver.DepthTestSpan)( ctx, n, x, y, z, mask )==0)  return;

	ld	[%fp+68],%l0
	ld	[%l0+2332],%l6
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	mov	%l4,%o5
	jmpl	%l6,%o7
	nop
	cmp	%o0,0
	bne	.L237
	nop

	! block 24
.L239:
.L240:
	ba	.L140
	nop

	! block 25
.L241:
.L237:
.L242:
.L243:
.L244:
.L231:
.L245:
.L246:
.L228:
.L247:
.L248:
.L250:

!  212	   }
!  213	
!  214	   if (ctx->RasterMask & NO_DRAW_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,2048,%l0
	be	.L249
	nop

	! block 26
.L251:
.L252:
.L253:
.L254:

!  215	      /* write no pixels */
!  216	      return;

	ba	.L140
	nop

	! block 27
.L255:
.L256:
.L249:
.L257:
.L258:
.L260:

!  217	   }
!  218	
!  219	   if (ctx->RasterMask & FRONT_AND_BACK_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,1024,%l0
	be	.L259
	nop

	! block 28
.L261:
.L262:
.L263:
.L264:

!  220	      /* Save a copy of the indexes since LogicOp and IndexMask
!  221	       * may change them
!  222	       */
!  223	      MEMCPY( index_save, index, n * sizeof(GLuint) );

	sethi	0x7,%l0
	xor	%l0,-832,%l0
	add	%fp,%l0,%l1
	ld	[%fp+88],%l2
	ld	[%fp+72],%l0
	sll	%l0,2,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	call	memcpy
	mov	%l0,%o2

	! block 29
.L265:
.L266:
.L259:
.L267:
.L268:
.L270:

!  224	   }
!  225	
!  226	   if (ctx->Color.SWLogicOpEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ed2),%l1
	or	%l1,%lo(0x1ed2),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L269
	nop

	! block 30
.L271:
.L272:
.L273:
.L274:

!  227	      gl_logicop_ci_span( ctx, n, x, y, index, mask );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+88],%l5
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	call	gl_logicop_ci_span
	mov	%l4,%o5

	! block 31
.L275:
.L276:
.L269:
.L277:
.L278:
.L280:

!  228	   }
!  229	   if (ctx->Color.SWmasking) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1e98),%l1
	or	%l1,%lo(0x1e98),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L279
	nop

	! block 32
.L281:
.L282:
.L283:
.L284:

!  230	      gl_mask_index_span( ctx, n, x, y, index );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+88],%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_mask_index_span
	mov	%l4,%o4

	! block 33
.L285:
.L286:
.L279:
.L287:
.L288:

!  231	   }
!  232	
!  233	   /* write pixels */
!  234	   (*ctx->Driver.WriteIndexSpan)( ctx, n, x, y, index, mask );

	ld	[%fp+68],%l0
	ld	[%l0+2260],%l6
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+88],%l5
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	mov	%l4,%o5
	jmpl	%l6,%o7
	nop

	! block 34
.L289:
.L291:

!  237	   if (ctx->RasterMask & FRONT_AND_BACK_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,1024,%l0
	be	.L290
	nop

	! block 35
.L292:
.L293:
.L294:
.L295:

!  238	      /*** Also draw to back buffer ***/
!  239	      (*ctx->Driver.SetBuffer)( ctx, GL_BACK );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1029,%o1
	jmpl	%l1,%o7
	nop

	! block 36
.L296:

!  240	      MEMCPY( index, index_save, n * sizeof(GLuint) );

	ld	[%fp+88],%l1
	sethi	0x7,%l0
	xor	%l0,-832,%l0
	add	%fp,%l0,%l2
	ld	[%fp+72],%l0
	sll	%l0,2,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	call	memcpy
	mov	%l0,%o2

	! block 37
.L297:
.L299:

!  241	      if (ctx->Color.SWLogicOpEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ed2),%l1
	or	%l1,%lo(0x1ed2),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L298
	nop

	! block 38
.L300:
.L301:
.L302:
.L303:

!  242	         gl_logicop_ci_span( ctx, n, x, y, index, mask );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+88],%l5
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	call	gl_logicop_ci_span
	mov	%l4,%o5

	! block 39
.L304:
.L305:
.L298:
.L306:
.L307:
.L309:

!  243	      }
!  244	      if (ctx->Color.SWmasking) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1e98),%l1
	or	%l1,%lo(0x1e98),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L308
	nop

	! block 40
.L310:
.L311:
.L312:
.L313:

!  245	         gl_mask_index_span( ctx, n, x, y, index );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+88],%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_mask_index_span
	mov	%l4,%o4

	! block 41
.L314:
.L315:
.L308:
.L316:
.L317:

!  246	      }
!  247	      (*ctx->Driver.WriteIndexSpan)( ctx, n, x, y, index, mask );

	ld	[%fp+68],%l0
	ld	[%l0+2260],%l6
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+88],%l5
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	mov	%l4,%o5
	jmpl	%l6,%o7
	nop

	! block 42
.L318:

!  248	      (*ctx->Driver.SetBuffer)( ctx, GL_FRONT );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1028,%o1
	jmpl	%l1,%o7
	nop

	! block 43
.L319:
.L320:
.L290:
.L321:

	! block 44
.L322:
.L323:
.L140:
	jmp	%i7+8
	restore
	.size	gl_write_index_span,(.-gl_write_index_span)
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	gl_write_monoindex_span
	.type	gl_write_monoindex_span,#function
gl_write_monoindex_span:
	sethi	%hi(-14504),%g1
	or	%g1,%lo(-14504),%g1
	save	%sp,%g1,%sp

	! block 1
.L326:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]

	! block 2
.L327:
.L329:

! File span.c:
!  249	   }
!  250	}
!  251	
!  255	void gl_write_monoindex_span( GLcontext *ctx,
!  256	                              GLuint n, GLint x, GLint y, GLdepth z[],
!  257				      GLuint index, GLenum primitive )
!  258	{
!  259	   GLuint i;
!  260	   GLubyte mask[MAX_WIDTH];
!  261	   GLuint index_save[MAX_WIDTH];
!  262	
!  263	   /* init mask to 1's (all pixels are to be written) */
!  264	   MEMSET(mask, 1, n);

	add	%fp,-1604,%l0
	ld	[%fp+72],%l1
	mov	%l0,%o0
	mov	1,%o1
	call	memset
	mov	%l1,%o2

	! block 3
.L330:
.L332:

!  266	   if ((ctx->RasterMask & WINCLIP_BIT) || primitive==GL_BITMAP) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	and	%l0,512,%l0
	cmp	%l0,%g0
	bne	.L333
	nop

	! block 4
.L334:
	ld	[%fp+92],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	bne	.L331
	nop

	! block 5
.L335:
.L333:
.L336:
.L337:
.L338:
.L340:

!  267	      if (clip_span( ctx,n,x,y,mask)==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	clip_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L339
	nop

	! block 6
.L341:
.L342:
.L343:
.L344:

!  268		 return;

	ba	.L325
	nop

	! block 7
.L345:
.L346:
.L339:
.L347:
.L348:
.L349:
.L331:
.L350:
.L351:
.L353:

!  269	      }
!  270	   }
!  271	
!  272	   /* Do the scissor test */
!  273	   if (ctx->Scissor.Enabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd748),%l1
	or	%l1,%lo(0xd748),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L352
	nop

	! block 8
.L354:
.L355:
.L356:
.L357:
.L359:

!  274	      if (gl_scissor_span( ctx, n, x, y, mask )==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_scissor_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L358
	nop

	! block 9
.L360:
.L361:
.L362:
.L363:

!  275		 return;

	ba	.L325
	nop

	! block 10
.L364:
.L365:
.L358:
.L366:
.L367:
.L368:
.L352:
.L369:
.L370:
.L372:

!  276	      }
!  277	   }
!  278	
!  279	   /* Polygon Stippling */
!  280	   if (ctx->Polygon.StippleFlag && primitive==GL_POLYGON) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd6b9),%l1
	or	%l1,%lo(0xd6b9),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L371
	nop

	! block 11
.L373:
	ld	[%fp+92],%l0
	cmp	%l0,9
	bne	.L371
	nop

	! block 12
.L374:
.L375:
.L376:
.L377:

!  281	      stipple_polygon_span( ctx, n, x, y, mask );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	stipple_polygon_span
	mov	%l4,%o4

	! block 13
.L378:
.L379:
.L371:
.L380:
.L381:
.L383:

!  282	   }
!  283	
!  284	   if (ctx->Stencil.Enabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd75c),%l1
	or	%l1,%lo(0xd75c),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L382
	nop

	! block 14
.L384:
.L385:
.L386:
.L387:
.L389:

!  285	      /* first stencil test */
!  286	      if (gl_stencil_span( ctx, n, x, y, mask )==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_stencil_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L388
	nop

	! block 15
.L390:
.L391:
.L392:
.L393:

!  287		 return;

	ba	.L325
	nop

	! block 16
.L394:
.L395:
.L388:
.L396:
.L397:

!  288	      }
!  289	      /* depth buffering w/ stencil */
!  290	      gl_depth_stencil_span( ctx, n, x, y, z, mask );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	call	gl_depth_stencil_span
	mov	%l4,%o5

	! block 17
.L398:
.L399:
	ba	.L400
	nop

	! block 18
.L382:
.L401:
.L402:
.L404:

!  291	   }
!  292	   else if (ctx->Depth.Test) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1f3c),%l1
	or	%l1,%lo(0x1f3c),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L403
	nop

	! block 19
.L405:
.L406:
.L407:
.L408:
.L410:

!  293	      /* regular depth testing */
!  294	      if ((*ctx->Driver.DepthTestSpan)( ctx, n, x, y, z, mask )==0)  return;

	ld	[%fp+68],%l0
	ld	[%l0+2332],%l6
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	mov	%l4,%o5
	jmpl	%l6,%o7
	nop
	cmp	%o0,0
	bne	.L409
	nop

	! block 20
.L411:
.L412:
	ba	.L325
	nop

	! block 21
.L413:
.L409:
.L414:
.L415:
.L416:
.L403:
.L417:
.L418:
.L400:
.L419:
.L420:
.L422:

!  295	   }
!  296	
!  297	   if (ctx->RasterMask & NO_DRAW_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,2048,%l0
	be	.L421
	nop

	! block 22
.L423:
.L424:
.L425:
.L426:

!  298	      /* write no pixels */
!  299	      return;

	ba	.L325
	nop

	! block 23
.L427:
.L428:
.L421:
.L429:
.L430:
.L432:

!  300	   }
!  301	
!  302	   if ((ctx->Fog.Enabled && (ctx->Hint.Fog==GL_NICEST || primitive==GL_BITMAP))
!  303	        || ctx->Color.SWLogicOpEnabled || ctx->Color.SWmasking) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1f78),%l1
	or	%l1,%lo(0x1f78),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L434
	nop

	! block 24
.L435:
	ld	[%fp+68],%l0
	sethi	%hi(0x1fb0),%l1
	or	%l1,%lo(0x1fb0),%l1
	ld	[%l0+%l1],%l1
	sethi	%hi(0x1102),%l0
	or	%l0,%lo(0x1102),%l0
	cmp	%l1,%l0
	be	.L433
	nop

	! block 25
.L436:
	ld	[%fp+92],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	be	.L433
	nop

	! block 26
.L437:
.L434:
	ld	[%fp+68],%l0
	sethi	%hi(0x1ed2),%l1
	or	%l1,%lo(0x1ed2),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	bne	.L433
	nop

	! block 27
.L438:
	ld	[%fp+68],%l0
	sethi	%hi(0x1e98),%l1
	or	%l1,%lo(0x1e98),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L431
	nop

	! block 28
.L439:
.L433:
.L440:
.L441:
.L442:
.L443:

!  304	      GLuint ispan[MAX_WIDTH];
!  305	      /* index may change, replicate single index into an array */
!  306	      for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L446
	st	%g0,[%fp-4]

	! block 29
.L_y0:
	sethi	0xe,%l4
	xor	%l4,-68,%l4
.L447:
.L444:
.L448:
.L449:
.L450:

!  307		 ispan[i] = index;

	ld	[%fp+88],%l3
	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%l3,[%l2+%l1]

	! block 30
.L451:
.L452:
.L453:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L444
	nop

	! block 31
.L454:
.L446:
.L455:
.L456:
.L458:

!  308	      }
!  309	
!  310	      if (ctx->Fog.Enabled
!  311	          && (ctx->Hint.Fog==GL_NICEST || primitive==GL_BITMAP)) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1f78),%l1
	or	%l1,%lo(0x1f78),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L457
	nop

	! block 32
.L459:
	ld	[%fp+68],%l0
	sethi	%hi(0x1fb0),%l1
	or	%l1,%lo(0x1fb0),%l1
	ld	[%l0+%l1],%l1
	sethi	%hi(0x1102),%l0
	or	%l0,%lo(0x1102),%l0
	cmp	%l1,%l0
	be	.L460
	nop

	! block 33
.L461:
	ld	[%fp+92],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	bne	.L457
	nop

	! block 34
.L462:
.L460:
.L463:
.L464:
.L465:

!  312		 gl_fog_index_pixels( ctx, n, z, ispan );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+84],%l3
	sethi	0xe,%l0
	xor	%l0,-68,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	call	gl_fog_index_pixels
	mov	%l0,%o3

	! block 35
.L466:
.L467:
.L457:
.L468:
.L469:
.L471:

!  313	      }
!  314	
!  315	      if (ctx->RasterMask & FRONT_AND_BACK_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,1024,%l0
	be	.L470
	nop

	! block 36
.L472:
.L473:
.L474:
.L475:

!  316	         MEMCPY( index_save, index, n * sizeof(GLuint) );

	sethi	0x7,%l0
	xor	%l0,-836,%l0
	add	%fp,%l0,%l1
	ld	[%fp+88],%l2
	ld	[%fp+72],%l0
	sll	%l0,2,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	call	memcpy
	mov	%l0,%o2

	! block 37
.L476:
.L477:
.L470:
.L478:
.L479:
.L481:

!  317	      }
!  318	
!  319	      if (ctx->Color.SWLogicOpEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ed2),%l1
	or	%l1,%lo(0x1ed2),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L480
	nop

	! block 38
.L482:
.L483:
.L484:
.L485:

!  320		 gl_logicop_ci_span( ctx, n, x, y, ispan, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0xe,%l0
	xor	%l0,-68,%l0
	add	%fp,%l0,%l0
	add	%fp,-1604,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l0,%o4
	call	gl_logicop_ci_span
	mov	%l4,%o5

	! block 39
.L486:
.L487:
.L480:
.L488:
.L489:
.L491:

!  321	      }
!  322	
!  323	      if (ctx->Color.SWmasking) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1e98),%l1
	or	%l1,%lo(0x1e98),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L490
	nop

	! block 40
.L492:
.L493:
.L494:
.L495:

!  324	         gl_mask_index_span( ctx, n, x, y, ispan );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0xe,%l0
	xor	%l0,-68,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	call	gl_mask_index_span
	mov	%l0,%o4

	! block 41
.L496:
.L497:
.L490:
.L498:
.L499:

!  325	      }
!  326	
!  327	      (*ctx->Driver.WriteIndexSpan)( ctx, n, x, y, ispan, mask );

	ld	[%fp+68],%l1
	ld	[%l1+2260],%l6
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0xe,%l0
	xor	%l0,-68,%l0
	add	%fp,%l0,%l0
	add	%fp,-1604,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l0,%o4
	mov	%l4,%o5
	jmpl	%l6,%o7
	nop

	! block 42
.L500:
.L502:

!  329	      if (ctx->RasterMask & FRONT_AND_BACK_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,1024,%l0
	be	.L501
	nop

	! block 43
.L503:
.L504:
.L505:
.L506:

!  330	         /*** Also draw to back buffer ***/
!  331	         (*ctx->Driver.SetBuffer)( ctx, GL_BACK );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1029,%o1
	jmpl	%l1,%o7
	nop

	! block 44
.L507:
.L508:

!  332	         for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L511
	st	%g0,[%fp-4]

	! block 45
.L_y1:
	sethi	0xe,%l4
	xor	%l4,-68,%l4
.L512:
.L509:
.L513:
.L514:
.L515:

!  333	            ispan[i] = index;

	ld	[%fp+88],%l3
	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%l3,[%l2+%l1]

	! block 46
.L516:
.L517:
.L518:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L509
	nop

	! block 47
.L519:
.L511:
.L520:
.L521:
.L523:

!  334	         }
!  335	         if (ctx->Color.SWLogicOpEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ed2),%l1
	or	%l1,%lo(0x1ed2),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L522
	nop

	! block 48
.L524:
.L525:
.L526:
.L527:

!  336	            gl_logicop_ci_span( ctx, n, x, y, ispan, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0xe,%l0
	xor	%l0,-68,%l0
	add	%fp,%l0,%l0
	add	%fp,-1604,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l0,%o4
	call	gl_logicop_ci_span
	mov	%l4,%o5

	! block 49
.L528:
.L529:
.L522:
.L530:
.L531:
.L533:

!  337	         }
!  338	         if (ctx->Color.SWmasking) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1e98),%l1
	or	%l1,%lo(0x1e98),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L532
	nop

	! block 50
.L534:
.L535:
.L536:
.L537:

!  339	            gl_mask_index_span( ctx, n, x, y, ispan );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0xe,%l0
	xor	%l0,-68,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	call	gl_mask_index_span
	mov	%l0,%o4

	! block 51
.L538:
.L539:
.L532:
.L540:
.L541:

!  340	         }
!  341	         (*ctx->Driver.WriteIndexSpan)( ctx, n, x, y, ispan, mask );

	ld	[%fp+68],%l1
	ld	[%l1+2260],%l6
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0xe,%l0
	xor	%l0,-68,%l0
	add	%fp,%l0,%l0
	add	%fp,-1604,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l0,%o4
	mov	%l4,%o5
	jmpl	%l6,%o7
	nop

	! block 52
.L542:

!  342	         (*ctx->Driver.SetBuffer)( ctx, GL_FRONT );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1028,%o1
	jmpl	%l1,%o7
	nop

	! block 53
.L543:
.L544:
.L501:
.L545:
.L546:
.L547:
	ba	.L548
	nop

	! block 54
.L431:
.L549:
.L550:
.L551:

!  343	      }
!  344	   }
!  345	   else {
!  346	      (*ctx->Driver.WriteMonoindexSpan)( ctx, n, x, y, mask );

	ld	[%fp+68],%l0
	ld	[%l0+2264],%l5
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l4,%o4
	jmpl	%l5,%o7
	nop

	! block 55
.L552:
.L554:

!  348	      if (ctx->RasterMask & FRONT_AND_BACK_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,1024,%l0
	be	.L553
	nop

	! block 56
.L555:
.L556:
.L557:
.L558:

!  349	         /*** Also draw to back buffer ***/
!  350	         (*ctx->Driver.SetBuffer)( ctx, GL_BACK );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1029,%o1
	jmpl	%l1,%o7
	nop

	! block 57
.L559:

!  351	         (*ctx->Driver.WriteMonoindexSpan)( ctx, n, x, y, mask );

	ld	[%fp+68],%l0
	ld	[%l0+2264],%l5
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l4,%o4
	jmpl	%l5,%o7
	nop

	! block 58
.L560:

!  352	         (*ctx->Driver.SetBuffer)( ctx, GL_FRONT );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1028,%o1
	jmpl	%l1,%o7
	nop

	! block 59
.L561:
.L562:
.L553:
.L563:
.L564:
.L565:
.L548:
.L566:

	! block 60
.L567:
.L568:
.L325:
	jmp	%i7+8
	restore
	.size	gl_write_monoindex_span,(.-gl_write_monoindex_span)
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	gl_write_color_span
	.type	gl_write_color_span,#function
gl_write_color_span:
	sethi	%hi(-8136),%g1
	or	%g1,%lo(-8136),%g1
	save	%sp,%g1,%sp

	! block 1
.L571:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]
	ld	[%fp+100],%l0
	st	%l0,[%fp+100]
	ld	[%fp+104],%l0
	st	%l0,[%fp+104]

	! block 2
.L572:
.L574:

! File span.c:
!  353	      }
!  354	   }
!  355	}
!  356	
!  359	void gl_write_color_span( GLcontext *ctx,
!  360	                          GLuint n, GLint x, GLint y, GLdepth z[],
!  361				  GLubyte r[], GLubyte g[],
!  362				  GLubyte b[], GLubyte a[],
!  363				  GLenum primitive )
!  364	{
!  365	   GLubyte mask[MAX_WIDTH];
!  366	   GLboolean write_all = GL_TRUE;

	mov	1,%l0
	stb	%l0,[%fp-1601]

	! block 3
.L575:

!  367	   GLubyte rtmp[MAX_WIDTH], gtmp[MAX_WIDTH], btmp[MAX_WIDTH], atmp[MAX_WIDTH];
!  368	   GLubyte *red, *green, *blue, *alpha;
!  369	
!  370	   /* init mask to 1's (all pixels are to be written) */
!  371	   MEMSET(mask, 1, n);

	add	%fp,-1600,%l0
	ld	[%fp+72],%l1
	mov	%l0,%o0
	mov	1,%o1
	call	memset
	mov	%l1,%o2

	! block 4
.L576:
.L578:

!  373	   if ((ctx->RasterMask & WINCLIP_BIT) || primitive==GL_BITMAP) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	and	%l0,512,%l0
	cmp	%l0,%g0
	bne	.L579
	nop

	! block 5
.L580:
	ld	[%fp+104],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	bne	.L577
	nop

	! block 6
.L581:
.L579:
.L582:
.L583:
.L584:
.L586:

!  374	      if (clip_span( ctx,n,x,y,mask)==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	clip_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L585
	nop

	! block 7
.L587:
.L588:
.L589:
.L590:

!  375		 return;

	ba	.L570
	nop

	! block 8
.L591:
.L592:
.L585:
.L593:
.L594:

!  376	      }
!  377	      write_all = GL_FALSE;

	stb	%g0,[%fp-1601]

	! block 9
.L595:
.L596:
.L577:
.L597:
.L598:
.L600:

!  378	   }
!  379	
!  380	   if ((primitive==GL_BITMAP && ctx->MutablePixels)
!  381	       || (ctx->RasterMask & FRONT_AND_BACK_BIT)) {

	ld	[%fp+104],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	bne	.L602
	nop

	! block 10
.L603:
	ld	[%fp+68],%l0
	sethi	%hi(0xe11e),%l1
	or	%l1,%lo(0xe11e),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	bne	.L601
	nop

	! block 11
.L604:
.L602:
	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,1024,%l0
	be	.L599
	nop

	! block 12
.L605:
.L601:
.L606:
.L607:
.L608:

!  382	      /* must make a copy of the colors since they may be modified */
!  383	      MEMCPY( rtmp, r, n * sizeof(GLubyte) );

	add	%fp,-3201,%l0
	ld	[%fp+88],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 13
.L609:

!  384	      MEMCPY( gtmp, g, n * sizeof(GLubyte) );

	sethi	0x4,%l0
	xor	%l0,-705,%l0
	add	%fp,%l0,%l0
	ld	[%fp+92],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 14
.L610:

!  385	      MEMCPY( btmp, b, n * sizeof(GLubyte) );

	sethi	0x6,%l0
	xor	%l0,-257,%l0
	add	%fp,%l0,%l0
	ld	[%fp+96],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 15
.L611:

!  386	      MEMCPY( atmp, a, n * sizeof(GLubyte) );

	sethi	0x7,%l0
	xor	%l0,-833,%l0
	add	%fp,%l0,%l0
	ld	[%fp+100],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 16
.L612:

!  387	      red = rtmp;

	add	%fp,-3201,%l1
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	st	%l1,[%fp+%l0]

	! block 17
.L613:

!  388	      green = gtmp;

	sethi	0x4,%l0
	xor	%l0,-705,%l0
	add	%fp,%l0,%l1
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	st	%l1,[%fp+%l0]

	! block 18
.L614:

!  389	      blue = btmp;

	sethi	0x6,%l0
	xor	%l0,-257,%l0
	add	%fp,%l0,%l1
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	st	%l1,[%fp+%l0]

	! block 19
.L615:

!  390	      alpha = atmp;

	sethi	0x7,%l0
	xor	%l0,-833,%l0
	add	%fp,%l0,%l1
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	st	%l1,[%fp+%l0]

	! block 20
.L616:
.L617:
	ba	.L618
	nop

	! block 21
.L599:
.L619:
.L620:
.L621:

!  391	   }
!  392	   else {
!  393	      red   = r;

	ld	[%fp+88],%l1
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	st	%l1,[%fp+%l0]

	! block 22
.L622:

!  394	      green = g;

	ld	[%fp+92],%l1
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	st	%l1,[%fp+%l0]

	! block 23
.L623:

!  395	      blue  = b;

	ld	[%fp+96],%l1
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	st	%l1,[%fp+%l0]

	! block 24
.L624:

!  396	      alpha = a;

	ld	[%fp+100],%l1
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	st	%l1,[%fp+%l0]

	! block 25
.L625:
.L626:
.L618:
.L627:
.L628:
.L630:

!  397	   }
!  398	
!  399	   /* Per-pixel fog */
!  400	   if (ctx->Fog.Enabled && (ctx->Hint.Fog==GL_NICEST || primitive==GL_BITMAP
!  401	                            || ctx->Texture.Enabled)) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1f78),%l1
	or	%l1,%lo(0x1f78),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L629
	nop

	! block 26
.L631:
	ld	[%fp+68],%l0
	sethi	%hi(0x1fb0),%l1
	or	%l1,%lo(0x1fb0),%l1
	ld	[%l0+%l1],%l1
	sethi	%hi(0x1102),%l0
	or	%l0,%lo(0x1102),%l0
	cmp	%l1,%l0
	be	.L632
	nop

	! block 27
.L633:
	ld	[%fp+104],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	be	.L632
	nop

	! block 28
.L634:
	ld	[%fp+68],%l0
	sethi	%hi(0xd774),%l1
	or	%l1,%lo(0xd774),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L629
	nop

	! block 29
.L635:
.L632:
.L636:
.L637:
.L638:

!  402	      gl_fog_color_pixels( ctx, n, z, red, green, blue, alpha );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+84],%l3
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l5
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	call	gl_fog_color_pixels
	st	%l0,[%sp+92]

	! block 30
.L639:
.L640:
.L629:
.L641:
.L642:
.L644:

!  403	   }
!  404	
!  405	   /* Do the scissor test */
!  406	   if (ctx->Scissor.Enabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd748),%l1
	or	%l1,%lo(0xd748),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L643
	nop

	! block 31
.L645:
.L646:
.L647:
.L648:
.L650:

!  407	      if (gl_scissor_span( ctx, n, x, y, mask )==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_scissor_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L649
	nop

	! block 32
.L651:
.L652:
.L653:
.L654:

!  408		 return;

	ba	.L570
	nop

	! block 33
.L655:
.L656:
.L649:
.L657:
.L658:

!  409	      }
!  410	      write_all = GL_FALSE;

	stb	%g0,[%fp-1601]

	! block 34
.L659:
.L660:
.L643:
.L661:
.L662:
.L664:

!  411	   }
!  412	
!  413	   /* Polygon Stippling */
!  414	   if (ctx->Polygon.StippleFlag && primitive==GL_POLYGON) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd6b9),%l1
	or	%l1,%lo(0xd6b9),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L663
	nop

	! block 35
.L665:
	ld	[%fp+104],%l0
	cmp	%l0,9
	bne	.L663
	nop

	! block 36
.L666:
.L667:
.L668:
.L669:

!  415	      stipple_polygon_span( ctx, n, x, y, mask );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	stipple_polygon_span
	mov	%l4,%o4

	! block 37
.L670:

!  416	      write_all = GL_FALSE;

	stb	%g0,[%fp-1601]

	! block 38
.L671:
.L672:
.L663:
.L673:
.L674:
.L676:

!  417	   }
!  418	
!  419	   /* Do the alpha test */
!  420	   if (ctx->Color.AlphaEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ea0),%l1
	or	%l1,%lo(0x1ea0),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L675
	nop

	! block 39
.L677:
.L678:
.L679:
.L680:
.L682:

!  421	      if (gl_alpha_test( ctx, n, alpha, mask )==0) {

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	add	%fp,-1600,%l3
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l0,%o2
	call	gl_alpha_test
	mov	%l3,%o3
	cmp	%o0,0
	bne	.L681
	nop

	! block 40
.L683:
.L684:
.L685:
.L686:

!  422		 return;

	ba	.L570
	nop

	! block 41
.L687:
.L688:
.L681:
.L689:
.L690:

!  423	      }
!  424	      write_all = GL_FALSE;

	stb	%g0,[%fp-1601]

	! block 42
.L691:
.L692:
.L675:
.L693:
.L694:
.L696:

!  425	   }
!  426	
!  427	   if (ctx->Stencil.Enabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd75c),%l1
	or	%l1,%lo(0xd75c),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L695
	nop

	! block 43
.L697:
.L698:
.L699:
.L700:
.L702:

!  428	      /* first stencil test */
!  429	      if (gl_stencil_span( ctx, n, x, y, mask )==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_stencil_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L701
	nop

	! block 44
.L703:
.L704:
.L705:
.L706:

!  430		 return;

	ba	.L570
	nop

	! block 45
.L707:
.L708:
.L701:
.L709:
.L710:

!  431	      }
!  432	      /* depth buffering w/ stencil */
!  433	      gl_depth_stencil_span( ctx, n, x, y, z, mask );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	call	gl_depth_stencil_span
	mov	%l4,%o5

	! block 46
.L711:

!  434	      write_all = GL_FALSE;

	stb	%g0,[%fp-1601]

	! block 47
.L712:
.L713:
	ba	.L714
	nop

	! block 48
.L695:
.L715:
.L716:
.L718:

!  435	   }
!  436	   else if (ctx->Depth.Test) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1f3c),%l1
	or	%l1,%lo(0x1f3c),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L717
	nop

	! block 49
.L719:
.L720:
.L721:
.L722:

!  437	      /* regular depth testing */
!  438	      GLuint m = (*ctx->Driver.DepthTestSpan)( ctx, n, x, y, z, mask );

	ld	[%fp+68],%l0
	ld	[%l0+2332],%l6
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	mov	%l4,%o5
	jmpl	%l6,%o7
	nop
	sethi	0x7,%l0
	xor	%l0,-856,%l0
	st	%o0,[%fp+%l0]

	! block 50
.L723:
.L725:

!  439	      if (m==0) {

	sethi	0x7,%l0
	xor	%l0,-856,%l0
	ld	[%fp+%l0],%l0
	cmp	%l0,0
	bne	.L724
	nop

	! block 51
.L726:
.L727:
.L728:
.L729:

!  440	         return;

	ba	.L570
	nop

	! block 52
.L730:
.L731:
.L724:
.L732:
.L733:
.L735:

!  441	      }
!  442	      if (m<n) {

	sethi	0x7,%l0
	xor	%l0,-856,%l0
	ld	[%fp+%l0],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	bgeu	.L734
	nop

	! block 53
.L736:
.L737:
.L738:
.L739:

!  443	         write_all = GL_FALSE;

	stb	%g0,[%fp-1601]

	! block 54
.L740:
.L741:
.L734:
.L742:
.L743:
.L744:
.L717:
.L745:
.L746:
.L714:
.L747:
.L748:
.L750:

!  444	      }
!  445	   }
!  446	
!  447	   if (ctx->RasterMask & NO_DRAW_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,2048,%l0
	be	.L749
	nop

	! block 55
.L751:
.L752:
.L753:
.L754:

!  448	      /* write no pixels */
!  449	      return;

	ba	.L570
	nop

	! block 56
.L755:
.L756:
.L749:
.L757:
.L758:
.L760:

!  450	   }
!  451	
!  452	   /* logic op or blending */
!  453	   if (ctx->Color.SWLogicOpEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ed2),%l1
	or	%l1,%lo(0x1ed2),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L759
	nop

	! block 57
.L761:
.L762:
.L763:
.L764:

!  454	      gl_logicop_rgba_span( ctx, n, x, y, red, green, blue, alpha, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	add	%fp,-1600,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	call	gl_logicop_rgba_span
	st	%l4,[%sp+100]

	! block 58
.L765:
.L766:
	ba	.L767
	nop

	! block 59
.L759:
.L768:
.L769:
.L771:

!  455	   }
!  456	   else if (ctx->Color.BlendEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ead),%l1
	or	%l1,%lo(0x1ead),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L770
	nop

	! block 60
.L772:
.L773:
.L774:
.L775:

!  457	      gl_blend_span( ctx, n, x, y, red, green, blue, alpha, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	add	%fp,-1600,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	call	gl_blend_span
	st	%l4,[%sp+100]

	! block 61
.L776:
.L777:
.L770:
.L778:
.L779:
.L767:
.L780:
.L781:
.L783:

!  458	   }
!  459	
!  460	   /* Color component masking */
!  461	   if (ctx->Color.SWmasking) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1e98),%l1
	or	%l1,%lo(0x1e98),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L782
	nop

	! block 62
.L784:
.L785:
.L786:
.L787:

!  462	      gl_mask_color_span( ctx, n, x, y, red, green, blue, alpha );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	call	gl_mask_color_span
	st	%l0,[%sp+96]

	! block 63
.L788:
.L789:
.L782:
.L790:
.L791:

!  463	   }
!  464	
!  465	   /* write pixels */
!  466	   (*ctx->Driver.WriteColorSpan)( ctx, n, x, y, red, green, blue, alpha,
!  467	                                  write_all ? NULL : mask );

	ldub	[%fp-1601],%l0
	cmp	%l0,%g0
	be	.L792
	nop

	! block 64
.L793:
	sethi	0x7,%l0
	xor	%l0,-856,%l0
	ba	.L794
	st	%g0,[%fp+%l0]

	! block 65
.L792:
	add	%fp,-1600,%l1
	sethi	0x7,%l0
	xor	%l0,-856,%l0
	st	%l1,[%fp+%l0]

	! block 66
.L794:
	ld	[%fp+68],%l1
	ld	[%l1+2244],%l4
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%i1
	sethi	0x7,%l0
	xor	%l0,-856,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%i1,[%sp+96]
	st	%l0,[%sp+100]
	jmpl	%l4,%o7
	nop

	! block 67
.L795:
.L797:

!  468	   if (ctx->RasterMask & ALPHABUF_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,256,%l0
	be	.L796
	nop

	! block 68
.L798:
.L799:
.L800:
.L801:

!  469	      gl_write_alpha_span( ctx, n, x, y, alpha, write_all ? NULL : mask );

	ldub	[%fp-1601],%l0
	cmp	%l0,%g0
	be	.L802
	nop

	! block 69
.L803:
	sethi	0x7,%l0
	xor	%l0,-860,%l0
	ba	.L804
	st	%g0,[%fp+%l0]

	! block 70
.L802:
	add	%fp,-1600,%l1
	sethi	0x7,%l0
	xor	%l0,-860,%l0
	st	%l1,[%fp+%l0]

	! block 71
.L804:
	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-860,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	call	gl_write_alpha_span
	mov	%l0,%o5

	! block 72
.L805:
.L806:
.L796:
.L807:
.L808:
.L810:

!  470	   }
!  471	
!  472	   if (ctx->RasterMask & FRONT_AND_BACK_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,1024,%l0
	be	.L809
	nop

	! block 73
.L811:
.L812:
.L813:
.L814:

!  473	      /*** Also render to back buffer ***/
!  474	      MEMCPY( rtmp, r, n * sizeof(GLubyte) );

	add	%fp,-3201,%l0
	ld	[%fp+88],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 74
.L815:

!  475	      MEMCPY( gtmp, g, n * sizeof(GLubyte) );

	sethi	0x4,%l0
	xor	%l0,-705,%l0
	add	%fp,%l0,%l0
	ld	[%fp+92],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 75
.L816:

!  476	      MEMCPY( btmp, b, n * sizeof(GLubyte) );

	sethi	0x6,%l0
	xor	%l0,-257,%l0
	add	%fp,%l0,%l0
	ld	[%fp+96],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 76
.L817:

!  477	      MEMCPY( atmp, a, n * sizeof(GLubyte) );

	sethi	0x7,%l0
	xor	%l0,-833,%l0
	add	%fp,%l0,%l0
	ld	[%fp+100],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 77
.L818:

!  478	      (*ctx->Driver.SetBuffer)( ctx, GL_BACK );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1029,%o1
	jmpl	%l1,%o7
	nop

	! block 78
.L819:
.L821:

!  479	      if (ctx->Color.SWLogicOpEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ed2),%l1
	or	%l1,%lo(0x1ed2),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L820
	nop

	! block 79
.L822:
.L823:
.L824:
.L825:

!  480	         gl_logicop_rgba_span( ctx, n, x, y, red, green, blue, alpha, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	add	%fp,-1600,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	call	gl_logicop_rgba_span
	st	%l4,[%sp+100]

	! block 80
.L826:
.L827:
	ba	.L828
	nop

	! block 81
.L820:
.L829:
.L830:
.L832:

!  481	      }
!  482	      else  if (ctx->Color.BlendEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ead),%l1
	or	%l1,%lo(0x1ead),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L831
	nop

	! block 82
.L833:
.L834:
.L835:
.L836:

!  483	         gl_blend_span( ctx, n, x, y, red, green, blue, alpha, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	add	%fp,-1600,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	call	gl_blend_span
	st	%l4,[%sp+100]

	! block 83
.L837:
.L838:
.L831:
.L839:
.L840:
.L828:
.L841:
.L842:
.L844:

!  484	      }
!  485	      if (ctx->Color.SWmasking) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1e98),%l1
	or	%l1,%lo(0x1e98),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L843
	nop

	! block 84
.L845:
.L846:
.L847:
.L848:

!  486	         gl_mask_color_span( ctx, n, x, y, red, green, blue, alpha );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	call	gl_mask_color_span
	st	%l0,[%sp+96]

	! block 85
.L849:
.L850:
.L843:
.L851:
.L852:

!  487	      }
!  488	      (*ctx->Driver.WriteColorSpan)( ctx, n, x, y, red, green, blue, alpha,
!  489	                              write_all ? NULL : mask );

	ldub	[%fp-1601],%l0
	cmp	%l0,%g0
	be	.L853
	nop

	! block 86
.L854:
	sethi	0x7,%l0
	xor	%l0,-860,%l0
	ba	.L855
	st	%g0,[%fp+%l0]

	! block 87
.L853:
	add	%fp,-1600,%l1
	sethi	0x7,%l0
	xor	%l0,-860,%l0
	st	%l1,[%fp+%l0]

	! block 88
.L855:
	ld	[%fp+68],%l1
	ld	[%l1+2244],%l4
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%i1
	sethi	0x7,%l0
	xor	%l0,-860,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%i1,[%sp+96]
	st	%l0,[%sp+100]
	jmpl	%l4,%o7
	nop

	! block 89
.L856:
.L858:

!  490	      if (ctx->RasterMask & ALPHABUF_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,256,%l0
	be	.L857
	nop

	! block 90
.L859:
.L860:
.L861:
.L862:

!  491	         ctx->Buffer->Alpha = ctx->Buffer->BackAlpha;

	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+28],%l1
	st	%l1,[%l0+32]

	! block 91
.L863:

!  492	         gl_write_alpha_span( ctx, n, x, y, alpha, write_all ? NULL : mask );

	ldub	[%fp-1601],%l0
	cmp	%l0,%g0
	be	.L864
	nop

	! block 92
.L865:
	sethi	0x7,%l0
	xor	%l0,-864,%l0
	ba	.L866
	st	%g0,[%fp+%l0]

	! block 93
.L864:
	add	%fp,-1600,%l1
	sethi	0x7,%l0
	xor	%l0,-864,%l0
	st	%l1,[%fp+%l0]

	! block 94
.L866:
	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-864,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	call	gl_write_alpha_span
	mov	%l0,%o5

	! block 95
.L867:

!  493	         ctx->Buffer->Alpha = ctx->Buffer->FrontAlpha;

	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+24],%l1
	st	%l1,[%l0+32]

	! block 96
.L868:
.L869:
.L857:
.L870:
.L871:

!  494	      }
!  495	      (*ctx->Driver.SetBuffer)( ctx, GL_FRONT );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1028,%o1
	jmpl	%l1,%o7
	nop

	! block 97
.L872:
.L873:
.L809:
.L874:

	! block 98
.L875:
.L876:
.L570:
	jmp	%i7+8
	restore
	.size	gl_write_color_span,(.-gl_write_color_span)
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	gl_write_monocolor_span
	.type	gl_write_monocolor_span,#function
gl_write_monocolor_span:
	sethi	%hi(-9712),%g1
	or	%g1,%lo(-9712),%g1
	save	%sp,%g1,%sp

	! block 1
.L879:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]
	ld	[%fp+100],%l0
	st	%l0,[%fp+100]
	ld	[%fp+104],%l0
	st	%l0,[%fp+104]

	! block 2
.L880:
.L882:

! File span.c:
!  496	   }
!  497	
!  498	}
!  499	
!  502	/*
!  503	 * Write a horizontal span of color pixels to the frame buffer.
!  504	 * The color is initially constant for the whole span.
!  505	 * Alpha-testing, stenciling, depth-testing, and blending are done as needed.
!  506	 * Input:  n - number of pixels in the span
!  507	 *         x, y - location of leftmost pixel in the span
!  508	 *         z - array of [n] z-values
!  509	 *         r, g, b, a - the color of the pixels
!  510	 *         primitive - either GL_POINT, GL_LINE, GL_POLYGON or GL_BITMAP.
!  511	 */
!  512	void gl_write_monocolor_span( GLcontext *ctx,
!  513	                              GLuint n, GLint x, GLint y, GLdepth z[],
!  514				      GLint r, GLint g, GLint b, GLint a,
!  515	                              GLenum primitive )
!  516	{
!  517	   GLuint i;
!  518	   GLubyte mask[MAX_WIDTH];
!  519	   GLboolean write_all = GL_TRUE;

	mov	1,%l0
	stb	%l0,[%fp-1605]

	! block 3
.L883:

!  520	   GLubyte red[MAX_WIDTH], green[MAX_WIDTH], blue[MAX_WIDTH], alpha[MAX_WIDTH];
!  521	
!  522	   /* init mask to 1's (all pixels are to be written) */
!  523	   MEMSET(mask, 1, n);

	add	%fp,-1604,%l0
	ld	[%fp+72],%l1
	mov	%l0,%o0
	mov	1,%o1
	call	memset
	mov	%l1,%o2

	! block 4
.L884:
.L886:

!  525	   if ((ctx->RasterMask & WINCLIP_BIT) || primitive==GL_BITMAP) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	and	%l0,512,%l0
	cmp	%l0,%g0
	bne	.L887
	nop

	! block 5
.L888:
	ld	[%fp+104],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	bne	.L885
	nop

	! block 6
.L889:
.L887:
.L890:
.L891:
.L892:
.L894:

!  526	      if (clip_span( ctx,n,x,y,mask)==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	clip_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L893
	nop

	! block 7
.L895:
.L896:
.L897:
.L898:

!  527		 return;

	ba	.L878
	nop

	! block 8
.L899:
.L900:
.L893:
.L901:
.L902:

!  528	      }
!  529	      write_all = GL_FALSE;

	stb	%g0,[%fp-1605]

	! block 9
.L903:
.L904:
.L885:
.L905:
.L906:
.L908:

!  530	   }
!  531	
!  532	   /* Do the scissor test */
!  533	   if (ctx->Scissor.Enabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd748),%l1
	or	%l1,%lo(0xd748),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L907
	nop

	! block 10
.L909:
.L910:
.L911:
.L912:
.L914:

!  534	      if (gl_scissor_span( ctx, n, x, y, mask )==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_scissor_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L913
	nop

	! block 11
.L915:
.L916:
.L917:
.L918:

!  535		 return;

	ba	.L878
	nop

	! block 12
.L919:
.L920:
.L913:
.L921:
.L922:

!  536	      }
!  537	      write_all = GL_FALSE;

	stb	%g0,[%fp-1605]

	! block 13
.L923:
.L924:
.L907:
.L925:
.L926:
.L928:

!  538	   }
!  539	
!  540	   /* Polygon Stippling */
!  541	   if (ctx->Polygon.StippleFlag && primitive==GL_POLYGON) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd6b9),%l1
	or	%l1,%lo(0xd6b9),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L927
	nop

	! block 14
.L929:
	ld	[%fp+104],%l0
	cmp	%l0,9
	bne	.L927
	nop

	! block 15
.L930:
.L931:
.L932:
.L933:

!  542	      stipple_polygon_span( ctx, n, x, y, mask );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	stipple_polygon_span
	mov	%l4,%o4

	! block 16
.L934:

!  543	      write_all = GL_FALSE;

	stb	%g0,[%fp-1605]

	! block 17
.L935:
.L936:
.L927:
.L937:
.L938:
.L940:

!  544	   }
!  545	
!  546	   /* Do the alpha test */
!  547	   if (ctx->Color.AlphaEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ea0),%l1
	or	%l1,%lo(0x1ea0),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L939
	nop

	! block 18
.L941:
.L942:
.L943:
.L944:
.L945:

!  548	      GLubyte alpha[MAX_WIDTH];
!  549	      for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L948
	st	%g0,[%fp-4]

	! block 19
.L_y2:
	sethi	0x9,%l2
	xor	%l2,-389,%l2
.L949:
.L946:
.L950:
.L951:
.L952:

!  550	         alpha[i] = a;

	ld	[%fp+100],%l3
	add	%fp,%l2,%l0
	ld	[%fp-4],%l1
	stb	%l3,[%l0+%l1]

	! block 20
.L953:
.L954:
.L955:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L946
	nop

	! block 21
.L956:
.L948:
.L957:
.L958:
.L960:

!  551	      }
!  552	      if (gl_alpha_test( ctx, n, alpha, mask )==0) {

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	sethi	0x9,%l0
	xor	%l0,-389,%l0
	add	%fp,%l0,%l0
	add	%fp,-1604,%l3
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l0,%o2
	call	gl_alpha_test
	mov	%l3,%o3
	cmp	%o0,0
	bne	.L959
	nop

	! block 22
.L961:
.L962:
.L963:
.L964:

!  553		 return;

	ba	.L878
	nop

	! block 23
.L965:
.L966:
.L959:
.L967:
.L968:

!  554	      }
!  555	      write_all = GL_FALSE;

	stb	%g0,[%fp-1605]

	! block 24
.L969:
.L970:
.L939:
.L971:
.L972:
.L974:

!  556	   }
!  557	
!  558	   if (ctx->Stencil.Enabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd75c),%l1
	or	%l1,%lo(0xd75c),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L973
	nop

	! block 25
.L975:
.L976:
.L977:
.L978:
.L980:

!  559	      /* first stencil test */
!  560	      if (gl_stencil_span( ctx, n, x, y, mask )==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_stencil_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L979
	nop

	! block 26
.L981:
.L982:
.L983:
.L984:

!  561		 return;

	ba	.L878
	nop

	! block 27
.L985:
.L986:
.L979:
.L987:
.L988:

!  562	      }
!  563	      /* depth buffering w/ stencil */
!  564	      gl_depth_stencil_span( ctx, n, x, y, z, mask );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	call	gl_depth_stencil_span
	mov	%l4,%o5

	! block 28
.L989:

!  565	      write_all = GL_FALSE;

	stb	%g0,[%fp-1605]

	! block 29
.L990:
.L991:
	ba	.L992
	nop

	! block 30
.L973:
.L993:
.L994:
.L996:

!  566	   }
!  567	   else if (ctx->Depth.Test) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1f3c),%l1
	or	%l1,%lo(0x1f3c),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L995
	nop

	! block 31
.L997:
.L998:
.L999:
.L1000:

!  568	      /* regular depth testing */
!  569	      GLuint m = (*ctx->Driver.DepthTestSpan)( ctx, n, x, y, z, mask );

	ld	[%fp+68],%l0
	ld	[%l0+2332],%l6
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	mov	%l4,%o5
	jmpl	%l6,%o7
	nop
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	st	%o0,[%fp+%l0]

	! block 32
.L1001:
.L1003:

!  570	      if (m==0) {

	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l0
	cmp	%l0,0
	bne	.L1002
	nop

	! block 33
.L1004:
.L1005:
.L1006:
.L1007:

!  571	         return;

	ba	.L878
	nop

	! block 34
.L1008:
.L1009:
.L1002:
.L1010:
.L1011:
.L1013:

!  572	      }
!  573	      if (m<n) {

	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	bgeu	.L1012
	nop

	! block 35
.L1014:
.L1015:
.L1016:
.L1017:

!  574	         write_all = GL_FALSE;

	stb	%g0,[%fp-1605]

	! block 36
.L1018:
.L1019:
.L1012:
.L1020:
.L1021:
.L1022:
.L995:
.L1023:
.L1024:
.L992:
.L1025:
.L1026:
.L1028:

!  575	      }
!  576	   }
!  577	
!  578	   if (ctx->RasterMask & NO_DRAW_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,2048,%l0
	be	.L1027
	nop

	! block 37
.L1029:
.L1030:
.L1031:
.L1032:

!  579	      /* write no pixels */
!  580	      return;

	ba	.L878
	nop

	! block 38
.L1033:
.L1034:
.L1027:
.L1035:
.L1036:
.L1038:

!  581	   }
!  582	
!  583	   if (ctx->Color.BlendEnabled || ctx->Color.SWLogicOpEnabled
!  584	       || ctx->Color.SWmasking) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ead),%l1
	or	%l1,%lo(0x1ead),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	bne	.L1039
	nop

	! block 39
.L1040:
	ld	[%fp+68],%l0
	sethi	%hi(0x1ed2),%l1
	or	%l1,%lo(0x1ed2),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	bne	.L1039
	nop

	! block 40
.L1041:
	ld	[%fp+68],%l0
	sethi	%hi(0x1e98),%l1
	or	%l1,%lo(0x1e98),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1037
	nop

	! block 41
.L1042:
.L1039:
.L1043:
.L1044:
.L1045:
.L1046:

!  585	      /* assign same color to each pixel */
!  586	      for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1049
	st	%g0,[%fp-4]

	! block 42
.L1050:
.L1047:
.L1051:
.L1052:
.L1053:
.L1055:

!  587		 if (mask[i]) {

	add	%fp,-1604,%l0
	ld	[%fp-4],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1054
	nop

	! block 43
.L1056:
.L1057:
.L1058:
.L1059:

!  588		    red[i]   = r;

	ld	[%fp+88],%l2
	add	%fp,-3205,%l0
	ld	[%fp-4],%l1
	stb	%l2,[%l0+%l1]

	! block 44
.L1060:

!  589		    green[i] = g;

	ld	[%fp+92],%l2
	sethi	0x4,%l0
	xor	%l0,-709,%l0
	add	%fp,%l0,%l0
	ld	[%fp-4],%l1
	stb	%l2,[%l0+%l1]

	! block 45
.L1061:

!  590		    blue[i]  = b;

	ld	[%fp+96],%l2
	sethi	0x6,%l0
	xor	%l0,-261,%l0
	add	%fp,%l0,%l0
	ld	[%fp-4],%l1
	stb	%l2,[%l0+%l1]

	! block 46
.L1062:

!  591		    alpha[i] = a;

	ld	[%fp+100],%l2
	sethi	0x7,%l0
	xor	%l0,-837,%l0
	add	%fp,%l0,%l0
	ld	[%fp-4],%l1
	stb	%l2,[%l0+%l1]

	! block 47
.L1063:
.L1064:
.L1054:
.L1065:
.L1066:
.L1067:
.L1068:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1047
	nop

	! block 48
.L1069:
.L1049:
.L1070:
.L1071:
.L1073:

!  592		 }
!  593	      }
!  594	
!  595	      if (ctx->Color.SWLogicOpEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ed2),%l1
	or	%l1,%lo(0x1ed2),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1072
	nop

	! block 49
.L1074:
.L1075:
.L1076:
.L1077:

!  596	         gl_logicop_rgba_span( ctx, n, x, y, red, green, blue, alpha, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	add	%fp,-3205,%l6
	sethi	0x4,%l0
	xor	%l0,-709,%l0
	add	%fp,%l0,%l7
	sethi	0x6,%l0
	xor	%l0,-261,%l0
	add	%fp,%l0,%i0
	sethi	0x7,%l0
	xor	%l0,-837,%l0
	add	%fp,%l0,%l0
	add	%fp,-1604,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	call	gl_logicop_rgba_span
	st	%l4,[%sp+100]

	! block 50
.L1078:
.L1079:
	ba	.L1080
	nop

	! block 51
.L1072:
.L1081:
.L1082:
.L1084:

!  597	      }
!  598	      else if (ctx->Color.BlendEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ead),%l1
	or	%l1,%lo(0x1ead),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1083
	nop

	! block 52
.L1085:
.L1086:
.L1087:
.L1088:

!  599	         gl_blend_span( ctx, n, x, y, red, green, blue, alpha, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	add	%fp,-3205,%l6
	sethi	0x4,%l0
	xor	%l0,-709,%l0
	add	%fp,%l0,%l7
	sethi	0x6,%l0
	xor	%l0,-261,%l0
	add	%fp,%l0,%i0
	sethi	0x7,%l0
	xor	%l0,-837,%l0
	add	%fp,%l0,%l0
	add	%fp,-1604,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	call	gl_blend_span
	st	%l4,[%sp+100]

	! block 53
.L1089:
.L1090:
.L1083:
.L1091:
.L1092:
.L1080:
.L1093:
.L1094:
.L1096:

!  600	      }
!  601	
!  602	      /* Color component masking */
!  603	      if (ctx->Color.SWmasking) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1e98),%l1
	or	%l1,%lo(0x1e98),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1095
	nop

	! block 54
.L1097:
.L1098:
.L1099:
.L1100:

!  604	         gl_mask_color_span( ctx, n, x, y, red, green, blue, alpha );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	add	%fp,-3205,%l6
	sethi	0x4,%l0
	xor	%l0,-709,%l0
	add	%fp,%l0,%l7
	sethi	0x6,%l0
	xor	%l0,-261,%l0
	add	%fp,%l0,%i0
	sethi	0x7,%l0
	xor	%l0,-837,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	call	gl_mask_color_span
	st	%l0,[%sp+96]

	! block 55
.L1101:
.L1102:
.L1095:
.L1103:
.L1104:

!  605	      }
!  606	
!  607	      /* write pixels */
!  608	      (*ctx->Driver.WriteColorSpan)( ctx, n, x, y, red, green, blue, alpha,
!  609	                                     write_all ? NULL : mask );

	ldub	[%fp-1605],%l0
	cmp	%l0,%g0
	be	.L1105
	nop

	! block 56
.L1106:
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ba	.L1107
	st	%g0,[%fp+%l0]

	! block 57
.L1105:
	add	%fp,-1604,%l1
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	st	%l1,[%fp+%l0]

	! block 58
.L1107:
	ld	[%fp+68],%l1
	ld	[%l1+2244],%l4
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	add	%fp,-3205,%l6
	sethi	0x4,%l0
	xor	%l0,-709,%l0
	add	%fp,%l0,%l7
	sethi	0x6,%l0
	xor	%l0,-261,%l0
	add	%fp,%l0,%i0
	sethi	0x7,%l0
	xor	%l0,-837,%l0
	add	%fp,%l0,%i1
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%i1,[%sp+96]
	st	%l0,[%sp+100]
	jmpl	%l4,%o7
	nop

	! block 59
.L1108:
.L1110:

!  610	      if (ctx->RasterMask & ALPHABUF_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,256,%l0
	be	.L1109
	nop

	! block 60
.L1111:
.L1112:
.L1113:
.L1114:

!  611	         gl_write_alpha_span( ctx, n, x, y, alpha, write_all ? NULL : mask );

	ldub	[%fp-1605],%l0
	cmp	%l0,%g0
	be	.L1115
	nop

	! block 61
.L1116:
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ba	.L1117
	st	%g0,[%fp+%l0]

	! block 62
.L1115:
	add	%fp,-1604,%l1
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	st	%l1,[%fp+%l0]

	! block 63
.L1117:
	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-837,%l0
	add	%fp,%l0,%l6
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	call	gl_write_alpha_span
	mov	%l0,%o5

	! block 64
.L1118:
.L1119:
.L1109:
.L1120:
.L1121:
.L1123:

!  612	      }
!  613	
!  614	      if (ctx->RasterMask & FRONT_AND_BACK_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,1024,%l0
	be	.L1122
	nop

	! block 65
.L1124:
.L1125:
.L1126:
.L1127:
.L1128:

!  615	         /*** Also draw to back buffer ***/
!  616	         for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1131
	st	%g0,[%fp-4]

	! block 66
.L1132:
.L1129:
.L1133:
.L1134:
.L1135:
.L1137:

!  617	            if (mask[i]) {

	add	%fp,-1604,%l0
	ld	[%fp-4],%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1136
	nop

	! block 67
.L1138:
.L1139:
.L1140:
.L1141:

!  618	               red[i]   = r;

	ld	[%fp+88],%l2
	add	%fp,-3205,%l0
	ld	[%fp-4],%l1
	stb	%l2,[%l0+%l1]

	! block 68
.L1142:

!  619	               green[i] = g;

	ld	[%fp+92],%l2
	sethi	0x4,%l0
	xor	%l0,-709,%l0
	add	%fp,%l0,%l0
	ld	[%fp-4],%l1
	stb	%l2,[%l0+%l1]

	! block 69
.L1143:

!  620	               blue[i]  = b;

	ld	[%fp+96],%l2
	sethi	0x6,%l0
	xor	%l0,-261,%l0
	add	%fp,%l0,%l0
	ld	[%fp-4],%l1
	stb	%l2,[%l0+%l1]

	! block 70
.L1144:

!  621	               alpha[i] = a;

	ld	[%fp+100],%l2
	sethi	0x7,%l0
	xor	%l0,-837,%l0
	add	%fp,%l0,%l0
	ld	[%fp-4],%l1
	stb	%l2,[%l0+%l1]

	! block 71
.L1145:
.L1146:
.L1136:
.L1147:
.L1148:
.L1149:
.L1150:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1129
	nop

	! block 72
.L1151:
.L1131:
.L1152:
.L1153:

!  622	            }
!  623	         }
!  624	         (*ctx->Driver.SetBuffer)( ctx, GL_BACK );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1029,%o1
	jmpl	%l1,%o7
	nop

	! block 73
.L1154:
.L1156:

!  625	         if (ctx->Color.SWLogicOpEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ed2),%l1
	or	%l1,%lo(0x1ed2),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1155
	nop

	! block 74
.L1157:
.L1158:
.L1159:
.L1160:

!  626	            gl_logicop_rgba_span( ctx, n, x, y, red, green, blue, alpha, mask);

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	add	%fp,-3205,%l6
	sethi	0x4,%l0
	xor	%l0,-709,%l0
	add	%fp,%l0,%l7
	sethi	0x6,%l0
	xor	%l0,-261,%l0
	add	%fp,%l0,%i0
	sethi	0x7,%l0
	xor	%l0,-837,%l0
	add	%fp,%l0,%l0
	add	%fp,-1604,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	call	gl_logicop_rgba_span
	st	%l4,[%sp+100]

	! block 75
.L1161:
.L1162:
	ba	.L1163
	nop

	! block 76
.L1155:
.L1164:
.L1165:
.L1167:

!  627	         }
!  628	         else if (ctx->Color.BlendEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ead),%l1
	or	%l1,%lo(0x1ead),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1166
	nop

	! block 77
.L1168:
.L1169:
.L1170:
.L1171:

!  629	            gl_blend_span( ctx, n, x, y, red, green, blue, alpha, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	add	%fp,-3205,%l6
	sethi	0x4,%l0
	xor	%l0,-709,%l0
	add	%fp,%l0,%l7
	sethi	0x6,%l0
	xor	%l0,-261,%l0
	add	%fp,%l0,%i0
	sethi	0x7,%l0
	xor	%l0,-837,%l0
	add	%fp,%l0,%l0
	add	%fp,-1604,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	call	gl_blend_span
	st	%l4,[%sp+100]

	! block 78
.L1172:
.L1173:
.L1166:
.L1174:
.L1175:
.L1163:
.L1176:
.L1177:
.L1179:

!  630	         }
!  631	         if (ctx->Color.SWmasking) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1e98),%l1
	or	%l1,%lo(0x1e98),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1178
	nop

	! block 79
.L1180:
.L1181:
.L1182:
.L1183:

!  632	            gl_mask_color_span( ctx, n, x, y, red, green, blue, alpha );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	add	%fp,-3205,%l6
	sethi	0x4,%l0
	xor	%l0,-709,%l0
	add	%fp,%l0,%l7
	sethi	0x6,%l0
	xor	%l0,-261,%l0
	add	%fp,%l0,%i0
	sethi	0x7,%l0
	xor	%l0,-837,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	call	gl_mask_color_span
	st	%l0,[%sp+96]

	! block 80
.L1184:
.L1185:
.L1178:
.L1186:
.L1187:

!  633	         }
!  634	         (*ctx->Driver.WriteColorSpan)( ctx, n, x, y, red, green, blue, alpha,
!  635	                                        write_all ? NULL : mask );

	ldub	[%fp-1605],%l0
	cmp	%l0,%g0
	be	.L1188
	nop

	! block 81
.L1189:
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ba	.L1190
	st	%g0,[%fp+%l0]

	! block 82
.L1188:
	add	%fp,-1604,%l1
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	st	%l1,[%fp+%l0]

	! block 83
.L1190:
	ld	[%fp+68],%l1
	ld	[%l1+2244],%l4
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	add	%fp,-3205,%l6
	sethi	0x4,%l0
	xor	%l0,-709,%l0
	add	%fp,%l0,%l7
	sethi	0x6,%l0
	xor	%l0,-261,%l0
	add	%fp,%l0,%i0
	sethi	0x7,%l0
	xor	%l0,-837,%l0
	add	%fp,%l0,%i1
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%i1,[%sp+96]
	st	%l0,[%sp+100]
	jmpl	%l4,%o7
	nop

	! block 84
.L1191:

!  636	         (*ctx->Driver.SetBuffer)( ctx, GL_FRONT );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1028,%o1
	jmpl	%l1,%o7
	nop

	! block 85
.L1192:
.L1194:

!  637	         if (ctx->RasterMask & ALPHABUF_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,256,%l0
	be	.L1193
	nop

	! block 86
.L1195:
.L1196:
.L1197:
.L1198:

!  638	            ctx->Buffer->Alpha = ctx->Buffer->BackAlpha;

	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+28],%l1
	st	%l1,[%l0+32]

	! block 87
.L1199:

!  639	            gl_write_alpha_span( ctx, n, x, y, alpha,
!  640	                                 write_all ? NULL : mask );

	ldub	[%fp-1605],%l0
	cmp	%l0,%g0
	be	.L1200
	nop

	! block 88
.L1201:
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ba	.L1202
	st	%g0,[%fp+%l0]

	! block 89
.L1200:
	add	%fp,-1604,%l1
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	st	%l1,[%fp+%l0]

	! block 90
.L1202:
	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-837,%l0
	add	%fp,%l0,%l6
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	call	gl_write_alpha_span
	mov	%l0,%o5

	! block 91
.L1203:

!  641	            ctx->Buffer->Alpha = ctx->Buffer->FrontAlpha;

	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+24],%l1
	st	%l1,[%l0+32]

	! block 92
.L1204:
.L1205:
.L1193:
.L1206:
.L1207:
.L1208:
.L1122:
.L1209:
.L1210:
.L1211:
	ba	.L1212
	nop

	! block 93
.L1037:
.L1213:
.L1214:
.L1215:

!  642	         }
!  643	      }
!  644	   }
!  645	   else {
!  646	      (*ctx->Driver.WriteMonocolorSpan)( ctx, n, x, y, mask );

	ld	[%fp+68],%l0
	ld	[%l0+2248],%l5
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l4,%o4
	jmpl	%l5,%o7
	nop

	! block 94
.L1216:
.L1218:

!  647	      if (ctx->RasterMask & ALPHABUF_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,256,%l0
	be	.L1217
	nop

	! block 95
.L1219:
.L1220:
.L1221:
.L1222:

!  648	         gl_write_mono_alpha_span( ctx, n, x, y, a, write_all ? NULL : mask );

	ldub	[%fp-1605],%l0
	cmp	%l0,%g0
	be	.L1223
	nop

	! block 96
.L1224:
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ba	.L1225
	st	%g0,[%fp+%l0]

	! block 97
.L1223:
	add	%fp,-1604,%l1
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	st	%l1,[%fp+%l0]

	! block 98
.L1225:
	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	ld	[%fp+100],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	call	gl_write_mono_alpha_span
	mov	%l0,%o5

	! block 99
.L1226:
.L1227:
.L1217:
.L1228:
.L1229:
.L1231:

!  649	      }
!  650	      if (ctx->RasterMask & FRONT_AND_BACK_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,1024,%l0
	be	.L1230
	nop

	! block 100
.L1232:
.L1233:
.L1234:
.L1235:

!  651	         /* Also draw to back buffer */
!  652	         (*ctx->Driver.SetBuffer)( ctx, GL_BACK );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1029,%o1
	jmpl	%l1,%o7
	nop

	! block 101
.L1236:

!  653	         (*ctx->Driver.WriteMonocolorSpan)( ctx, n, x, y, mask );

	ld	[%fp+68],%l0
	ld	[%l0+2248],%l5
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1604,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l4,%o4
	jmpl	%l5,%o7
	nop

	! block 102
.L1237:

!  654	         (*ctx->Driver.SetBuffer)( ctx, GL_FRONT );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1028,%o1
	jmpl	%l1,%o7
	nop

	! block 103
.L1238:
.L1240:

!  655	         if (ctx->RasterMask & ALPHABUF_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,256,%l0
	be	.L1239
	nop

	! block 104
.L1241:
.L1242:
.L1243:
.L1244:

!  656	            ctx->Buffer->Alpha = ctx->Buffer->BackAlpha;

	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+28],%l1
	st	%l1,[%l0+32]

	! block 105
.L1245:

!  657	            gl_write_mono_alpha_span( ctx, n, x, y, a,
!  658	                                      write_all ? NULL : mask );

	ldub	[%fp-1605],%l0
	cmp	%l0,%g0
	be	.L1246
	nop

	! block 106
.L1247:
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ba	.L1248
	st	%g0,[%fp+%l0]

	! block 107
.L1246:
	add	%fp,-1604,%l1
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	st	%l1,[%fp+%l0]

	! block 108
.L1248:
	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	ld	[%fp+100],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	call	gl_write_mono_alpha_span
	mov	%l0,%o5

	! block 109
.L1249:

!  659	            ctx->Buffer->Alpha = ctx->Buffer->FrontAlpha;

	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+24],%l1
	st	%l1,[%l0+32]

	! block 110
.L1250:
.L1251:
.L1239:
.L1252:
.L1253:
.L1254:
.L1230:
.L1255:
.L1256:
.L1257:
.L1212:
.L1258:

	! block 111
.L1259:
.L1260:
.L878:
	jmp	%i7+8
	restore
	.size	gl_write_monocolor_span,(.-gl_write_monocolor_span)
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	gl_write_texture_span
	.type	gl_write_texture_span,#function
gl_write_texture_span:
	sethi	%hi(-8144),%g1
	or	%g1,%lo(-8144),%g1
	save	%sp,%g1,%sp

	! block 1
.L1263:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]
	ld	[%fp+100],%l0
	st	%l0,[%fp+100]
	ld	[%fp+104],%l0
	st	%l0,[%fp+104]
	ld	[%fp+108],%l0
	st	%l0,[%fp+108]
	ld	[%fp+112],%l0
	st	%l0,[%fp+112]
	ld	[%fp+116],%l0
	st	%l0,[%fp+116]
	ld	[%fp+120],%l0
	st	%l0,[%fp+120]

	! block 2
.L1264:
.L1266:

! File span.c:
!  660	         }
!  661	      }
!  662	   }
!  663	}
!  664	
!  667	/*
!  668	 * Write a horizontal span of textured pixels to the frame buffer.
!  669	 * The color of each pixel is different.
!  670	 * Alpha-testing, stenciling, depth-testing, and blending are done
!  671	 * as needed.
!  672	 * Input:  n - number of pixels in the span
!  673	 *         x, y - location of leftmost pixel in the span
!  674	 *         z - array of [n] z-values
!  675	 *         s, t - array of (s,t) texture coordinates for each pixel
!  676	 *         lambda - array of texture lambda values
!  677	 *         red, green, blue, alpha - array of [n] color components
!  678	 *         primitive - either GL_POINT, GL_LINE, GL_POLYGON or GL_BITMAP.
!  679	 */
!  680	void gl_write_texture_span( GLcontext *ctx,
!  681	                            GLuint n, GLint x, GLint y, GLdepth z[],
!  682				    GLfloat s[], GLfloat t[], GLfloat u[],
!  683	                            GLfloat lambda[],
!  684				    GLubyte r[], GLubyte g[],
!  685				    GLubyte b[], GLubyte a[],
!  686				    GLenum primitive )
!  687	{
!  688	   GLubyte mask[MAX_WIDTH];
!  689	   GLboolean write_all = GL_TRUE;

	mov	1,%l0
	stb	%l0,[%fp-1601]

	! block 3
.L1267:

!  690	   GLubyte rtmp[MAX_WIDTH], gtmp[MAX_WIDTH], btmp[MAX_WIDTH], atmp[MAX_WIDTH];
!  691	   GLubyte *red, *green, *blue, *alpha;
!  692	
!  693	   /* init mask to 1's (all pixels are to be written) */
!  694	   MEMSET(mask, 1, n);

	add	%fp,-1600,%l0
	ld	[%fp+72],%l1
	mov	%l0,%o0
	mov	1,%o1
	call	memset
	mov	%l1,%o2

	! block 4
.L1268:
.L1270:

!  696	   if ((ctx->RasterMask & WINCLIP_BIT) || primitive==GL_BITMAP) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	and	%l0,512,%l0
	cmp	%l0,%g0
	bne	.L1271
	nop

	! block 5
.L1272:
	ld	[%fp+120],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	bne	.L1269
	nop

	! block 6
.L1273:
.L1271:
.L1274:
.L1275:
.L1276:
.L1278:

!  697	      if (clip_span( ctx,n,x,y,mask)==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	clip_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L1277
	nop

	! block 7
.L1279:
.L1280:
.L1281:
.L1282:

!  698		 return;

	ba	.L1262
	nop

	! block 8
.L1283:
.L1284:
.L1277:
.L1285:
.L1286:

!  699	      }
!  700	      write_all = GL_FALSE;

	stb	%g0,[%fp-1601]

	! block 9
.L1287:
.L1288:
.L1269:
.L1289:
.L1290:
.L1292:

!  701	   }
!  702	
!  704	   if (primitive==GL_BITMAP || (ctx->RasterMask & FRONT_AND_BACK_BIT)) {

	ld	[%fp+120],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	be	.L1293
	nop

	! block 10
.L1294:
	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,1024,%l0
	be	.L1291
	nop

	! block 11
.L1295:
.L1293:
.L1296:
.L1297:
.L1298:

!  705	      /* must make a copy of the colors since they may be modified */
!  706	      MEMCPY( rtmp, r, n * sizeof(GLubyte) );

	add	%fp,-3201,%l0
	ld	[%fp+104],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 12
.L1299:

!  707	      MEMCPY( gtmp, g, n * sizeof(GLubyte) );

	sethi	0x4,%l0
	xor	%l0,-705,%l0
	add	%fp,%l0,%l0
	ld	[%fp+108],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 13
.L1300:

!  708	      MEMCPY( btmp, b, n * sizeof(GLubyte) );

	sethi	0x6,%l0
	xor	%l0,-257,%l0
	add	%fp,%l0,%l0
	ld	[%fp+112],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 14
.L1301:

!  709	      MEMCPY( atmp, a, n * sizeof(GLubyte) );

	sethi	0x7,%l0
	xor	%l0,-833,%l0
	add	%fp,%l0,%l0
	ld	[%fp+116],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 15
.L1302:

!  710	      red = rtmp;

	add	%fp,-3201,%l1
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	st	%l1,[%fp+%l0]

	! block 16
.L1303:

!  711	      green = gtmp;

	sethi	0x4,%l0
	xor	%l0,-705,%l0
	add	%fp,%l0,%l1
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	st	%l1,[%fp+%l0]

	! block 17
.L1304:

!  712	      blue = btmp;

	sethi	0x6,%l0
	xor	%l0,-257,%l0
	add	%fp,%l0,%l1
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	st	%l1,[%fp+%l0]

	! block 18
.L1305:

!  713	      alpha = atmp;

	sethi	0x7,%l0
	xor	%l0,-833,%l0
	add	%fp,%l0,%l1
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	st	%l1,[%fp+%l0]

	! block 19
.L1306:
.L1307:
	ba	.L1308
	nop

	! block 20
.L1291:
.L1309:
.L1310:
.L1311:

!  714	   }
!  715	   else {
!  716	      red   = r;

	ld	[%fp+104],%l1
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	st	%l1,[%fp+%l0]

	! block 21
.L1312:

!  717	      green = g;

	ld	[%fp+108],%l1
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	st	%l1,[%fp+%l0]

	! block 22
.L1313:

!  718	      blue  = b;

	ld	[%fp+112],%l1
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	st	%l1,[%fp+%l0]

	! block 23
.L1314:

!  719	      alpha = a;

	ld	[%fp+116],%l1
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	st	%l1,[%fp+%l0]

	! block 24
.L1315:
.L1316:
.L1308:
.L1317:
.L1318:

!  720	   }
!  721	
!  722	   /* Texture */
!  723	   ASSERT(ctx->Texture.Enabled);
!  724	   gl_texture_pixels( ctx, n, s, t, u, lambda, red, green, blue, alpha );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+88],%l3
	ld	[%fp+92],%l5
	ld	[%fp+96],%l6
	ld	[%fp+100],%l7
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%i1
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i3
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%i1,[%sp+96]
	st	%i3,[%sp+100]
	call	gl_texture_pixels
	st	%l0,[%sp+104]

	! block 25
.L1319:
.L1321:

!  726	   /* Per-pixel fog */
!  727	   if (ctx->Fog.Enabled && (ctx->Hint.Fog==GL_NICEST || primitive==GL_BITMAP
!  728	                            || ctx->Texture.Enabled)) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1f78),%l1
	or	%l1,%lo(0x1f78),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1320
	nop

	! block 26
.L1322:
	ld	[%fp+68],%l0
	sethi	%hi(0x1fb0),%l1
	or	%l1,%lo(0x1fb0),%l1
	ld	[%l0+%l1],%l1
	sethi	%hi(0x1102),%l0
	or	%l0,%lo(0x1102),%l0
	cmp	%l1,%l0
	be	.L1323
	nop

	! block 27
.L1324:
	ld	[%fp+120],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	be	.L1323
	nop

	! block 28
.L1325:
	ld	[%fp+68],%l0
	sethi	%hi(0xd774),%l1
	or	%l1,%lo(0xd774),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1320
	nop

	! block 29
.L1326:
.L1323:
.L1327:
.L1328:
.L1329:

!  729	      gl_fog_color_pixels( ctx, n, z, red, green, blue, alpha );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+84],%l3
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l5
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	call	gl_fog_color_pixels
	st	%l0,[%sp+92]

	! block 30
.L1330:
.L1331:
.L1320:
.L1332:
.L1333:
.L1335:

!  730	   }
!  731	
!  732	   /* Do the scissor test */
!  733	   if (ctx->Scissor.Enabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd748),%l1
	or	%l1,%lo(0xd748),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1334
	nop

	! block 31
.L1336:
.L1337:
.L1338:
.L1339:
.L1341:

!  734	      if (gl_scissor_span( ctx, n, x, y, mask )==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_scissor_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L1340
	nop

	! block 32
.L1342:
.L1343:
.L1344:
.L1345:

!  735		 return;

	ba	.L1262
	nop

	! block 33
.L1346:
.L1347:
.L1340:
.L1348:
.L1349:

!  736	      }
!  737	      write_all = GL_FALSE;

	stb	%g0,[%fp-1601]

	! block 34
.L1350:
.L1351:
.L1334:
.L1352:
.L1353:
.L1355:

!  738	   }
!  739	
!  740	   /* Polygon Stippling */
!  741	   if (ctx->Polygon.StippleFlag && primitive==GL_POLYGON) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd6b9),%l1
	or	%l1,%lo(0xd6b9),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1354
	nop

	! block 35
.L1356:
	ld	[%fp+120],%l0
	cmp	%l0,9
	bne	.L1354
	nop

	! block 36
.L1357:
.L1358:
.L1359:
.L1360:

!  742	      stipple_polygon_span( ctx, n, x, y, mask );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	stipple_polygon_span
	mov	%l4,%o4

	! block 37
.L1361:

!  743	      write_all = GL_FALSE;

	stb	%g0,[%fp-1601]

	! block 38
.L1362:
.L1363:
.L1354:
.L1364:
.L1365:
.L1367:

!  744	   }
!  745	
!  746	   /* Do the alpha test */
!  747	   if (ctx->Color.AlphaEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ea0),%l1
	or	%l1,%lo(0x1ea0),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1366
	nop

	! block 39
.L1368:
.L1369:
.L1370:
.L1371:
.L1373:

!  748	      if (gl_alpha_test( ctx, n, alpha, mask )==0) {

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	add	%fp,-1600,%l3
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l0,%o2
	call	gl_alpha_test
	mov	%l3,%o3
	cmp	%o0,0
	bne	.L1372
	nop

	! block 40
.L1374:
.L1375:
.L1376:
.L1377:

!  749		 return;

	ba	.L1262
	nop

	! block 41
.L1378:
.L1379:
.L1372:
.L1380:
.L1381:

!  750	      }
!  751	      write_all = GL_FALSE;

	stb	%g0,[%fp-1601]

	! block 42
.L1382:
.L1383:
.L1366:
.L1384:
.L1385:
.L1387:

!  752	   }
!  753	
!  754	   if (ctx->Stencil.Enabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0xd75c),%l1
	or	%l1,%lo(0xd75c),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1386
	nop

	! block 43
.L1388:
.L1389:
.L1390:
.L1391:
.L1393:

!  755	      /* first stencil test */
!  756	      if (gl_stencil_span( ctx, n, x, y, mask )==0) {

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_stencil_span
	mov	%l4,%o4
	cmp	%o0,0
	bne	.L1392
	nop

	! block 44
.L1394:
.L1395:
.L1396:
.L1397:

!  757		 return;

	ba	.L1262
	nop

	! block 45
.L1398:
.L1399:
.L1392:
.L1400:
.L1401:

!  758	      }
!  759	      /* depth buffering w/ stencil */
!  760	      gl_depth_stencil_span( ctx, n, x, y, z, mask );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	call	gl_depth_stencil_span
	mov	%l4,%o5

	! block 46
.L1402:

!  761	      write_all = GL_FALSE;

	stb	%g0,[%fp-1601]

	! block 47
.L1403:
.L1404:
	ba	.L1405
	nop

	! block 48
.L1386:
.L1406:
.L1407:
.L1409:

!  762	   }
!  763	   else if (ctx->Depth.Test) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1f3c),%l1
	or	%l1,%lo(0x1f3c),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1408
	nop

	! block 49
.L1410:
.L1411:
.L1412:
.L1413:

!  764	      /* regular depth testing */
!  765	      GLuint m = (*ctx->Driver.DepthTestSpan)( ctx, n, x, y, z, mask );

	ld	[%fp+68],%l0
	ld	[%l0+2332],%l6
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	add	%fp,-1600,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	mov	%l4,%o5
	jmpl	%l6,%o7
	nop
	sethi	0x7,%l0
	xor	%l0,-856,%l0
	st	%o0,[%fp+%l0]

	! block 50
.L1414:
.L1416:

!  766	      if (m==0) {

	sethi	0x7,%l0
	xor	%l0,-856,%l0
	ld	[%fp+%l0],%l0
	cmp	%l0,0
	bne	.L1415
	nop

	! block 51
.L1417:
.L1418:
.L1419:
.L1420:

!  767	         return;

	ba	.L1262
	nop

	! block 52
.L1421:
.L1422:
.L1415:
.L1423:
.L1424:
.L1426:

!  768	      }
!  769	      if (m<n) {

	sethi	0x7,%l0
	xor	%l0,-856,%l0
	ld	[%fp+%l0],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	bgeu	.L1425
	nop

	! block 53
.L1427:
.L1428:
.L1429:
.L1430:

!  770	         write_all = GL_FALSE;

	stb	%g0,[%fp-1601]

	! block 54
.L1431:
.L1432:
.L1425:
.L1433:
.L1434:
.L1435:
.L1408:
.L1436:
.L1437:
.L1405:
.L1438:
.L1439:
.L1441:

!  771	      }
!  772	   }
!  773	
!  774	   if (ctx->RasterMask & NO_DRAW_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,2048,%l0
	be	.L1440
	nop

	! block 55
.L1442:
.L1443:
.L1444:
.L1445:

!  775	      /* write no pixels */
!  776	      return;

	ba	.L1262
	nop

	! block 56
.L1446:
.L1447:
.L1440:
.L1448:
.L1449:
.L1451:

!  777	   }
!  778	
!  779	   /* blending */
!  780	   if (ctx->Color.SWLogicOpEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ed2),%l1
	or	%l1,%lo(0x1ed2),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1450
	nop

	! block 57
.L1452:
.L1453:
.L1454:
.L1455:

!  781	      gl_logicop_rgba_span( ctx, n, x, y, red, green, blue, alpha, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	add	%fp,-1600,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	call	gl_logicop_rgba_span
	st	%l4,[%sp+100]

	! block 58
.L1456:
.L1457:
	ba	.L1458
	nop

	! block 59
.L1450:
.L1459:
.L1460:
.L1462:

!  782	   }
!  783	   else  if (ctx->Color.BlendEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ead),%l1
	or	%l1,%lo(0x1ead),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1461
	nop

	! block 60
.L1463:
.L1464:
.L1465:
.L1466:

!  784	      gl_blend_span( ctx, n, x, y, red, green, blue, alpha, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	add	%fp,-1600,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	call	gl_blend_span
	st	%l4,[%sp+100]

	! block 61
.L1467:
.L1468:
.L1461:
.L1469:
.L1470:
.L1458:
.L1471:
.L1472:
.L1474:

!  785	   }
!  786	
!  787	   if (ctx->Color.SWmasking) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1e98),%l1
	or	%l1,%lo(0x1e98),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1473
	nop

	! block 62
.L1475:
.L1476:
.L1477:
.L1478:

!  788	      gl_mask_color_span( ctx, n, x, y, red, green, blue, alpha );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	call	gl_mask_color_span
	st	%l0,[%sp+96]

	! block 63
.L1479:
.L1480:
.L1473:
.L1481:
.L1482:

!  789	   }
!  790	
!  791	   /* write pixels */
!  792	   (*ctx->Driver.WriteColorSpan)( ctx, n, x, y, red, green, blue, alpha,
!  793	                                  write_all ? NULL : mask );

	ldub	[%fp-1601],%l0
	cmp	%l0,%g0
	be	.L1483
	nop

	! block 64
.L1484:
	sethi	0x7,%l0
	xor	%l0,-856,%l0
	ba	.L1485
	st	%g0,[%fp+%l0]

	! block 65
.L1483:
	add	%fp,-1600,%l1
	sethi	0x7,%l0
	xor	%l0,-856,%l0
	st	%l1,[%fp+%l0]

	! block 66
.L1485:
	ld	[%fp+68],%l1
	ld	[%l1+2244],%l4
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%i1
	sethi	0x7,%l0
	xor	%l0,-856,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%i1,[%sp+96]
	st	%l0,[%sp+100]
	jmpl	%l4,%o7
	nop

	! block 67
.L1486:
.L1488:

!  794	   if (ctx->RasterMask & ALPHABUF_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,256,%l0
	be	.L1487
	nop

	! block 68
.L1489:
.L1490:
.L1491:
.L1492:

!  795	      gl_write_alpha_span( ctx, n, x, y, alpha, write_all ? NULL : mask );

	ldub	[%fp-1601],%l0
	cmp	%l0,%g0
	be	.L1493
	nop

	! block 69
.L1494:
	sethi	0x7,%l0
	xor	%l0,-860,%l0
	ba	.L1495
	st	%g0,[%fp+%l0]

	! block 70
.L1493:
	add	%fp,-1600,%l1
	sethi	0x7,%l0
	xor	%l0,-860,%l0
	st	%l1,[%fp+%l0]

	! block 71
.L1495:
	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-860,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	call	gl_write_alpha_span
	mov	%l0,%o5

	! block 72
.L1496:
.L1497:
.L1487:
.L1498:
.L1499:
.L1501:

!  796	   }
!  797	
!  798	   if (ctx->RasterMask & FRONT_AND_BACK_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,1024,%l0
	be	.L1500
	nop

	! block 73
.L1502:
.L1503:
.L1504:
.L1505:

!  799	      /* Also draw to back buffer */
!  800	      MEMCPY( rtmp, r, n * sizeof(GLubyte) );

	add	%fp,-3201,%l0
	ld	[%fp+104],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 74
.L1506:

!  801	      MEMCPY( gtmp, g, n * sizeof(GLubyte) );

	sethi	0x4,%l0
	xor	%l0,-705,%l0
	add	%fp,%l0,%l0
	ld	[%fp+108],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 75
.L1507:

!  802	      MEMCPY( btmp, b, n * sizeof(GLubyte) );

	sethi	0x6,%l0
	xor	%l0,-257,%l0
	add	%fp,%l0,%l0
	ld	[%fp+112],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 76
.L1508:

!  803	      MEMCPY( atmp, a, n * sizeof(GLubyte) );

	sethi	0x7,%l0
	xor	%l0,-833,%l0
	add	%fp,%l0,%l0
	ld	[%fp+116],%l1
	ld	[%fp+72],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 77
.L1509:

!  804	      (*ctx->Driver.SetBuffer)( ctx, GL_BACK );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1029,%o1
	jmpl	%l1,%o7
	nop

	! block 78
.L1510:
.L1512:

!  805	      if (ctx->Color.SWLogicOpEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ed2),%l1
	or	%l1,%lo(0x1ed2),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1511
	nop

	! block 79
.L1513:
.L1514:
.L1515:
.L1516:

!  806	         gl_logicop_rgba_span( ctx, n, x, y, red, green, blue, alpha, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	add	%fp,-1600,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	call	gl_logicop_rgba_span
	st	%l4,[%sp+100]

	! block 80
.L1517:
.L1518:
	ba	.L1519
	nop

	! block 81
.L1511:
.L1520:
.L1521:
.L1523:

!  807	      }
!  808	      else if (ctx->Color.BlendEnabled) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1ead),%l1
	or	%l1,%lo(0x1ead),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1522
	nop

	! block 82
.L1524:
.L1525:
.L1526:
.L1527:

!  809	         gl_blend_span( ctx, n, x, y, red, green, blue, alpha, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	add	%fp,-1600,%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	call	gl_blend_span
	st	%l4,[%sp+100]

	! block 83
.L1528:
.L1529:
.L1522:
.L1530:
.L1531:
.L1519:
.L1532:
.L1533:
.L1535:

!  810	      }
!  811	      if (ctx->Color.SWmasking) {

	ld	[%fp+68],%l0
	sethi	%hi(0x1e98),%l1
	or	%l1,%lo(0x1e98),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1534
	nop

	! block 84
.L1536:
.L1537:
.L1538:
.L1539:

!  812	         gl_mask_color_span( ctx, n, x, y, red, green, blue, alpha );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	call	gl_mask_color_span
	st	%l0,[%sp+96]

	! block 85
.L1540:
.L1541:
.L1534:
.L1542:
.L1543:

!  813	      }
!  814	      (*ctx->Driver.WriteColorSpan)( ctx, n, x, y, red, green, blue, alpha,
!  815	                                     write_all ? NULL : mask );

	ldub	[%fp-1601],%l0
	cmp	%l0,%g0
	be	.L1544
	nop

	! block 86
.L1545:
	sethi	0x7,%l0
	xor	%l0,-860,%l0
	ba	.L1546
	st	%g0,[%fp+%l0]

	! block 87
.L1544:
	add	%fp,-1600,%l1
	sethi	0x7,%l0
	xor	%l0,-860,%l0
	st	%l1,[%fp+%l0]

	! block 88
.L1546:
	ld	[%fp+68],%l1
	ld	[%l1+2244],%l4
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-840,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-844,%l0
	ld	[%fp+%l0],%l7
	sethi	0x7,%l0
	xor	%l0,-848,%l0
	ld	[%fp+%l0],%i0
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%i1
	sethi	0x7,%l0
	xor	%l0,-860,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%i1,[%sp+96]
	st	%l0,[%sp+100]
	jmpl	%l4,%o7
	nop

	! block 89
.L1547:

!  816	      (*ctx->Driver.SetBuffer)( ctx, GL_FRONT );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l1
	mov	%l0,%o0
	mov	1028,%o1
	jmpl	%l1,%o7
	nop

	! block 90
.L1548:
.L1550:

!  817	      if (ctx->RasterMask & ALPHABUF_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,256,%l0
	be	.L1549
	nop

	! block 91
.L1551:
.L1552:
.L1553:
.L1554:

!  818	         ctx->Buffer->Alpha = ctx->Buffer->BackAlpha;

	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+28],%l1
	st	%l1,[%l0+32]

	! block 92
.L1555:

!  819	         gl_write_alpha_span( ctx, n, x, y, alpha, write_all ? NULL : mask );

	ldub	[%fp-1601],%l0
	cmp	%l0,%g0
	be	.L1556
	nop

	! block 93
.L1557:
	sethi	0x7,%l0
	xor	%l0,-864,%l0
	ba	.L1558
	st	%g0,[%fp+%l0]

	! block 94
.L1556:
	add	%fp,-1600,%l1
	sethi	0x7,%l0
	xor	%l0,-864,%l0
	st	%l1,[%fp+%l0]

	! block 95
.L1558:
	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x7,%l0
	xor	%l0,-852,%l0
	ld	[%fp+%l0],%l6
	sethi	0x7,%l0
	xor	%l0,-864,%l0
	ld	[%fp+%l0],%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	call	gl_write_alpha_span
	mov	%l0,%o5

	! block 96
.L1559:

!  820	         ctx->Buffer->Alpha = ctx->Buffer->FrontAlpha;

	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+24],%l1
	st	%l1,[%l0+32]

	! block 97
.L1560:
.L1561:
.L1549:
.L1562:
.L1563:
.L1564:
.L1500:
.L1565:

	! block 98
.L1566:
.L1567:
.L1262:
	jmp	%i7+8
	restore
	.size	gl_write_texture_span,(.-gl_write_texture_span)
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	gl_read_color_span
	.type	gl_read_color_span,#function
gl_read_color_span:
	save	%sp,-112,%sp

	! block 1
.L1570:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]

	! block 2
.L1571:
.L1573:
.L1575:

! File span.c:
!  821	      }
!  822	   }
!  823	}
!  824	
!  827	/*
!  828	 * Read RGBA pixels from frame buffer.  Clipping will be done to prevent
!  829	 * reading ouside the buffer's boundaries.
!  830	 */
!  831	void gl_read_color_span( GLcontext *ctx,
!  832	                         GLuint n, GLint x, GLint y,
!  833				 GLubyte red[], GLubyte green[],
!  834				 GLubyte blue[], GLubyte alpha[] )
!  835	{
!  836	   register GLuint i;
!  837	
!  838	   if (y<0 || y>=ctx->Buffer->Height || x>=ctx->Buffer->Width) {

	ld	[%fp+80],%l0
	cmp	%l0,0
	bl	.L1576
	nop

	! block 3
.L1577:
	ld	[%fp+80],%l1
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+8],%l0
	cmp	%l1,%l0
	bge	.L1576
	nop

	! block 4
.L1578:
	ld	[%fp+76],%l1
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	cmp	%l1,%l0
	bl	.L1574
	nop

	! block 5
.L1579:
.L1576:
.L1580:
.L1581:
.L1582:
.L1583:

!  839	      /* completely above, below, or right */
!  840	      for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1586
	st	%g0,[%fp-4]

	! block 6
.L1587:
.L1584:
.L1588:
.L1589:
.L1590:

!  841		 red[i] = green[i] = blue[i] = alpha[i] = 0;

	ld	[%fp+96],%l0
	ld	[%fp-4],%l1
	stb	%g0,[%l0+%l1]
	ld	[%fp+92],%l0
	ld	[%fp-4],%l1
	stb	%g0,[%l0+%l1]
	ld	[%fp+88],%l0
	ld	[%fp-4],%l1
	stb	%g0,[%l0+%l1]
	ld	[%fp+84],%l0
	ld	[%fp-4],%l1
	stb	%g0,[%l0+%l1]

	! block 7
.L1591:
.L1592:
.L1593:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1584
	nop

	! block 8
.L1594:
.L1586:
.L1595:
.L1596:
.L1597:
	ba	.L1598
	nop

	! block 9
.L1574:
.L1599:
.L1600:
.L1601:
.L1603:

!  842	      }
!  843	   }
!  844	   else {
!  845	      if (x>=0 && x+n<=ctx->Buffer->Width) {

	ld	[%fp+76],%l0
	cmp	%l0,0
	bl	.L1602
	nop

	! block 10
.L1604:
	ld	[%fp+76],%l0
	ld	[%fp+72],%l1
	add	%l0,%l1,%l1
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	cmp	%l1,%l0
	bgu	.L1602
	nop

	! block 11
.L1605:
.L1606:
.L1607:
.L1608:

!  846		 /* OK */
!  847		 (*ctx->Driver.ReadColorSpan)( ctx, n, x, y, red, green, blue, alpha );

	ld	[%fp+68],%l0
	ld	[%l0+2280],%i0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	ld	[%fp+88],%l6
	ld	[%fp+92],%l7
	ld	[%fp+96],%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	mov	%l6,%o5
	st	%l7,[%sp+92]
	st	%l4,[%sp+96]
	jmpl	%i0,%o7
	nop

	! block 12
.L1609:
.L1611:

!  848	         if (ctx->RasterMask & ALPHABUF_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,256,%l0
	be	.L1610
	nop

	! block 13
.L1612:
.L1613:
.L1614:
.L1615:

!  849	            gl_read_alpha_span( ctx, n, x, y, alpha );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+96],%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_read_alpha_span
	mov	%l4,%o4

	! block 14
.L1616:
.L1617:
.L1610:
.L1618:
.L1619:
.L1620:
	ba	.L1621
	nop

	! block 15
.L1602:
.L1622:
.L1623:
.L1624:

!  850	         }
!  851	      }
!  852	      else {
!  853		 i = 0;

	st	%g0,[%fp-4]

	! block 16
.L1625:
.L1627:

!  854		 if (x<0) {

	ld	[%fp+76],%l0
	cmp	%l0,0
	bge	.L1626
	nop

	! block 17
.L1628:
.L1629:
.L1630:
.L1631:
.L1635:

!  855		    while (x<0 && n>0) {

	ld	[%fp+76],%l0
	cmp	%l0,0
	bge	.L1634
	nop

	! block 18
.L1636:
	ld	[%fp+72],%l0
	cmp	%l0,0
	bleu	.L1634
	nop

	! block 19
.L1637:
.L1632:
.L1638:
.L1639:
.L1640:

!  856		       red[i] = green[i] =  blue[i] = alpha[i] = 0;

	ld	[%fp+96],%l0
	ld	[%fp-4],%l1
	stb	%g0,[%l0+%l1]
	ld	[%fp+92],%l0
	ld	[%fp-4],%l1
	stb	%g0,[%l0+%l1]
	ld	[%fp+88],%l0
	ld	[%fp-4],%l1
	stb	%g0,[%l0+%l1]
	ld	[%fp+84],%l0
	ld	[%fp-4],%l1
	stb	%g0,[%l0+%l1]

	! block 20
.L1641:

!  857		       x++;

	ld	[%fp+76],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+76]

	! block 21
.L1642:

!  858		       n--;

	ld	[%fp+72],%l0
	sub	%l0,1,%l0
	st	%l0,[%fp+72]

	! block 22
.L1643:

!  859		       i++;

	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]

	! block 23
.L1644:
.L1645:
.L1646:
	ld	[%fp+76],%l0
	cmp	%l0,0
	bge	.L1647
	nop

	! block 24
.L1648:
	ld	[%fp+72],%l0
	cmp	%l0,0
	bgu	.L1632
	nop

	! block 25
.L1649:
.L1647:
.L1634:
.L1650:
.L1651:
.L1652:
.L1626:
.L1653:
.L1654:

!  860		    }
!  861		 }
!  862		 n = MIN2( n, ctx->Buffer->Width - x );

	ld	[%fp+72],%l2
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	ld	[%fp+76],%l1
	sub	%l0,%l1,%l0
	cmp	%l2,%l0
	bgeu	.L1655
	nop

	! block 26
.L1656:
	ld	[%fp+72],%l0
	ba	.L1657
	st	%l0,[%fp-8]

	! block 27
.L1655:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	ld	[%fp+76],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-8]

	! block 28
.L1657:
	ld	[%fp-8],%l0
	st	%l0,[%fp+72]

	! block 29
.L1658:

!  863		 (*ctx->Driver.ReadColorSpan)( ctx, n, x, y, red+i, green+i, blue+i, alpha+i);

	ld	[%fp+68],%l2
	ld	[%l2+2280],%l4
	ld	[%fp+72],%l3
	ld	[%fp+76],%l5
	ld	[%fp+80],%l6
	ld	[%fp+84],%l0
	ld	[%fp-4],%l1
	add	%l0,%l1,%l7
	ld	[%fp+88],%l0
	add	%l0,%l1,%i0
	ld	[%fp+92],%l0
	add	%l0,%l1,%i1
	ld	[%fp+96],%l0
	add	%l0,%l1,%l0
	mov	%l2,%o0
	mov	%l3,%o1
	mov	%l5,%o2
	mov	%l6,%o3
	mov	%l7,%o4
	mov	%i0,%o5
	st	%i1,[%sp+92]
	st	%l0,[%sp+96]
	jmpl	%l4,%o7
	nop

	! block 30
.L1659:
.L1661:

!  864	         if (ctx->RasterMask & ALPHABUF_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,256,%l0
	be	.L1660
	nop

	! block 31
.L1662:
.L1663:
.L1664:
.L1665:

!  865	            gl_read_alpha_span( ctx, n, x, y, alpha+i );

	ld	[%fp+68],%l2
	ld	[%fp+72],%l3
	ld	[%fp+76],%l5
	ld	[%fp+80],%l6
	ld	[%fp+96],%l0
	ld	[%fp-4],%l1
	add	%l0,%l1,%l0
	mov	%l2,%o0
	mov	%l3,%o1
	mov	%l5,%o2
	mov	%l6,%o3
	call	gl_read_alpha_span
	mov	%l0,%o4

	! block 32
.L1666:
.L1667:
.L1660:
.L1668:
.L1669:
.L1670:
.L1621:
.L1671:
.L1672:
.L1673:
.L1598:
.L1674:

	! block 33
.L1675:
.L1676:
.L1569:
	jmp	%i7+8
	restore
	.size	gl_read_color_span,(.-gl_read_color_span)
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	gl_read_index_span
	.type	gl_read_index_span,#function
gl_read_index_span:
	save	%sp,-104,%sp

	! block 1
.L1679:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]

	! block 2
.L1680:
.L1682:
.L1684:

! File span.c:
!  866	         }
!  867	      }
!  868	   }
!  869	}
!  870	
!  874	/*
!  875	 * Read CI pixels from frame buffer.  Clipping will be done to prevent
!  876	 * reading ouside the buffer's boundaries.
!  877	 */
!  878	void gl_read_index_span( GLcontext *ctx,
!  879	                         GLuint n, GLint x, GLint y, GLuint indx[] )
!  880	{
!  881	   register GLuint i;
!  882	
!  883	   if (y<0 || y>=ctx->Buffer->Height || x>=ctx->Buffer->Width) {

	ld	[%fp+80],%l0
	cmp	%l0,0
	bl	.L1685
	nop

	! block 3
.L1686:
	ld	[%fp+80],%l1
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+8],%l0
	cmp	%l1,%l0
	bge	.L1685
	nop

	! block 4
.L1687:
	ld	[%fp+76],%l1
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	cmp	%l1,%l0
	bl	.L1683
	nop

	! block 5
.L1688:
.L1685:
.L1689:
.L1690:
.L1691:
.L1692:

!  884	      /* completely above, below, or right */
!  885	      for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1695
	st	%g0,[%fp-4]

	! block 6
.L1696:
.L1693:
.L1697:
.L1698:
.L1699:

!  886		 indx[i] = 0;

	ld	[%fp+84],%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%g0,[%l2+%l1]

	! block 7
.L1700:
.L1701:
.L1702:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1693
	nop

	! block 8
.L1703:
.L1695:
.L1704:
.L1705:
.L1706:
	ba	.L1707
	nop

	! block 9
.L1683:
.L1708:
.L1709:
.L1710:
.L1712:

!  887	      }
!  888	   }
!  889	   else {
!  890	      if (x>=0 && x+n<=ctx->Buffer->Width) {

	ld	[%fp+76],%l0
	cmp	%l0,0
	bl	.L1711
	nop

	! block 10
.L1713:
	ld	[%fp+76],%l0
	ld	[%fp+72],%l1
	add	%l0,%l1,%l1
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	cmp	%l1,%l0
	bgu	.L1711
	nop

	! block 11
.L1714:
.L1715:
.L1716:
.L1717:

!  891		 /* OK */
!  892		 (*ctx->Driver.ReadIndexSpan)( ctx, n, x, y, indx );

	ld	[%fp+68],%l0
	ld	[%l0+2276],%l5
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l4,%o4
	jmpl	%l5,%o7
	nop

	! block 12
.L1718:
.L1719:
	ba	.L1720
	nop

	! block 13
.L1711:
.L1721:
.L1722:
.L1723:

!  893	      }
!  894	      else {
!  895		 i = 0;

	st	%g0,[%fp-4]

	! block 14
.L1724:
.L1726:

!  896		 if (x<0) {

	ld	[%fp+76],%l0
	cmp	%l0,0
	bge	.L1725
	nop

	! block 15
.L1727:
.L1728:
.L1729:
.L1730:
.L1734:

!  897		    while (x<0 && n>0) {

	ld	[%fp+76],%l0
	cmp	%l0,0
	bge	.L1733
	nop

	! block 16
.L1735:
	ld	[%fp+72],%l0
	cmp	%l0,0
	bleu	.L1733
	nop

	! block 17
.L1736:
.L1731:
.L1737:
.L1738:
.L1739:

!  898		       indx[i] = 0;

	ld	[%fp+84],%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%g0,[%l2+%l1]

	! block 18
.L1740:

!  899		       x++;

	ld	[%fp+76],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+76]

	! block 19
.L1741:

!  900		       n--;

	ld	[%fp+72],%l0
	sub	%l0,1,%l0
	st	%l0,[%fp+72]

	! block 20
.L1742:

!  901		       i++;

	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]

	! block 21
.L1743:
.L1744:
.L1745:
	ld	[%fp+76],%l0
	cmp	%l0,0
	bge	.L1746
	nop

	! block 22
.L1747:
	ld	[%fp+72],%l0
	cmp	%l0,0
	bgu	.L1731
	nop

	! block 23
.L1748:
.L1746:
.L1733:
.L1749:
.L1750:
.L1751:
.L1725:
.L1752:
.L1753:

!  902		    }
!  903		 }
!  904		 n = MIN2( n, ctx->Buffer->Width - x );

	ld	[%fp+72],%l2
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	ld	[%fp+76],%l1
	sub	%l0,%l1,%l0
	cmp	%l2,%l0
	bgeu	.L1754
	nop

	! block 24
.L1755:
	ld	[%fp+72],%l0
	ba	.L1756
	st	%l0,[%fp-8]

	! block 25
.L1754:
	ld	[%fp+68],%l0
	ld	[%l0+2204],%l0
	ld	[%l0+4],%l0
	ld	[%fp+76],%l1
	sub	%l0,%l1,%l0
	st	%l0,[%fp-8]

	! block 26
.L1756:
	ld	[%fp-8],%l0
	st	%l0,[%fp+72]

	! block 27
.L1757:

!  905		 (*ctx->Driver.ReadIndexSpan)( ctx, n, x, y, indx+i );

	ld	[%fp+68],%l3
	ld	[%l3+2276],%l4
	ld	[%fp+72],%l5
	ld	[%fp+76],%l6
	ld	[%fp+80],%l7
	ld	[%fp+84],%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	mov	%l3,%o0
	mov	%l5,%o1
	mov	%l6,%o2
	mov	%l7,%o3
	mov	%l0,%o4
	jmpl	%l4,%o7
	nop

	! block 28
.L1758:
.L1759:
.L1720:
.L1760:
.L1761:
.L1762:
.L1707:
.L1763:

	! block 29
.L1764:
.L1765:
.L1678:
	jmp	%i7+8
	restore
	.size	gl_read_index_span,(.-gl_read_index_span)
	.align	8
	.section	".bss",#alloc,#write
Bbss.bss:
	.section	".data",#alloc,#write
Ddata.data:
	.section	".rodata",#alloc
Drodata.rodata:

	.file	"span.c"
	.ident	"@(#)string.h	1.27	07/01/14 SMI"
	.ident	"@(#)string_iso.h	1.5	04/06/18 SMI"
	.ident	"@(#)feature_tests.h	1.25	07/02/02 SMI"
	.ident	"@(#)ccompile.h	1.2	04/11/08 SMI"
	.ident	"@(#)isa_defs.h	1.28	07/02/01 SMI"
	.ident	"@(#)math.h	2.24	04/10/23 SMI"
	.ident	"@(#)math_iso.h	1.9	04/10/23 SMI"
	.ident	"@(#)math_c99.h	1.9	04/11/01 SMI"
	.ident	"@(#)floatingpoint.h	2.9	04/10/23 SMI"
	.ident	"@(#)stdio_tag.h	1.4	04/09/28 SMI"
	.ident	"@(#)ieeefp.h	2.12	04/10/23 SMI"
	.ident	"acomp: Sun C 5.9 SunOS_sparc 2007/05/03"
!  Begin sdCreateSection : .debug_loc
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
	.section ".debug_loc"
!  End sdCreateSection
!  Begin sdCreateSection : .debug_info
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_abbrev, lab2=, loff=0
!   reloc[1]: knd=2, off=251, siz=4, lab1=.debug_line, lab2=, loff=0
!   reloc[2]: knd=0, off=280, siz=4, lab1=stipple_polygon_span, lab2=, loff=0
!   reloc[3]: knd=0, off=284, siz=4, lab1=.L54, lab2=, loff=0
!   reloc[4]: knd=0, off=38205, siz=4, lab1=clip_span, lab2=, loff=0
!   reloc[5]: knd=0, off=38209, siz=4, lab1=.L138, lab2=, loff=0
!   reloc[6]: knd=0, off=38334, siz=4, lab1=gl_write_index_span, lab2=, loff=0
!   reloc[7]: knd=0, off=38338, siz=4, lab1=.L323, lab2=, loff=0
!   reloc[8]: knd=0, off=38564, siz=4, lab1=gl_write_monoindex_span, lab2=, loff=0
!   reloc[9]: knd=0, off=38568, siz=4, lab1=.L568, lab2=, loff=0
!   reloc[10]: knd=0, off=38748, siz=4, lab1=.L430, lab2=, loff=0
!   reloc[11]: knd=0, off=38752, siz=4, lab1=.L566, lab2=, loff=0
!   reloc[12]: knd=0, off=38757, siz=4, lab1=.L440, lab2=, loff=0
!   reloc[13]: knd=0, off=38761, siz=4, lab1=.L547, lab2=, loff=0
!   reloc[14]: knd=0, off=38766, siz=4, lab1=.L441, lab2=, loff=0
!   reloc[15]: knd=0, off=38770, siz=4, lab1=.L546, lab2=, loff=0
!   reloc[16]: knd=0, off=38881, siz=4, lab1=gl_write_color_span, lab2=, loff=0
!   reloc[17]: knd=0, off=38885, siz=4, lab1=.L876, lab2=, loff=0
!   reloc[18]: knd=0, off=39234, siz=4, lab1=.L694, lab2=, loff=0
!   reloc[19]: knd=0, off=39238, siz=4, lab1=.L747, lab2=, loff=0
!   reloc[20]: knd=0, off=39243, siz=4, lab1=.L715, lab2=, loff=0
!   reloc[21]: knd=0, off=39247, siz=4, lab1=.L746, lab2=, loff=0
!   reloc[22]: knd=0, off=39252, siz=4, lab1=.L716, lab2=, loff=0
!   reloc[23]: knd=0, off=39256, siz=4, lab1=.L745, lab2=, loff=0
!   reloc[24]: knd=0, off=39261, siz=4, lab1=.L720, lab2=, loff=0
!   reloc[25]: knd=0, off=39265, siz=4, lab1=.L744, lab2=, loff=0
!   reloc[26]: knd=0, off=39270, siz=4, lab1=.L721, lab2=, loff=0
!   reloc[27]: knd=0, off=39274, siz=4, lab1=.L743, lab2=, loff=0
!   reloc[28]: knd=0, off=39424, siz=4, lab1=gl_write_monocolor_span, lab2=, loff=0
!   reloc[29]: knd=0, off=39428, siz=4, lab1=.L1260, lab2=, loff=0
!   reloc[30]: knd=0, off=39719, siz=4, lab1=.L938, lab2=, loff=0
!   reloc[31]: knd=0, off=39723, siz=4, lab1=.L971, lab2=, loff=0
!   reloc[32]: knd=0, off=39728, siz=4, lab1=.L942, lab2=, loff=0
!   reloc[33]: knd=0, off=39732, siz=4, lab1=.L970, lab2=, loff=0
!   reloc[34]: knd=0, off=39737, siz=4, lab1=.L943, lab2=, loff=0
!   reloc[35]: knd=0, off=39741, siz=4, lab1=.L969, lab2=, loff=0
!   reloc[36]: knd=0, off=39769, siz=4, lab1=.L972, lab2=, loff=0
!   reloc[37]: knd=0, off=39773, siz=4, lab1=.L1025, lab2=, loff=0
!   reloc[38]: knd=0, off=39778, siz=4, lab1=.L993, lab2=, loff=0
!   reloc[39]: knd=0, off=39782, siz=4, lab1=.L1024, lab2=, loff=0
!   reloc[40]: knd=0, off=39787, siz=4, lab1=.L994, lab2=, loff=0
!   reloc[41]: knd=0, off=39791, siz=4, lab1=.L1023, lab2=, loff=0
!   reloc[42]: knd=0, off=39796, siz=4, lab1=.L998, lab2=, loff=0
!   reloc[43]: knd=0, off=39800, siz=4, lab1=.L1022, lab2=, loff=0
!   reloc[44]: knd=0, off=39805, siz=4, lab1=.L999, lab2=, loff=0
!   reloc[45]: knd=0, off=39809, siz=4, lab1=.L1021, lab2=, loff=0
!   reloc[46]: knd=0, off=39976, siz=4, lab1=gl_write_texture_span, lab2=, loff=0
!   reloc[47]: knd=0, off=39980, siz=4, lab1=.L1567, lab2=, loff=0
!   reloc[48]: knd=0, off=40390, siz=4, lab1=.L1385, lab2=, loff=0
!   reloc[49]: knd=0, off=40394, siz=4, lab1=.L1438, lab2=, loff=0
!   reloc[50]: knd=0, off=40399, siz=4, lab1=.L1406, lab2=, loff=0
!   reloc[51]: knd=0, off=40403, siz=4, lab1=.L1437, lab2=, loff=0
!   reloc[52]: knd=0, off=40408, siz=4, lab1=.L1407, lab2=, loff=0
!   reloc[53]: knd=0, off=40412, siz=4, lab1=.L1436, lab2=, loff=0
!   reloc[54]: knd=0, off=40417, siz=4, lab1=.L1411, lab2=, loff=0
!   reloc[55]: knd=0, off=40421, siz=4, lab1=.L1435, lab2=, loff=0
!   reloc[56]: knd=0, off=40426, siz=4, lab1=.L1412, lab2=, loff=0
!   reloc[57]: knd=0, off=40430, siz=4, lab1=.L1434, lab2=, loff=0
!   reloc[58]: knd=0, off=40575, siz=4, lab1=gl_read_color_span, lab2=, loff=0
!   reloc[59]: knd=0, off=40579, siz=4, lab1=.L1676, lab2=, loff=0
!   reloc[60]: knd=0, off=40758, siz=4, lab1=gl_read_index_span, lab2=, loff=0
!   reloc[61]: knd=0, off=40762, siz=4, lab1=.L1765, lab2=, loff=0
	.section ".debug_info"
	.byte 0x00,0x00,0xa3,0xe0,0x00,0x02
	.uaword %section_symbol(".debug_abbrev")
	.byte 0x04,0x01
	.ascii "span.c\0"
	.byte 0x0c
	.ascii "/home/faculty/koppel/teach/gpcom/gpup/rsim/mesa/no-opt\0"
	.ascii " /local/SUNWspro/prod/bin/cc -g -xtarget=ultraT2 -S  span.c -W0,-xp\\$XAa59JCSsd3LGIL.\0"
	.ascii "Xa;g;R=Sun C 5.9 SunOS_sparc 2007/05/03;G=$XAa59JCSsd3LGIL.;backend;raw;cd;\0"
	.ascii "DBG_GEN 5.2.1\0"
	.uaword %section_symbol(".debug_line")
	.byte 0x02
	.ascii "stipple_polygon_span\0"
	.byte 0x03,0x01,0x62
	.uaword stipple_polygon_span
	.uaword .L54
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x01,0xaf
	.byte 0x03,0x00,0x00,0x95,0x2a
	.ascii "ctx\0"
	.byte 0x01,0x60,0x03,0x91,0xc4,0x00,0x03,0x00
	.byte 0x00,0x01,0xdf
	.ascii "n\0"
	.byte 0x01,0x61,0x03,0x91,0xc8,0x00,0x03,0x00
	.byte 0x00,0x01,0xb6
	.ascii "x\0"
	.byte 0x01,0x61,0x03,0x91,0xcc,0x00,0x03,0x00
	.byte 0x00,0x01,0xb6
	.ascii "y\0"
	.byte 0x01,0x61,0x03,0x91,0xd0,0x00,0x03,0x00
	.byte 0x00,0x31,0xe4
	.ascii "mask\0"
	.byte 0x01,0x61,0x03,0x91,0xd4,0x00,0x04
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0xdf,0x01,0x01,0x63,0x02
	.byte 0x91,0x7c,0x04
	.ascii "m\0"
	.byte 0x00,0x00,0x01,0xdf,0x01,0x01,0x63,0x02
	.byte 0x91,0x78,0x04
	.ascii "stipple\0"
	.byte 0x00,0x00,0x01,0xdf,0x01,0x01,0x63,0x02
	.byte 0x91,0x74,0x04
	.ascii "highbit\0"
	.byte 0x00,0x00,0x01,0xdf,0x01,0x01,0x63,0x02
	.byte 0x91,0x70,0x00,0x05
	.ascii "int\0"
	.byte 0x05,0x04,0x06,0x00,0x00,0x01,0xaf
	.ascii "GLint\0"
	.byte 0x03,0x07
	.ascii "HashTable\0"
	.byte 0x01,0x08,0x00,0x00,0x01,0xc2,0x05
	.ascii "unsigned\0"
	.byte 0x07,0x04,0x06,0x00,0x00,0x01,0xd3
	.ascii "GLuint\0"
	.byte 0x03,0x05
	.ascii "float\0"
	.byte 0x04,0x04,0x06,0x00,0x00,0x01,0xec
	.ascii "GLfloat\0"
	.byte 0x03,0x05
	.ascii "long\0"
	.byte 0x05,0x04,0x09,0x00,0x00,0x01,0xb6,0x10
	.byte 0x00,0x00,0x02,0x1c,0x0a,0x00,0x00,0x02
	.byte 0x03,0x03,0x00,0x0b,0x04,0x03,0x00,0x00
	.byte 0x31,0xb8,0x0c
	.ascii "GL_FALSE\0"
	.byte 0x00,0x0c
	.ascii "GL_TRUE\0"
	.byte 0x01,0x0c
	.ascii "GL_BYTE\0"
	.byte 0x80,0x28,0x0c
	.ascii "GL_UNSIGNED_BYTE\0"
	.byte 0x81,0x28,0x0c
	.ascii "GL_SHORT\0"
	.byte 0x82,0x28,0x0c
	.ascii "GL_UNSIGNED_SHORT\0"
	.byte 0x83,0x28,0x0c
	.ascii "GL_INT\0"
	.byte 0x84,0x28,0x0c
	.ascii "GL_UNSIGNED_INT\0"
	.byte 0x85,0x28,0x0c
	.ascii "GL_FLOAT\0"
	.byte 0x86,0x28,0x0c
	.ascii "GL_DOUBLE\0"
	.byte 0x8a,0x28,0x0c
	.ascii "GL_2_BYTES\0"
	.byte 0x87,0x28,0x0c
	.ascii "GL_3_BYTES\0"
	.byte 0x88,0x28,0x0c
	.ascii "GL_4_BYTES\0"
	.byte 0x89,0x28,0x0c
	.ascii "GL_LINES\0"
	.byte 0x01,0x0c
	.ascii "GL_POINTS\0"
	.byte 0x00,0x0c
	.ascii "GL_LINE_STRIP\0"
	.byte 0x03,0x0c
	.ascii "GL_LINE_LOOP\0"
	.byte 0x02,0x0c
	.ascii "GL_TRIANGLES\0"
	.byte 0x04,0x0c
	.ascii "GL_TRIANGLE_STRIP\0"
	.byte 0x05,0x0c
	.ascii "GL_TRIANGLE_FAN\0"
	.byte 0x06,0x0c
	.ascii "GL_QUADS\0"
	.byte 0x07,0x0c
	.ascii "GL_QUAD_STRIP\0"
	.byte 0x08,0x0c
	.ascii "GL_POLYGON\0"
	.byte 0x09,0x0c
	.ascii "GL_EDGE_FLAG\0"
	.byte 0xc3,0x16,0x0c
	.ascii "GL_VERTEX_ARRAY\0"
	.byte 0xf4,0x80,0x02,0x0c
	.ascii "GL_NORMAL_ARRAY\0"
	.byte 0xf5,0x80,0x02,0x0c
	.ascii "GL_COLOR_ARRAY\0"
	.byte 0xf6,0x80,0x02,0x0c
	.ascii "GL_INDEX_ARRAY\0"
	.byte 0xf7,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_COORD_ARRAY\0"
	.byte 0xf8,0x80,0x02,0x0c
	.ascii "GL_EDGE_FLAG_ARRAY\0"
	.byte 0xf9,0x80,0x02,0x0c
	.ascii "GL_VERTEX_ARRAY_SIZE\0"
	.byte 0xfa,0x80,0x02,0x0c
	.ascii "GL_VERTEX_ARRAY_TYPE\0"
	.byte 0xfb,0x80,0x02,0x0c
	.ascii "GL_VERTEX_ARRAY_STRIDE\0"
	.byte 0xfc,0x80,0x02,0x0c
	.ascii "GL_NORMAL_ARRAY_TYPE\0"
	.byte 0xfe,0x80,0x02,0x0c
	.ascii "GL_NORMAL_ARRAY_STRIDE\0"
	.byte 0xff,0x80,0x02,0x0c
	.ascii "GL_COLOR_ARRAY_SIZE\0"
	.byte 0x81,0x81,0x02,0x0c
	.ascii "GL_COLOR_ARRAY_TYPE\0"
	.byte 0x82,0x81,0x02,0x0c
	.ascii "GL_COLOR_ARRAY_STRIDE\0"
	.byte 0x83,0x81,0x02,0x0c
	.ascii "GL_INDEX_ARRAY_TYPE\0"
	.byte 0x85,0x81,0x02,0x0c
	.ascii "GL_INDEX_ARRAY_STRIDE\0"
	.byte 0x86,0x81,0x02,0x0c
	.ascii "GL_TEXTURE_COORD_ARRAY_SIZE\0"
	.byte 0x88,0x81,0x02,0x0c
	.ascii "GL_TEXTURE_COORD_ARRAY_TYPE\0"
	.byte 0x89,0x81,0x02,0x0c
	.ascii "GL_TEXTURE_COORD_ARRAY_STRIDE\0"
	.byte 0x8a,0x81,0x02,0x0c
	.ascii "GL_EDGE_FLAG_ARRAY_STRIDE\0"
	.byte 0x8c,0x81,0x02,0x0c
	.ascii "GL_VERTEX_ARRAY_POINTER\0"
	.byte 0x8e,0x81,0x02,0x0c
	.ascii "GL_NORMAL_ARRAY_POINTER\0"
	.byte 0x8f,0x81,0x02,0x0c
	.ascii "GL_COLOR_ARRAY_POINTER\0"
	.byte 0x90,0x81,0x02,0x0c
	.ascii "GL_INDEX_ARRAY_POINTER\0"
	.byte 0x91,0x81,0x02,0x0c
	.ascii "GL_TEXTURE_COORD_ARRAY_POINTER\0"
	.byte 0x92,0x81,0x02,0x0c
	.ascii "GL_EDGE_FLAG_ARRAY_POINTER\0"
	.byte 0x93,0x81,0x02,0x0c
	.ascii "GL_V2F\0"
	.byte 0xa0,0xd4,0x00,0x0c
	.ascii "GL_V3F\0"
	.byte 0xa1,0xd4,0x00,0x0c
	.ascii "GL_C4UB_V2F\0"
	.byte 0xa2,0xd4,0x00,0x0c
	.ascii "GL_C4UB_V3F\0"
	.byte 0xa3,0xd4,0x00,0x0c
	.ascii "GL_C3F_V3F\0"
	.byte 0xa4,0xd4,0x00,0x0c
	.ascii "GL_N3F_V3F\0"
	.byte 0xa5,0xd4,0x00,0x0c
	.ascii "GL_C4F_N3F_V3F\0"
	.byte 0xa6,0xd4,0x00,0x0c
	.ascii "GL_T2F_V3F\0"
	.byte 0xa7,0xd4,0x00,0x0c
	.ascii "GL_T4F_V4F\0"
	.byte 0xa8,0xd4,0x00,0x0c
	.ascii "GL_T2F_C4UB_V3F\0"
	.byte 0xa9,0xd4,0x00,0x0c
	.ascii "GL_T2F_C3F_V3F\0"
	.byte 0xaa,0xd4,0x00,0x0c
	.ascii "GL_T2F_N3F_V3F\0"
	.byte 0xab,0xd4,0x00,0x0c
	.ascii "GL_T2F_C4F_N3F_V3F\0"
	.byte 0xac,0xd4,0x00,0x0c
	.ascii "GL_T4F_C4F_N3F_V4F\0"
	.byte 0xad,0xd4,0x00,0x0c
	.ascii "GL_MATRIX_MODE\0"
	.byte 0xa0,0x17,0x0c
	.ascii "GL_MODELVIEW\0"
	.byte 0x80,0x2e,0x0c
	.ascii "GL_PROJECTION\0"
	.byte 0x81,0x2e,0x0c
	.ascii "GL_TEXTURE\0"
	.byte 0x82,0x2e,0x0c
	.ascii "GL_POINT_SMOOTH\0"
	.byte 0x90,0x16,0x0c
	.ascii "GL_POINT_SIZE\0"
	.byte 0x91,0x16,0x0c
	.ascii "GL_POINT_SIZE_GRANULARITY\0"
	.byte 0x93,0x16,0x0c
	.ascii "GL_POINT_SIZE_RANGE\0"
	.byte 0x92,0x16,0x0c
	.ascii "GL_LINE_SMOOTH\0"
	.byte 0xa0,0x16,0x0c
	.ascii "GL_LINE_STIPPLE\0"
	.byte 0xa4,0x16,0x0c
	.ascii "GL_LINE_STIPPLE_PATTERN\0"
	.byte 0xa5,0x16,0x0c
	.ascii "GL_LINE_STIPPLE_REPEAT\0"
	.byte 0xa6,0x16,0x0c
	.ascii "GL_LINE_WIDTH\0"
	.byte 0xa1,0x16,0x0c
	.ascii "GL_LINE_WIDTH_GRANULARITY\0"
	.byte 0xa3,0x16,0x0c
	.ascii "GL_LINE_WIDTH_RANGE\0"
	.byte 0xa2,0x16,0x0c
	.ascii "GL_POINT\0"
	.byte 0x80,0x36,0x0c
	.ascii "GL_LINE\0"
	.byte 0x81,0x36,0x0c
	.ascii "GL_FILL\0"
	.byte 0x82,0x36,0x0c
	.ascii "GL_CCW\0"
	.byte 0x81,0x12,0x0c
	.ascii "GL_CW\0"
	.byte 0x80,0x12,0x0c
	.ascii "GL_FRONT\0"
	.byte 0x84,0x08,0x0c
	.ascii "GL_BACK\0"
	.byte 0x85,0x08,0x0c
	.ascii "GL_CULL_FACE\0"
	.byte 0xc4,0x16,0x0c
	.ascii "GL_CULL_FACE_MODE\0"
	.byte 0xc5,0x16,0x0c
	.ascii "GL_POLYGON_SMOOTH\0"
	.byte 0xc1,0x16,0x0c
	.ascii "GL_POLYGON_STIPPLE\0"
	.byte 0xc2,0x16,0x0c
	.ascii "GL_FRONT_FACE\0"
	.byte 0xc6,0x16,0x0c
	.ascii "GL_POLYGON_MODE\0"
	.byte 0xc0,0x16,0x0c
	.ascii "GL_POLYGON_OFFSET_FACTOR\0"
	.byte 0xb8,0x80,0x02,0x0c
	.ascii "GL_POLYGON_OFFSET_UNITS\0"
	.byte 0x80,0xd4,0x00,0x0c
	.ascii "GL_POLYGON_OFFSET_POINT\0"
	.byte 0x81,0xd4,0x00,0x0c
	.ascii "GL_POLYGON_OFFSET_LINE\0"
	.byte 0x82,0xd4,0x00,0x0c
	.ascii "GL_POLYGON_OFFSET_FILL\0"
	.byte 0xb7,0x80,0x02,0x0c
	.ascii "GL_COMPILE\0"
	.byte 0x80,0x26,0x0c
	.ascii "GL_COMPILE_AND_EXECUTE\0"
	.byte 0x81,0x26,0x0c
	.ascii "GL_LIST_BASE\0"
	.byte 0xb2,0x16,0x0c
	.ascii "GL_LIST_INDEX\0"
	.byte 0xb3,0x16,0x0c
	.ascii "GL_LIST_MODE\0"
	.byte 0xb0,0x16,0x0c
	.ascii "GL_NEVER\0"
	.byte 0x80,0x04,0x0c
	.ascii "GL_LESS\0"
	.byte 0x81,0x04,0x0c
	.ascii "GL_GEQUAL\0"
	.byte 0x86,0x04,0x0c
	.ascii "GL_LEQUAL\0"
	.byte 0x83,0x04,0x0c
	.ascii "GL_GREATER\0"
	.byte 0x84,0x04,0x0c
	.ascii "GL_NOTEQUAL\0"
	.byte 0x85,0x04,0x0c
	.ascii "GL_EQUAL\0"
	.byte 0x82,0x04,0x0c
	.ascii "GL_ALWAYS\0"
	.byte 0x87,0x04,0x0c
	.ascii "GL_DEPTH_TEST\0"
	.byte 0xf1,0x16,0x0c
	.ascii "GL_DEPTH_BITS\0"
	.byte 0xd6,0x1a,0x0c
	.ascii "GL_DEPTH_CLEAR_VALUE\0"
	.byte 0xf3,0x16,0x0c
	.ascii "GL_DEPTH_FUNC\0"
	.byte 0xf4,0x16,0x0c
	.ascii "GL_DEPTH_RANGE\0"
	.byte 0xf0,0x16,0x0c
	.ascii "GL_DEPTH_WRITEMASK\0"
	.byte 0xf2,0x16,0x0c
	.ascii "GL_DEPTH_COMPONENT\0"
	.byte 0x82,0x32,0x0c
	.ascii "GL_LIGHTING\0"
	.byte 0xd0,0x16,0x0c
	.ascii "GL_LIGHT0\0"
	.byte 0x80,0x80,0x01,0x0c
	.ascii "GL_LIGHT1\0"
	.byte 0x81,0x80,0x01,0x0c
	.ascii "GL_LIGHT2\0"
	.byte 0x82,0x80,0x01,0x0c
	.ascii "GL_LIGHT3\0"
	.byte 0x83,0x80,0x01,0x0c
	.ascii "GL_LIGHT4\0"
	.byte 0x84,0x80,0x01,0x0c
	.ascii "GL_LIGHT5\0"
	.byte 0x85,0x80,0x01,0x0c
	.ascii "GL_LIGHT6\0"
	.byte 0x86,0x80,0x01,0x0c
	.ascii "GL_LIGHT7\0"
	.byte 0x87,0x80,0x01,0x0c
	.ascii "GL_SPOT_EXPONENT\0"
	.byte 0x85,0x24,0x0c
	.ascii "GL_SPOT_CUTOFF\0"
	.byte 0x86,0x24,0x0c
	.ascii "GL_CONSTANT_ATTENUATION\0"
	.byte 0x87,0x24,0x0c
	.ascii "GL_LINEAR_ATTENUATION\0"
	.byte 0x88,0x24,0x0c
	.ascii "GL_QUADRATIC_ATTENUATION\0"
	.byte 0x89,0x24,0x0c
	.ascii "GL_AMBIENT\0"
	.byte 0x80,0x24,0x0c
	.ascii "GL_DIFFUSE\0"
	.byte 0x81,0x24,0x0c
	.ascii "GL_SPECULAR\0"
	.byte 0x82,0x24,0x0c
	.ascii "GL_SHININESS\0"
	.byte 0x81,0x2c,0x0c
	.ascii "GL_EMISSION\0"
	.byte 0x80,0x2c,0x0c
	.ascii "GL_POSITION\0"
	.byte 0x83,0x24,0x0c
	.ascii "GL_SPOT_DIRECTION\0"
	.byte 0x84,0x24,0x0c
	.ascii "GL_AMBIENT_AND_DIFFUSE\0"
	.byte 0x82,0x2c,0x0c
	.ascii "GL_COLOR_INDEXES\0"
	.byte 0x83,0x2c,0x0c
	.ascii "GL_LIGHT_MODEL_TWO_SIDE\0"
	.byte 0xd2,0x16,0x0c
	.ascii "GL_LIGHT_MODEL_LOCAL_VIEWER\0"
	.byte 0xd1,0x16,0x0c
	.ascii "GL_LIGHT_MODEL_AMBIENT\0"
	.byte 0xd3,0x16,0x0c
	.ascii "GL_FRONT_AND_BACK\0"
	.byte 0x88,0x08,0x0c
	.ascii "GL_SHADE_MODEL\0"
	.byte 0xd4,0x16,0x0c
	.ascii "GL_FLAT\0"
	.byte 0x80,0x3a,0x0c
	.ascii "GL_SMOOTH\0"
	.byte 0x81,0x3a,0x0c
	.ascii "GL_COLOR_MATERIAL\0"
	.byte 0xd7,0x16,0x0c
	.ascii "GL_COLOR_MATERIAL_FACE\0"
	.byte 0xd5,0x16,0x0c
	.ascii "GL_COLOR_MATERIAL_PARAMETER\0"
	.byte 0xd6,0x16,0x0c
	.ascii "GL_NORMALIZE\0"
	.byte 0xa1,0x17,0x0c
	.ascii "GL_CLIP_PLANE0\0"
	.byte 0x80,0xe0,0x00,0x0c
	.ascii "GL_CLIP_PLANE1\0"
	.byte 0x81,0xe0,0x00,0x0c
	.ascii "GL_CLIP_PLANE2\0"
	.byte 0x82,0xe0,0x00,0x0c
	.ascii "GL_CLIP_PLANE3\0"
	.byte 0x83,0xe0,0x00,0x0c
	.ascii "GL_CLIP_PLANE4\0"
	.byte 0x84,0xe0,0x00,0x0c
	.ascii "GL_CLIP_PLANE5\0"
	.byte 0x85,0xe0,0x00,0x0c
	.ascii "GL_ACCUM_RED_BITS\0"
	.byte 0xd8,0x1a,0x0c
	.ascii "GL_ACCUM_GREEN_BITS\0"
	.byte 0xd9,0x1a,0x0c
	.ascii "GL_ACCUM_BLUE_BITS\0"
	.byte 0xda,0x1a,0x0c
	.ascii "GL_ACCUM_ALPHA_BITS\0"
	.byte 0xdb,0x1a,0x0c
	.ascii "GL_ACCUM_CLEAR_VALUE\0"
	.byte 0x80,0x17,0x0c
	.ascii "GL_ACCUM\0"
	.byte 0x80,0x02,0x0c
	.ascii "GL_ADD\0"
	.byte 0x84,0x02,0x0c
	.ascii "GL_LOAD\0"
	.byte 0x81,0x02,0x0c
	.ascii "GL_MULT\0"
	.byte 0x83,0x02,0x0c
	.ascii "GL_RETURN\0"
	.byte 0x82,0x02,0x0c
	.ascii "GL_ALPHA_TEST\0"
	.byte 0xc0,0x17,0x0c
	.ascii "GL_ALPHA_TEST_REF\0"
	.byte 0xc2,0x17,0x0c
	.ascii "GL_ALPHA_TEST_FUNC\0"
	.byte 0xc1,0x17,0x0c
	.ascii "GL_BLEND\0"
	.byte 0xe2,0x17,0x0c
	.ascii "GL_BLEND_SRC\0"
	.byte 0xe1,0x17,0x0c
	.ascii "GL_BLEND_DST\0"
	.byte 0xe0,0x17,0x0c
	.ascii "GL_ZERO\0"
	.byte 0x00,0x0c
	.ascii "GL_ONE\0"
	.byte 0x01,0x0c
	.ascii "GL_SRC_COLOR\0"
	.byte 0x80,0x06,0x0c
	.ascii "GL_ONE_MINUS_SRC_COLOR\0"
	.byte 0x81,0x06,0x0c
	.ascii "GL_DST_COLOR\0"
	.byte 0x86,0x06,0x0c
	.ascii "GL_ONE_MINUS_DST_COLOR\0"
	.byte 0x87,0x06,0x0c
	.ascii "GL_SRC_ALPHA\0"
	.byte 0x82,0x06,0x0c
	.ascii "GL_ONE_MINUS_SRC_ALPHA\0"
	.byte 0x83,0x06,0x0c
	.ascii "GL_DST_ALPHA\0"
	.byte 0x84,0x06,0x0c
	.ascii "GL_ONE_MINUS_DST_ALPHA\0"
	.byte 0x85,0x06,0x0c
	.ascii "GL_SRC_ALPHA_SATURATE\0"
	.byte 0x88,0x06,0x0c
	.ascii "GL_CONSTANT_COLOR\0"
	.byte 0x81,0x80,0x02,0x0c
	.ascii "GL_ONE_MINUS_CONSTANT_COLOR\0"
	.byte 0x82,0x80,0x02,0x0c
	.ascii "GL_CONSTANT_ALPHA\0"
	.byte 0x83,0x80,0x02,0x0c
	.ascii "GL_ONE_MINUS_CONSTANT_ALPHA\0"
	.byte 0x84,0x80,0x02,0x0c
	.ascii "GL_FEEDBACK\0"
	.byte 0x81,0x38,0x0c
	.ascii "GL_RENDER\0"
	.byte 0x80,0x38,0x0c
	.ascii "GL_SELECT\0"
	.byte 0x82,0x38,0x0c
	.ascii "GL_2D\0"
	.byte 0x80,0x0c,0x0c
	.ascii "GL_3D\0"
	.byte 0x81,0x0c,0x0c
	.ascii "GL_3D_COLOR\0"
	.byte 0x82,0x0c,0x0c
	.ascii "GL_3D_COLOR_TEXTURE\0"
	.byte 0x83,0x0c,0x0c
	.ascii "GL_4D_COLOR_TEXTURE\0"
	.byte 0x84,0x0c,0x0c
	.ascii "GL_POINT_TOKEN\0"
	.byte 0x81,0x0e,0x0c
	.ascii "GL_LINE_TOKEN\0"
	.byte 0x82,0x0e,0x0c
	.ascii "GL_LINE_RESET_TOKEN\0"
	.byte 0x87,0x0e,0x0c
	.ascii "GL_POLYGON_TOKEN\0"
	.byte 0x83,0x0e,0x0c
	.ascii "GL_BITMAP_TOKEN\0"
	.byte 0x84,0x0e,0x0c
	.ascii "GL_DRAW_PIXEL_TOKEN\0"
	.byte 0x85,0x0e,0x0c
	.ascii "GL_COPY_PIXEL_TOKEN\0"
	.byte 0x86,0x0e,0x0c
	.ascii "GL_PASS_THROUGH_TOKEN\0"
	.byte 0x80,0x0e,0x0c
	.ascii "GL_FEEDBACK_BUFFER_POINTER\0"
	.byte 0xf0,0x1b,0x0c
	.ascii "GL_FEEDBACK_BUFFER_SIZE\0"
	.byte 0xf1,0x1b,0x0c
	.ascii "GL_FEEDBACK_BUFFER_TYPE\0"
	.byte 0xf2,0x1b,0x0c
	.ascii "GL_FOG\0"
	.byte 0xe0,0x16,0x0c
	.ascii "GL_FOG_MODE\0"
	.byte 0xe5,0x16,0x0c
	.ascii "GL_FOG_DENSITY\0"
	.byte 0xe2,0x16,0x0c
	.ascii "GL_FOG_COLOR\0"
	.byte 0xe6,0x16,0x0c
	.ascii "GL_FOG_INDEX\0"
	.byte 0xe1,0x16,0x0c
	.ascii "GL_FOG_START\0"
	.byte 0xe3,0x16,0x0c
	.ascii "GL_FOG_END\0"
	.byte 0xe4,0x16,0x0c
	.ascii "GL_LINEAR\0"
	.byte 0x81,0xcc,0x00,0x0c
	.ascii "GL_EXP\0"
	.byte 0x80,0x10,0x0c
	.ascii "GL_EXP2\0"
	.byte 0x81,0x10,0x0c
	.ascii "GL_LOGIC_OP\0"
	.byte 0xf1,0x17,0x0c
	.ascii "GL_INDEX_LOGIC_OP\0"
	.byte 0xf1,0x17,0x0c
	.ascii "GL_COLOR_LOGIC_OP\0"
	.byte 0xf2,0x17,0x0c
	.ascii "GL_LOGIC_OP_MODE\0"
	.byte 0xf0,0x17,0x0c
	.ascii "GL_CLEAR\0"
	.byte 0x80,0x2a,0x0c
	.ascii "GL_SET\0"
	.byte 0x8f,0x2a,0x0c
	.ascii "GL_COPY\0"
	.byte 0x83,0x2a,0x0c
	.ascii "GL_COPY_INVERTED\0"
	.byte 0x8c,0x2a,0x0c
	.ascii "GL_NOOP\0"
	.byte 0x85,0x2a,0x0c
	.ascii "GL_INVERT\0"
	.byte 0x8a,0x2a,0x0c
	.ascii "GL_AND\0"
	.byte 0x81,0x2a,0x0c
	.ascii "GL_NAND\0"
	.byte 0x8e,0x2a,0x0c
	.ascii "GL_OR\0"
	.byte 0x87,0x2a,0x0c
	.ascii "GL_NOR\0"
	.byte 0x88,0x2a,0x0c
	.ascii "GL_XOR\0"
	.byte 0x86,0x2a,0x0c
	.ascii "GL_EQUIV\0"
	.byte 0x89,0x2a,0x0c
	.ascii "GL_AND_REVERSE\0"
	.byte 0x82,0x2a,0x0c
	.ascii "GL_AND_INVERTED\0"
	.byte 0x84,0x2a,0x0c
	.ascii "GL_OR_REVERSE\0"
	.byte 0x8b,0x2a,0x0c
	.ascii "GL_OR_INVERTED\0"
	.byte 0x8d,0x2a,0x0c
	.ascii "GL_STENCIL_TEST\0"
	.byte 0x90,0x17,0x0c
	.ascii "GL_STENCIL_WRITEMASK\0"
	.byte 0x98,0x17,0x0c
	.ascii "GL_STENCIL_BITS\0"
	.byte 0xd7,0x1a,0x0c
	.ascii "GL_STENCIL_FUNC\0"
	.byte 0x92,0x17,0x0c
	.ascii "GL_STENCIL_VALUE_MASK\0"
	.byte 0x93,0x17,0x0c
	.ascii "GL_STENCIL_REF\0"
	.byte 0x97,0x17,0x0c
	.ascii "GL_STENCIL_FAIL\0"
	.byte 0x94,0x17,0x0c
	.ascii "GL_STENCIL_PASS_DEPTH_PASS\0"
	.byte 0x96,0x17,0x0c
	.ascii "GL_STENCIL_PASS_DEPTH_FAIL\0"
	.byte 0x95,0x17,0x0c
	.ascii "GL_STENCIL_CLEAR_VALUE\0"
	.byte 0x91,0x17,0x0c
	.ascii "GL_STENCIL_INDEX\0"
	.byte 0x81,0x32,0x0c
	.ascii "GL_KEEP\0"
	.byte 0x80,0x3c,0x0c
	.ascii "GL_REPLACE\0"
	.byte 0x81,0x3c,0x0c
	.ascii "GL_INCR\0"
	.byte 0x82,0x3c,0x0c
	.ascii "GL_DECR\0"
	.byte 0x83,0x3c,0x0c
	.ascii "GL_NONE\0"
	.byte 0x00,0x0c
	.ascii "GL_LEFT\0"
	.byte 0x86,0x08,0x0c
	.ascii "GL_RIGHT\0"
	.byte 0x87,0x08,0x0c
	.ascii "GL_FRONT_LEFT\0"
	.byte 0x80,0x08,0x0c
	.ascii "GL_FRONT_RIGHT\0"
	.byte 0x81,0x08,0x0c
	.ascii "GL_BACK_LEFT\0"
	.byte 0x82,0x08,0x0c
	.ascii "GL_BACK_RIGHT\0"
	.byte 0x83,0x08,0x0c
	.ascii "GL_AUX0\0"
	.byte 0x89,0x08,0x0c
	.ascii "GL_AUX1\0"
	.byte 0x8a,0x08,0x0c
	.ascii "GL_AUX2\0"
	.byte 0x8b,0x08,0x0c
	.ascii "GL_AUX3\0"
	.byte 0x8c,0x08,0x0c
	.ascii "GL_COLOR_INDEX\0"
	.byte 0x80,0x32,0x0c
	.ascii "GL_RED\0"
	.byte 0x83,0x32,0x0c
	.ascii "GL_GREEN\0"
	.byte 0x84,0x32,0x0c
	.ascii "GL_BLUE\0"
	.byte 0x85,0x32,0x0c
	.ascii "GL_ALPHA\0"
	.byte 0x86,0x32,0x0c
	.ascii "GL_LUMINANCE\0"
	.byte 0x89,0x32,0x0c
	.ascii "GL_LUMINANCE_ALPHA\0"
	.byte 0x8a,0x32,0x0c
	.ascii "GL_ALPHA_BITS\0"
	.byte 0xd5,0x1a,0x0c
	.ascii "GL_RED_BITS\0"
	.byte 0xd2,0x1a,0x0c
	.ascii "GL_GREEN_BITS\0"
	.byte 0xd3,0x1a,0x0c
	.ascii "GL_BLUE_BITS\0"
	.byte 0xd4,0x1a,0x0c
	.ascii "GL_INDEX_BITS\0"
	.byte 0xd1,0x1a,0x0c
	.ascii "GL_SUBPIXEL_BITS\0"
	.byte 0xd0,0x1a,0x0c
	.ascii "GL_AUX_BUFFERS\0"
	.byte 0x80,0x18,0x0c
	.ascii "GL_READ_BUFFER\0"
	.byte 0x82,0x18,0x0c
	.ascii "GL_DRAW_BUFFER\0"
	.byte 0x81,0x18,0x0c
	.ascii "GL_DOUBLEBUFFER\0"
	.byte 0xb2,0x18,0x0c
	.ascii "GL_STEREO\0"
	.byte 0xb3,0x18,0x0c
	.ascii "GL_BITMAP\0"
	.byte 0x80,0x34,0x0c
	.ascii "GL_COLOR\0"
	.byte 0x80,0x30,0x0c
	.ascii "GL_DEPTH\0"
	.byte 0x81,0x30,0x0c
	.ascii "GL_STENCIL\0"
	.byte 0x82,0x30,0x0c
	.ascii "GL_DITHER\0"
	.byte 0xd0,0x17,0x0c
	.ascii "GL_RGB\0"
	.byte 0x87,0x32,0x0c
	.ascii "GL_RGBA\0"
	.byte 0x88,0x32,0x0c
	.ascii "GL_MAX_LIST_NESTING\0"
	.byte 0xb1,0x16,0x0c
	.ascii "GL_MAX_ATTRIB_STACK_DEPTH\0"
	.byte 0xb5,0x1a,0x0c
	.ascii "GL_MAX_MODELVIEW_STACK_DEPTH\0"
	.byte 0xb6,0x1a,0x0c
	.ascii "GL_MAX_NAME_STACK_DEPTH\0"
	.byte 0xb7,0x1a,0x0c
	.ascii "GL_MAX_PROJECTION_STACK_DEPTH\0"
	.byte 0xb8,0x1a,0x0c
	.ascii "GL_MAX_TEXTURE_STACK_DEPTH\0"
	.byte 0xb9,0x1a,0x0c
	.ascii "GL_MAX_EVAL_ORDER\0"
	.byte 0xb0,0x1a,0x0c
	.ascii "GL_MAX_LIGHTS\0"
	.byte 0xb1,0x1a,0x0c
	.ascii "GL_MAX_CLIP_PLANES\0"
	.byte 0xb2,0x1a,0x0c
	.ascii "GL_MAX_TEXTURE_SIZE\0"
	.byte 0xb3,0x1a,0x0c
	.ascii "GL_MAX_PIXEL_MAP_TABLE\0"
	.byte 0xb4,0x1a,0x0c
	.ascii "GL_MAX_VIEWPORT_DIMS\0"
	.byte 0xba,0x1a,0x0c
	.ascii "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH\0"
	.byte 0xbb,0x1a,0x0c
	.ascii "GL_ATTRIB_STACK_DEPTH\0"
	.byte 0xb0,0x17,0x0c
	.ascii "GL_CLIENT_ATTRIB_STACK_DEPTH\0"
	.byte 0xb1,0x17,0x0c
	.ascii "GL_COLOR_CLEAR_VALUE\0"
	.byte 0xa2,0x18,0x0c
	.ascii "GL_COLOR_WRITEMASK\0"
	.byte 0xa3,0x18,0x0c
	.ascii "GL_CURRENT_INDEX\0"
	.byte 0x81,0x16,0x0c
	.ascii "GL_CURRENT_COLOR\0"
	.byte 0x80,0x16,0x0c
	.ascii "GL_CURRENT_NORMAL\0"
	.byte 0x82,0x16,0x0c
	.ascii "GL_CURRENT_RASTER_COLOR\0"
	.byte 0x84,0x16,0x0c
	.ascii "GL_CURRENT_RASTER_DISTANCE\0"
	.byte 0x89,0x16,0x0c
	.ascii "GL_CURRENT_RASTER_INDEX\0"
	.byte 0x85,0x16,0x0c
	.ascii "GL_CURRENT_RASTER_POSITION\0"
	.byte 0x87,0x16,0x0c
	.ascii "GL_CURRENT_RASTER_TEXTURE_COORDS\0"
	.byte 0x86,0x16,0x0c
	.ascii "GL_CURRENT_RASTER_POSITION_VALID\0"
	.byte 0x88,0x16,0x0c
	.ascii "GL_CURRENT_TEXTURE_COORDS\0"
	.byte 0x83,0x16,0x0c
	.ascii "GL_INDEX_CLEAR_VALUE\0"
	.byte 0xa0,0x18,0x0c
	.ascii "GL_INDEX_MODE\0"
	.byte 0xb0,0x18,0x0c
	.ascii "GL_INDEX_WRITEMASK\0"
	.byte 0xa1,0x18,0x0c
	.ascii "GL_MODELVIEW_MATRIX\0"
	.byte 0xa6,0x17,0x0c
	.ascii "GL_MODELVIEW_STACK_DEPTH\0"
	.byte 0xa3,0x17,0x0c
	.ascii "GL_NAME_STACK_DEPTH\0"
	.byte 0xf0,0x1a,0x0c
	.ascii "GL_PROJECTION_MATRIX\0"
	.byte 0xa7,0x17,0x0c
	.ascii "GL_PROJECTION_STACK_DEPTH\0"
	.byte 0xa4,0x17,0x0c
	.ascii "GL_RENDER_MODE\0"
	.byte 0xc0,0x18,0x0c
	.ascii "GL_RGBA_MODE\0"
	.byte 0xb1,0x18,0x0c
	.ascii "GL_TEXTURE_MATRIX\0"
	.byte 0xa8,0x17,0x0c
	.ascii "GL_TEXTURE_STACK_DEPTH\0"
	.byte 0xa5,0x17,0x0c
	.ascii "GL_VIEWPORT\0"
	.byte 0xa2,0x17,0x0c
	.ascii "GL_AUTO_NORMAL\0"
	.byte 0x80,0x1b,0x0c
	.ascii "GL_MAP1_COLOR_4\0"
	.byte 0x90,0x1b,0x0c
	.ascii "GL_MAP1_GRID_DOMAIN\0"
	.byte 0xd0,0x1b,0x0c
	.ascii "GL_MAP1_GRID_SEGMENTS\0"
	.byte 0xd1,0x1b,0x0c
	.ascii "GL_MAP1_INDEX\0"
	.byte 0x91,0x1b,0x0c
	.ascii "GL_MAP1_NORMAL\0"
	.byte 0x92,0x1b,0x0c
	.ascii "GL_MAP1_TEXTURE_COORD_1\0"
	.byte 0x93,0x1b,0x0c
	.ascii "GL_MAP1_TEXTURE_COORD_2\0"
	.byte 0x94,0x1b,0x0c
	.ascii "GL_MAP1_TEXTURE_COORD_3\0"
	.byte 0x95,0x1b,0x0c
	.ascii "GL_MAP1_TEXTURE_COORD_4\0"
	.byte 0x96,0x1b,0x0c
	.ascii "GL_MAP1_VERTEX_3\0"
	.byte 0x97,0x1b,0x0c
	.ascii "GL_MAP1_VERTEX_4\0"
	.byte 0x98,0x1b,0x0c
	.ascii "GL_MAP2_COLOR_4\0"
	.byte 0xb0,0x1b,0x0c
	.ascii "GL_MAP2_GRID_DOMAIN\0"
	.byte 0xd2,0x1b,0x0c
	.ascii "GL_MAP2_GRID_SEGMENTS\0"
	.byte 0xd3,0x1b,0x0c
	.ascii "GL_MAP2_INDEX\0"
	.byte 0xb1,0x1b,0x0c
	.ascii "GL_MAP2_NORMAL\0"
	.byte 0xb2,0x1b,0x0c
	.ascii "GL_MAP2_TEXTURE_COORD_1\0"
	.byte 0xb3,0x1b,0x0c
	.ascii "GL_MAP2_TEXTURE_COORD_2\0"
	.byte 0xb4,0x1b,0x0c
	.ascii "GL_MAP2_TEXTURE_COORD_3\0"
	.byte 0xb5,0x1b,0x0c
	.ascii "GL_MAP2_TEXTURE_COORD_4\0"
	.byte 0xb6,0x1b,0x0c
	.ascii "GL_MAP2_VERTEX_3\0"
	.byte 0xb7,0x1b,0x0c
	.ascii "GL_MAP2_VERTEX_4\0"
	.byte 0xb8,0x1b,0x0c
	.ascii "GL_COEFF\0"
	.byte 0x80,0x14,0x0c
	.ascii "GL_DOMAIN\0"
	.byte 0x82,0x14,0x0c
	.ascii "GL_ORDER\0"
	.byte 0x81,0x14,0x0c
	.ascii "GL_FOG_HINT\0"
	.byte 0xd4,0x18,0x0c
	.ascii "GL_LINE_SMOOTH_HINT\0"
	.byte 0xd2,0x18,0x0c
	.ascii "GL_PERSPECTIVE_CORRECTION_HINT\0"
	.byte 0xd0,0x18,0x0c
	.ascii "GL_POINT_SMOOTH_HINT\0"
	.byte 0xd1,0x18,0x0c
	.ascii "GL_POLYGON_SMOOTH_HINT\0"
	.byte 0xd3,0x18,0x0c
	.ascii "GL_DONT_CARE\0"
	.byte 0x80,0x22,0x0c
	.ascii "GL_FASTEST\0"
	.byte 0x81,0x22,0x0c
	.ascii "GL_NICEST\0"
	.byte 0x82,0x22,0x0c
	.ascii "GL_SCISSOR_TEST\0"
	.byte 0x91,0x18,0x0c
	.ascii "GL_SCISSOR_BOX\0"
	.byte 0x90,0x18,0x0c
	.ascii "GL_MAP_COLOR\0"
	.byte 0x90,0x1a,0x0c
	.ascii "GL_MAP_STENCIL\0"
	.byte 0x91,0x1a,0x0c
	.ascii "GL_INDEX_SHIFT\0"
	.byte 0x92,0x1a,0x0c
	.ascii "GL_INDEX_OFFSET\0"
	.byte 0x93,0x1a,0x0c
	.ascii "GL_RED_SCALE\0"
	.byte 0x94,0x1a,0x0c
	.ascii "GL_RED_BIAS\0"
	.byte 0x95,0x1a,0x0c
	.ascii "GL_GREEN_SCALE\0"
	.byte 0x98,0x1a,0x0c
	.ascii "GL_GREEN_BIAS\0"
	.byte 0x99,0x1a,0x0c
	.ascii "GL_BLUE_SCALE\0"
	.byte 0x9a,0x1a,0x0c
	.ascii "GL_BLUE_BIAS\0"
	.byte 0x9b,0x1a,0x0c
	.ascii "GL_ALPHA_SCALE\0"
	.byte 0x9c,0x1a,0x0c
	.ascii "GL_ALPHA_BIAS\0"
	.byte 0x9d,0x1a,0x0c
	.ascii "GL_DEPTH_SCALE\0"
	.byte 0x9e,0x1a,0x0c
	.ascii "GL_DEPTH_BIAS\0"
	.byte 0x9f,0x1a,0x0c
	.ascii "GL_PIXEL_MAP_S_TO_S_SIZE\0"
	.byte 0xb1,0x19,0x0c
	.ascii "GL_PIXEL_MAP_I_TO_I_SIZE\0"
	.byte 0xb0,0x19,0x0c
	.ascii "GL_PIXEL_MAP_I_TO_R_SIZE\0"
	.byte 0xb2,0x19,0x0c
	.ascii "GL_PIXEL_MAP_I_TO_G_SIZE\0"
	.byte 0xb3,0x19,0x0c
	.ascii "GL_PIXEL_MAP_I_TO_B_SIZE\0"
	.byte 0xb4,0x19,0x0c
	.ascii "GL_PIXEL_MAP_I_TO_A_SIZE\0"
	.byte 0xb5,0x19,0x0c
	.ascii "GL_PIXEL_MAP_R_TO_R_SIZE\0"
	.byte 0xb6,0x19,0x0c
	.ascii "GL_PIXEL_MAP_G_TO_G_SIZE\0"
	.byte 0xb7,0x19,0x0c
	.ascii "GL_PIXEL_MAP_B_TO_B_SIZE\0"
	.byte 0xb8,0x19,0x0c
	.ascii "GL_PIXEL_MAP_A_TO_A_SIZE\0"
	.byte 0xb9,0x19,0x0c
	.ascii "GL_PIXEL_MAP_S_TO_S\0"
	.byte 0xf1,0x18,0x0c
	.ascii "GL_PIXEL_MAP_I_TO_I\0"
	.byte 0xf0,0x18,0x0c
	.ascii "GL_PIXEL_MAP_I_TO_R\0"
	.byte 0xf2,0x18,0x0c
	.ascii "GL_PIXEL_MAP_I_TO_G\0"
	.byte 0xf3,0x18,0x0c
	.ascii "GL_PIXEL_MAP_I_TO_B\0"
	.byte 0xf4,0x18,0x0c
	.ascii "GL_PIXEL_MAP_I_TO_A\0"
	.byte 0xf5,0x18,0x0c
	.ascii "GL_PIXEL_MAP_R_TO_R\0"
	.byte 0xf6,0x18,0x0c
	.ascii "GL_PIXEL_MAP_G_TO_G\0"
	.byte 0xf7,0x18,0x0c
	.ascii "GL_PIXEL_MAP_B_TO_B\0"
	.byte 0xf8,0x18,0x0c
	.ascii "GL_PIXEL_MAP_A_TO_A\0"
	.byte 0xf9,0x18,0x0c
	.ascii "GL_PACK_ALIGNMENT\0"
	.byte 0x85,0x1a,0x0c
	.ascii "GL_PACK_LSB_FIRST\0"
	.byte 0x81,0x1a,0x0c
	.ascii "GL_PACK_ROW_LENGTH\0"
	.byte 0x82,0x1a,0x0c
	.ascii "GL_PACK_SKIP_PIXELS\0"
	.byte 0x84,0x1a,0x0c
	.ascii "GL_PACK_SKIP_ROWS\0"
	.byte 0x83,0x1a,0x0c
	.ascii "GL_PACK_SWAP_BYTES\0"
	.byte 0x80,0x1a,0x0c
	.ascii "GL_UNPACK_ALIGNMENT\0"
	.byte 0xf5,0x19,0x0c
	.ascii "GL_UNPACK_LSB_FIRST\0"
	.byte 0xf1,0x19,0x0c
	.ascii "GL_UNPACK_ROW_LENGTH\0"
	.byte 0xf2,0x19,0x0c
	.ascii "GL_UNPACK_SKIP_PIXELS\0"
	.byte 0xf4,0x19,0x0c
	.ascii "GL_UNPACK_SKIP_ROWS\0"
	.byte 0xf3,0x19,0x0c
	.ascii "GL_UNPACK_SWAP_BYTES\0"
	.byte 0xf0,0x19,0x0c
	.ascii "GL_ZOOM_X\0"
	.byte 0x96,0x1a,0x0c
	.ascii "GL_ZOOM_Y\0"
	.byte 0x97,0x1a,0x0c
	.ascii "GL_TEXTURE_ENV\0"
	.byte 0x80,0xc6,0x00,0x0c
	.ascii "GL_TEXTURE_ENV_MODE\0"
	.byte 0x80,0xc4,0x00,0x0c
	.ascii "GL_TEXTURE_1D\0"
	.byte 0xe0,0x1b,0x0c
	.ascii "GL_TEXTURE_2D\0"
	.byte 0xe1,0x1b,0x0c
	.ascii "GL_TEXTURE_WRAP_S\0"
	.byte 0x82,0xd0,0x00,0x0c
	.ascii "GL_TEXTURE_WRAP_T\0"
	.byte 0x83,0xd0,0x00,0x0c
	.ascii "GL_TEXTURE_MAG_FILTER\0"
	.byte 0x80,0xd0,0x00,0x0c
	.ascii "GL_TEXTURE_MIN_FILTER\0"
	.byte 0x81,0xd0,0x00,0x0c
	.ascii "GL_TEXTURE_ENV_COLOR\0"
	.byte 0x81,0xc4,0x00,0x0c
	.ascii "GL_TEXTURE_GEN_S\0"
	.byte 0xe0,0x18,0x0c
	.ascii "GL_TEXTURE_GEN_T\0"
	.byte 0xe1,0x18,0x0c
	.ascii "GL_TEXTURE_GEN_MODE\0"
	.byte 0x80,0xca,0x00,0x0c
	.ascii "GL_TEXTURE_BORDER_COLOR\0"
	.byte 0x84,0x20,0x0c
	.ascii "GL_TEXTURE_WIDTH\0"
	.byte 0x80,0x20,0x0c
	.ascii "GL_TEXTURE_HEIGHT\0"
	.byte 0x81,0x20,0x0c
	.ascii "GL_TEXTURE_BORDER\0"
	.byte 0x85,0x20,0x0c
	.ascii "GL_TEXTURE_COMPONENTS\0"
	.byte 0x83,0x20,0x0c
	.ascii "GL_TEXTURE_RED_SIZE\0"
	.byte 0xdc,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_GREEN_SIZE\0"
	.byte 0xdd,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_BLUE_SIZE\0"
	.byte 0xde,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_ALPHA_SIZE\0"
	.byte 0xdf,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_LUMINANCE_SIZE\0"
	.byte 0xe0,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_INTENSITY_SIZE\0"
	.byte 0xe1,0x80,0x02,0x0c
	.ascii "GL_NEAREST_MIPMAP_NEAREST\0"
	.byte 0x80,0xce,0x00,0x0c
	.ascii "GL_NEAREST_MIPMAP_LINEAR\0"
	.byte 0x82,0xce,0x00,0x0c
	.ascii "GL_LINEAR_MIPMAP_NEAREST\0"
	.byte 0x81,0xce,0x00,0x0c
	.ascii "GL_LINEAR_MIPMAP_LINEAR\0"
	.byte 0x83,0xce,0x00,0x0c
	.ascii "GL_OBJECT_LINEAR\0"
	.byte 0x81,0xc8,0x00,0x0c
	.ascii "GL_OBJECT_PLANE\0"
	.byte 0x81,0xca,0x00,0x0c
	.ascii "GL_EYE_LINEAR\0"
	.byte 0x80,0xc8,0x00,0x0c
	.ascii "GL_EYE_PLANE\0"
	.byte 0x82,0xca,0x00,0x0c
	.ascii "GL_SPHERE_MAP\0"
	.byte 0x82,0xc8,0x00,0x0c
	.ascii "GL_DECAL\0"
	.byte 0x81,0xc2,0x00,0x0c
	.ascii "GL_MODULATE\0"
	.byte 0x80,0xc2,0x00,0x0c
	.ascii "GL_NEAREST\0"
	.byte 0x80,0xcc,0x00,0x0c
	.ascii "GL_REPEAT\0"
	.byte 0x81,0xd2,0x00,0x0c
	.ascii "GL_CLAMP\0"
	.byte 0x80,0xd2,0x00,0x0c
	.ascii "GL_S\0"
	.byte 0x80,0xc0,0x00,0x0c
	.ascii "GL_T\0"
	.byte 0x81,0xc0,0x00,0x0c
	.ascii "GL_R\0"
	.byte 0x82,0xc0,0x00,0x0c
	.ascii "GL_Q\0"
	.byte 0x83,0xc0,0x00,0x0c
	.ascii "GL_TEXTURE_GEN_R\0"
	.byte 0xe2,0x18,0x0c
	.ascii "GL_TEXTURE_GEN_Q\0"
	.byte 0xe3,0x18,0x0c
	.ascii "GL_PROXY_TEXTURE_1D\0"
	.byte 0xe3,0x80,0x02,0x0c
	.ascii "GL_PROXY_TEXTURE_2D\0"
	.byte 0xe4,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_PRIORITY\0"
	.byte 0xe6,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_RESIDENT\0"
	.byte 0xe7,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_BINDING_1D\0"
	.byte 0xe8,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_BINDING_2D\0"
	.byte 0xe9,0x80,0x02,0x0c
	.ascii "GL_ALPHA4\0"
	.byte 0xbb,0x80,0x02,0x0c
	.ascii "GL_ALPHA8\0"
	.byte 0xbc,0x80,0x02,0x0c
	.ascii "GL_ALPHA12\0"
	.byte 0xbd,0x80,0x02,0x0c
	.ascii "GL_ALPHA16\0"
	.byte 0xbe,0x80,0x02,0x0c
	.ascii "GL_LUMINANCE4\0"
	.byte 0xbf,0x80,0x02,0x0c
	.ascii "GL_LUMINANCE8\0"
	.byte 0xc0,0x80,0x02,0x0c
	.ascii "GL_LUMINANCE12\0"
	.byte 0xc1,0x80,0x02,0x0c
	.ascii "GL_LUMINANCE16\0"
	.byte 0xc2,0x80,0x02,0x0c
	.ascii "GL_LUMINANCE4_ALPHA4\0"
	.byte 0xc3,0x80,0x02,0x0c
	.ascii "GL_LUMINANCE6_ALPHA2\0"
	.byte 0xc4,0x80,0x02,0x0c
	.ascii "GL_LUMINANCE8_ALPHA8\0"
	.byte 0xc5,0x80,0x02,0x0c
	.ascii "GL_LUMINANCE12_ALPHA4\0"
	.byte 0xc6,0x80,0x02,0x0c
	.ascii "GL_LUMINANCE12_ALPHA12\0"
	.byte 0xc7,0x80,0x02,0x0c
	.ascii "GL_LUMINANCE16_ALPHA16\0"
	.byte 0xc8,0x80,0x02,0x0c
	.ascii "GL_INTENSITY\0"
	.byte 0xc9,0x80,0x02,0x0c
	.ascii "GL_INTENSITY4\0"
	.byte 0xca,0x80,0x02,0x0c
	.ascii "GL_INTENSITY8\0"
	.byte 0xcb,0x80,0x02,0x0c
	.ascii "GL_INTENSITY12\0"
	.byte 0xcc,0x80,0x02,0x0c
	.ascii "GL_INTENSITY16\0"
	.byte 0xcd,0x80,0x02,0x0c
	.ascii "GL_R3_G3_B2\0"
	.byte 0x90,0xd4,0x00,0x0c
	.ascii "GL_RGB4\0"
	.byte 0xcf,0x80,0x02,0x0c
	.ascii "GL_RGB5\0"
	.byte 0xd0,0x80,0x02,0x0c
	.ascii "GL_RGB8\0"
	.byte 0xd1,0x80,0x02,0x0c
	.ascii "GL_RGB10\0"
	.byte 0xd2,0x80,0x02,0x0c
	.ascii "GL_RGB12\0"
	.byte 0xd3,0x80,0x02,0x0c
	.ascii "GL_RGB16\0"
	.byte 0xd4,0x80,0x02,0x0c
	.ascii "GL_RGBA2\0"
	.byte 0xd5,0x80,0x02,0x0c
	.ascii "GL_RGBA4\0"
	.byte 0xd6,0x80,0x02,0x0c
	.ascii "GL_RGB5_A1\0"
	.byte 0xd7,0x80,0x02,0x0c
	.ascii "GL_RGBA8\0"
	.byte 0xd8,0x80,0x02,0x0c
	.ascii "GL_RGB10_A2\0"
	.byte 0xd9,0x80,0x02,0x0c
	.ascii "GL_RGBA12\0"
	.byte 0xda,0x80,0x02,0x0c
	.ascii "GL_RGBA16\0"
	.byte 0xdb,0x80,0x02,0x0c
	.ascii "GL_VENDOR\0"
	.byte 0x80,0x3e,0x0c
	.ascii "GL_RENDERER\0"
	.byte 0x81,0x3e,0x0c
	.ascii "GL_VERSION\0"
	.byte 0x82,0x3e,0x0c
	.ascii "GL_EXTENSIONS\0"
	.byte 0x83,0x3e,0x0c
	.ascii "GL_INVALID_VALUE\0"
	.byte 0x81,0x0a,0x0c
	.ascii "GL_INVALID_ENUM\0"
	.byte 0x80,0x0a,0x0c
	.ascii "GL_INVALID_OPERATION\0"
	.byte 0x82,0x0a,0x0c
	.ascii "GL_STACK_OVERFLOW\0"
	.byte 0x83,0x0a,0x0c
	.ascii "GL_STACK_UNDERFLOW\0"
	.byte 0x84,0x0a,0x0c
	.ascii "GL_OUT_OF_MEMORY\0"
	.byte 0x85,0x0a,0x0c
	.ascii "GL_CONSTANT_COLOR_EXT\0"
	.byte 0x81,0x80,0x02,0x0c
	.ascii "GL_ONE_MINUS_CONSTANT_COLOR_EXT\0"
	.byte 0x82,0x80,0x02,0x0c
	.ascii "GL_CONSTANT_ALPHA_EXT\0"
	.byte 0x83,0x80,0x02,0x0c
	.ascii "GL_ONE_MINUS_CONSTANT_ALPHA_EXT\0"
	.byte 0x84,0x80,0x02,0x0c
	.ascii "GL_BLEND_EQUATION_EXT\0"
	.byte 0x89,0x80,0x02,0x0c
	.ascii "GL_MIN_EXT\0"
	.byte 0x87,0x80,0x02,0x0c
	.ascii "GL_MAX_EXT\0"
	.byte 0x88,0x80,0x02,0x0c
	.ascii "GL_FUNC_ADD_EXT\0"
	.byte 0x86,0x80,0x02,0x0c
	.ascii "GL_FUNC_SUBTRACT_EXT\0"
	.byte 0x8a,0x80,0x02,0x0c
	.ascii "GL_FUNC_REVERSE_SUBTRACT_EXT\0"
	.byte 0x8b,0x80,0x02,0x0c
	.ascii "GL_BLEND_COLOR_EXT\0"
	.byte 0x85,0x80,0x02,0x0c
	.ascii "GL_POLYGON_OFFSET_EXT\0"
	.byte 0xb7,0x80,0x02,0x0c
	.ascii "GL_POLYGON_OFFSET_FACTOR_EXT\0"
	.byte 0xb8,0x80,0x02,0x0c
	.ascii "GL_POLYGON_OFFSET_BIAS_EXT\0"
	.byte 0xb9,0x80,0x02,0x0c
	.ascii "GL_VERTEX_ARRAY_EXT\0"
	.byte 0xf4,0x80,0x02,0x0c
	.ascii "GL_NORMAL_ARRAY_EXT\0"
	.byte 0xf5,0x80,0x02,0x0c
	.ascii "GL_COLOR_ARRAY_EXT\0"
	.byte 0xf6,0x80,0x02,0x0c
	.ascii "GL_INDEX_ARRAY_EXT\0"
	.byte 0xf7,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_COORD_ARRAY_EXT\0"
	.byte 0xf8,0x80,0x02,0x0c
	.ascii "GL_EDGE_FLAG_ARRAY_EXT\0"
	.byte 0xf9,0x80,0x02,0x0c
	.ascii "GL_VERTEX_ARRAY_SIZE_EXT\0"
	.byte 0xfa,0x80,0x02,0x0c
	.ascii "GL_VERTEX_ARRAY_TYPE_EXT\0"
	.byte 0xfb,0x80,0x02,0x0c
	.ascii "GL_VERTEX_ARRAY_STRIDE_EXT\0"
	.byte 0xfc,0x80,0x02,0x0c
	.ascii "GL_VERTEX_ARRAY_COUNT_EXT\0"
	.byte 0xfd,0x80,0x02,0x0c
	.ascii "GL_NORMAL_ARRAY_TYPE_EXT\0"
	.byte 0xfe,0x80,0x02,0x0c
	.ascii "GL_NORMAL_ARRAY_STRIDE_EXT\0"
	.byte 0xff,0x80,0x02,0x0c
	.ascii "GL_NORMAL_ARRAY_COUNT_EXT\0"
	.byte 0x80,0x81,0x02,0x0c
	.ascii "GL_COLOR_ARRAY_SIZE_EXT\0"
	.byte 0x81,0x81,0x02,0x0c
	.ascii "GL_COLOR_ARRAY_TYPE_EXT\0"
	.byte 0x82,0x81,0x02,0x0c
	.ascii "GL_COLOR_ARRAY_STRIDE_EXT\0"
	.byte 0x83,0x81,0x02,0x0c
	.ascii "GL_COLOR_ARRAY_COUNT_EXT\0"
	.byte 0x84,0x81,0x02,0x0c
	.ascii "GL_INDEX_ARRAY_TYPE_EXT\0"
	.byte 0x85,0x81,0x02,0x0c
	.ascii "GL_INDEX_ARRAY_STRIDE_EXT\0"
	.byte 0x86,0x81,0x02,0x0c
	.ascii "GL_INDEX_ARRAY_COUNT_EXT\0"
	.byte 0x87,0x81,0x02,0x0c
	.ascii "GL_TEXTURE_COORD_ARRAY_SIZE_EXT\0"
	.byte 0x88,0x81,0x02,0x0c
	.ascii "GL_TEXTURE_COORD_ARRAY_TYPE_EXT\0"
	.byte 0x89,0x81,0x02,0x0c
	.ascii "GL_TEXTURE_COORD_ARRAY_STRIDE_EXT\0"
	.byte 0x8a,0x81,0x02,0x0c
	.ascii "GL_TEXTURE_COORD_ARRAY_COUNT_EXT\0"
	.byte 0x8b,0x81,0x02,0x0c
	.ascii "GL_EDGE_FLAG_ARRAY_STRIDE_EXT\0"
	.byte 0x8c,0x81,0x02,0x0c
	.ascii "GL_EDGE_FLAG_ARRAY_COUNT_EXT\0"
	.byte 0x8d,0x81,0x02,0x0c
	.ascii "GL_VERTEX_ARRAY_POINTER_EXT\0"
	.byte 0x8e,0x81,0x02,0x0c
	.ascii "GL_NORMAL_ARRAY_POINTER_EXT\0"
	.byte 0x8f,0x81,0x02,0x0c
	.ascii "GL_COLOR_ARRAY_POINTER_EXT\0"
	.byte 0x90,0x81,0x02,0x0c
	.ascii "GL_INDEX_ARRAY_POINTER_EXT\0"
	.byte 0x91,0x81,0x02,0x0c
	.ascii "GL_TEXTURE_COORD_ARRAY_POINTER_EXT\0"
	.byte 0x92,0x81,0x02,0x0c
	.ascii "GL_EDGE_FLAG_ARRAY_POINTER_EXT\0"
	.byte 0x93,0x81,0x02,0x0c
	.ascii "GL_TEXTURE_PRIORITY_EXT\0"
	.byte 0xe6,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_RESIDENT_EXT\0"
	.byte 0xe7,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_1D_BINDING_EXT\0"
	.byte 0xe8,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_2D_BINDING_EXT\0"
	.byte 0xe9,0x80,0x02,0x0c
	.ascii "GL_PACK_SKIP_IMAGES_EXT\0"
	.byte 0xeb,0x80,0x02,0x0c
	.ascii "GL_PACK_IMAGE_HEIGHT_EXT\0"
	.byte 0xec,0x80,0x02,0x0c
	.ascii "GL_UNPACK_SKIP_IMAGES_EXT\0"
	.byte 0xed,0x80,0x02,0x0c
	.ascii "GL_UNPACK_IMAGE_HEIGHT_EXT\0"
	.byte 0xee,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_3D_EXT\0"
	.byte 0xef,0x80,0x02,0x0c
	.ascii "GL_PROXY_TEXTURE_3D_EXT\0"
	.byte 0xf0,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_DEPTH_EXT\0"
	.byte 0xf1,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_WRAP_R_EXT\0"
	.byte 0xf2,0x80,0x02,0x0c
	.ascii "GL_MAX_3D_TEXTURE_SIZE_EXT\0"
	.byte 0xf3,0x80,0x02,0x0c
	.ascii "GL_TEXTURE_3D_BINDING_EXT\0"
	.byte 0xea,0x80,0x02,0x0c
	.ascii "GL_TABLE_TOO_LARGE_EXT\0"
	.byte 0xb1,0x80,0x02,0x0c
	.ascii "GL_COLOR_TABLE_FORMAT_EXT\0"
	.byte 0xd8,0x81,0x02,0x0c
	.ascii "GL_COLOR_TABLE_WIDTH_EXT\0"
	.byte 0xd9,0x81,0x02,0x0c
	.ascii "GL_COLOR_TABLE_RED_SIZE_EXT\0"
	.byte 0xda,0x81,0x02,0x0c
	.ascii "GL_COLOR_TABLE_GREEN_SIZE_EXT\0"
	.byte 0xdb,0x81,0x02,0x0c
	.ascii "GL_COLOR_TABLE_BLUE_SIZE_EXT\0"
	.byte 0xdc,0x81,0x02,0x0c
	.ascii "GL_COLOR_TABLE_ALPHA_SIZE_EXT\0"
	.byte 0xdd,0x81,0x02,0x0c
	.ascii "GL_COLOR_TABLE_LUMINANCE_SIZE_EXT\0"
	.byte 0xde,0x81,0x02,0x0c
	.ascii "GL_COLOR_TABLE_INTENSITY_SIZE_EXT\0"
	.byte 0xdf,0x81,0x02,0x0c
	.ascii "GL_TEXTURE_INDEX_SIZE_EXT\0"
	.byte 0xe1,0x81,0x02,0x0c
	.ascii "GL_COLOR_INDEX1_EXT\0"
	.byte 0xe2,0x81,0x02,0x0c
	.ascii "GL_COLOR_INDEX2_EXT\0"
	.byte 0xe3,0x81,0x02,0x0c
	.ascii "GL_COLOR_INDEX4_EXT\0"
	.byte 0xe4,0x81,0x02,0x0c
	.ascii "GL_COLOR_INDEX8_EXT\0"
	.byte 0xe5,0x81,0x02,0x0c
	.ascii "GL_COLOR_INDEX12_EXT\0"
	.byte 0xe6,0x81,0x02,0x0c
	.ascii "GL_COLOR_INDEX16_EXT\0"
	.byte 0xe7,0x81,0x02,0x0c
	.ascii "GL_SHARED_TEXTURE_PALETTE_EXT\0"
	.byte 0xfb,0x83,0x02,0x0c
	.ascii "GL_POINT_SIZE_MIN_EXT\0"
	.byte 0xa6,0x82,0x02,0x0c
	.ascii "GL_POINT_SIZE_MAX_EXT\0"
	.byte 0xa7,0x82,0x02,0x0c
	.ascii "GL_POINT_FADE_THRESHOLD_SIZE_EXT\0"
	.byte 0xa8,0x82,0x02,0x0c
	.ascii "GL_DISTANCE_ATTENUATION_EXT\0"
	.byte 0xa9,0x82,0x02,0x00,0x06,0x00,0x00,0x02
	.byte 0x1c
	.ascii "GLenum\0"
	.byte 0x03,0x05
	.ascii "unsigned char\0"
	.byte 0x08,0x01,0x06,0x00,0x00,0x31,0xc5
	.ascii "GLubyte\0"
	.byte 0x03,0x08,0x00,0x00,0x31,0xd6,0x05
	.ascii "void\0"
	.byte 0x05,0x00,0x08,0x00,0x00,0x31,0xe9,0x0d
	.ascii "gl_texture_image\0"
	.byte 0x3c,0x02,0x00,0x00,0x32,0xff,0x0e
	.ascii "Format\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x00,0x0e
	.ascii "IntFormat\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x04,0x0e
	.ascii "Border\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x08,0x0e
	.ascii "Width\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x0c,0x0e
	.ascii "Height\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x10,0x0e
	.ascii "Depth\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x14,0x0e
	.ascii "Width2\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x18,0x0e
	.ascii "Height2\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x1c,0x0e
	.ascii "Depth2\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x20,0x0e
	.ascii "WidthLog2\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x24,0x0e
	.ascii "HeightLog2\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x28,0x0e
	.ascii "DepthLog2\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x2c,0x0e
	.ascii "MaxLog2\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x30,0x0e
	.ascii "Data\0"
	.byte 0x00,0x00,0x31,0xe4,0x02,0x23,0x34,0x0e
	.ascii "DriverData\0"
	.byte 0x00,0x00,0x31,0xf1,0x02,0x23,0x38,0x00
	.byte 0x08,0x00,0x00,0x31,0xf6,0x09,0x00,0x00
	.byte 0x32,0xff,0x2c,0x00,0x00,0x33,0x15,0x0a
	.byte 0x00,0x00,0x02,0x03,0x0a,0x00,0x0f,0x00
	.byte 0x00,0x31,0xd6,0x04,0x00,0x00,0x00,0x33
	.byte 0x28,0x10,0x00,0x00,0x02,0x03,0x03,0xff
	.byte 0x00,0x06,0x00,0x00,0x31,0xc5
	.ascii "GLboolean\0"
	.byte 0x03,0x11
	.ascii "gl_texture_object\0"
	.byte 0x04,0x84,0x02,0x00,0x00,0x34,0xc7,0x0e
	.ascii "RefCount\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x00,0x0e
	.ascii "Name\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x04,0x0e
	.ascii "Dimensions\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x08,0x0e
	.ascii "Priority\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x0c,0x0e
	.ascii "BorderColor\0"
	.byte 0x00,0x00,0x02,0x0b,0x02,0x23,0x10,0x0e
	.ascii "WrapS\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x20,0x0e
	.ascii "WrapT\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x24,0x0e
	.ascii "WrapR\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x28,0x0e
	.ascii "MinFilter\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x2c,0x0e
	.ascii "MagFilter\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x30,0x0e
	.ascii "MinMagThresh\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x34,0x0e
	.ascii "Image\0"
	.byte 0x00,0x00,0x33,0x04,0x02,0x23,0x38,0x0e
	.ascii "Palette\0"
	.byte 0x00,0x00,0x33,0x15,0x02,0x23,0x64,0x0e
	.ascii "PaletteSize\0"
	.byte 0x00,0x00,0x01,0xdf,0x03,0x23,0xe4,0x08
	.byte 0x0e
	.ascii "PaletteIntFormat\0"
	.byte 0x00,0x00,0x31,0xb8,0x03,0x23,0xe8,0x08
	.byte 0x0e
	.ascii "PaletteFormat\0"
	.byte 0x00,0x00,0x31,0xb8,0x03,0x23,0xec,0x08
	.byte 0x0e
	.ascii "Dirty\0"
	.byte 0x00,0x00,0x33,0x28,0x03,0x23,0xf0,0x08
	.byte 0x0e
	.ascii "DriverData\0"
	.byte 0x00,0x00,0x31,0xf1,0x03,0x23,0xf4,0x08
	.byte 0x0e
	.ascii "Complete\0"
	.byte 0x00,0x00,0x33,0x28,0x03,0x23,0xf8,0x08
	.byte 0x0e
	.ascii "SampleFunc\0"
	.byte 0x00,0x00,0x35,0x3d,0x03,0x23,0xfc,0x08
	.byte 0x0e
	.ascii "Next\0"
	.byte 0x00,0x00,0x35,0x55,0x03,0x23,0x80,0x09
	.byte 0x00,0x12,0x00,0x00,0x33,0x38,0x08,0x00
	.byte 0x00,0x34,0xc7,0x12,0x00,0x00,0x01,0xec
	.byte 0x08,0x00,0x00,0x34,0xd1,0x12,0x00,0x00
	.byte 0x01,0xec,0x08,0x00,0x00,0x34,0xdb,0x12
	.byte 0x00,0x00,0x01,0xec,0x08,0x00,0x00,0x34
	.byte 0xe5,0x12,0x00,0x00,0x01,0xec,0x08,0x00
	.byte 0x00,0x34,0xef,0x08,0x00,0x00,0x31,0xc5
	.byte 0x13,0x01,0x01,0x00,0x00,0x35,0x38,0x14
	.byte 0x00,0x00,0x34,0xcc,0x14,0x00,0x00,0x01
	.byte 0xd3,0x14,0x00,0x00,0x34,0xd6,0x14,0x00
	.byte 0x00,0x34,0xe0,0x14,0x00,0x00,0x34,0xea
	.byte 0x14,0x00,0x00,0x34,0xf4,0x14,0x00,0x00
	.byte 0x34,0xf9,0x14,0x00,0x00,0x34,0xf9,0x14
	.byte 0x00,0x00,0x34,0xf9,0x14,0x00,0x00,0x34
	.byte 0xf9,0x00,0x08,0x00,0x00,0x34,0xfe,0x06
	.byte 0x00,0x00,0x35,0x38
	.ascii "TextureSampleFunc\0"
	.byte 0x02,0x08,0x00,0x00,0x33,0x38,0x0d
	.ascii "gl_shared_state\0"
	.byte 0x1c,0x02,0x00,0x00,0x35,0xf6,0x0e
	.ascii "RefCount\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x00,0x0e
	.ascii "DisplayList\0"
	.byte 0x00,0x00,0x01,0xce,0x02,0x23,0x04,0x0e
	.ascii "TexObjects\0"
	.byte 0x00,0x00,0x01,0xce,0x02,0x23,0x08,0x0e
	.ascii "TexObjectList\0"
	.byte 0x00,0x00,0x35,0x55,0x02,0x23,0x0c,0x0e
	.ascii "Default1D\0"
	.byte 0x00,0x00,0x35,0x55,0x02,0x23,0x10,0x0e
	.ascii "Default2D\0"
	.byte 0x00,0x00,0x35,0x55,0x02,0x23,0x14,0x0e
	.ascii "Default3D\0"
	.byte 0x00,0x00,0x35,0x55,0x02,0x23,0x18,0x00
	.byte 0x08,0x00,0x00,0x35,0x5a,0x11
	.ascii "gl_context\0"
	.byte 0xe1,0x40,0x02,0x00,0x00,0x3c,0xc8,0x0e
	.ascii "Shared\0"
	.byte 0x00,0x00,0x35,0xf6,0x02,0x23,0x00,0x0e
	.ascii "API\0"
	.byte 0x00,0x00,0x55,0xb3,0x02,0x23,0x04,0x0e
	.ascii "Save\0"
	.byte 0x00,0x00,0x55,0xb3,0x03,0x23,0xe0,0x05
	.byte 0x0e
	.ascii "Exec\0"
	.byte 0x00,0x00,0x55,0xb3,0x03,0x23,0xbc,0x0b
	.byte 0x0e
	.ascii "Visual\0"
	.byte 0x00,0x00,0x66,0x0e,0x03,0x23,0x98,0x11
	.byte 0x0e
	.ascii "Buffer\0"
	.byte 0x00,0x00,0x67,0x42,0x03,0x23,0x9c,0x11
	.byte 0x0e
	.ascii "Driver\0"
	.byte 0x00,0x00,0x70,0x51,0x03,0x23,0xa0,0x11
	.byte 0x0e
	.ascii "DriverCtx\0"
	.byte 0x00,0x00,0x31,0xf1,0x03,0x23,0xf4,0x12
	.byte 0x0e
	.ascii "DriverMgrCtx\0"
	.byte 0x00,0x00,0x31,0xf1,0x03,0x23,0xf8,0x12
	.byte 0x0e
	.ascii "NewModelViewMatrix\0"
	.byte 0x00,0x00,0x33,0x28,0x03,0x23,0xfc,0x12
	.byte 0x0e
	.ascii "ModelViewMatrixType\0"
	.byte 0x00,0x00,0x01,0xdf,0x03,0x23,0x80,0x13
	.byte 0x0e
	.ascii "ModelViewMatrix\0"
	.byte 0x00,0x00,0x74,0xb9,0x03,0x23,0x84,0x13
	.byte 0x0e
	.ascii "ModelViewInv\0"
	.byte 0x00,0x00,0x74,0xca,0x03,0x23,0xc4,0x13
	.byte 0x0e
	.ascii "ModelViewStackDepth\0"
	.byte 0x00,0x00,0x01,0xdf,0x03,0x23,0x84,0x14
	.byte 0x0e
	.ascii "ModelViewStack\0"
	.byte 0x00,0x00,0x74,0xec,0x03,0x23,0x88,0x14
	.byte 0x0e
	.ascii "NewProjectionMatrix\0"
	.byte 0x00,0x00,0x33,0x28,0x03,0x23,0x88,0x24
	.byte 0x0e
	.ascii "ProjectionMatrixType\0"
	.byte 0x00,0x00,0x01,0xdf,0x03,0x23,0x8c,0x24
	.byte 0x0e
	.ascii "ProjectionMatrix\0"
	.byte 0x00,0x00,0x74,0xfe,0x03,0x23,0x90,0x24
	.byte 0x0e
	.ascii "ProjectionStackDepth\0"
	.byte 0x00,0x00,0x01,0xdf,0x03,0x23,0xd0,0x24
	.byte 0x0e
	.ascii "ProjectionStack\0"
	.byte 0x00,0x00,0x75,0x20,0x03,0x23,0xd4,0x24
	.byte 0x0e
	.ascii "NearFarStack\0"
	.byte 0x00,0x00,0x75,0x43,0x03,0x23,0xd4,0x34
	.byte 0x0e
	.ascii "NewTextureMatrix\0"
	.byte 0x00,0x00,0x33,0x28,0x03,0x23,0xd4,0x36
	.byte 0x0e
	.ascii "TextureMatrixType\0"
	.byte 0x00,0x00,0x01,0xdf,0x03,0x23,0xd8,0x36
	.byte 0x0e
	.ascii "TextureMatrix\0"
	.byte 0x00,0x00,0x75,0x55,0x03,0x23,0xdc,0x36
	.byte 0x0e
	.ascii "TextureStackDepth\0"
	.byte 0x00,0x00,0x01,0xdf,0x03,0x23,0x9c,0x37
	.byte 0x0e
	.ascii "TextureStack\0"
	.byte 0x00,0x00,0x75,0x77,0x03,0x23,0xa0,0x37
	.byte 0x0e
	.ascii "CallDepth\0"
	.byte 0x00,0x00,0x01,0xdf,0x03,0x23,0xa0,0x3c
	.byte 0x0e
	.ascii "ExecuteFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x03,0x23,0xa4,0x3c
	.byte 0x0e
	.ascii "CompileFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x03,0x23,0xa5,0x3c
	.byte 0x0e
	.ascii "AttribStackDepth\0"
	.byte 0x00,0x00,0x01,0xdf,0x03,0x23,0xa8,0x3c
	.byte 0x0e
	.ascii "AttribStack\0"
	.byte 0x00,0x00,0x75,0xdd,0x03,0x23,0xac,0x3c
	.byte 0x0e
	.ascii "Accum\0"
	.byte 0x00,0x00,0x75,0xff,0x03,0x23,0xec,0x3c
	.byte 0x0e
	.ascii "Color\0"
	.byte 0x00,0x00,0x76,0x4c,0x03,0x23,0xfc,0x3c
	.byte 0x0e
	.ascii "Current\0"
	.byte 0x00,0x00,0x78,0x61,0x03,0x23,0xd4,0x3d
	.byte 0x0e
	.ascii "Depth\0"
	.byte 0x00,0x00,0x79,0x4b,0x03,0x23,0xb4,0x3e
	.byte 0x0e
	.ascii "Eval\0"
	.byte 0x00,0x00,0x79,0x9e,0x03,0x23,0xc0,0x3e
	.byte 0x0e
	.ascii "Fog\0"
	.byte 0x00,0x00,0x7c,0x14,0x03,0x23,0xf8,0x3e
	.byte 0x0e
	.ascii "Hint\0"
	.byte 0x00,0x00,0x7c,0x8d,0x03,0x23,0xa0,0x3f
	.byte 0x0e
	.ascii "Light\0"
	.byte 0x00,0x00,0x81,0x98,0x03,0x23,0xb4,0x3f
	.byte 0x0e
	.ascii "Line\0"
	.byte 0x00,0x00,0x82,0xc8,0x04,0x23,0x88,0xdc
	.byte 0x02,0x0e
	.ascii "List\0"
	.byte 0x00,0x00,0x83,0x41,0x04,0x23,0x94,0xdc
	.byte 0x02,0x0e
	.ascii "Pixel\0"
	.byte 0x00,0x00,0x84,0x27,0x04,0x23,0x98,0xdc
	.byte 0x02,0x0e
	.ascii "Point\0"
	.byte 0x00,0x00,0x86,0xf7,0x04,0x23,0x80,0xad
	.byte 0x03,0x0e
	.ascii "Polygon\0"
	.byte 0x00,0x00,0x87,0x70,0x04,0x23,0xa0,0xad
	.byte 0x03,0x0e
	.ascii "PolygonStipple\0"
	.byte 0x00,0x00,0x88,0xa3,0x04,0x23,0xc8,0xad
	.byte 0x03,0x0e
	.ascii "Scissor\0"
	.byte 0x00,0x00,0x88,0xc2,0x04,0x23,0xc8,0xae
	.byte 0x03,0x0e
	.ascii "Stencil\0"
	.byte 0x00,0x00,0x89,0x1d,0x04,0x23,0xdc,0xae
	.byte 0x03,0x0e
	.ascii "Texture\0"
	.byte 0x00,0x00,0x8a,0x77,0x04,0x23,0xf4,0xae
	.byte 0x03,0x0e
	.ascii "Transform\0"
	.byte 0x00,0x00,0x8c,0xd9,0x04,0x23,0xcc,0xb8
	.byte 0x03,0x0e
	.ascii "Viewport\0"
	.byte 0x00,0x00,0x8d,0x53,0x04,0x23,0xb8,0xb9
	.byte 0x03,0x0e
	.ascii "ClientAttribStackDepth\0"
	.byte 0x00,0x00,0x01,0xdf,0x04,0x23,0xe8,0xb9
	.byte 0x03,0x0e
	.ascii "ClientAttribStack\0"
	.byte 0x00,0x00,0x8d,0xfa,0x04,0x23,0xec,0xb9
	.byte 0x03,0x0e
	.ascii "Array\0"
	.byte 0x00,0x00,0x8e,0x10,0x04,0x23,0xac,0xba
	.byte 0x03,0x0e
	.ascii "Pack\0"
	.byte 0x00,0x00,0x90,0xbb,0x04,0x23,0xac,0xbb
	.byte 0x03,0x0e
	.ascii "Unpack\0"
	.byte 0x00,0x00,0x90,0xbb,0x04,0x23,0xc8,0xbb
	.byte 0x03,0x0e
	.ascii "EvalMap\0"
	.byte 0x00,0x00,0x92,0x3d,0x04,0x23,0xe4,0xbb
	.byte 0x03,0x0e
	.ascii "Feedback\0"
	.byte 0x00,0x00,0x93,0xc7,0x04,0x23,0xb8,0xbf
	.byte 0x03,0x0e
	.ascii "Select\0"
	.byte 0x00,0x00,0x94,0x3c,0x04,0x23,0xcc,0xbf
	.byte 0x03,0x0e
	.ascii "ErrorValue\0"
	.byte 0x00,0x00,0x31,0xb8,0x04,0x23,0xec,0xc1
	.byte 0x03,0x0e
	.ascii "DirectContext\0"
	.byte 0x00,0x00,0x33,0x28,0x04,0x23,0xf0,0xc1
	.byte 0x03,0x0e
	.ascii "NewState\0"
	.byte 0x00,0x00,0x01,0xdf,0x04,0x23,0xf4,0xc1
	.byte 0x03,0x0e
	.ascii "RenderMode\0"
	.byte 0x00,0x00,0x31,0xb8,0x04,0x23,0xf8,0xc1
	.byte 0x03,0x0e
	.ascii "Primitive\0"
	.byte 0x00,0x00,0x31,0xb8,0x04,0x23,0xfc,0xc1
	.byte 0x03,0x0e
	.ascii "StippleCounter\0"
	.byte 0x00,0x00,0x01,0xdf,0x04,0x23,0x80,0xc2
	.byte 0x03,0x0e
	.ascii "ClipMask\0"
	.byte 0x00,0x00,0x01,0xdf,0x04,0x23,0x84,0xc2
	.byte 0x03,0x0e
	.ascii "RasterMask\0"
	.byte 0x00,0x00,0x01,0xdf,0x04,0x23,0x88,0xc2
	.byte 0x03,0x0e
	.ascii "LightTwoSide\0"
	.byte 0x00,0x00,0x33,0x28,0x04,0x23,0x8c,0xc2
	.byte 0x03,0x0e
	.ascii "DirectTriangles\0"
	.byte 0x00,0x00,0x33,0x28,0x04,0x23,0x8d,0xc2
	.byte 0x03,0x0e
	.ascii "PolygonZoffset\0"
	.byte 0x00,0x00,0x01,0xf5,0x04,0x23,0x90,0xc2
	.byte 0x03,0x0e
	.ascii "LineZoffset\0"
	.byte 0x00,0x00,0x01,0xf5,0x04,0x23,0x94,0xc2
	.byte 0x03,0x0e
	.ascii "PointZoffset\0"
	.byte 0x00,0x00,0x01,0xf5,0x04,0x23,0x98,0xc2
	.byte 0x03,0x0e
	.ascii "NeedNormals\0"
	.byte 0x00,0x00,0x33,0x28,0x04,0x23,0x9c,0xc2
	.byte 0x03,0x0e
	.ascii "FastDrawPixels\0"
	.byte 0x00,0x00,0x33,0x28,0x04,0x23,0x9d,0xc2
	.byte 0x03,0x0e
	.ascii "MutablePixels\0"
	.byte 0x00,0x00,0x33,0x28,0x04,0x23,0x9e,0xc2
	.byte 0x03,0x0e
	.ascii "MonoPixels\0"
	.byte 0x00,0x00,0x33,0x28,0x04,0x23,0x9f,0xc2
	.byte 0x03,0x0e
	.ascii "PointsFunc\0"
	.byte 0x00,0x00,0x6d,0x8c,0x04,0x23,0xa0,0xc2
	.byte 0x03,0x0e
	.ascii "LineFunc\0"
	.byte 0x00,0x00,0x6d,0xbf,0x04,0x23,0xa4,0xc2
	.byte 0x03,0x0e
	.ascii "TriangleFunc\0"
	.byte 0x00,0x00,0x6d,0xf5,0x04,0x23,0xa8,0xc2
	.byte 0x03,0x0e
	.ascii "QuadFunc\0"
	.byte 0x00,0x00,0x6e,0x34,0x04,0x23,0xac,0xc2
	.byte 0x03,0x0e
	.ascii "RectFunc\0"
	.byte 0x00,0x00,0x6e,0x6a,0x04,0x23,0xb0,0xc2
	.byte 0x03,0x0e
	.ascii "VB\0"
	.byte 0x00,0x00,0x95,0x01,0x04,0x23,0xb4,0xc2
	.byte 0x03,0x0e
	.ascii "PB\0"
	.byte 0x00,0x00,0x95,0x15,0x04,0x23,0xb8,0xc2
	.byte 0x03,0x0e
	.ascii "NoRaster\0"
	.byte 0x00,0x00,0x33,0x28,0x04,0x23,0xbc,0xc2
	.byte 0x03,0x0e
	.ascii "NoDither\0"
	.byte 0x00,0x00,0x33,0x28,0x04,0x23,0xbd,0xc2
	.byte 0x03,0x00,0x08,0x00,0x00,0x35,0xfb,0x13
	.byte 0x01,0x01,0x00,0x00,0x3c,0xe4,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x01,0xec,0x00,0x08,0x00
	.byte 0x00,0x3c,0xcd,0x13,0x01,0x01,0x00,0x00
	.byte 0x3d,0x00,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x01
	.byte 0xec,0x00,0x08,0x00,0x00,0x3c,0xe9,0x12
	.byte 0x00,0x00,0x01,0xd3,0x08,0x00,0x00,0x3d
	.byte 0x05,0x15,0x01,0x00,0x00,0x31,0xc5,0x01
	.byte 0x00,0x00,0x3d,0x2f,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x3d,0x0a,0x14,0x00,0x00,0x34,0xf9
	.byte 0x00,0x08,0x00,0x00,0x3d,0x0f,0x13,0x01
	.byte 0x01,0x00,0x00,0x3d,0x46,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x01,0xaf,0x00
	.byte 0x08,0x00,0x00,0x3d,0x34,0x13,0x01,0x01
	.byte 0x00,0x00,0x3d,0x5d,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x00,0x08
	.byte 0x00,0x00,0x3d,0x4b,0x13,0x01,0x01,0x00
	.byte 0x00,0x3d,0x79,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x02,0x1c,0x14,0x00,0x00
	.byte 0x01,0xd3,0x00,0x08,0x00,0x00,0x3d,0x62
	.byte 0x06,0x00,0x00,0x31,0xe9
	.ascii "GLvoid\0"
	.byte 0x03,0x08,0x00,0x00,0x3d,0x7e,0x0d
	.ascii "gl_image\0"
	.byte 0x24,0x02,0x00,0x00,0x3e,0x2d,0x0e
	.ascii "Width\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x00,0x0e
	.ascii "Height\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x04,0x0e
	.ascii "Depth\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x08,0x0e
	.ascii "Components\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x0c,0x0e
	.ascii "Format\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x10,0x0e
	.ascii "Type\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x14,0x0e
	.ascii "Data\0"
	.byte 0x00,0x00,0x3d,0x8b,0x02,0x23,0x18,0x0e
	.ascii "Interleaved\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x1c,0x0e
	.ascii "RefCount\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x20,0x00
	.byte 0x12,0x00,0x00,0x3d,0x90,0x08,0x00,0x00
	.byte 0x3e,0x2d,0x13,0x01,0x01,0x00,0x00,0x3e
	.byte 0x67,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xec,0x14,0x00,0x00
	.byte 0x01,0xec,0x14,0x00,0x00,0x01,0xec,0x14
	.byte 0x00,0x00,0x01,0xec,0x14,0x00,0x00,0x3e
	.byte 0x32,0x00,0x08,0x00,0x00,0x3e,0x37,0x13
	.byte 0x01,0x01,0x00,0x00,0x3e,0x8d,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xec
	.byte 0x14,0x00,0x00,0x01,0xec,0x14,0x00,0x00
	.byte 0x01,0xec,0x14,0x00,0x00,0x01,0xec,0x00
	.byte 0x08,0x00,0x00,0x3e,0x6c,0x13,0x01,0x01
	.byte 0x00,0x00,0x3e,0xa4,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x00,0x08
	.byte 0x00,0x00,0x3e,0x92,0x13,0x01,0x01,0x00
	.byte 0x00,0x3e,0xc0,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x02,0x1c,0x14,0x00,0x00
	.byte 0x02,0x1c,0x00,0x08,0x00,0x00,0x3e,0xa9
	.byte 0x13,0x01,0x01,0x00,0x00,0x3e,0xd7,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x01
	.byte 0xd3,0x00,0x08,0x00,0x00,0x3e,0xc5,0x12
	.byte 0x00,0x00,0x31,0xe9,0x08,0x00,0x00,0x3e
	.byte 0xdc,0x13,0x01,0x01,0x00,0x00,0x3f,0x02
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x3e,0xe1,0x00,0x08,0x00,0x00
	.byte 0x3e,0xe6,0x13,0x01,0x01,0x00,0x00,0x3f
	.byte 0x19,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x01,0xd3,0x00,0x08,0x00,0x00,0x3f
	.byte 0x07,0x13,0x01,0x01,0x00,0x00,0x3f,0x3f
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xec,0x14,0x00,0x00,0x01,0xec,0x14
	.byte 0x00,0x00,0x01,0xec,0x14,0x00,0x00,0x01
	.byte 0xec,0x00,0x08,0x00,0x00,0x3f,0x1e,0x13
	.byte 0x01,0x01,0x00,0x00,0x3f,0x65,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xec
	.byte 0x14,0x00,0x00,0x01,0xec,0x14,0x00,0x00
	.byte 0x01,0xec,0x14,0x00,0x00,0x01,0xec,0x00
	.byte 0x08,0x00,0x00,0x3f,0x44,0x05
	.ascii "double\0"
	.byte 0x04,0x08,0x13,0x01,0x01,0x00,0x00,0x3f
	.byte 0x86,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x3f,0x6a,0x00,0x08
	.byte 0x00,0x00,0x3f,0x74,0x13,0x01,0x01,0x00
	.byte 0x00,0x3f,0x9d,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x01,0xec,0x00,0x08,0x00
	.byte 0x00,0x3f,0x8b,0x13,0x01,0x01,0x00,0x00
	.byte 0x3f,0xb4,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x01,0xaf,0x00,0x08,0x00,0x00
	.byte 0x3f,0xa2,0x12,0x00,0x00,0x01,0xec,0x08
	.byte 0x00,0x00,0x3f,0xb9,0x13,0x01,0x01,0x00
	.byte 0x00,0x3f,0xda,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x02,0x1c,0x14,0x00,0x00
	.byte 0x3f,0xbe,0x00,0x08,0x00,0x00,0x3f,0xc3
	.byte 0x13,0x01,0x01,0x00,0x00,0x3f,0xfb,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x01
	.byte 0xec,0x14,0x00,0x00,0x01,0xec,0x14,0x00
	.byte 0x00,0x01,0xec,0x00,0x08,0x00,0x00,0x3f
	.byte 0xdf,0x12,0x00,0x00,0x01,0xec,0x08,0x00
	.byte 0x00,0x40,0x00,0x13,0x01,0x01,0x00,0x00
	.byte 0x40,0x1c,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x40,0x05,0x00,0x08,0x00,0x00
	.byte 0x40,0x0a,0x13,0x01,0x01,0x00,0x00,0x40
	.byte 0x42,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x01,0xec,0x14,0x00,0x00,0x01,0xec
	.byte 0x14,0x00,0x00,0x01,0xec,0x14,0x00,0x00
	.byte 0x01,0xec,0x00,0x08,0x00,0x00,0x40,0x21
	.byte 0x12,0x00,0x00,0x01,0xec,0x08,0x00,0x00
	.byte 0x40,0x47,0x13,0x01,0x01,0x00,0x00,0x40
	.byte 0x63,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x40,0x4c,0x00,0x08,0x00,0x00,0x40
	.byte 0x51,0x13,0x01,0x01,0x00,0x00,0x40,0x89
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x31,0xc5,0x14,0x00,0x00,0x31,0xc5,0x14
	.byte 0x00,0x00,0x31,0xc5,0x14,0x00,0x00,0x31
	.byte 0xc5,0x00,0x08,0x00,0x00,0x40,0x68,0x12
	.byte 0x00,0x00,0x31,0xc5,0x08,0x00,0x00,0x40
	.byte 0x8e,0x13,0x01,0x01,0x00,0x00,0x40,0xaa
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x40,0x93,0x00,0x08,0x00,0x00,0x40,0x98
	.byte 0x13,0x01,0x01,0x00,0x00,0x40,0xd0,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x31
	.byte 0xc5,0x14,0x00,0x00,0x31,0xc5,0x14,0x00
	.byte 0x00,0x31,0xc5,0x14,0x00,0x00,0x31,0xc5
	.byte 0x00,0x08,0x00,0x00,0x40,0xaf,0x13,0x01
	.byte 0x01,0x00,0x00,0x40,0xec,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x02,0x1c,0x00,0x08,0x00,0x00
	.byte 0x40,0xd5,0x12,0x00,0x00,0x31,0xe9,0x08
	.byte 0x00,0x00,0x40,0xf1,0x13,0x01,0x01,0x00
	.byte 0x00,0x41,0x1c,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x40,0xf6,0x00,0x08,0x00,0x00
	.byte 0x40,0xfb,0x08,0x00,0x00,0x3d,0x90,0x13
	.byte 0x01,0x01,0x00,0x00,0x41,0x42,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x02,0x1c,0x14,0x00,0x00
	.byte 0x41,0x21,0x00,0x08,0x00,0x00,0x41,0x26
	.byte 0x13,0x01,0x01,0x00,0x00,0x41,0x63,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x41,0x21,0x00,0x08,0x00,0x00,0x41
	.byte 0x47,0x13,0x01,0x01,0x00,0x00,0x41,0x8e
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x02,0x1c,0x00,0x08
	.byte 0x00,0x00,0x41,0x68,0x13,0x01,0x01,0x00
	.byte 0x00,0x41,0xc3,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x02,0x1c,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x01,0xaf,0x00,0x08,0x00,0x00,0x41
	.byte 0x93,0x13,0x01,0x01,0x00,0x00,0x41,0xfd
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x00,0x08,0x00
	.byte 0x00,0x41,0xc8,0x13,0x01,0x01,0x00,0x00
	.byte 0x42,0x2d,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x00,0x08,0x00
	.byte 0x00,0x42,0x02,0x13,0x01,0x01,0x00,0x00
	.byte 0x42,0x67,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x00
	.byte 0x08,0x00,0x00,0x42,0x32,0x13,0x01,0x01
	.byte 0x00,0x00,0x42,0xa6,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x01,0xaf,0x00,0x08
	.byte 0x00,0x00,0x42,0x6c,0x13,0x01,0x01,0x00
	.byte 0x00,0x42,0xbd,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x02,0x1c,0x00,0x08,0x00
	.byte 0x00,0x42,0xab,0x13,0x01,0x01,0x00,0x00
	.byte 0x42,0xd9,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x01,0xd3,0x14,0x00,0x00,0x01
	.byte 0xaf,0x00,0x08,0x00,0x00,0x42,0xc2,0x12
	.byte 0x00,0x00,0x01,0xd3,0x08,0x00,0x00,0x42
	.byte 0xde,0x13,0x01,0x01,0x00,0x00,0x42,0xff
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x42,0xe3,0x00
	.byte 0x08,0x00,0x00,0x42,0xe8,0x13,0x01,0x01
	.byte 0x00,0x00,0x43,0x16,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x00,0x08
	.byte 0x00,0x00,0x43,0x04,0x13,0x01,0x01,0x00
	.byte 0x00,0x43,0x2d,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x31,0xc5,0x00,0x08,0x00
	.byte 0x00,0x43,0x1b,0x13,0x01,0x01,0x00,0x00
	.byte 0x43,0x49,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x3f,0x6a,0x14,0x00,0x00,0x3f
	.byte 0x6a,0x00,0x08,0x00,0x00,0x43,0x32,0x13
	.byte 0x01,0x01,0x00,0x00,0x43,0x60,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x00,0x08,0x00,0x00,0x43,0x4e,0x13,0x01
	.byte 0x01,0x00,0x00,0x43,0x77,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x00
	.byte 0x08,0x00,0x00,0x43,0x65,0x13,0x01,0x01
	.byte 0x00,0x00,0x43,0x98,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x01,0xaf
	.byte 0x00,0x08,0x00,0x00,0x43,0x7c,0x13,0x01
	.byte 0x01,0x00,0x00,0x43,0xaf,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x00
	.byte 0x08,0x00,0x00,0x43,0x9d,0x12,0x00,0x00
	.byte 0x31,0xe9,0x08,0x00,0x00,0x43,0xb4,0x13
	.byte 0x01,0x01,0x00,0x00,0x43,0xdf,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x43,0xb9,0x00
	.byte 0x08,0x00,0x00,0x43,0xbe,0x12,0x00,0x00
	.byte 0x31,0xe9,0x08,0x00,0x00,0x43,0xe4,0x13
	.byte 0x01,0x01,0x00,0x00,0x44,0x14,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x43,0xe9,0x00,0x08,0x00,0x00
	.byte 0x43,0xee,0x13,0x01,0x01,0x00,0x00,0x44
	.byte 0x2b,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x31,0xc5,0x00,0x08,0x00,0x00,0x44
	.byte 0x19,0x12,0x00,0x00,0x31,0xc5,0x08,0x00
	.byte 0x00,0x44,0x30,0x13,0x01,0x01,0x00,0x00
	.byte 0x44,0x51,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x44
	.byte 0x35,0x00,0x08,0x00,0x00,0x44,0x3a,0x13
	.byte 0x01,0x01,0x00,0x00,0x44,0x68,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x00,0x08,0x00,0x00,0x44,0x56,0x13,0x01
	.byte 0x01,0x00,0x00,0x44,0x7f,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x00
	.byte 0x08,0x00,0x00,0x44,0x6d,0x13,0x01,0x01
	.byte 0x00,0x00,0x44,0x91,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x00,0x08,0x00,0x00,0x44,0x84,0x13
	.byte 0x01,0x01,0x00,0x00,0x44,0xa3,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x00,0x08,0x00,0x00,0x44
	.byte 0x96,0x13,0x01,0x01,0x00,0x00,0x44,0xba
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xec,0x00,0x08,0x00,0x00,0x44,0xa8
	.byte 0x13,0x01,0x01,0x00,0x00,0x44,0xd6,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x01
	.byte 0xec,0x14,0x00,0x00,0x01,0xec,0x00,0x08
	.byte 0x00,0x00,0x44,0xbf,0x13,0x01,0x01,0x00
	.byte 0x00,0x44,0xf7,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x02,0x1c,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x00
	.byte 0x08,0x00,0x00,0x44,0xdb,0x13,0x01,0x01
	.byte 0x00,0x00,0x45,0x22,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xaf,0x00,0x08,0x00,0x00,0x44,0xfc
	.byte 0x13,0x01,0x01,0x00,0x00,0x45,0x39,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x01
	.byte 0xaf,0x00,0x08,0x00,0x00,0x45,0x27,0x13
	.byte 0x01,0x01,0x00,0x00,0x45,0x55,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x00,0x08,0x00
	.byte 0x00,0x45,0x3e,0x08,0x00,0x00,0x01,0xec
	.byte 0x13,0x01,0x01,0x00,0x00,0x45,0x7b,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x45,0x5a,0x00,0x08,0x00,0x00,0x45
	.byte 0x5f,0x13,0x01,0x01,0x00,0x00,0x45,0x8d
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x00,0x08,0x00
	.byte 0x00,0x45,0x80,0x13,0x01,0x01,0x00,0x00
	.byte 0x45,0x9f,0x14,0x00,0x00,0x3c,0xc8,0x00
	.byte 0x08,0x00,0x00,0x45,0x92,0x12,0x00,0x00
	.byte 0x01,0xec,0x08,0x00,0x00,0x45,0xa4,0x13
	.byte 0x01,0x01,0x00,0x00,0x45,0xc5,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x45,0xa9,0x00,0x08,0x00
	.byte 0x00,0x45,0xae,0x13,0x01,0x01,0x00,0x00
	.byte 0x45,0xdc,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x02,0x1c,0x00,0x08,0x00,0x00
	.byte 0x45,0xca,0x13,0x01,0x01,0x00,0x00,0x46
	.byte 0x0c,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x3f,0x6a,0x14,0x00,0x00,0x3f,0x6a
	.byte 0x14,0x00,0x00,0x3f,0x6a,0x14,0x00,0x00
	.byte 0x3f,0x6a,0x14,0x00,0x00,0x3f,0x6a,0x14
	.byte 0x00,0x00,0x3f,0x6a,0x00,0x08,0x00,0x00
	.byte 0x45,0xe1,0x15,0x01,0x00,0x00,0x01,0xd3
	.byte 0x01,0x00,0x00,0x46,0x27,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x01,0xaf,0x00
	.byte 0x08,0x00,0x00,0x46,0x11,0x08,0x00,0x00
	.byte 0x01,0xd3,0x13,0x01,0x01,0x00,0x00,0x46
	.byte 0x48,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x46,0x2c
	.byte 0x00,0x08,0x00,0x00,0x46,0x31,0x13,0x01
	.byte 0x01,0x00,0x00,0x46,0x64,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x34,0xf9,0x00,0x08,0x00,0x00
	.byte 0x46,0x4d,0x08,0x00,0x00,0x3f,0x6a,0x13
	.byte 0x01,0x01,0x00,0x00,0x46,0x85,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x46,0x69,0x00,0x08,0x00
	.byte 0x00,0x46,0x6e,0x13,0x01,0x01,0x00,0x00
	.byte 0x46,0xab,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x31,0xf1,0x00,0x08,0x00,0x00,0x46
	.byte 0x8a,0x08,0x00,0x00,0x01,0xaf,0x13,0x01
	.byte 0x01,0x00,0x00,0x46,0xd1,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x46
	.byte 0xb0,0x00,0x08,0x00,0x00,0x46,0xb5,0x13
	.byte 0x01,0x01,0x00,0x00,0x46,0xed,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x46,0x69,0x00,0x08,0x00
	.byte 0x00,0x46,0xd6,0x15,0x01,0x00,0x00,0x02
	.byte 0x1c,0x01,0x00,0x00,0x47,0x03,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x00,0x08,0x00,0x00,0x46
	.byte 0xf2,0x13,0x01,0x01,0x00,0x00,0x47,0x1f
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x45,0x5a,0x00
	.byte 0x08,0x00,0x00,0x47,0x08,0x13,0x01,0x01
	.byte 0x00,0x00,0x47,0x3b,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x46,0xb0,0x00,0x08,0x00,0x00,0x47
	.byte 0x24,0x12,0x00,0x00,0x31,0xc5,0x08,0x00
	.byte 0x00,0x47,0x40,0x15,0x01,0x00,0x00,0x47
	.byte 0x45,0x01,0x00,0x00,0x47,0x60,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x00,0x08,0x00,0x00,0x47,0x4a,0x13,0x01
	.byte 0x01,0x00,0x00,0x47,0x81,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x45
	.byte 0x5a,0x00,0x08,0x00,0x00,0x47,0x65,0x13
	.byte 0x01,0x01,0x00,0x00,0x47,0xa2,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x02,0x1c,0x14,0x00,0x00
	.byte 0x46,0xb0,0x00,0x08,0x00,0x00,0x47,0x86
	.byte 0x13,0x01,0x01,0x00,0x00,0x47,0xc3,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x46,0x69,0x00,0x08,0x00,0x00,0x47
	.byte 0xa7,0x13,0x01,0x01,0x00,0x00,0x47,0xe4
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x45,0x5a,0x00,0x08,0x00,0x00
	.byte 0x47,0xc8,0x13,0x01,0x01,0x00,0x00,0x48
	.byte 0x05,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x46,0xb0,0x00,0x08,0x00
	.byte 0x00,0x47,0xe9,0x13,0x01,0x01,0x00,0x00
	.byte 0x48,0x26,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x45,0x5a,0x00,0x08
	.byte 0x00,0x00,0x48,0x0a,0x13,0x01,0x01,0x00
	.byte 0x00,0x48,0x47,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x02,0x1c,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x46,0xb0,0x00
	.byte 0x08,0x00,0x00,0x48,0x2b,0x13,0x01,0x01
	.byte 0x00,0x00,0x48,0x63,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x45,0x5a,0x00,0x08,0x00,0x00,0x48
	.byte 0x4c,0x13,0x01,0x01,0x00,0x00,0x48,0x7f
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x46,0x2c,0x00
	.byte 0x08,0x00,0x00,0x48,0x68,0x05
	.ascii "unsigned short\0"
	.byte 0x07,0x02,0x08,0x00,0x00,0x48,0x84,0x13
	.byte 0x01,0x01,0x00,0x00,0x48,0xb2,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x48,0x96,0x00,0x08,0x00
	.byte 0x00,0x48,0x9b,0x08,0x00,0x00,0x31,0xf1
	.byte 0x13,0x01,0x01,0x00,0x00,0x48,0xd3,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x48,0xb7,0x00,0x08
	.byte 0x00,0x00,0x48,0xbc,0x13,0x01,0x01,0x00
	.byte 0x00,0x48,0xea,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x34,0xf9,0x00,0x08,0x00
	.byte 0x00,0x48,0xd8,0x12,0x00,0x00,0x01,0xd3
	.byte 0x08,0x00,0x00,0x48,0xef,0x12,0x00,0x00
	.byte 0x01,0xec,0x08,0x00,0x00,0x48,0xf9,0x13
	.byte 0x01,0x01,0x00,0x00,0x49,0x1f,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x48,0xf4,0x14,0x00,0x00
	.byte 0x48,0xfe,0x00,0x08,0x00,0x00,0x49,0x03
	.byte 0x13,0x01,0x01,0x00,0x00,0x49,0x40,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x45,0x5a,0x00,0x08,0x00,0x00,0x49
	.byte 0x24,0x13,0x01,0x01,0x00,0x00,0x49,0x61
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x46,0xb0,0x00,0x08,0x00,0x00
	.byte 0x49,0x45,0x13,0x01,0x01,0x00,0x00,0x49
	.byte 0x82,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x46,0x69,0x00,0x08,0x00
	.byte 0x00,0x49,0x66,0x13,0x01,0x01,0x00,0x00
	.byte 0x49,0xa3,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x45,0x5a,0x00,0x08
	.byte 0x00,0x00,0x49,0x87,0x13,0x01,0x01,0x00
	.byte 0x00,0x49,0xc4,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x02,0x1c,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x46,0xb0,0x00
	.byte 0x08,0x00,0x00,0x49,0xa8,0x13,0x01,0x01
	.byte 0x00,0x00,0x49,0xef,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x02,0x1c,0x14,0x00,0x00
	.byte 0x31,0xf1,0x00,0x08,0x00,0x00,0x49,0xc9
	.byte 0x13,0x01,0x01,0x00,0x00,0x4a,0x15,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x45,0x5a
	.byte 0x00,0x08,0x00,0x00,0x49,0xf4,0x13,0x01
	.byte 0x01,0x00,0x00,0x4a,0x3b,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x46,0xb0,0x00,0x08
	.byte 0x00,0x00,0x4a,0x1a,0x13,0x01,0x01,0x00
	.byte 0x00,0x4a,0x5c,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x02,0x1c,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x45,0x5a,0x00
	.byte 0x08,0x00,0x00,0x4a,0x40,0x13,0x01,0x01
	.byte 0x00,0x00,0x4a,0x7d,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x46,0xb0
	.byte 0x00,0x08,0x00,0x00,0x4a,0x61,0x13,0x01
	.byte 0x01,0x00,0x00,0x4a,0x99,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x02,0x1c,0x00,0x08,0x00,0x00
	.byte 0x4a,0x82,0x13,0x01,0x01,0x00,0x00,0x4a
	.byte 0xb0,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x01,0xd3,0x00,0x08,0x00,0x00,0x4a
	.byte 0x9e,0x13,0x01,0x01,0x00,0x00,0x4a,0xc7
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xec,0x00,0x08,0x00,0x00,0x4a,0xb5
	.byte 0x13,0x01,0x01,0x00,0x00,0x4a,0xde,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x01
	.byte 0xaf,0x00,0x08,0x00,0x00,0x4a,0xcc,0x12
	.byte 0x00,0x00,0x31,0xe9,0x08,0x00,0x00,0x4a
	.byte 0xe3,0x13,0x01,0x01,0x00,0x00,0x4b,0x09
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x4a,0xe8,0x00,0x08,0x00,0x00
	.byte 0x4a,0xed,0x13,0x01,0x01,0x00,0x00,0x4b
	.byte 0x1b,0x14,0x00,0x00,0x3c,0xc8,0x00,0x08
	.byte 0x00,0x00,0x4b,0x0e,0x12,0x00,0x00,0x31
	.byte 0xe9,0x08,0x00,0x00,0x4b,0x20,0x13,0x01
	.byte 0x01,0x00,0x00,0x4b,0x46,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x4b
	.byte 0x25,0x00,0x08,0x00,0x00,0x4b,0x2a,0x15
	.byte 0x01,0x00,0x00,0x31,0xc5,0x01,0x00,0x00
	.byte 0x4b,0x61,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x02,0x1c,0x00,0x08,0x00,0x00
	.byte 0x4b,0x4b,0x15,0x01,0x00,0x00,0x31,0xc5
	.byte 0x01,0x00,0x00,0x4b,0x7c,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x01,0xd3,0x00
	.byte 0x08,0x00,0x00,0x4b,0x66,0x15,0x01,0x00
	.byte 0x00,0x31,0xc5,0x01,0x00,0x00,0x4b,0x97
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x00,0x08,0x00,0x00,0x4b,0x81
	.byte 0x12,0x00,0x00,0x01,0xec,0x08,0x00,0x00
	.byte 0x4b,0x9c,0x13,0x01,0x01,0x00,0x00,0x4b
	.byte 0xbd,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x4b,0xa1
	.byte 0x00,0x08,0x00,0x00,0x4b,0xa6,0x12,0x00
	.byte 0x00,0x01,0xec,0x08,0x00,0x00,0x4b,0xc2
	.byte 0x13,0x01,0x01,0x00,0x00,0x4b,0xed,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x4b,0xc7,0x14,0x00,0x00,0x01,0xaf
	.byte 0x00,0x08,0x00,0x00,0x4b,0xcc,0x13,0x01
	.byte 0x01,0x00,0x00,0x4c,0x09,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x48,0x84,0x00,0x08,0x00,0x00
	.byte 0x4b,0xf2,0x13,0x01,0x01,0x00,0x00,0x4c
	.byte 0x20,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x01,0xec,0x00,0x08,0x00,0x00,0x4c
	.byte 0x0e,0x13,0x01,0x01,0x00,0x00,0x4c,0x37
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x00,0x08,0x00,0x00,0x4c,0x25
	.byte 0x13,0x01,0x01,0x00,0x00,0x4c,0x49,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x00,0x08,0x00,0x00
	.byte 0x4c,0x3c,0x12,0x00,0x00,0x01,0xec,0x08
	.byte 0x00,0x00,0x4c,0x4e,0x13,0x01,0x01,0x00
	.byte 0x00,0x4c,0x6a,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x4c,0x53,0x00,0x08,0x00
	.byte 0x00,0x4c,0x58,0x13,0x01,0x01,0x00,0x00
	.byte 0x4c,0x81,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x01,0xd3,0x00,0x08,0x00,0x00
	.byte 0x4c,0x6f,0x13,0x01,0x01,0x00,0x00,0x4c
	.byte 0x98,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x02,0x1c,0x00,0x08,0x00,0x00,0x4c
	.byte 0x86,0x12,0x00,0x00,0x01,0xec,0x08,0x00
	.byte 0x00,0x4c,0x9d,0x13,0x01,0x01,0x00,0x00
	.byte 0x4c,0xd7,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x01
	.byte 0xec,0x14,0x00,0x00,0x01,0xec,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x4c,0xa2,0x14,0x00,0x00
	.byte 0x31,0xc5,0x00,0x08,0x00,0x00,0x4c,0xa7
	.byte 0x12,0x00,0x00,0x01,0xec,0x08,0x00,0x00
	.byte 0x4c,0xdc,0x13,0x01,0x01,0x00,0x00,0x4d
	.byte 0x2a,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x01,0xec
	.byte 0x14,0x00,0x00,0x01,0xec,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xec,0x14,0x00,0x00,0x01
	.byte 0xec,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x4c,0xe1
	.byte 0x14,0x00,0x00,0x31,0xc5,0x00,0x08,0x00
	.byte 0x00,0x4c,0xe6,0x13,0x01,0x01,0x00,0x00
	.byte 0x4d,0x4b,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x01
	.byte 0xec,0x14,0x00,0x00,0x01,0xec,0x00,0x08
	.byte 0x00,0x00,0x4d,0x2f,0x13,0x01,0x01,0x00
	.byte 0x00,0x4d,0x7b,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xec,0x14,0x00,0x00,0x01,0xec,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x01
	.byte 0xec,0x14,0x00,0x00,0x01,0xec,0x00,0x08
	.byte 0x00,0x00,0x4d,0x50,0x12,0x00,0x00,0x01
	.byte 0xec,0x08,0x00,0x00,0x4d,0x80,0x13,0x01
	.byte 0x01,0x00,0x00,0x4d,0xa6,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x4d
	.byte 0x85,0x00,0x08,0x00,0x00,0x4d,0x8a,0x13
	.byte 0x01,0x01,0x00,0x00,0x4d,0xbd,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x00,0x08,0x00,0x00,0x4d,0xab,0x12,0x00
	.byte 0x00,0x01,0xec,0x08,0x00,0x00,0x4d,0xc2
	.byte 0x13,0x01,0x01,0x00,0x00,0x4d,0xde,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x4d
	.byte 0xc7,0x00,0x08,0x00,0x00,0x4d,0xcc,0x13
	.byte 0x01,0x01,0x00,0x00,0x4d,0xfa,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xd3
	.byte 0x14,0x00,0x00,0x02,0x1c,0x00,0x08,0x00
	.byte 0x00,0x4d,0xe3,0x13,0x01,0x01,0x00,0x00
	.byte 0x4e,0x1b,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x01,0xec,0x14,0x00,0x00,0x01
	.byte 0xec,0x14,0x00,0x00,0x01,0xec,0x00,0x08
	.byte 0x00,0x00,0x4d,0xff,0x12,0x00,0x00,0x01
	.byte 0xec,0x08,0x00,0x00,0x4e,0x20,0x13,0x01
	.byte 0x01,0x00,0x00,0x4e,0x3c,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x4e,0x25,0x00
	.byte 0x08,0x00,0x00,0x4e,0x2a,0x12,0x00,0x00
	.byte 0x31,0xe9,0x08,0x00,0x00,0x4e,0x41,0x13
	.byte 0x01,0x01,0x00,0x00,0x4e,0x67,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x4e,0x46,0x00,0x08,0x00,0x00,0x4e,0x4b
	.byte 0x13,0x01,0x01,0x00,0x00,0x4e,0x97,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x3f
	.byte 0x6a,0x14,0x00,0x00,0x3f,0x6a,0x14,0x00
	.byte 0x00,0x3f,0x6a,0x14,0x00,0x00,0x3f,0x6a
	.byte 0x14,0x00,0x00,0x3f,0x6a,0x14,0x00,0x00
	.byte 0x3f,0x6a,0x00,0x08,0x00,0x00,0x4e,0x6c
	.byte 0x13,0x01,0x01,0x00,0x00,0x4e,0xae,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x01
	.byte 0xec,0x00,0x08,0x00,0x00,0x4e,0x9c,0x12
	.byte 0x00,0x00,0x01,0xec,0x08,0x00,0x00,0x4e
	.byte 0xb3,0x13,0x01,0x01,0x00,0x00,0x4e,0xd9
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x4e,0xb8,0x00,0x08,0x00,0x00
	.byte 0x4e,0xbd,0x13,0x01,0x01,0x00,0x00,0x4e
	.byte 0xf5,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x01,0xaf
	.byte 0x00,0x08,0x00,0x00,0x4e,0xde,0x13,0x01
	.byte 0x01,0x00,0x00,0x4f,0x11,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x01,0xec,0x00,0x08,0x00,0x00
	.byte 0x4e,0xfa,0x13,0x01,0x01,0x00,0x00,0x4f
	.byte 0x2d,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x01,0xec,0x14,0x00,0x00,0x01,0xec
	.byte 0x00,0x08,0x00,0x00,0x4f,0x16,0x12,0x00
	.byte 0x00,0x01,0xec,0x08,0x00,0x00,0x4f,0x32
	.byte 0x13,0x01,0x01,0x00,0x00,0x4f,0x53,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x4f,0x37,0x00,0x08
	.byte 0x00,0x00,0x4f,0x3c,0x13,0x01,0x01,0x00
	.byte 0x00,0x4f,0x6a,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x01,0xec,0x00,0x08,0x00
	.byte 0x00,0x4f,0x58,0x13,0x01,0x01
	.byte 0x00,0x00,0x4f,0x86,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x02,0x1c,0x00,0x08,0x00,0x00,0x4f
	.byte 0x6f,0x13,0x01,0x01,0x00,0x00,0x4f,0xa2
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xec,0x14,0x00,0x00,0x01,0xec,0x00
	.byte 0x08,0x00,0x00,0x4f,0x8b,0x12,0x00,0x00
	.byte 0x31,0xc5,0x08,0x00,0x00,0x4f,0xa7,0x13
	.byte 0x01,0x01,0x00,0x00,0x4f,0xc3,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x4f,0xac
	.byte 0x00,0x08,0x00,0x00,0x4f,0xb1,0x13,0x01
	.byte 0x01,0x00,0x00,0x4f,0xd5,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x00,0x08,0x00,0x00,0x4f,0xc8
	.byte 0x13,0x01,0x01,0x00,0x00,0x4f,0xe7,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x00,0x08,0x00,0x00
	.byte 0x4f,0xda,0x13,0x01,0x01,0x00,0x00,0x4f
	.byte 0xf9,0x14,0x00,0x00,0x3c,0xc8,0x00,0x08
	.byte 0x00,0x00,0x4f,0xec,0x13,0x01,0x01,0x00
	.byte 0x00,0x50,0x0b,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x00,0x08,0x00,0x00,0x4f,0xfe,0x13,0x01
	.byte 0x01,0x00,0x00,0x50,0x22,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x01,0xd3,0x00
	.byte 0x08,0x00,0x00,0x50,0x10,0x13,0x01,0x01
	.byte 0x00,0x00,0x50,0x39,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x01,0xd3,0x00,0x08
	.byte 0x00,0x00,0x50,0x27,0x13,0x01,0x01,0x00
	.byte 0x00,0x50,0x4b,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x00,0x08,0x00,0x00,0x50,0x3e,0x13,0x01
	.byte 0x01,0x00,0x00,0x50,0x62,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x01,0xd3,0x00
	.byte 0x08,0x00,0x00,0x50,0x50,0x13,0x01,0x01
	.byte 0x00,0x00,0x50,0x88,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x01,0xec,0x14,0x00
	.byte 0x00,0x01,0xec,0x14,0x00,0x00,0x01,0xec
	.byte 0x14,0x00,0x00,0x01,0xec,0x00,0x08,0x00
	.byte 0x00,0x50,0x67,0x13,0x01,0x01,0x00,0x00
	.byte 0x50,0x9f,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x02,0x1c,0x00,0x08,0x00,0x00
	.byte 0x50,0x8d,0x13,0x01,0x01,0x00,0x00,0x50
	.byte 0xd4,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x31
	.byte 0xf1,0x00,0x08,0x00,0x00,0x50,0xa4,0x13
	.byte 0x01,0x01,0x00,0x00,0x50,0xfa,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xec
	.byte 0x14,0x00,0x00,0x01,0xec,0x14,0x00,0x00
	.byte 0x01,0xec,0x14,0x00,0x00,0x01,0xec,0x00
	.byte 0x08,0x00,0x00,0x50,0xd9,0x15,0x01,0x00
	.byte 0x00,0x01,0xaf,0x01,0x00,0x00,0x51,0x15
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x02,0x1c,0x00,0x08,0x00,0x00,0x50,0xff
	.byte 0x13,0x01,0x01,0x00,0x00,0x51,0x3b,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x01
	.byte 0xec,0x14,0x00,0x00,0x01,0xec,0x14,0x00
	.byte 0x00,0x01,0xec,0x14,0x00,0x00,0x01,0xec
	.byte 0x00,0x08,0x00,0x00,0x51,0x1a,0x13,0x01
	.byte 0x01,0x00,0x00,0x51,0x5c,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x01,0xec,0x14
	.byte 0x00,0x00,0x01,0xec,0x14,0x00,0x00,0x01
	.byte 0xec,0x00,0x08,0x00,0x00,0x51,0x40,0x13
	.byte 0x01,0x01,0x00,0x00,0x51,0x82,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x00
	.byte 0x08,0x00,0x00,0x51,0x61,0x13,0x01,0x01
	.byte 0x00,0x00,0x51,0x9e,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x46,0x2c,0x00,0x08,0x00,0x00,0x51
	.byte 0x87,0x13,0x01,0x01,0x00,0x00,0x51,0xb5
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x02,0x1c,0x00,0x08,0x00,0x00,0x51,0xa3
	.byte 0x13,0x01,0x01,0x00,0x00,0x51,0xd6,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x01,0xd3,0x00,0x08,0x00,0x00,0x51
	.byte 0xba,0x13,0x01,0x01,0x00,0x00,0x51,0xed
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x00,0x08,0x00,0x00,0x51,0xdb
	.byte 0x13,0x01,0x01,0x00,0x00,0x52,0x0e,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x02,0x1c,0x00,0x08,0x00,0x00,0x51
	.byte 0xf2,0x13,0x01,0x01,0x00,0x00,0x52,0x2a
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xec,0x14,0x00,0x00,0x01,0xec,0x00
	.byte 0x08,0x00,0x00,0x52,0x13,0x13,0x01,0x01
	.byte 0x00,0x00,0x52,0x50,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x01,0xec,0x14,0x00
	.byte 0x00,0x01,0xec,0x14,0x00,0x00,0x01,0xec
	.byte 0x14,0x00,0x00,0x01,0xec,0x00,0x08,0x00
	.byte 0x00,0x52,0x2f,0x12,0x00,0x00,0x31,0xe9
	.byte 0x08,0x00,0x00,0x52,0x55,0x13,0x01,0x01
	.byte 0x00,0x00,0x52,0x80,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x52,0x5a,0x00,0x08,0x00
	.byte 0x00,0x52,0x5f,0x12,0x00,0x00,0x01,0xec
	.byte 0x08,0x00,0x00,0x52,0x85,0x13,0x01,0x01
	.byte 0x00,0x00,0x52,0xab,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x52,0x8a
	.byte 0x00,0x08,0x00,0x00,0x52,0x8f,0x12,0x00
	.byte 0x00,0x01,0xec,0x08,0x00,0x00,0x52,0xb0
	.byte 0x13,0x01,0x01,0x00,0x00,0x52,0xd6,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x52,0xb5,0x00,0x08,0x00,0x00,0x52
	.byte 0xba,0x13,0x01,0x01,0x00,0x00,0x53,0x10
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x41,0x21,0x00,0x08,0x00
	.byte 0x00,0x52,0xdb,0x13,0x01,0x01,0x00,0x00
	.byte 0x53,0x4f,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x41,0x21,0x00,0x08,0x00,0x00
	.byte 0x53,0x15,0x13,0x01,0x01,0x00,0x00,0x53
	.byte 0x84,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x41
	.byte 0x21,0x00,0x08,0x00,0x00,0x53,0x54,0x13
	.byte 0x01,0x01,0x00,0x00,0x53,0xc3,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x41,0x21
	.byte 0x00,0x08,0x00,0x00,0x53,0x89,0x13,0x01
	.byte 0x01,0x00,0x00,0x54,0x07,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x41,0x21,0x00,0x08,0x00,0x00
	.byte 0x53,0xc8,0x13,0x01,0x01,0x00,0x00,0x54
	.byte 0x50,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x41,0x21,0x00,0x08,0x00
	.byte 0x00,0x54,0x0c,0x12,0x00,0x00,0x01,0xec
	.byte 0x08,0x00,0x00,0x54,0x55,0x13,0x01,0x01
	.byte 0x00,0x00,0x54,0x7b,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x54,0x5a
	.byte 0x00,0x08,0x00,0x00,0x54,0x5f,0x13,0x01
	.byte 0x01,0x00,0x00,0x54,0x9c,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x01,0xec,0x14
	.byte 0x00,0x00,0x01,0xec,0x14,0x00,0x00,0x01
	.byte 0xec,0x00,0x08,0x00,0x00,0x54,0x80,0x13
	.byte 0x01,0x01,0x00,0x00,0x54,0xb8,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xec
	.byte 0x14,0x00,0x00,0x01,0xec,0x00,0x08,0x00
	.byte 0x00,0x54,0xa1,0x13,0x01,0x01,0x00,0x00
	.byte 0x54,0xd9,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x01,0xec,0x14,0x00,0x00,0x01
	.byte 0xec,0x14,0x00,0x00,0x01,0xec,0x00,0x08
	.byte 0x00,0x00,0x54,0xbd,0x13,0x01,0x01,0x00
	.byte 0x00,0x54,0xff,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x01,0xec,0x14,0x00,0x00
	.byte 0x01,0xec,0x14,0x00,0x00,0x01,0xec,0x14
	.byte 0x00,0x00,0x01,0xec,0x00,0x08,0x00,0x00
	.byte 0x54,0xde,0x12,0x00,0x00,0x01,0xec,0x08
	.byte 0x00,0x00,0x55,0x04,0x13,0x01,0x01,0x00
	.byte 0x00,0x55,0x20,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x55,0x09,0x00,0x08,0x00
	.byte 0x00,0x55,0x0e,0x12,0x00,0x00,0x31,0xe9
	.byte 0x08,0x00,0x00,0x55,0x25,0x13,0x01,0x01
	.byte 0x00,0x00,0x55,0x50,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x55,0x2a,0x00,0x08,0x00
	.byte 0x00,0x55,0x2f,0x13,0x01,0x01,0x00,0x00
	.byte 0x55,0x76,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x01,0xaf,0x00,0x08,0x00,0x00,0x55
	.byte 0x55,0x13,0x01,0x01,0x00,0x00,0x55,0x9c
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xec,0x14,0x00,0x00,0x01,0xec,0x14
	.byte 0x00,0x00,0x01,0xec,0x14,0x00,0x00,0x01
	.byte 0xec,0x00,0x08,0x00,0x00,0x55,0x7b,0x13
	.byte 0x01,0x01,0x00,0x00,0x55,0xae,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x00,0x08,0x00,0x00,0x55
	.byte 0xa1,0x11
	.ascii "gl_api_table\0"
	.byte 0x02,0xdc,0x02,0x00,0x00,0x64,0x57,0x0e
	.ascii "Accum\0"
	.byte 0x00,0x00,0x3c,0xe4,0x02,0x23,0x00,0x0e
	.ascii "AlphaFunc\0"
	.byte 0x00,0x00,0x3d,0x00,0x02,0x23,0x04,0x0e
	.ascii "AreTexturesResident\0"
	.byte 0x00,0x00,0x3d,0x2f,0x02,0x23,0x08,0x0e
	.ascii "ArrayElement\0"
	.byte 0x00,0x00,0x3d,0x46,0x02,0x23,0x0c,0x0e
	.ascii "Begin\0"
	.byte 0x00,0x00,0x3d,0x5d,0x02,0x23,0x10,0x0e
	.ascii "BindTexture\0"
	.byte 0x00,0x00,0x3d,0x79,0x02,0x23,0x14,0x0e
	.ascii "Bitmap\0"
	.byte 0x00,0x00,0x3e,0x67,0x02,0x23,0x18,0x0e
	.ascii "BlendColor\0"
	.byte 0x00,0x00,0x3e,0x8d,0x02,0x23,0x1c,0x0e
	.ascii "BlendEquation\0"
	.byte 0x00,0x00,0x3e,0xa4,0x02,0x23,0x20,0x0e
	.ascii "BlendFunc\0"
	.byte 0x00,0x00,0x3e,0xc0,0x02,0x23,0x24,0x0e
	.ascii "CallList\0"
	.byte 0x00,0x00,0x3e,0xd7,0x02,0x23,0x28,0x0e
	.ascii "CallLists\0"
	.byte 0x00,0x00,0x3f,0x02,0x02,0x23,0x2c,0x0e
	.ascii "Clear\0"
	.byte 0x00,0x00,0x3f,0x19,0x02,0x23,0x30,0x0e
	.ascii "ClearAccum\0"
	.byte 0x00,0x00,0x3f,0x3f,0x02,0x23,0x34,0x0e
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x3f,0x65,0x02,0x23,0x38,0x0e
	.ascii "ClearDepth\0"
	.byte 0x00,0x00,0x3f,0x86,0x02,0x23,0x3c,0x0e
	.ascii "ClearIndex\0"
	.byte 0x00,0x00,0x3f,0x9d,0x02,0x23,0x40,0x0e
	.ascii "ClearStencil\0"
	.byte 0x00,0x00,0x3f,0xb4,0x02,0x23,0x44,0x0e
	.ascii "ClipPlane\0"
	.byte 0x00,0x00,0x3f,0xda,0x02,0x23,0x48,0x0e
	.ascii "Color3f\0"
	.byte 0x00,0x00,0x3f,0xfb,0x02,0x23,0x4c,0x0e
	.ascii "Color3fv\0"
	.byte 0x00,0x00,0x40,0x1c,0x02,0x23,0x50,0x0e
	.ascii "Color4f\0"
	.byte 0x00,0x00,0x40,0x42,0x02,0x23,0x54,0x0e
	.ascii "Color4fv\0"
	.byte 0x00,0x00,0x40,0x63,0x02,0x23,0x58,0x0e
	.ascii "Color4ub\0"
	.byte 0x00,0x00,0x40,0x89,0x02,0x23,0x5c,0x0e
	.ascii "Color4ubv\0"
	.byte 0x00,0x00,0x40,0xaa,0x02,0x23,0x60,0x0e
	.ascii "ColorMask\0"
	.byte 0x00,0x00,0x40,0xd0,0x02,0x23,0x64,0x0e
	.ascii "ColorMaterial\0"
	.byte 0x00,0x00,0x40,0xec,0x02,0x23,0x68,0x0e
	.ascii "ColorPointer\0"
	.byte 0x00,0x00,0x41,0x1c,0x02,0x23,0x6c,0x0e
	.ascii "ColorTable\0"
	.byte 0x00,0x00,0x41,0x42,0x02,0x23,0x70,0x0e
	.ascii "ColorSubTable\0"
	.byte 0x00,0x00,0x41,0x63,0x02,0x23,0x74,0x0e
	.ascii "CopyPixels\0"
	.byte 0x00,0x00,0x41,0x8e,0x02,0x23,0x78,0x0e
	.ascii "CopyTexImage1D\0"
	.byte 0x00,0x00,0x41,0xc3,0x02,0x23,0x7c,0x0e
	.ascii "CopyTexImage2D\0"
	.byte 0x00,0x00,0x41,0xfd,0x03,0x23,0x80,0x01
	.byte 0x0e
	.ascii "CopyTexSubImage1D\0"
	.byte 0x00,0x00,0x42,0x2d,0x03,0x23,0x84,0x01
	.byte 0x0e
	.ascii "CopyTexSubImage2D\0"
	.byte 0x00,0x00,0x42,0x67,0x03,0x23,0x88,0x01
	.byte 0x0e
	.ascii "CopyTexSubImage3DEXT\0"
	.byte 0x00,0x00,0x42,0xa6,0x03,0x23,0x8c,0x01
	.byte 0x0e
	.ascii "CullFace\0"
	.byte 0x00,0x00,0x42,0xbd,0x03,0x23,0x90,0x01
	.byte 0x0e
	.ascii "DeleteLists\0"
	.byte 0x00,0x00,0x42,0xd9,0x03,0x23,0x94,0x01
	.byte 0x0e
	.ascii "DeleteTextures\0"
	.byte 0x00,0x00,0x42,0xff,0x03,0x23,0x98,0x01
	.byte 0x0e
	.ascii "DepthFunc\0"
	.byte 0x00,0x00,0x43,0x16,0x03,0x23,0x9c,0x01
	.byte 0x0e
	.ascii "DepthMask\0"
	.byte 0x00,0x00,0x43,0x2d,0x03,0x23,0xa0,0x01
	.byte 0x0e
	.ascii "DepthRange\0"
	.byte 0x00,0x00,0x43,0x49,0x03,0x23,0xa4,0x01
	.byte 0x0e
	.ascii "Disable\0"
	.byte 0x00,0x00,0x43,0x60,0x03,0x23,0xa8,0x01
	.byte 0x0e
	.ascii "DisableClientState\0"
	.byte 0x00,0x00,0x43,0x77,0x03,0x23,0xac,0x01
	.byte 0x0e
	.ascii "DrawArrays\0"
	.byte 0x00,0x00,0x43,0x98,0x03,0x23,0xb0,0x01
	.byte 0x0e
	.ascii "DrawBuffer\0"
	.byte 0x00,0x00,0x43,0xaf,0x03,0x23,0xb4,0x01
	.byte 0x0e
	.ascii "DrawElements\0"
	.byte 0x00,0x00,0x43,0xdf,0x03,0x23,0xb8,0x01
	.byte 0x0e
	.ascii "DrawPixels\0"
	.byte 0x00,0x00,0x44,0x14,0x03,0x23,0xbc,0x01
	.byte 0x0e
	.ascii "EdgeFlag\0"
	.byte 0x00,0x00,0x44,0x2b,0x03,0x23,0xc0,0x01
	.byte 0x0e
	.ascii "EdgeFlagPointer\0"
	.byte 0x00,0x00,0x44,0x51,0x03,0x23,0xc4,0x01
	.byte 0x0e
	.ascii "Enable\0"
	.byte 0x00,0x00,0x44,0x68,0x03,0x23,0xc8,0x01
	.byte 0x0e
	.ascii "EnableClientState\0"
	.byte 0x00,0x00,0x44,0x7f,0x03,0x23,0xcc,0x01
	.byte 0x0e
	.ascii "End\0"
	.byte 0x00,0x00,0x44,0x91,0x03,0x23,0xd0,0x01
	.byte 0x0e
	.ascii "EndList\0"
	.byte 0x00,0x00,0x44,0xa3,0x03,0x23,0xd4,0x01
	.byte 0x0e
	.ascii "EvalCoord1f\0"
	.byte 0x00,0x00,0x44,0xba,0x03,0x23,0xd8,0x01
	.byte 0x0e
	.ascii "EvalCoord2f\0"
	.byte 0x00,0x00,0x44,0xd6,0x03,0x23,0xdc,0x01
	.byte 0x0e
	.ascii "EvalMesh1\0"
	.byte 0x00,0x00,0x44,0xf7,0x03,0x23,0xe0,0x01
	.byte 0x0e
	.ascii "EvalMesh2\0"
	.byte 0x00,0x00,0x45,0x22,0x03,0x23,0xe4,0x01
	.byte 0x0e
	.ascii "EvalPoint1\0"
	.byte 0x00,0x00,0x45,0x39,0x03,0x23,0xe8,0x01
	.byte 0x0e
	.ascii "EvalPoint2\0"
	.byte 0x00,0x00,0x45,0x55,0x03,0x23,0xec,0x01
	.byte 0x0e
	.ascii "FeedbackBuffer\0"
	.byte 0x00,0x00,0x45,0x7b,0x03,0x23,0xf0,0x01
	.byte 0x0e
	.ascii "Finish\0"
	.byte 0x00,0x00,0x45,0x8d,0x03,0x23,0xf4,0x01
	.byte 0x0e
	.ascii "Flush\0"
	.byte 0x00,0x00,0x45,0x9f,0x03,0x23,0xf8,0x01
	.byte 0x0e
	.ascii "Fogfv\0"
	.byte 0x00,0x00,0x45,0xc5,0x03,0x23,0xfc,0x01
	.byte 0x0e
	.ascii "FrontFace\0"
	.byte 0x00,0x00,0x45,0xdc,0x03,0x23,0x80,0x02
	.byte 0x0e
	.ascii "Frustum\0"
	.byte 0x00,0x00,0x46,0x0c,0x03,0x23,0x84,0x02
	.byte 0x0e
	.ascii "GenLists\0"
	.byte 0x00,0x00,0x46,0x27,0x03,0x23,0x88,0x02
	.byte 0x0e
	.ascii "GenTextures\0"
	.byte 0x00,0x00,0x46,0x48,0x03,0x23,0x8c,0x02
	.byte 0x0e
	.ascii "GetBooleanv\0"
	.byte 0x00,0x00,0x46,0x64,0x03,0x23,0x90,0x02
	.byte 0x0e
	.ascii "GetClipPlane\0"
	.byte 0x00,0x00,0x46,0x85,0x03,0x23,0x94,0x02
	.byte 0x0e
	.ascii "GetColorTable\0"
	.byte 0x00,0x00,0x46,0xab,0x03,0x23,0x98,0x02
	.byte 0x0e
	.ascii "GetColorTableParameteriv\0"
	.byte 0x00,0x00,0x46,0xd1,0x03,0x23,0x9c,0x02
	.byte 0x0e
	.ascii "GetDoublev\0"
	.byte 0x00,0x00,0x46,0xed,0x03,0x23,0xa0,0x02
	.byte 0x0e
	.ascii "GetError\0"
	.byte 0x00,0x00,0x47,0x03,0x03,0x23,0xa4,0x02
	.byte 0x0e
	.ascii "GetFloatv\0"
	.byte 0x00,0x00,0x47,0x1f,0x03,0x23,0xa8,0x02
	.byte 0x0e
	.ascii "GetIntegerv\0"
	.byte 0x00,0x00,0x47,0x3b,0x03,0x23,0xac,0x02
	.byte 0x0e
	.ascii "GetString\0"
	.byte 0x00,0x00,0x47,0x60,0x03,0x23,0xb0,0x02
	.byte 0x0e
	.ascii "GetLightfv\0"
	.byte 0x00,0x00,0x47,0x81,0x03,0x23,0xb4,0x02
	.byte 0x0e
	.ascii "GetLightiv\0"
	.byte 0x00,0x00,0x47,0xa2,0x03,0x23,0xb8,0x02
	.byte 0x0e
	.ascii "GetMapdv\0"
	.byte 0x00,0x00,0x47,0xc3,0x03,0x23,0xbc,0x02
	.byte 0x0e
	.ascii "GetMapfv\0"
	.byte 0x00,0x00,0x47,0xe4,0x03,0x23,0xc0,0x02
	.byte 0x0e
	.ascii "GetMapiv\0"
	.byte 0x00,0x00,0x48,0x05,0x03,0x23,0xc4,0x02
	.byte 0x0e
	.ascii "GetMaterialfv\0"
	.byte 0x00,0x00,0x48,0x26,0x03,0x23,0xc8,0x02
	.byte 0x0e
	.ascii "GetMaterialiv\0"
	.byte 0x00,0x00,0x48,0x47,0x03,0x23,0xcc,0x02
	.byte 0x0e
	.ascii "GetPixelMapfv\0"
	.byte 0x00,0x00,0x48,0x63,0x03,0x23,0xd0,0x02
	.byte 0x0e
	.ascii "GetPixelMapuiv\0"
	.byte 0x00,0x00,0x48,0x7f,0x03,0x23,0xd4,0x02
	.byte 0x0e
	.ascii "GetPixelMapusv\0"
	.byte 0x00,0x00,0x48,0xb2,0x03,0x23,0xd8,0x02
	.byte 0x0e
	.ascii "GetPointerv\0"
	.byte 0x00,0x00,0x48,0xd3,0x03,0x23,0xdc,0x02
	.byte 0x0e
	.ascii "GetPolygonStipple\0"
	.byte 0x00,0x00,0x48,0xea,0x03,0x23,0xe0,0x02
	.byte 0x0e
	.ascii "PrioritizeTextures\0"
	.byte 0x00,0x00,0x49,0x1f,0x03,0x23,0xe4,0x02
	.byte 0x0e
	.ascii "GetTexEnvfv\0"
	.byte 0x00,0x00,0x49,0x40,0x03,0x23,0xe8,0x02
	.byte 0x0e
	.ascii "GetTexEnviv\0"
	.byte 0x00,0x00,0x49,0x61,0x03,0x23,0xec,0x02
	.byte 0x0e
	.ascii "GetTexGendv\0"
	.byte 0x00,0x00,0x49,0x82,0x03,0x23,0xf0,0x02
	.byte 0x0e
	.ascii "GetTexGenfv\0"
	.byte 0x00,0x00,0x49,0xa3,0x03,0x23,0xf4,0x02
	.byte 0x0e
	.ascii "GetTexGeniv\0"
	.byte 0x00,0x00,0x49,0xc4,0x03,0x23,0xf8,0x02
	.byte 0x0e
	.ascii "GetTexImage\0"
	.byte 0x00,0x00,0x49,0xef,0x03,0x23,0xfc,0x02
	.byte 0x0e
	.ascii "GetTexLevelParameterfv\0"
	.byte 0x00,0x00,0x4a,0x15,0x03,0x23,0x80,0x03
	.byte 0x0e
	.ascii "GetTexLevelParameteriv\0"
	.byte 0x00,0x00,0x4a,0x3b,0x03,0x23,0x84,0x03
	.byte 0x0e
	.ascii "GetTexParameterfv\0"
	.byte 0x00,0x00,0x4a,0x5c,0x03,0x23,0x88,0x03
	.byte 0x0e
	.ascii "GetTexParameteriv\0"
	.byte 0x00,0x00,0x4a,0x7d,0x03,0x23,0x8c,0x03
	.byte 0x0e
	.ascii "Hint\0"
	.byte 0x00,0x00,0x4a,0x99,0x03,0x23,0x90,0x03
	.byte 0x0e
	.ascii "IndexMask\0"
	.byte 0x00,0x00,0x4a,0xb0,0x03,0x23,0x94,0x03
	.byte 0x0e
	.ascii "Indexf\0"
	.byte 0x00,0x00,0x4a,0xc7,0x03,0x23,0x98,0x03
	.byte 0x0e
	.ascii "Indexi\0"
	.byte 0x00,0x00,0x4a,0xde,0x03,0x23,0x9c,0x03
	.byte 0x0e
	.ascii "IndexPointer\0"
	.byte 0x00,0x00,0x4b,0x09,0x03,0x23,0xa0,0x03
	.byte 0x0e
	.ascii "InitNames\0"
	.byte 0x00,0x00,0x4b,0x1b,0x03,0x23,0xa4,0x03
	.byte 0x0e
	.ascii "InterleavedArrays\0"
	.byte 0x00,0x00,0x4b,0x46,0x03,0x23,0xa8,0x03
	.byte 0x0e
	.ascii "IsEnabled\0"
	.byte 0x00,0x00,0x4b,0x61,0x03,0x23,0xac,0x03
	.byte 0x0e
	.ascii "IsList\0"
	.byte 0x00,0x00,0x4b,0x7c,0x03,0x23,0xb0,0x03
	.byte 0x0e
	.ascii "IsTexture\0"
	.byte 0x00,0x00,0x4b,0x97,0x03,0x23,0xb4,0x03
	.byte 0x0e
	.ascii "LightModelfv\0"
	.byte 0x00,0x00,0x4b,0xbd,0x03,0x23,0xb8,0x03
	.byte 0x0e
	.ascii "Lightfv\0"
	.byte 0x00,0x00,0x4b,0xed,0x03,0x23,0xbc,0x03
	.byte 0x0e
	.ascii "LineStipple\0"
	.byte 0x00,0x00,0x4c,0x09,0x03,0x23,0xc0,0x03
	.byte 0x0e
	.ascii "LineWidth\0"
	.byte 0x00,0x00,0x4c,0x20,0x03,0x23,0xc4,0x03
	.byte 0x0e
	.ascii "ListBase\0"
	.byte 0x00,0x00,0x4c,0x37,0x03,0x23,0xc8,0x03
	.byte 0x0e
	.ascii "LoadIdentity\0"
	.byte 0x00,0x00,0x4c,0x49,0x03,0x23,0xcc,0x03
	.byte 0x0e
	.ascii "LoadMatrixf\0"
	.byte 0x00,0x00,0x4c,0x6a,0x03,0x23,0xd0,0x03
	.byte 0x0e
	.ascii "LoadName\0"
	.byte 0x00,0x00,0x4c,0x81,0x03,0x23,0xd4,0x03
	.byte 0x0e
	.ascii "LogicOp\0"
	.byte 0x00,0x00,0x4c,0x98,0x03,0x23,0xd8,0x03
	.byte 0x0e
	.ascii "Map1f\0"
	.byte 0x00,0x00,0x4c,0xd7,0x03,0x23,0xdc,0x03
	.byte 0x0e
	.ascii "Map2f\0"
	.byte 0x00,0x00,0x4d,0x2a
	.byte 0x03,0x23,0xe0,0x03,0x0e
	.ascii "MapGrid1f\0"
	.byte 0x00,0x00,0x4d,0x4b,0x03,0x23,0xe4,0x03
	.byte 0x0e
	.ascii "MapGrid2f\0"
	.byte 0x00,0x00,0x4d,0x7b,0x03,0x23,0xe8,0x03
	.byte 0x0e
	.ascii "Materialfv\0"
	.byte 0x00,0x00,0x4d,0xa6,0x03,0x23,0xec,0x03
	.byte 0x0e
	.ascii "MatrixMode\0"
	.byte 0x00,0x00,0x4d,0xbd,0x03,0x23,0xf0,0x03
	.byte 0x0e
	.ascii "MultMatrixf\0"
	.byte 0x00,0x00,0x4d,0xde,0x03,0x23,0xf4,0x03
	.byte 0x0e
	.ascii "NewList\0"
	.byte 0x00,0x00,0x4d,0xfa,0x03,0x23,0xf8,0x03
	.byte 0x0e
	.ascii "Normal3f\0"
	.byte 0x00,0x00,0x4e,0x1b,0x03,0x23,0xfc,0x03
	.byte 0x0e
	.ascii "Normal3fv\0"
	.byte 0x00,0x00,0x4e,0x3c,0x03,0x23,0x80,0x04
	.byte 0x0e
	.ascii "NormalPointer\0"
	.byte 0x00,0x00,0x4e,0x67,0x03,0x23,0x84,0x04
	.byte 0x0e
	.ascii "Ortho\0"
	.byte 0x00,0x00,0x4e,0x97,0x03,0x23,0x88,0x04
	.byte 0x0e
	.ascii "PassThrough\0"
	.byte 0x00,0x00,0x4e,0xae,0x03,0x23,0x8c,0x04
	.byte 0x0e
	.ascii "PixelMapfv\0"
	.byte 0x00,0x00,0x4e,0xd9,0x03,0x23,0x90,0x04
	.byte 0x0e
	.ascii "PixelStorei\0"
	.byte 0x00,0x00,0x4e,0xf5,0x03,0x23,0x94,0x04
	.byte 0x0e
	.ascii "PixelTransferf\0"
	.byte 0x00,0x00,0x4f,0x11,0x03,0x23,0x98,0x04
	.byte 0x0e
	.ascii "PixelZoom\0"
	.byte 0x00,0x00,0x4f,0x2d,0x03,0x23,0x9c,0x04
	.byte 0x0e
	.ascii "PointParameterfvEXT\0"
	.byte 0x00,0x00,0x4f,0x53,0x03,0x23,0xa0,0x04
	.byte 0x0e
	.ascii "PointSize\0"
	.byte 0x00,0x00,0x4f,0x6a,0x03,0x23,0xa4,0x04
	.byte 0x0e
	.ascii "PolygonMode\0"
	.byte 0x00,0x00,0x4f,0x86,0x03,0x23,0xa8,0x04
	.byte 0x0e
	.ascii "PolygonOffset\0"
	.byte 0x00,0x00,0x4f,0xa2,0x03,0x23,0xac,0x04
	.byte 0x0e
	.ascii "PolygonStipple\0"
	.byte 0x00,0x00,0x4f,0xc3,0x03,0x23,0xb0,0x04
	.byte 0x0e
	.ascii "PopAttrib\0"
	.byte 0x00,0x00,0x4f,0xd5,0x03,0x23,0xb4,0x04
	.byte 0x0e
	.ascii "PopClientAttrib\0"
	.byte 0x00,0x00,0x4f,0xe7,0x03,0x23,0xb8,0x04
	.byte 0x0e
	.ascii "PopMatrix\0"
	.byte 0x00,0x00,0x4f,0xf9,0x03,0x23,0xbc,0x04
	.byte 0x0e
	.ascii "PopName\0"
	.byte 0x00,0x00,0x50,0x0b,0x03,0x23,0xc0,0x04
	.byte 0x0e
	.ascii "PushAttrib\0"
	.byte 0x00,0x00,0x50,0x22,0x03,0x23,0xc4,0x04
	.byte 0x0e
	.ascii "PushClientAttrib\0"
	.byte 0x00,0x00,0x50,0x39,0x03,0x23,0xc8,0x04
	.byte 0x0e
	.ascii "PushMatrix\0"
	.byte 0x00,0x00,0x50,0x4b,0x03,0x23,0xcc,0x04
	.byte 0x0e
	.ascii "PushName\0"
	.byte 0x00,0x00,0x50,0x62,0x03,0x23,0xd0,0x04
	.byte 0x0e
	.ascii "RasterPos4f\0"
	.byte 0x00,0x00,0x50,0x88,0x03,0x23,0xd4,0x04
	.byte 0x0e
	.ascii "ReadBuffer\0"
	.byte 0x00,0x00,0x50,0x9f,0x03,0x23,0xd8,0x04
	.byte 0x0e
	.ascii "ReadPixels\0"
	.byte 0x00,0x00,0x50,0xd4,0x03,0x23,0xdc,0x04
	.byte 0x0e
	.ascii "Rectf\0"
	.byte 0x00,0x00,0x50,0xfa,0x03,0x23,0xe0,0x04
	.byte 0x0e
	.ascii "RenderMode\0"
	.byte 0x00,0x00,0x51,0x15,0x03,0x23,0xe4,0x04
	.byte 0x0e
	.ascii "Rotatef\0"
	.byte 0x00,0x00,0x51,0x3b,0x03,0x23,0xe8,0x04
	.byte 0x0e
	.ascii "Scalef\0"
	.byte 0x00,0x00,0x51,0x5c,0x03,0x23,0xec,0x04
	.byte 0x0e
	.ascii "Scissor\0"
	.byte 0x00,0x00,0x51,0x82,0x03,0x23,0xf0,0x04
	.byte 0x0e
	.ascii "SelectBuffer\0"
	.byte 0x00,0x00,0x51,0x9e,0x03,0x23,0xf4,0x04
	.byte 0x0e
	.ascii "ShadeModel\0"
	.byte 0x00,0x00,0x51,0xb5,0x03,0x23,0xf8,0x04
	.byte 0x0e
	.ascii "StencilFunc\0"
	.byte 0x00,0x00,0x51,0xd6,0x03,0x23,0xfc,0x04
	.byte 0x0e
	.ascii "StencilMask\0"
	.byte 0x00,0x00,0x51,0xed,0x03,0x23,0x80,0x05
	.byte 0x0e
	.ascii "StencilOp\0"
	.byte 0x00,0x00,0x52,0x0e,0x03,0x23,0x84,0x05
	.byte 0x0e
	.ascii "TexCoord2f\0"
	.byte 0x00,0x00,0x52,0x2a,0x03,0x23,0x88,0x05
	.byte 0x0e
	.ascii "TexCoord4f\0"
	.byte 0x00,0x00,0x52,0x50,0x03,0x23,0x8c,0x05
	.byte 0x0e
	.ascii "TexCoordPointer\0"
	.byte 0x00,0x00,0x52,0x80,0x03,0x23,0x90,0x05
	.byte 0x0e
	.ascii "TexEnvfv\0"
	.byte 0x00,0x00,0x52,0xab,0x03,0x23,0x94,0x05
	.byte 0x0e
	.ascii "TexGenfv\0"
	.byte 0x00,0x00,0x52,0xd6,0x03,0x23,0x98,0x05
	.byte 0x0e
	.ascii "TexImage1D\0"
	.byte 0x00,0x00,0x53,0x10,0x03,0x23,0x9c,0x05
	.byte 0x0e
	.ascii "TexImage2D\0"
	.byte 0x00,0x00,0x53,0x4f,0x03,0x23,0xa0,0x05
	.byte 0x0e
	.ascii "TexSubImage1D\0"
	.byte 0x00,0x00,0x53,0x84,0x03,0x23,0xa4,0x05
	.byte 0x0e
	.ascii "TexSubImage2D\0"
	.byte 0x00,0x00,0x53,0xc3,0x03,0x23,0xa8,0x05
	.byte 0x0e
	.ascii "TexImage3DEXT\0"
	.byte 0x00,0x00,0x54,0x07,0x03,0x23,0xac,0x05
	.byte 0x0e
	.ascii "TexSubImage3DEXT\0"
	.byte 0x00,0x00,0x54,0x50,0x03,0x23,0xb0,0x05
	.byte 0x0e
	.ascii "TexParameterfv\0"
	.byte 0x00,0x00,0x54,0x7b,0x03,0x23,0xb4,0x05
	.byte 0x0e
	.ascii "Translatef\0"
	.byte 0x00,0x00,0x54,0x9c,0x03,0x23,0xb8,0x05
	.byte 0x0e
	.ascii "Vertex2f\0"
	.byte 0x00,0x00,0x54,0xb8,0x03,0x23,0xbc,0x05
	.byte 0x0e
	.ascii "Vertex3f\0"
	.byte 0x00,0x00,0x54,0xd9,0x03,0x23,0xc0,0x05
	.byte 0x0e
	.ascii "Vertex4f\0"
	.byte 0x00,0x00,0x54,0xff,0x03,0x23,0xc4,0x05
	.byte 0x0e
	.ascii "Vertex3fv\0"
	.byte 0x00,0x00,0x55,0x20,0x03,0x23,0xc8,0x05
	.byte 0x0e
	.ascii "VertexPointer\0"
	.byte 0x00,0x00,0x55,0x50,0x03,0x23,0xcc,0x05
	.byte 0x0e
	.ascii "Viewport\0"
	.byte 0x00,0x00,0x55,0x76,0x03,0x23,0xd0,0x05
	.byte 0x0e
	.ascii "WindowPos4fMESA\0"
	.byte 0x00,0x00,0x55,0x9c,0x03,0x23,0xd4,0x05
	.byte 0x0e
	.ascii "ResizeBuffersMESA\0"
	.byte 0x00,0x00,0x55,0xae,0x03,0x23,0xd8,0x05
	.byte 0x00,0x0d
	.ascii "gl_visual\0"
	.byte 0x4c,0x02,0x00,0x00,0x65,0xff,0x0e
	.ascii "RGBAflag\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x00,0x0e
	.ascii "DBflag\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x01,0x0e
	.ascii "RedScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x04,0x0e
	.ascii "GreenScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x08,0x0e
	.ascii "BlueScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x0c,0x0e
	.ascii "AlphaScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x10,0x0e
	.ascii "EightBitColor\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x14,0x0e
	.ascii "InvRedScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x18,0x0e
	.ascii "InvGreenScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x1c,0x0e
	.ascii "InvBlueScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x20,0x0e
	.ascii "InvAlphaScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x24,0x0e
	.ascii "RedBits\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x28,0x0e
	.ascii "GreenBits\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x2c,0x0e
	.ascii "BlueBits\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x30,0x0e
	.ascii "AlphaBits\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x34,0x0e
	.ascii "IndexBits\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x38,0x0e
	.ascii "AccumBits\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x3c,0x0e
	.ascii "DepthBits\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x40,0x0e
	.ascii "StencilBits\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x44,0x0e
	.ascii "FrontAlphaEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x48,0x0e
	.ascii "BackAlphaEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x49,0x00
	.byte 0x06,0x00,0x00,0x64,0x57
	.ascii "GLvisual\0"
	.byte 0x02,0x08,0x00,0x00,0x65,0xff,0x06,0x00
	.byte 0x00,0x48,0x84
	.ascii "GLdepth\0"
	.byte 0x02,0x08,0x00,0x00,0x66,0x13,0x06,0x00
	.byte 0x00,0x31,0xc5
	.ascii "GLstencil\0"
	.byte 0x02,0x08,0x00,0x00,0x66,0x26,0x05
	.ascii "short\0"
	.byte 0x05,0x02,0x06,0x00,0x00,0x66,0x3b
	.ascii "GLaccum\0"
	.byte 0x02,0x08,0x00,0x00,0x66,0x44,0x0d
	.ascii "gl_frame_buffer\0"
	.byte 0x34,0x02,0x00,0x00,0x67,0x2e,0x0e
	.ascii "Visual\0"
	.byte 0x00,0x00,0x66,0x0e,0x02,0x23,0x00,0x0e
	.ascii "Width\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x04,0x0e
	.ascii "Height\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x08,0x0e
	.ascii "Depth\0"
	.byte 0x00,0x00,0x66,0x21,0x02,0x23,0x0c,0x0e
	.ascii "Stencil\0"
	.byte 0x00,0x00,0x66,0x36,0x02,0x23,0x10,0x0e
	.ascii "Accum\0"
	.byte 0x00,0x00,0x66,0x52,0x02,0x23,0x14,0x0e
	.ascii "FrontAlpha\0"
	.byte 0x00,0x00,0x31,0xe4,0x02,0x23,0x18,0x0e
	.ascii "BackAlpha\0"
	.byte 0x00,0x00,0x31,0xe4,0x02,0x23,0x1c,0x0e
	.ascii "Alpha\0"
	.byte 0x00,0x00,0x31,0xe4,0x02,0x23,0x20,0x0e
	.ascii "Xmin\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x24,0x0e
	.ascii "Xmax\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x28,0x0e
	.ascii "Ymin\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x2c,0x0e
	.ascii "Ymax\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x30,0x00
	.byte 0x06,0x00,0x00,0x66,0x57
	.ascii "GLframebuffer\0"
	.byte 0x02,0x08,0x00,0x00,0x67,0x2e,0x05
	.ascii "char\0"
	.byte 0x06,0x01,0x12,0x00,0x00,0x67,0x47,0x08
	.byte 0x00,0x00,0x67,0x4f,0x16,0x01,0x00,0x00
	.byte 0x67,0x54,0x01,0x08,0x00,0x00,0x67,0x59
	.byte 0x13,0x01,0x01,0x00,0x00,0x67,0x72,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x00,0x08,0x00,0x00
	.byte 0x67,0x65,0x13,0x01,0x01,0x00,0x00,0x67
	.byte 0x89,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x01,0xd3,0x00,0x08,0x00,0x00,0x67
	.byte 0x77,0x13,0x01,0x01,0x00,0x00,0x67,0xaf
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x31,0xc5,0x14,0x00,0x00,0x31,0xc5,0x14
	.byte 0x00,0x00,0x31,0xc5,0x14,0x00,0x00,0x31
	.byte 0xc5,0x00,0x08,0x00,0x00,0x67,0x8e,0x13
	.byte 0x01,0x01,0x00,0x00,0x67,0xda,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x31,0xc5
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x00,0x08,0x00,0x00
	.byte 0x67,0xb4,0x13,0x01,0x01,0x00,0x00,0x67
	.byte 0xf1,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x01,0xd3,0x00,0x08,0x00,0x00,0x67
	.byte 0xdf,0x13,0x01,0x01,0x00,0x00,0x68,0x17
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x31,0xc5,0x14,0x00,0x00,0x31,0xc5,0x14
	.byte 0x00,0x00,0x31,0xc5,0x14,0x00,0x00,0x31
	.byte 0xc5,0x00,0x08,0x00,0x00,0x67,0xf6,0x15
	.byte 0x01,0x00,0x00,0x31,0xc5,0x01,0x00,0x00
	.byte 0x68,0x32,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x02,0x1c,0x00,0x08,0x00,0x00
	.byte 0x68,0x1c,0x13,0x01,0x01,0x00,0x00,0x68
	.byte 0x4e,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x46,0x2c,0x14,0x00,0x00,0x46,0x2c
	.byte 0x00,0x08,0x00,0x00,0x68,0x37,0x12,0x00
	.byte 0x00,0x31,0xc5,0x08,0x00,0x00,0x68,0x53
	.byte 0x12,0x00,0x00,0x31,0xc5,0x08,0x00,0x00
	.byte 0x68,0x5d,0x12,0x00,0x00,0x31,0xc5,0x08
	.byte 0x00,0x00,0x68,0x67,0x12,0x00,0x00,0x31
	.byte 0xc5,0x08,0x00,0x00,0x68,0x71,0x12,0x00
	.byte 0x00,0x31,0xc5,0x08,0x00,0x00,0x68,0x7b
	.byte 0x13,0x01,0x01,0x00,0x00,0x68,0xba,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x01
	.byte 0xd3,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x68,0x58
	.byte 0x14,0x00,0x00,0x68,0x62,0x14,0x00,0x00
	.byte 0x68,0x6c,0x14,0x00,0x00,0x68,0x76,0x14
	.byte 0x00,0x00,0x68,0x80,0x00,0x08,0x00,0x00
	.byte 0x68,0x85,0x12,0x00,0x00,0x31,0xc5,0x08
	.byte 0x00,0x00,0x68,0xbf,0x13,0x01,0x01,0x00
	.byte 0x00,0x68,0xea,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x01,0xd3,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x68,0xc4,0x00,0x08,0x00,0x00
	.byte 0x68,0xc9,0x12,0x00,0x00,0x01,0xaf,0x08
	.byte 0x00,0x00,0x68,0xef,0x12,0x00,0x00,0x01
	.byte 0xaf,0x08,0x00,0x00,0x68,0xf9,0x12,0x00
	.byte 0x00,0x31,0xc5,0x08,0x00,0x00,0x69,0x03
	.byte 0x12,0x00,0x00,0x31,0xc5,0x08,0x00,0x00
	.byte 0x69,0x0d,0x12,0x00,0x00,0x31,0xc5,0x08
	.byte 0x00,0x00,0x69,0x17,0x12,0x00,0x00,0x31
	.byte 0xc5,0x08,0x00,0x00,0x69,0x21,0x12,0x00
	.byte 0x00,0x31,0xc5,0x08,0x00,0x00,0x69,0x2b
	.byte 0x13,0x01,0x01,0x00,0x00,0x69,0x6a,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x01
	.byte 0xd3,0x14,0x00,0x00,0x68,0xf4,0x14,0x00
	.byte 0x00,0x68,0xfe,0x14,0x00,0x00,0x69,0x08
	.byte 0x14,0x00,0x00,0x69,0x12,0x14,0x00,0x00
	.byte 0x69,0x1c,0x14,0x00,0x00,0x69,0x26,0x14
	.byte 0x00,0x00,0x69,0x30,0x00,0x08,0x00,0x00
	.byte 0x69,0x35,0x12,0x00,0x00,0x01,0xaf,0x08
	.byte 0x00,0x00,0x69,0x6f,0x12,0x00,0x00,0x01
	.byte 0xaf,0x08,0x00,0x00,0x69,0x79,0x12,0x00
	.byte 0x00,0x31,0xc5,0x08,0x00,0x00,0x69,0x83
	.byte 0x13,0x01,0x01,0x00,0x00,0x69,0xae,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x01
	.byte 0xd3,0x14,0x00,0x00,0x69,0x74,0x14,0x00
	.byte 0x00,0x69,0x7e,0x14,0x00,0x00,0x69,0x88
	.byte 0x00,0x08,0x00,0x00,0x69,0x8d,0x12,0x00
	.byte 0x00,0x01,0xd3,0x08,0x00,0x00,0x69,0xb3
	.byte 0x12,0x00,0x00,0x31,0xc5,0x08,0x00,0x00
	.byte 0x69,0xbd,0x13,0x01,0x01,0x00,0x00,0x69
	.byte 0xed,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x01,0xd3,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x69,0xb8,0x14,0x00,0x00,0x69,0xc2,0x00
	.byte 0x08,0x00,0x00,0x69,0xc7,0x12,0x00,0x00
	.byte 0x31,0xc5,0x08,0x00,0x00,0x69,0xf2,0x13
	.byte 0x01,0x01,0x00,0x00,0x6a,0x1d,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xd3
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x69,0xf7,0x00
	.byte 0x08,0x00,0x00,0x69,0xfc,0x12,0x00,0x00
	.byte 0x01,0xaf,0x08,0x00,0x00,0x6a,0x22,0x12
	.byte 0x00,0x00,0x01,0xaf,0x08,0x00,0x00,0x6a
	.byte 0x2c,0x12,0x00,0x00,0x01,0xd3,0x08,0x00
	.byte 0x00,0x6a,0x36,0x12,0x00,0x00,0x31,0xc5
	.byte 0x08,0x00,0x00,0x6a,0x40,0x13,0x01,0x01
	.byte 0x00,0x00,0x6a,0x70,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x01,0xd3,0x14,0x00
	.byte 0x00,0x6a,0x27,0x14,0x00,0x00,0x6a,0x31
	.byte 0x14,0x00,0x00,0x6a,0x3b,0x14,0x00,0x00
	.byte 0x6a,0x45,0x00,0x08,0x00,0x00,0x6a,0x4a
	.byte 0x12,0x00,0x00,0x01,0xaf,0x08,0x00,0x00
	.byte 0x6a,0x75,0x12,0x00,0x00,0x01,0xaf,0x08
	.byte 0x00,0x00,0x6a,0x7f,0x12,0x00,0x00,0x31
	.byte 0xc5,0x08,0x00,0x00,0x6a,0x89,0x13,0x01
	.byte 0x01,0x00,0x00,0x6a,0xb4,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x01,0xd3,0x14
	.byte 0x00,0x00,0x6a,0x7a,0x14,0x00,0x00,0x6a
	.byte 0x84,0x14,0x00,0x00,0x6a,0x8e,0x00,0x08
	.byte 0x00,0x00,0x6a,0x93,0x13,0x01,0x01,0x00
	.byte 0x00,0x6a,0xda,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x01,0xd3,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x46,0x2c,0x00,0x08,0x00,0x00
	.byte 0x6a,0xb9,0x13,0x01,0x01,0x00,0x00,0x6b
	.byte 0x0f,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x01,0xd3,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x34,0xf9,0x14,0x00,0x00,0x34,0xf9,0x14
	.byte 0x00,0x00,0x34,0xf9,0x14,0x00,0x00,0x34
	.byte 0xf9,0x00,0x08,0x00,0x00,0x6a,0xdf,0x12
	.byte 0x00,0x00,0x01,0xaf,0x08,0x00,0x00,0x6b
	.byte 0x14,0x12,0x00,0x00,0x01,0xaf,0x08,0x00
	.byte 0x00,0x6b,0x1e,0x12,0x00,0x00,0x31,0xc5
	.byte 0x08,0x00,0x00,0x6b,0x28,0x13,0x01,0x01
	.byte 0x00,0x00,0x6b,0x58,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x01,0xd3,0x14,0x00
	.byte 0x00,0x6b,0x19,0x14,0x00,0x00,0x6b,0x23
	.byte 0x14,0x00,0x00,0x46,0x2c,0x14,0x00,0x00
	.byte 0x6b,0x2d,0x00,0x08,0x00,0x00,0x6b,0x32
	.byte 0x12,0x00,0x00,0x01,0xaf,0x08,0x00,0x00
	.byte 0x6b,0x5d,0x12,0x00,0x00,0x01,0xaf,0x08
	.byte 0x00,0x00,0x6b,0x67,0x12,0x00,0x00,0x31
	.byte 0xc5,0x08,0x00,0x00,0x6b,0x71,0x13,0x01
	.byte 0x01,0x00,0x00,0x6b,0xb0,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x01,0xd3,0x14
	.byte 0x00,0x00,0x6b,0x62,0x14,0x00,0x00,0x6b
	.byte 0x6c,0x14,0x00,0x00,0x34,0xf9,0x14,0x00
	.byte 0x00,0x34,0xf9,0x14,0x00,0x00,0x34,0xf9
	.byte 0x14,0x00,0x00,0x34,0xf9,0x14,0x00,0x00
	.byte 0x6b,0x76,0x00,0x08,0x00,0x00,0x6b,0x7b
	.byte 0x13,0x01,0x01,0x00,0x00,0x6b,0xc2,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x00,0x08,0x00,0x00
	.byte 0x6b,0xb5,0x13,0x01,0x01,0x00,0x00,0x6b
	.byte 0xd4,0x14,0x00,0x00,0x3c,0xc8,0x00,0x08
	.byte 0x00,0x00,0x6b,0xc7,0x15,0x01,0x00,0x00
	.byte 0x31,0xc5,0x01,0x00,0x00,0x6b,0xef,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x01
	.byte 0xd3,0x00,0x08,0x00,0x00,0x6b,0xd9,0x15
	.byte 0x01,0x00,0x00,0x31,0xc5,0x01,0x00,0x00
	.byte 0x6c,0x19,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x31,0xc5,0x14,0x00,0x00,0x31
	.byte 0xc5,0x14,0x00,0x00,0x31,0xc5,0x14,0x00
	.byte 0x00,0x31,0xc5,0x00,0x08,0x00,0x00,0x6b
	.byte 0xf4,0x15,0x01,0x00,0x00,0x31,0xc5,0x01
	.byte 0x00,0x00,0x6c,0x34,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x02,0x1c,0x00,0x08
	.byte 0x00,0x00,0x6c,0x1e,0x13,0x01,0x01,0x00
	.byte 0x00,0x6c,0x4b,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x31,0xc5,0x00,0x08,0x00
	.byte 0x00,0x6c,0x39,0x13,0x01,0x01,0x00,0x00
	.byte 0x6c,0x5d,0x14,0x00,0x00,0x3c,0xc8,0x00
	.byte 0x08,0x00,0x00,0x6c,0x50,0x13,0x01,0x01
	.byte 0x00,0x00,0x6c,0x79,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x01,0xec,0x14,0x00
	.byte 0x00,0x01,0xec,0x00,0x08,0x00,0x00,0x6c
	.byte 0x62,0x13,0x01,0x01,0x00,0x00,0x6c,0x8b
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x00,0x08,0x00
	.byte 0x00,0x6c,0x7e,0x13,0x01,0x01,0x00,0x00
	.byte 0x6c,0x9d,0x14,0x00,0x00,0x3c,0xc8,0x00
	.byte 0x08,0x00,0x00,0x6c,0x90,0x12,0x00,0x00
	.byte 0x48,0x84,0x08,0x00,0x00,0x6c,0xa2,0x15
	.byte 0x01,0x00,0x00,0x01,0xd3,0x01,0x00,0x00
	.byte 0x6c,0xd6,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x01,0xd3,0x14,0x00,0x00,0x01
	.byte 0xaf,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x6c,0xa7,0x14,0x00,0x00,0x34,0xf9
	.byte 0x00,0x08,0x00,0x00,0x6c,0xac,0x12,0x00
	.byte 0x00,0x01,0xaf,0x08,0x00,0x00,0x6c,0xdb
	.byte 0x12,0x00,0x00,0x01,0xaf,0x08,0x00,0x00
	.byte 0x6c,0xe5,0x12,0x00,0x00,0x48,0x84,0x08
	.byte 0x00,0x00,0x6c,0xef,0x13,0x01,0x01,0x00
	.byte 0x00,0x6d,0x1f,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x01,0xd3,0x14,0x00,0x00
	.byte 0x6c,0xe0,0x14,0x00,0x00,0x6c,0xea,0x14
	.byte 0x00,0x00,0x6c,0xf4,0x14,0x00,0x00,0x34
	.byte 0xf9,0x00,0x08,0x00,0x00,0x6c,0xf9,0x13
	.byte 0x01,0x01,0x00,0x00,0x6d,0x45,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xd3
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x45,0x5a,0x00
	.byte 0x08,0x00,0x00,0x6d,0x24,0x13,0x01,0x01
	.byte 0x00,0x00,0x6d,0x6b,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x01,0xd3,0x14,0x00
	.byte 0x00,0x01,0xaf,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x48,0x96,0x00,0x08,0x00
	.byte 0x00,0x6d,0x4a,0x13,0x01,0x01,0x00,0x00
	.byte 0x6d,0x87,0x14,0x00,0x00,0x3c,0xc8,0x14
	.byte 0x00,0x00,0x01,0xd3,0x14,0x00,0x00,0x01
	.byte 0xd3,0x00,0x08,0x00,0x00,0x6d,0x70,0x06
	.byte 0x00,0x00,0x6d,0x87
	.ascii "points_func\0"
	.byte 0x02,0x13,0x01,0x01,0x00,0x00,0x6d,0xba
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x01,0xd3,0x14
	.byte 0x00,0x00,0x01,0xd3,0x00,0x08,0x00,0x00
	.byte 0x6d,0x9e,0x06,0x00,0x00,0x6d,0xba
	.ascii "line_func\0"
	.byte 0x02,0x13,0x01,0x01,0x00,0x00,0x6d,0xf0
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x01,0xd3,0x14
	.byte 0x00,0x00,0x01,0xd3,0x14,0x00,0x00,0x01
	.byte 0xd3,0x00,0x08,0x00,0x00,0x6d,0xcf,0x06
	.byte 0x00,0x00,0x6d,0xf0
	.ascii "triangle_func\0"
	.byte 0x02,0x13,0x01,0x01,0x00,0x00,0x6e,0x2f
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x01,0xd3,0x14
	.byte 0x00,0x00,0x01,0xd3,0x14,0x00,0x00,0x01
	.byte 0xd3,0x14,0x00,0x00,0x01,0xd3,0x00,0x08
	.byte 0x00,0x00,0x6e,0x09,0x06,0x00,0x00,0x6e
	.byte 0x2f
	.ascii "quad_func\0"
	.byte 0x02,0x13,0x01,0x01,0x00,0x00,0x6e,0x65
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x01
	.byte 0xaf,0x00,0x08,0x00,0x00,0x6e,0x44,0x06
	.byte 0x00,0x00,0x6e,0x65
	.ascii "rect_func\0"
	.byte 0x02,0x12,0x00,0x00,0x31,0xe9,0x08,0x00
	.byte 0x00,0x6e,0x7a,0x15,0x01,0x00,0x00,0x31
	.byte 0xc5,0x01,0x00,0x00,0x6e,0xbd,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x02,0x1c,0x14,0x00,0x00,0x02
	.byte 0x1c,0x14,0x00,0x00,0x31,0xc5,0x14,0x00
	.byte 0x00,0x6e,0x7f,0x00,0x08,0x00,0x00,0x6e
	.byte 0x84,0x12,0x00,0x00,0x3d,0x90,0x08,0x00
	.byte 0x00,0x6e,0xc2,0x15,0x01,0x00,0x00,0x31
	.byte 0xc5,0x01,0x00,0x00,0x6f,0x00,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x01,0xaf
	.byte 0x14,0x00,0x00,0x01,0xaf,0x14,0x00,0x00
	.byte 0x01,0xec,0x14,0x00,0x00,0x01,0xec,0x14
	.byte 0x00,0x00,0x01,0xec,0x14,0x00,0x00,0x01
	.byte 0xec,0x14,0x00,0x00,0x6e,0xc7,0x00,0x08
	.byte 0x00,0x00,0x6e,0xcc,0x13,0x01,0x01,0x00
	.byte 0x00,0x6f,0x17,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x02,0x1c,0x00,0x08,0x00
	.byte 0x00,0x6f,0x05,0x13,0x01,0x01,0x00,0x00
	.byte 0x6f,0x29,0x14,0x00,0x00,0x3c,0xc8,0x00
	.byte 0x08,0x00,0x00,0x6f,0x1c,0x13,0x01,0x01
	.byte 0x00,0x00,0x6f,0x45,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x01,0xd3,0x14,0x00
	.byte 0x00,0x01,0xd3,0x00,0x08
	.byte 0x00,0x00,0x6f,0x2e,0x15,0x01,0x00,0x00
	.byte 0x31,0xc5,0x01,0x00,0x00,0x6f,0x60,0x14
	.byte 0x00,0x00,0x3c,0xc8,0x14,0x00,0x00,0x31
	.byte 0xc5,0x00,0x08,0x00,0x00,0x6f,0x4a,0x12
	.byte 0x00,0x00,0x01,0xec,0x08,0x00,0x00,0x6f
	.byte 0x65,0x13,0x01,0x01,0x00,0x00,0x6f,0x86
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x02,0x1c,0x14,0x00,0x00,0x6f,0x6a,0x00
	.byte 0x08,0x00,0x00,0x6f,0x6f,0x12,0x00,0x00
	.byte 0x31,0xf6,0x08,0x00,0x00,0x6f,0x8b,0x13
	.byte 0x01,0x01,0x00,0x00,0x6f,0xbb,0x14,0x00
	.byte 0x00,0x3c,0xc8,0x14,0x00,0x00,0x02,0x1c
	.byte 0x14,0x00,0x00,0x35,0x55,0x14,0x00,0x00
	.byte 0x01,0xaf,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x6f,0x90,0x00,0x08,0x00,0x00
	.byte 0x6f,0x95,0x12,0x00,0x00,0x01,0xec,0x08
	.byte 0x00,0x00,0x6f,0xc0,0x13,0x01,0x01,0x00
	.byte 0x00,0x6f,0xeb,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x02,0x1c,0x14,0x00,0x00
	.byte 0x35,0x55,0x14,0x00,0x00,0x02,0x1c,0x14
	.byte 0x00,0x00,0x6f,0xc5,0x00,0x08,0x00,0x00
	.byte 0x6f,0xca,0x13,0x01,0x01,0x00,0x00,0x70
	.byte 0x07,0x14,0x00,0x00,0x3c,0xc8,0x14,0x00
	.byte 0x00,0x02,0x1c,0x14,0x00,0x00,0x35,0x55
	.byte 0x00,0x08,0x00,0x00,0x6f,0xf0,0x13,0x01
	.byte 0x01,0x00,0x00,0x70,0x1e,0x14,0x00,0x00
	.byte 0x3c,0xc8,0x14,0x00,0x00,0x35,0x55,0x00
	.byte 0x08,0x00,0x00,0x70,0x0c,0x13,0x01,0x01
	.byte 0x00,0x00,0x70,0x35,0x14,0x00,0x00,0x3c
	.byte 0xc8,0x14,0x00,0x00,0x35,0x55,0x00,0x08
	.byte 0x00,0x00,0x70,0x23,0x13,0x01,0x01,0x00
	.byte 0x00,0x70,0x4c,0x14,0x00,0x00,0x3c,0xc8
	.byte 0x14,0x00,0x00,0x31,0xc5,0x00,0x08,0x00
	.byte 0x00,0x70,0x3a,0x0d
	.ascii "dd_function_table\0"
	.byte 0xd4,0x04,0x00,0x00,0x74,0xb9,0x0e
	.ascii "RendererString\0"
	.byte 0x00,0x00,0x67,0x60,0x02,0x23,0x00,0x0e
	.ascii "UpdateState\0"
	.byte 0x00,0x00,0x67,0x72,0x02,0x23,0x04,0x0e
	.ascii "ClearIndex\0"
	.byte 0x00,0x00,0x67,0x89,0x02,0x23,0x08,0x0e
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x67,0xaf,0x02,0x23,0x0c,0x0e
	.ascii "Clear\0"
	.byte 0x00,0x00,0x67,0xda,0x02,0x23,0x10,0x0e
	.ascii "Index\0"
	.byte 0x00,0x00,0x67,0xf1,0x02,0x23,0x14,0x0e
	.ascii "Color\0"
	.byte 0x00,0x00,0x68,0x17,0x02,0x23,0x18,0x0e
	.ascii "SetBuffer\0"
	.byte 0x00,0x00,0x68,0x32,0x02,0x23,0x1c,0x0e
	.ascii "GetBufferSize\0"
	.byte 0x00,0x00,0x68,0x4e,0x02,0x23,0x20,0x0e
	.ascii "WriteColorSpan\0"
	.byte 0x00,0x00,0x68,0xba,0x02,0x23,0x24,0x0e
	.ascii "WriteMonocolorSpan\0"
	.byte 0x00,0x00,0x68,0xea,0x02,0x23,0x28,0x0e
	.ascii "WriteColorPixels\0"
	.byte 0x00,0x00,0x69,0x6a,0x02,0x23,0x2c,0x0e
	.ascii "WriteMonocolorPixels\0"
	.byte 0x00,0x00,0x69,0xae,0x02,0x23,0x30,0x0e
	.ascii "WriteIndexSpan\0"
	.byte 0x00,0x00,0x69,0xed,0x02,0x23,0x34,0x0e
	.ascii "WriteMonoindexSpan\0"
	.byte 0x00,0x00,0x6a,0x1d,0x02,0x23,0x38,0x0e
	.ascii "WriteIndexPixels\0"
	.byte 0x00,0x00,0x6a,0x70,0x02,0x23,0x3c,0x0e
	.ascii "WriteMonoindexPixels\0"
	.byte 0x00,0x00,0x6a,0xb4,0x02,0x23,0x40,0x0e
	.ascii "ReadIndexSpan\0"
	.byte 0x00,0x00,0x6a,0xda,0x02,0x23,0x44,0x0e
	.ascii "ReadColorSpan\0"
	.byte 0x00,0x00,0x6b,0x0f,0x02,0x23,0x48,0x0e
	.ascii "ReadIndexPixels\0"
	.byte 0x00,0x00,0x6b,0x58,0x02,0x23,0x4c,0x0e
	.ascii "ReadColorPixels\0"
	.byte 0x00,0x00,0x6b,0xb0,0x02,0x23,0x50,0x0e
	.ascii "Finish\0"
	.byte 0x00,0x00,0x6b,0xc2,0x02,0x23,0x54,0x0e
	.ascii "Flush\0"
	.byte 0x00,0x00,0x6b,0xd4,0x02,0x23,0x58,0x0e
	.ascii "IndexMask\0"
	.byte 0x00,0x00,0x6b,0xef,0x02,0x23,0x5c,0x0e
	.ascii "ColorMask\0"
	.byte 0x00,0x00,0x6c,0x19,0x02,0x23,0x60,0x0e
	.ascii "LogicOp\0"
	.byte 0x00,0x00,0x6c,0x34,0x02,0x23,0x64,0x0e
	.ascii "Dither\0"
	.byte 0x00,0x00,0x6c,0x4b,0x02,0x23,0x68,0x0e
	.ascii "Error\0"
	.byte 0x00,0x00,0x6c,0x5d,0x02,0x23,0x6c,0x0e
	.ascii "NearFar\0"
	.byte 0x00,0x00,0x6c,0x79,0x02,0x23,0x70,0x0e
	.ascii "AllocDepthBuffer\0"
	.byte 0x00,0x00,0x6c,0x8b,0x02,0x23,0x74,0x0e
	.ascii "ClearDepthBuffer\0"
	.byte 0x00,0x00,0x6c,0x9d,0x02,0x23,0x78,0x0e
	.ascii "DepthTestSpan\0"
	.byte 0x00,0x00,0x6c,0xd6,0x02,0x23,0x7c,0x0e
	.ascii "DepthTestPixels\0"
	.byte 0x00,0x00,0x6d,0x1f,0x03,0x23,0x80,0x01
	.byte 0x0e
	.ascii "ReadDepthSpanFloat\0"
	.byte 0x00,0x00,0x6d,0x45,0x03,0x23,0x84,0x01
	.byte 0x0e
	.ascii "ReadDepthSpanInt\0"
	.byte 0x00,0x00,0x6d,0x6b,0x03,0x23,0x88,0x01
	.byte 0x0e
	.ascii "PointsFunc\0"
	.byte 0x00,0x00,0x6d,0x8c,0x03,0x23,0x8c,0x01
	.byte 0x0e
	.ascii "LineFunc\0"
	.byte 0x00,0x00,0x6d,0xbf,0x03,0x23,0x90,0x01
	.byte 0x0e
	.ascii "TriangleFunc\0"
	.byte 0x00,0x00,0x6d,0xf5,0x03,0x23,0x94,0x01
	.byte 0x0e
	.ascii "QuadFunc\0"
	.byte 0x00,0x00,0x6e,0x34,0x03,0x23,0x98,0x01
	.byte 0x0e
	.ascii "RectFunc\0"
	.byte 0x00,0x00,0x6e,0x6a,0x03,0x23,0x9c,0x01
	.byte 0x0e
	.ascii "DrawPixels\0"
	.byte 0x00,0x00,0x6e,0xbd,0x03,0x23,0xa0,0x01
	.byte 0x0e
	.ascii "Bitmap\0"
	.byte 0x00,0x00,0x6f,0x00,0x03,0x23,0xa4,0x01
	.byte 0x0e
	.ascii "Begin\0"
	.byte 0x00,0x00,0x6f,0x17,0x03,0x23,0xa8,0x01
	.byte 0x0e
	.ascii "End\0"
	.byte 0x00,0x00,0x6f,0x29,0x03,0x23,0xac,0x01
	.byte 0x0e
	.ascii "RasterSetup\0"
	.byte 0x00,0x00,0x6f,0x45,0x03,0x23,0xb0,0x01
	.byte 0x0e
	.ascii "RenderVB\0"
	.byte 0x00,0x00,0x6f,0x60,0x03,0x23,0xb4,0x01
	.byte 0x0e
	.ascii "TexEnv\0"
	.byte 0x00,0x00,0x6f,0x86,0x03,0x23,0xb8,0x01
	.byte 0x0e
	.ascii "TexImage\0"
	.byte 0x00,0x00,0x6f,0xbb,0x03,0x23,0xbc,0x01
	.byte 0x0e
	.ascii "TexParameter\0"
	.byte 0x00,0x00,0x6f,0xeb,0x03,0x23,0xc0,0x01
	.byte 0x0e
	.ascii "BindTexture\0"
	.byte 0x00,0x00,0x70,0x07,0x03,0x23,0xc4,0x01
	.byte 0x0e
	.ascii "DeleteTexture\0"
	.byte 0x00,0x00,0x70,0x1e,0x03,0x23,0xc8,0x01
	.byte 0x0e
	.ascii "UpdateTexturePalette\0"
	.byte 0x00,0x00,0x70,0x35,0x03,0x23,0xcc,0x01
	.byte 0x0e
	.ascii "UseGlobalTexturePalette\0"
	.byte 0x00,0x00,0x70,0x4c,0x03,0x23,0xd0,0x01
	.byte 0x00,0x09,0x00,0x00,0x01,0xf5,0x40,0x00
	.byte 0x00,0x74,0xca,0x0a,0x00,0x00,0x02,0x03
	.byte 0x0f,0x00,0x09,0x00,0x00,0x01,0xf5,0x40
	.byte 0x00,0x00,0x74,0xdb,0x0a,0x00,0x00,0x02
	.byte 0x03,0x0f,0x00,0x09,0x00,0x00,0x01,0xec
	.byte 0x40,0x00,0x00,0x74,0xec,0x0a,0x00,0x00
	.byte 0x02,0x03,0x0f,0x00,0x0f,0x00,0x00,0x74
	.byte 0xdb,0x08,0x00,0x00,0x00,0x74,0xfe,0x0a
	.byte 0x00,0x00,0x02,0x03,0x1f,0x00,0x09,0x00
	.byte 0x00,0x01,0xf5,0x40,0x00,0x00,0x75,0x0f
	.byte 0x0a,0x00,0x00,0x02,0x03,0x0f,0x00,0x09
	.byte 0x00,0x00,0x01,0xec,0x40,0x00,0x00,0x75
	.byte 0x20,0x0a,0x00,0x00,0x02,0x03,0x0f,0x00
	.byte 0x0f,0x00,0x00,0x75,0x0f,0x08,0x00,0x00
	.byte 0x00,0x75,0x32,0x0a,0x00,0x00,0x02,0x03
	.byte 0x1f,0x00,0x09,0x00,0x00,0x01,0xec,0x08
	.byte 0x00,0x00,0x75,0x43,0x0a,0x00,0x00,0x02
	.byte 0x03,0x01,0x00,0x0f,0x00,0x00,0x75,0x32
	.byte 0x01,0x00,0x00,0x00,0x75,0x55,0x0a,0x00
	.byte 0x00,0x02,0x03,0x1f,0x00,0x09,0x00,0x00
	.byte 0x01,0xf5,0x40,0x00,0x00,0x75,0x66,0x0a
	.byte 0x00,0x00,0x02,0x03,0x0f,0x00,0x09,0x00
	.byte 0x00,0x01,0xec,0x40,0x00,0x00,0x75,0x77
	.byte 0x0a,0x00,0x00,0x02,0x03,0x0f,0x00,0x0f
	.byte 0x00,0x00,0x75,0x66,0x02,0x80,0x00,0x00
	.byte 0x75,0x89,0x0a,0x00,0x00,0x02,0x03,0x09
	.byte 0x00,0x06,0x00,0x00,0x01,0xd3
	.ascii "GLbitfield\0"
	.byte 0x03,0x08,0x00,0x00,0x75,0x9f,0x0d
	.ascii "gl_attrib_node\0"
	.byte 0x0c,0x02,0x00,0x00,0x75,0xdd,0x0e
	.ascii "kind\0"
	.byte 0x00,0x00,0x75,0x89,0x02,0x23,0x00,0x0e
	.ascii "data\0"
	.byte 0x00,0x00,0x31,0xf1,0x02,0x23,0x04,0x0e
	.ascii "next\0"
	.byte 0x00,0x00,0x75,0x9a,0x02,0x23,0x08,0x00
	.byte 0x09,0x00,0x00,0x75,0x9a,0x40,0x00,0x00
	.byte 0x75,0xee,0x0a,0x00,0x00,0x02,0x03,0x0f
	.byte 0x00,0x09,0x00,0x00,0x01,0xf5,0x10,0x00
	.byte 0x00,0x75,0xff,0x0a,0x00,0x00,0x02,0x03
	.byte 0x03,0x00,0x0d
	.ascii "gl_accum_attrib\0"
	.byte 0x10,0x02,0x00,0x00,0x76,0x2a,0x0e
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x75,0xee,0x02,0x23,0x00,0x00
	.byte 0x09,0x00,0x00,0x01,0xf5,0x10,0x00,0x00
	.byte 0x76,0x3b,0x0a,0x00,0x00,0x02,0x03,0x03
	.byte 0x00,0x09,0x00,0x00,0x01,0xf5,0x10,0x00
	.byte 0x00,0x76,0x4c,0x0a,0x00,0x00,0x02,0x03
	.byte 0x03,0x00,0x0d
	.ascii "gl_colorbuffer_attrib\0"
	.byte 0x58,0x02,0x00,0x00,0x77,0xfb,0x0e
	.ascii "ClearIndex\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x00,0x0e
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x76,0x2a,0x02,0x23,0x04,0x0e
	.ascii "IndexMask\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x14,0x0e
	.ascii "ColorMask\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x18,0x0e
	.ascii "SWmasking\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x1c,0x0e
	.ascii "DrawBuffer\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x20,0x0e
	.ascii "AlphaEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x24,0x0e
	.ascii "AlphaFunc\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x28,0x0e
	.ascii "AlphaRef\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x2c,0x0e
	.ascii "AlphaRefUbyte\0"
	.byte 0x00,0x00,0x31,0xd6,0x02,0x23,0x30,0x0e
	.ascii "BlendEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x31,0x0e
	.ascii "BlendSrc\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x34,0x0e
	.ascii "BlendDst\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x38,0x0e
	.ascii "BlendEquation\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x3c,0x0e
	.ascii "BlendColor\0"
	.byte 0x00,0x00,0x76,0x3b,0x02,0x23,0x40,0x0e
	.ascii "LogicOp\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x50,0x0e
	.ascii "IndexLogicOpEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x54,0x0e
	.ascii "ColorLogicOpEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x55,0x0e
	.ascii "SWLogicOpEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x56,0x0e
	.ascii "DitherFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x57,0x00
	.byte 0x09,0x00,0x00,0x31,0xd6,0x04,0x00,0x00
	.byte 0x78,0x0c,0x0a,0x00,0x00,0x02,0x03,0x03
	.byte 0x00,0x09,0x00,0x00,0x01,0xf5,0x0c,0x00
	.byte 0x00,0x78,0x1d,0x0a,0x00,0x00,0x02,0x03
	.byte 0x02,0x00,0x09,0x00,0x00,0x01,0xf5,0x10
	.byte 0x00,0x00,0x78,0x2e,0x0a,0x00,0x00,0x02
	.byte 0x03,0x03,0x00,0x09,0x00,0x00,0x01,0xf5
	.byte 0x10,0x00,0x00,0x78,0x3f,0x0a,0x00,0x00
	.byte 0x02,0x03,0x03,0x00,0x09,0x00,0x00,0x01
	.byte 0xf5,0x10,0x00,0x00,0x78,0x50,0x0a,0x00
	.byte 0x00,0x02,0x03,0x03,0x00,0x09,0x00,0x00
	.byte 0x01,0xf5,0x10,0x00,0x00,0x78,0x61,0x0a
	.byte 0x00,0x00,0x02,0x03,0x03,0x00,0x0d
	.ascii "gl_current_attrib\0"
	.byte 0x60,0x02,0x00,0x00,0x79,0x4b,0x0e
	.ascii "ByteColor\0"
	.byte 0x00,0x00,0x77,0xfb,0x02,0x23,0x00,0x0e
	.ascii "Index\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x04,0x0e
	.ascii "Normal\0"
	.byte 0x00,0x00,0x78,0x0c,0x02,0x23,0x08,0x0e
	.ascii "TexCoord\0"
	.byte 0x00,0x00,0x78,0x1d,0x02,0x23,0x14,0x0e
	.ascii "RasterPos\0"
	.byte 0x00,0x00,0x78,0x2e,0x02,0x23,0x24,0x0e
	.ascii "RasterDistance\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x34,0x0e
	.ascii "RasterColor\0"
	.byte 0x00,0x00,0x78,0x3f,0x02,0x23,0x38,0x0e
	.ascii "RasterIndex\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x48,0x0e
	.ascii "RasterTexCoord\0"
	.byte 0x00,0x00,0x78,0x50,0x02,0x23,0x4c,0x0e
	.ascii "RasterPosValid\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x5c,0x0e
	.ascii "EdgeFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x5d,0x00
	.byte 0x0d
	.ascii "gl_depthbuffer_attrib\0"
	.byte 0x0c,0x02,0x00,0x00,0x79,0x9e,0x0e
	.ascii "Func\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x00,0x0e
	.ascii "Clear\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x04,0x0e
	.ascii "Test\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x08,0x0e
	.ascii "Mask\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x09,0x00
	.byte 0x0d
	.ascii "gl_eval_attrib\0"
	.byte 0x38,0x02,0x00,0x00,0x7c,0x03,0x0e
	.ascii "Map1Color4\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x00,0x0e
	.ascii "Map1Index\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x01,0x0e
	.ascii "Map1Normal\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x02,0x0e
	.ascii "Map1TextureCoord1\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x03,0x0e
	.ascii "Map1TextureCoord2\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x04,0x0e
	.ascii "Map1TextureCoord3\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x05,0x0e
	.ascii "Map1TextureCoord4\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x06,0x0e
	.ascii "Map1Vertex3\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x07,0x0e
	.ascii "Map1Vertex4\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x08,0x0e
	.ascii "Map2Color4\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x09,0x0e
	.ascii "Map2Index\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x0a,0x0e
	.ascii "Map2Normal\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x0b,0x0e
	.ascii "Map2TextureCoord1\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x0c,0x0e
	.ascii "Map2TextureCoord2\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x0d,0x0e
	.ascii "Map2TextureCoord3\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x0e,0x0e
	.ascii "Map2TextureCoord4\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x0f,0x0e
	.ascii "Map2Vertex3\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x10,0x0e
	.ascii "Map2Vertex4\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x11,0x0e
	.ascii "AutoNormal\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x12,0x0e
	.ascii "MapGrid1un\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x14,0x0e
	.ascii "MapGrid1u1\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x18,0x0e
	.ascii "MapGrid1u2\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x1c,0x0e
	.ascii "MapGrid2un\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x20,0x0e
	.ascii "MapGrid2vn\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x24,0x0e
	.ascii "MapGrid2u1\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x28,0x0e
	.ascii "MapGrid2u2\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x2c,0x0e
	.ascii "MapGrid2v1\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x30,0x0e
	.ascii "MapGrid2v2\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x34,0x00
	.byte 0x09,0x00,0x00,0x01,0xf5,0x10,0x00,0x00
	.byte 0x7c,0x14,0x0a,0x00,0x00,0x02,0x03,0x03
	.byte 0x00,0x0d
	.ascii "gl_fog_attrib\0"
	.byte 0x28,0x02,0x00,0x00,0x7c,0x8d,0x0e
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x00,0x0e
	.ascii "Color\0"
	.byte 0x00,0x00,0x7c,0x03,0x02,0x23,0x04,0x0e
	.ascii "Density\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x14,0x0e
	.ascii "Start\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x18,0x0e
	.ascii "End\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x1c,0x0e
	.ascii "Index\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x20,0x0e
	.ascii "Mode\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x24,0x00
	.byte 0x0d
	.ascii "gl_hint_attrib\0"
	.byte 0x14,0x02,0x00,0x00,0x7d,0x0b,0x0e
	.ascii "PerspectiveCorrection\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x00,0x0e
	.ascii "PointSmooth\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x04,0x0e
	.ascii "LineSmooth\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x08,0x0e
	.ascii "PolygonSmooth\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x0c,0x0e
	.ascii "Fog\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x10,0x00
	.byte 0x09,0x00,0x00,0x01,0xf5,0x10,0x00,0x00
	.byte 0x7d,0x1c,0x0a,0x00,0x00,0x02,0x03,0x03
	.byte 0x00,0x09,0x00,0x00,0x01,0xf5,0x10,0x00
	.byte 0x00,0x7d,0x2d,0x0a,0x00,0x00,0x02,0x03
	.byte 0x03,0x00,0x09,0x00,0x00,0x01,0xf5,0x10
	.byte 0x00,0x00,0x7d,0x3e,0x0a,0x00,0x00,0x02
	.byte 0x03,0x03,0x00,0x09,0x00,0x00,0x01,0xf5
	.byte 0x10,0x00,0x00,0x7d,0x4f,0x0a,0x00,0x00
	.byte 0x02,0x03,0x03,0x00,0x09,0x00,0x00,0x01
	.byte 0xf5,0x10,0x00,0x00,0x7d,0x60,0x0a,0x00
	.byte 0x00,0x02,0x03,0x03,0x00,0x11
	.ascii "gl_light\0"
	.byte 0x10,0xe4,0x02,0x00,0x00,0x7f,0x22,0x0e
	.ascii "Ambient\0"
	.byte 0x00,0x00,0x7d,0x0b,0x02,0x23,0x00,0x0e
	.ascii "Diffuse\0"
	.byte 0x00,0x00,0x7d,0x1c,0x02,0x23,0x10,0x0e
	.ascii "Specular\0"
	.byte 0x00,0x00,0x7d,0x2d,0x02,0x23,0x20,0x0e
	.ascii "Position\0"
	.byte 0x00,0x00,0x7d,0x3e,0x02,0x23,0x30,0x0e
	.ascii "Direction\0"
	.byte 0x00,0x00,0x7d,0x4f,0x02,0x23,0x40,0x0e
	.ascii "SpotExponent\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x50,0x0e
	.ascii "SpotCutoff\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x54,0x0e
	.ascii "CosCutoff\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x58,0x0e
	.ascii "ConstantAttenuation\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x5c,0x0e
	.ascii "LinearAttenuation\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x60,0x0e
	.ascii "QuadraticAttenuation\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x64,0x0e
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x68,0x0e
	.ascii "NextEnabled\0"
	.byte 0x00,0x00,0x7f,0x22,0x02,0x23,0x6c,0x0e
	.ascii "VP_inf_norm\0"
	.byte 0x00,0x00,0x7f,0x27,0x02,0x23,0x70,0x0e
	.ascii "h_inf_norm\0"
	.byte 0x00,0x00,0x7f,0x38,0x02,0x23,0x7c,0x0e
	.ascii "NormDirection\0"
	.byte 0x00,0x00,0x7f,0x49,0x03,0x23,0x88,0x01
	.byte 0x0e
	.ascii "SpotExpTable\0"
	.byte 0x00,0x00,0x7f,0x6b,0x03,0x23,0x94,0x01
	.byte 0x0e
	.ascii "MatAmbient\0"
	.byte 0x00,0x00,0x7f,0x8f,0x03,0x23,0x94,0x21
	.byte 0x0e
	.ascii "MatDiffuse\0"
	.byte 0x00,0x00,0x7f,0xb1,0x03,0x23,0xac,0x21
	.byte 0x0e
	.ascii "MatSpecular\0"
	.byte 0x00,0x00,0x7f,0xd3,0x03,0x23,0xc4,0x21
	.byte 0x0e
	.ascii "dli\0"
	.byte 0x00,0x00,0x01,0xf5,0x03,0x23,0xdc,0x21
	.byte 0x0e
	.ascii "sli\0"
	.byte 0x00,0x00,0x01,0xf5,0x03,0x23,0xe0,0x21
	.byte 0x00,0x08,0x00,0x00,0x7d,0x60,0x09,0x00
	.byte 0x00,0x01,0xf5,0x0c,0x00,0x00,0x7f,0x38
	.byte 0x0a
	.byte 0x00,0x00,0x02,0x03,0x02,0x00,0x09,0x00
	.byte 0x00,0x01,0xf5,0x0c,0x00,0x00,0x7f,0x49
	.byte 0x0a,0x00,0x00,0x02,0x03,0x02,0x00,0x09
	.byte 0x00,0x00,0x01,0xf5,0x0c,0x00,0x00,0x7f
	.byte 0x5a,0x0a,0x00,0x00,0x02,0x03,0x02,0x00
	.byte 0x09,0x00,0x00,0x01,0xec,0x08,0x00,0x00
	.byte 0x7f,0x6b,0x0a,0x00,0x00,0x02,0x03,0x01
	.byte 0x00,0x0f,0x00,0x00,0x7f,0x5a,0x10,0x00
	.byte 0x00,0x00,0x7f,0x7e,0x10,0x00,0x00,0x02
	.byte 0x03,0x01,0xff,0x00,0x09,0x00,0x00,0x01
	.byte 0xec,0x0c,0x00,0x00,0x7f,0x8f,0x0a,0x00
	.byte 0x00,0x02,0x03,0x02,0x00,0x09,0x00,0x00
	.byte 0x7f,0x7e,0x18,0x00,0x00,0x7f,0xa0,0x0a
	.byte 0x00,0x00,0x02,0x03,0x01,0x00,0x09,0x00
	.byte 0x00,0x01,0xec,0x0c,0x00,0x00,0x7f,0xb1
	.byte 0x0a,0x00,0x00,0x02,0x03,0x02,0x00,0x09
	.byte 0x00,0x00,0x7f,0xa0,0x18,0x00,0x00,0x7f
	.byte 0xc2,0x0a,0x00,0x00,0x02,0x03,0x01,0x00
	.byte 0x09,0x00,0x00,0x01,0xec,0x0c,0x00,0x00
	.byte 0x7f,0xd3,0x0a,0x00,0x00,0x02,0x03,0x02
	.byte 0x00,0x09,0x00,0x00,0x7f,0xc2,0x18,0x00
	.byte 0x00,0x7f,0xe4,0x0a,0x00,0x00,0x02,0x03
	.byte 0x01,0x00,0x0f,0x00,0x00,0x7d,0x60,0x87
	.byte 0x20,0x00,0x00,0x7f,0xf6,0x0a,0x00,0x00
	.byte 0x02,0x03,0x07,0x00,0x09,0x00,0x00,0x01
	.byte 0xf5,0x10,0x00,0x00,0x80,0x07,0x0a,0x00
	.byte 0x00,0x02,0x03,0x03,0x00,0x0d
	.ascii "gl_lightmodel\0"
	.byte 0x14,0x02,0x00,0x00,0x80,0x51,0x0e
	.ascii "Ambient\0"
	.byte 0x00,0x00,0x7f,0xf6,0x02,0x23,0x00,0x0e
	.ascii "LocalViewer\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x10,0x0e
	.ascii "TwoSide\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x11,0x00
	.byte 0x09,0x00,0x00,0x01,0xf5,0x10,0x00,0x00
	.byte 0x80,0x62,0x0a,0x00,0x00,0x02,0x03,0x03
	.byte 0x00,0x09,0x00,0x00,0x01,0xf5,0x10,0x00
	.byte 0x00,0x80,0x73,0x0a,0x00,0x00,0x02,0x03
	.byte 0x03,0x00,0x09,0x00,0x00,0x01,0xf5,0x10
	.byte 0x00,0x00,0x80,0x84,0x0a,0x00,0x00,0x02
	.byte 0x03,0x03,0x00,0x09,0x00,0x00,0x01,0xf5
	.byte 0x10,0x00,0x00,0x80,0x95,0x0a,0x00,0x00
	.byte 0x02,0x03,0x03,0x00,0x0f,0x00,0x00,0x01
	.byte 0xf5,0x03,0x20,0x00,0x00,0x80,0xa8,0x10
	.byte 0x00,0x00,0x02,0x03,0x00,0xc7,0x00,0x11
	.ascii "gl_material\0"
	.byte 0x03,0x70,0x02,0x00,0x00,0x81,0x64,0x0e
	.ascii "Ambient\0"
	.byte 0x00,0x00,0x80,0x51,0x02,0x23,0x00,0x0e
	.ascii "Diffuse\0"
	.byte 0x00,0x00,0x80,0x62,0x02,0x23,0x10,0x0e
	.ascii "Specular\0"
	.byte 0x00,0x00,0x80,0x73,0x02,0x23,0x20,0x0e
	.ascii "Emission\0"
	.byte 0x00,0x00,0x80,0x84,0x02,0x23,0x30,0x0e
	.ascii "Shininess\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x40,0x0e
	.ascii "AmbientIndex\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x44,0x0e
	.ascii "DiffuseIndex\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x48,0x0e
	.ascii "SpecularIndex\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x4c,0x0e
	.ascii "ShineTable\0"
	.byte 0x00,0x00,0x80,0x95,0x02,0x23,0x50,0x00
	.byte 0x0f,0x00,0x00,0x80,0xa8,0x06,0xe0,0x00
	.byte 0x00,0x81,0x76,0x0a,0x00,0x00,0x02,0x03
	.byte 0x01,0x00,0x09,0x00,0x00,0x01,0xec,0x10
	.byte 0x00,0x00,0x81,0x87,0x0a,0x00,0x00,0x02
	.byte 0x03,0x03,0x00,0x09,0x00,0x00,0x81,0x76
	.byte 0x20,0x00,0x00,0x81,0x98,0x0a,0x00,0x00
	.byte 0x02,0x03,0x01,0x00,0x11
	.ascii "gl_light_attrib\0"
	.byte 0x8e,0x54,0x02,0x00,0x00,0x82,0xb9,0x0e
	.ascii "Light\0"
	.byte 0x00,0x00,0x7f,0xe4,0x02,0x23,0x00,0x0e
	.ascii "Model\0"
	.byte 0x00,0x00,0x80,0x07,0x04,0x23,0xa0,0x8e
	.byte 0x02,0x0e
	.ascii "Material\0"
	.byte 0x00,0x00,0x81,0x64,0x04,0x23,0xb4,0x8e
	.byte 0x02,0x0e
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x33,0x28,0x04,0x23,0x94,0x9c
	.byte 0x02,0x0e
	.ascii "ShadeModel\0"
	.byte 0x00,0x00,0x31,0xb8,0x04,0x23,0x98,0x9c
	.byte 0x02,0x0e
	.ascii "ColorMaterialFace\0"
	.byte 0x00,0x00,0x31,0xb8,0x04,0x23,0x9c,0x9c
	.byte 0x02,0x0e
	.ascii "ColorMaterialMode\0"
	.byte 0x00,0x00,0x31,0xb8,0x04,0x23,0xa0,0x9c
	.byte 0x02,0x0e
	.ascii "ColorMaterialBitmask\0"
	.byte 0x00,0x00,0x01,0xdf,0x04,0x23,0xa4,0x9c
	.byte 0x02,0x0e
	.ascii "ColorMaterialEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x04,0x23,0xa8,0x9c
	.byte 0x02,0x0e
	.ascii "FirstEnabled\0"
	.byte 0x00,0x00,0x7f,0x22,0x04,0x23,0xac,0x9c
	.byte 0x02,0x0e
	.ascii "Fast\0"
	.byte 0x00,0x00,0x33,0x28,0x04,0x23,0xb0,0x9c
	.byte 0x02,0x0e
	.ascii "BaseColor\0"
	.byte 0x00,0x00,0x81,0x87,0x04,0x23,0xb4,0x9c
	.byte 0x02,0x00,0x06,0x00,0x00,0x48,0x84
	.ascii "GLushort\0"
	.byte 0x03,0x0d
	.ascii "gl_line_attrib\0"
	.byte 0x0c,0x02,0x00,0x00,0x83,0x41,0x0e
	.ascii "SmoothFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x00,0x0e
	.ascii "StippleFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x01,0x0e
	.ascii "StipplePattern\0"
	.byte 0x00,0x00,0x82,0xb9,0x02,0x23,0x02,0x0e
	.ascii "StippleFactor\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x04,0x0e
	.ascii "Width\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x08,0x00
	.byte 0x0d
	.ascii "gl_list_attrib\0"
	.byte 0x04,0x02,0x00,0x00,0x83,0x69,0x0e
	.ascii "ListBase\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x00,0x00
	.byte 0x0f,0x00,0x00,0x01,0xb6,0x04,0x00,0x00
	.byte 0x00,0x83,0x7c,0x10,0x00,0x00,0x02,0x03
	.byte 0x00,0xff,0x00,0x0f,0x00,0x00,0x01,0xb6
	.byte 0x04,0x00,0x00,0x00,0x83,0x8f,0x10,0x00
	.byte 0x00,0x02,0x03,0x00,0xff,0x00,0x0f,0x00
	.byte 0x00,0x01,0xf5,0x04,0x00,0x00,0x00,0x83
	.byte 0xa2,0x10,0x00,0x00,0x02,0x03,0x00,0xff
	.byte 0x00,0x0f,0x00,0x00,0x01,0xf5,0x04,0x00
	.byte 0x00,0x00,0x83,0xb5,0x10,0x00,0x00,0x02
	.byte 0x03,0x00,0xff,0x00,0x0f,0x00,0x00,0x01
	.byte 0xf5,0x04,0x00,0x00,0x00,0x83,0xc8,0x10
	.byte 0x00,0x00,0x02,0x03,0x00,0xff,0x00,0x0f
	.byte 0x00,0x00,0x01,0xf5,0x04,0x00,0x00,0x00
	.byte 0x83,0xdb,0x10,0x00,0x00,0x02,0x03,0x00
	.byte 0xff,0x00,0x0f,0x00,0x00,0x01,0xf5,0x04
	.byte 0x00,0x00,0x00,0x83,0xee,0x10,0x00,0x00
	.byte 0x02,0x03,0x00,0xff,0x00,0x0f,0x00,0x00
	.byte 0x01,0xf5,0x04,0x00,0x00,0x00,0x84,0x01
	.byte 0x10,0x00,0x00,0x02,0x03,0x00,0xff,0x00
	.byte 0x0f,0x00,0x00,0x01,0xf5,0x04,0x00,0x00
	.byte 0x00,0x84,0x14,0x10,0x00,0x00,0x02,0x03
	.byte 0x00,0xff,0x00,0x0f,0x00,0x00,0x01,0xf5
	.byte 0x04,0x00,0x00,0x00,0x84,0x27,0x10,0x00
	.byte 0x00,0x02,0x03,0x00,0xff,0x00,0x11
	.ascii "gl_pixel_attrib\0"
	.byte 0x28,0x68,0x02,0x00,0x00,0x86,0xe6,0x0e
	.ascii "ReadBuffer\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x00,0x0e
	.ascii "RedBias\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x04,0x0e
	.ascii "RedScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x08,0x0e
	.ascii "GreenBias\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x0c,0x0e
	.ascii "GreenScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x10,0x0e
	.ascii "BlueBias\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x14,0x0e
	.ascii "BlueScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x18,0x0e
	.ascii "AlphaBias\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x1c,0x0e
	.ascii "AlphaScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x20,0x0e
	.ascii "DepthBias\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x24,0x0e
	.ascii "DepthScale\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x28,0x0e
	.ascii "IndexShift\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x2c,0x0e
	.ascii "IndexOffset\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x30,0x0e
	.ascii "MapColorFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x34,0x0e
	.ascii "MapStencilFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x35,0x0e
	.ascii "ZoomX\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x38,0x0e
	.ascii "ZoomY\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x3c,0x0e
	.ascii "MapStoSsize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x40,0x0e
	.ascii "MapItoIsize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x44,0x0e
	.ascii "MapItoRsize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x48,0x0e
	.ascii "MapItoGsize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x4c,0x0e
	.ascii "MapItoBsize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x50,0x0e
	.ascii "MapItoAsize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x54,0x0e
	.ascii "MapRtoRsize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x58,0x0e
	.ascii "MapGtoGsize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x5c,0x0e
	.ascii "MapBtoBsize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x60,0x0e
	.ascii "MapAtoAsize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x64,0x0e
	.ascii "MapStoS\0"
	.byte 0x00,0x00,0x83,0x69,0x02,0x23,0x68,0x0e
	.ascii "MapItoI\0"
	.byte 0x00,0x00,0x83,0x7c,0x03,0x23,0xe8,0x08
	.byte 0x0e
	.ascii "MapItoR\0"
	.byte 0x00,0x00,0x83,0x8f,0x03,0x23,0xe8,0x10
	.byte 0x0e
	.ascii "MapItoG\0"
	.byte 0x00,0x00,0x83,0xa2,0x03,0x23,0xe8,0x18
	.byte 0x0e
	.ascii "MapItoB\0"
	.byte 0x00,0x00,0x83,0xb5,0x03,0x23,0xe8,0x20
	.byte 0x0e
	.ascii "MapItoA\0"
	.byte 0x00,0x00,0x83,0xc8,0x03,0x23,0xe8,0x28
	.byte 0x0e
	.ascii "MapRtoR\0"
	.byte 0x00,0x00,0x83,0xdb,0x03,0x23,0xe8,0x30
	.byte 0x0e
	.ascii "MapGtoG\0"
	.byte 0x00,0x00,0x83,0xee,0x03,0x23,0xe8,0x38
	.byte 0x0e
	.ascii "MapBtoB\0"
	.byte 0x00,0x00,0x84,0x01,0x03,0x23,0xe8,0x40
	.byte 0x0e
	.ascii "MapAtoA\0"
	.byte 0x00,0x00,0x84,0x14,0x03,0x23,0xe8,0x48
	.byte 0x00,0x09,0x00,0x00,0x01,0xf5,0x0c,0x00
	.byte 0x00,0x86,0xf7,0x0a,0x00,0x00,0x02,0x03
	.byte 0x02,0x00,0x0d
	.ascii "gl_point_attrib\0"
	.byte 0x20,0x02,0x00,0x00,0x87,0x70,0x0e
	.ascii "SmoothFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x00,0x0e
	.ascii "Size\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x04,0x0e
	.ascii "Params\0"
	.byte 0x00,0x00,0x86,0xe6,0x02,0x23,0x08,0x0e
	.ascii "MinSize\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x14,0x0e
	.ascii "MaxSize\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x18,0x0e
	.ascii "Threshold\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x1c,0x00
	.byte 0x0d
	.ascii "gl_polygon_attrib\0"
	.byte 0x28,0x02,0x00,0x00,0x88,0xa3,0x0e
	.ascii "FrontFace\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x00,0x0e
	.ascii "FrontMode\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x04,0x0e
	.ascii "BackMode\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x08,0x0e
	.ascii "Unfilled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x0c,0x0e
	.ascii "CullFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x0d,0x0e
	.ascii "CullFaceMode\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x10,0x0e
	.ascii "CullBits\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x14,0x0e
	.ascii "SmoothFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x18,0x0e
	.ascii "StippleFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x19,0x0e
	.ascii "OffsetFactor\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x1c,0x0e
	.ascii "OffsetUnits\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x20,0x0e
	.ascii "OffsetPoint\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x24,0x0e
	.ascii "OffsetLine\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x25,0x0e
	.ascii "OffsetFill\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x26,0x0e
	.ascii "OffsetAny\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x27,0x00
	.byte 0x09,0x00,0x00,0x01,0xdf,0x80,0x00,0x00
	.byte 0x88,0xb4,0x0a,0x00,0x00,0x02,0x03,0x1f
	.byte 0x00,0x06,0x00,0x00,0x01,0xaf
	.ascii "GLsizei\0"
	.byte 0x03,0x0d
	.ascii "gl_scissor_attrib\0"
	.byte 0x14,0x02,0x00,0x00,0x89,0x1d,0x0e
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x00,0x0e
	.ascii "X\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x04,0x0e
	.ascii "Y\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x08,0x0e
	.ascii "Width\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x0c,0x0e
	.ascii "Height\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x10,0x00
	.byte 0x0d
	.ascii "gl_stencil_attrib\0"
	.byte 0x18,0x02,0x00,0x00,0x89,0xcb,0x0e
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x00,0x0e
	.ascii "Function\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x04,0x0e
	.ascii "FailFunc\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x08,0x0e
	.ascii "ZPassFunc\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x0c,0x0e
	.ascii "ZFailFunc\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x10,0x0e
	.ascii "Ref\0"
	.byte 0x00,0x00,0x66,0x26,0x02,0x23,0x14,0x0e
	.ascii "ValueMask\0"
	.byte 0x00,0x00,0x66,0x26,0x02,0x23,0x15,0x0e
	.ascii "Clear\0"
	.byte 0x00,0x00,0x66,0x26,0x02,0x23,0x16,0x0e
	.ascii "WriteMask\0"
	.byte 0x00,0x00,0x66,0x26,0x02,0x23,0x17,0x00
	.byte 0x09,0x00,0x00,0x01,0xf5,0x10,0x00,0x00
	.byte 0x89,0xdc,0x0a,0x00,0x00,0x02,0x03,0x03
	.byte 0x00,0x09,0x00,0x00,0x01,0xf5,0x10,0x00
	.byte 0x00,0x89,0xed,0x0a,0x00,0x00,0x02,0x03
	.byte 0x03,0x00,0x09,0x00,0x00,0x01,0xf5,0x10
	.byte 0x00,0x00,0x89,0xfe,0x0a,0x00,0x00,0x02
	.byte 0x03,0x03,0x00,0x09,0x00,0x00,0x01,0xf5
	.byte 0x10,0x00,0x00,0x8a,0x0f,0x0a,0x00,0x00
	.byte 0x02,0x03,0x03,0x00,0x09,0x00,0x00,0x01
	.byte 0xf5,0x10,0x00,0x00,0x8a,0x20,0x0a,0x00
	.byte 0x00,0x02,0x03,0x03,0x00,0x09,0x00,0x00
	.byte 0x01,0xf5,0x10,0x00,0x00,0x8a,0x31,0x0a
	.byte 0x00,0x00,0x02,0x03,0x03,0x00,0x09,0x00
	.byte 0x00,0x01,0xf5,0x10,0x00,0x00,0x8a,0x42
	.byte 0x0a,0x00,0x00,0x02,0x03,0x03,0x00,0x09
	.byte 0x00,0x00,0x01,0xf5,0x10,0x00,0x00,0x8a
	.byte 0x53,0x0a,0x00,0x00,0x02,0x03,0x03,0x00
	.byte 0x09,0x00,0x00,0x01,0xf5,0x10,0x00,0x00
	.byte 0x8a,0x64,0x0a,0x00,0x00,0x02,0x03,0x03
	.byte 0x00,0x0f,0x00,0x00,0x31,0xd6,0x04,0x00
	.byte 0x00,0x00,0x8a,0x77,0x10,0x00,0x00,0x02
	.byte 0x03,0x03,0xff,0x00,0x11
	.ascii "gl_texture_attrib\0"
	.byte 0x04,0xd8,0x02,0x00,0x00,0x8c,0xa6,0x0e
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x00,0x0e
	.ascii "EnvMode\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x04,0x0e
	.ascii "EnvColor\0"
	.byte 0x00,0x00,0x89,0xcb,0x02,0x23,0x08,0x0e
	.ascii "TexGenEnabled\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x18,0x0e
	.ascii "GenModeS\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x1c,0x0e
	.ascii "GenModeT\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x20,0x0e
	.ascii "GenModeR\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x24,0x0e
	.ascii "GenModeQ\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x28,0x0e
	.ascii "ObjectPlaneS\0"
	.byte 0x00,0x00,0x89,0xdc,0x02,0x23,0x2c,0x0e
	.ascii "ObjectPlaneT\0"
	.byte 0x00,0x00,0x89,0xed,0x02,0x23,0x3c,0x0e
	.ascii "ObjectPlaneR\0"
	.byte 0x00,0x00,0x89,0xfe,0x02,0x23,0x4c,0x0e
	.ascii "ObjectPlaneQ\0"
	.byte 0x00,0x00,0x8a,0x0f,0x02,0x23,0x5c,0x0e
	.ascii "EyePlaneS\0"
	.byte 0x00,0x00,0x8a,0x20,0x02,0x23,0x6c,0x0e
	.ascii "EyePlaneT\0"
	.byte 0x00,0x00,0x8a,0x31,0x02,0x23,0x7c,0x0e
	.ascii "EyePlaneR\0"
	.byte 0x00,0x00,0x8a,0x42,0x03,0x23,0x8c,0x01
	.byte 0x0e
	.ascii "EyePlaneQ\0"
	.byte 0x00,0x00,0x8a,0x53,0x03,0x23,0x9c,0x01
	.byte 0x0e
	.ascii "Current1D\0"
	.byte 0x00,0x00,0x35,0x55,0x03,0x23,0xac,0x01
	.byte 0x0e
	.ascii "Current2D\0"
	.byte 0x00,0x00,0x35,0x55,0x03,0x23,0xb0,0x01
	.byte 0x0e
	.ascii "Current3D\0"
	.byte 0x00,0x00,0x35,0x55,0x03,0x23,0xb4,0x01
	.byte 0x0e
	.ascii "Current\0"
	.byte 0x00,0x00,0x35,0x55,0x03,0x23,0xb8,0x01
	.byte 0x0e
	.ascii "Proxy1D\0"
	.byte 0x00,0x00,0x35,0x55,0x03,0x23,0xbc,0x01
	.byte 0x0e
	.ascii "Proxy2D\0"
	.byte 0x00,0x00,0x35,0x55,0x03,0x23,0xc0,0x01
	.byte 0x0e
	.ascii "Proxy3D\0"
	.byte 0x00,0x00,0x35,0x55,0x03,0x23,0xc4,0x01
	.byte 0x0e
	.ascii "SharedPalette\0"
	.byte 0x00,0x00,0x33,0x28,0x03,0x23,0xc8,0x01
	.byte 0x0e
	.ascii "Palette\0"
	.byte 0x00,0x00,0x8a,0x64,0x03,0x23,0xc9,0x01
	.byte 0x0e
	.ascii "PaletteSize\0"
	.byte 0x00,0x00,0x01,0xdf,0x03,0x23,0xcc,0x09
	.byte 0x0e
	.ascii "PaletteIntFormat\0"
	.byte 0x00,0x00,0x31,0xb8,0x03,0x23,0xd0,0x09
	.byte 0x0e
	.ascii "PaletteFormat\0"
	.byte 0x00,0x00,0x31,0xb8,0x03,0x23,0xd4,0x09
	.byte 0x00,0x09,0x00,0x00,0x01,0xec,0x10,0x00
	.byte 0x00,0x8c,0xb7,0x0a,0x00,0x00,0x02,0x03
	.byte 0x03,0x00,0x09,0x00,0x00,0x8c,0xa6,0x60
	.byte 0x00,0x00,0x8c,0xc8,0x0a,0x00,0x00,0x02
	.byte 0x03,0x05,0x00,0x09,0x00,0x00,0x33,0x28
	.byte 0x06,0x00,0x00,0x8c,0xd9,0x0a,0x00,0x00
	.byte 0x02,0x03,0x05,0x00,0x0d
	.ascii "gl_transform_attrib\0"
	.byte 0x6c,0x02,0x00,0x00,0x8d,0x53,0x0e
	.ascii "MatrixMode\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x00,0x0e
	.ascii "ClipEquation\0"
	.byte 0x00,0x00,0x8c,0xb7,0x02,0x23,0x04,0x0e
	.ascii "ClipEnabled\0"
	.byte 0x00,0x00,0x8c,0xc8,0x02,0x23,0x64,0x0e
	.ascii "AnyClip\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x6a,0x0e
	.ascii "Normalize\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x6b,0x00
	.byte 0x0d
	.ascii "gl_viewport_attrib\0"
	.byte 0x30,0x02,0x00,0x00,0x8d,0xfa,0x0e
	.ascii "X\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x00,0x0e
	.ascii "Y\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x04,0x0e
	.ascii "Width\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x08,0x0e
	.ascii "Height\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x0c,0x0e
	.ascii "Near\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x10,0x0e
	.ascii "Far\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x14,0x0e
	.ascii "Sx\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x18,0x0e
	.ascii "Sy\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x1c,0x0e
	.ascii "Sz\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x20,0x0e
	.ascii "Tx\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x24,0x0e
	.ascii "Ty\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x28,0x0e
	.ascii "Tz\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x2c,0x00
	.byte 0x09,0x00,0x00,0x75,0x9a,0x40,0x00,0x00
	.byte 0x8e,0x0b,0x0a,0x00,0x00,0x02,0x03,0x0f
	.byte 0x00,0x08,0x00,0x00,0x33,0x28,0x0d
	.ascii "gl_array_attrib\0"
	.byte 0x80,0x02,0x00,0x00,0x90,0xbb,0x0e
	.ascii "VertexSize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x00,0x0e
	.ascii "VertexType\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x04,0x0e
	.ascii "VertexStride\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x08,0x0e
	.ascii "VertexStrideB\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x0c,0x0e
	.ascii "VertexPtr\0"
	.byte 0x00,0x00,0x31,0xf1,0x02,0x23,0x10,0x0e
	.ascii "VertexEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x14,0x0e
	.ascii "NormalType\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x18,0x0e
	.ascii "NormalStride\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x1c,0x0e
	.ascii "NormalStrideB\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x20,0x0e
	.ascii "NormalPtr\0"
	.byte 0x00,0x00,0x31,0xf1,0x02,0x23,0x24,0x0e
	.ascii "NormalEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x28,0x0e
	.ascii "ColorSize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x2c,0x0e
	.ascii "ColorType\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x30,0x0e
	.ascii "ColorStride\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x34,0x0e
	.ascii "ColorStrideB\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x38,0x0e
	.ascii "ColorPtr\0"
	.byte 0x00,0x00,0x31,0xf1,0x02,0x23,0x3c,0x0e
	.ascii "ColorEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x40,0x0e
	.ascii "IndexType\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x44,0x0e
	.ascii "IndexStride\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x48,0x0e
	.ascii "IndexStrideB\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x4c,0x0e
	.ascii "IndexPtr\0"
	.byte 0x00,0x00,0x31,0xf1,0x02,0x23,0x50,0x0e
	.ascii "IndexEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x54,0x0e
	.ascii "TexCoordSize\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x58,0x0e
	.ascii "TexCoordType\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x5c,0x0e
	.ascii "TexCoordStride\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x60,0x0e
	.ascii "TexCoordStrideB\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x64,0x0e
	.ascii "TexCoordPtr\0"
	.byte 0x00,0x00,0x31,0xf1,0x02,0x23,0x68,0x0e
	.ascii "TexCoordEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x6c,0x0e
	.ascii "EdgeFlagStride\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x70,0x0e
	.ascii "EdgeFlagStrideB\0"
	.byte 0x00,0x00,0x88,0xb4,0x02,0x23,0x74,0x0e
	.ascii "EdgeFlagPtr\0"
	.byte 0x00,0x00,0x8e,0x0b,0x02,0x23,0x78,0x0e
	.ascii "EdgeFlagEnabled\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x7c,0x00
	.byte 0x0d
	.ascii "gl_pixelstore_attrib\0"
	.byte 0x1c,0x02,0x00,0x00,0x91,0x6a,0x0e
	.ascii "Alignment\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x00,0x0e
	.ascii "RowLength\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x04,0x0e
	.ascii "SkipPixels\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x08,0x0e
	.ascii "SkipRows\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x0c,0x0e
	.ascii "ImageHeight\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x10,0x0e
	.ascii "SkipImages\0"
	.byte 0x00,0x00,0x01,0xb6,0x02,0x23,0x14,0x0e
	.ascii "SwapBytes\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x18,0x0e
	.ascii "LsbFirst\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x19,0x00
	.byte 0x08,0x00,0x00,0x01,0xf5,0x0d
	.ascii "gl_1d_map\0"
	.byte 0x14,0x02,0x00,0x00,0x91,0xc3,0x0e
	.ascii "Order\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x00,0x0e
	.ascii "u1\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x04,0x0e
	.ascii "u2\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x08,0x0e
	.ascii "Points\0"
	.byte 0x00,0x00,0x91,0x6a,0x02,0x23,0x0c,0x0e
	.ascii "Retain\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x10,0x00
	.byte 0x0d
	.ascii "gl_2d_map\0"
	.byte 0x20,0x02,0x00,0x00,0x92,0x3d,0x0e
	.ascii "Uorder\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x00,0x0e
	.ascii "Vorder\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x04,0x0e
	.ascii "u1\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x08,0x0e
	.ascii "u2\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x0c,0x0e
	.ascii "v1\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x10,0x0e
	.ascii "v2\0"
	.byte 0x00,0x00,0x01,0xf5,0x02,0x23,0x14,0x0e
	.ascii "Points\0"
	.byte 0x00,0x00,0x91,0x6a,0x02,0x23,0x18,0x0e
	.ascii "Retain\0"
	.byte 0x00,0x00,0x33,0x28,0x02,0x23,0x1c,0x00
	.byte 0x11
	.ascii "gl_evaluators\0"
	.byte 0x01,0xd4,0x02,0x00,0x00,0x93,0xc7,0x0e
	.ascii "Map1Vertex3\0"
	.byte 0x00,0x00,0x91,0x6f,0x02,0x23,0x00,0x0e
	.ascii "Map1Vertex4\0"
	.byte 0x00,0x00,0x91,0x6f,0x02,0x23,0x14,0x0e
	.ascii "Map1Index\0"
	.byte 0x00,0x00,0x91,0x6f,0x02,0x23,0x28,0x0e
	.ascii "Map1Color4\0"
	.byte 0x00,0x00,0x91,0x6f,0x02,0x23,0x3c,0x0e
	.ascii "Map1Normal\0"
	.byte 0x00,0x00,0x91,0x6f,0x02,0x23,0x50,0x0e
	.ascii "Map1Texture1\0"
	.byte 0x00,0x00,0x91,0x6f,0x02,0x23,0x64,0x0e
	.ascii "Map1Texture2\0"
	.byte 0x00,0x00,0x91,0x6f,0x02,0x23,0x78,0x0e
	.ascii "Map1Texture3\0"
	.byte 0x00,0x00,0x91,0x6f,0x03,0x23,0x8c,0x01
	.byte 0x0e
	.ascii "Map1Texture4\0"
	.byte 0x00,0x00,0x91,0x6f,0x03,0x23,0xa0,0x01
	.byte 0x0e
	.ascii "Map2Vertex3\0"
	.byte 0x00,0x00,0x91,0xc3,0x03,0x23,0xb4,0x01
	.byte 0x0e
	.ascii "Map2Vertex4\0"
	.byte 0x00,0x00,0x91,0xc3,0x03,0x23,0xd4,0x01
	.byte 0x0e
	.ascii "Map2Index\0"
	.byte 0x00,0x00,0x91,0xc3,0x03,0x23,0xf4,0x01
	.byte 0x0e
	.ascii "Map2Color4\0"
	.byte 0x00,0x00,0x91,0xc3,0x03,0x23,0x94,0x02
	.byte 0x0e
	.ascii "Map2Normal\0"
	.byte 0x00,0x00,0x91,0xc3,0x03,0x23,0xb4,0x02
	.byte 0x0e
	.ascii "Map2Texture1\0"
	.byte 0x00,0x00,0x91,0xc3,0x03,0x23,0xd4,0x02
	.byte 0x0e
	.ascii "Map2Texture2\0"
	.byte 0x00,0x00,0x91,0xc3,0x03,0x23,0xf4,0x02
	.byte 0x0e
	.ascii "Map2Texture3\0"
	.byte 0x00,0x00,0x91,0xc3,0x03,0x23,0x94,0x03
	.byte 0x0e
	.ascii "Map2Texture4\0"
	.byte 0x00,0x00,0x91,0xc3,0x03,0x23,0xb4,0x03
	.byte 0x00,0x0d
	.ascii "gl_feedback\0"
	.byte 0x14,0x02,0x00,0x00,0x94,0x25,0x0e
	.ascii "Type\0"
	.byte 0x00,0x00,0x31,0xb8,0x02,0x23,0x00,0x0e
	.ascii "Mask\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x04,0x0e
	.ascii "Buffer\0"
	.byte 0x00,0x00,0x91,0x6a,0x02,0x23,0x08,0x0e
	.ascii "BufferSize\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x0c,0x0e
	.ascii "Count\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x10,0x00
	.byte 0x08,0x00,0x00,0x01,0xdf,0x0f,0x00,0x00
	.byte 0x01,0xdf,0x01,0x00,0x00,0x00,0x94,0x3c
	.byte 0x0a,0x00,0x00,0x02,0x03,0x3f,0x00,0x11
	.ascii "gl_selection\0"
	.byte 0x01,0x20,0x02,0x00,0x00,0x94,0xf1,0x0e
	.ascii "Buffer\0"
	.byte 0x00,0x00,0x94,0x25,0x02,0x23,0x00,0x0e
	.ascii "BufferSize\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x04,0x0e
	.ascii "BufferCount\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x08,0x0e
	.ascii "Hits\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x0c,0x0e
	.ascii "NameStackDepth\0"
	.byte 0x00,0x00,0x01,0xdf,0x02,0x23,0x10,0x0e
	.ascii "NameStack\0"
	.byte 0x00,0x00,0x94,0x2a,0x02,0x23,0x14,0x0e
	.ascii "HitFlag\0"
	.byte 0x00,0x00,0x33,0x28,0x03,0x23,0x94,0x02
	.byte 0x0e
	.ascii "HitMinZ\0"
	.byte 0x00,0x00,0x01,0xf5,0x03,0x23,0x98,0x02
	.byte 0x0e
	.ascii "HitMaxZ\0"
	.byte 0x00,0x00,0x01,0xf5,0x03,0x23,0x9c,0x02
	.byte 0x00,0x07
	.ascii "vertex_buffer\0"
	.byte 0x01,0x08,0x00,0x00,0x94,0xf1,0x07
	.ascii "pixel_buffer\0"
	.byte 0x01,0x08,0x00,0x00,0x95,0x06,0x06,0x00
	.byte 0x00,0x35,0xfb
	.ascii "GLcontext\0"
	.byte 0x02,0x08,0x00,0x00,0x95,0x1a,0x17
	.ascii "clip_span\0"
	.byte 0x03,0x01,0x7c
	.uaword clip_span
	.uaword .L138
	.byte 0x01,0x6e,0x01,0x00,0x00,0x01,0xdf,0x01
	.byte 0x00,0x00,0x95,0xa5,0x03,0x00,0x00,0x95
	.byte 0x2a
	.ascii "ctx\0"
	.byte 0x01,0x7a,0x03,0x91,0xc4,0x00,0x03,0x00
	.byte 0x00,0x01,0xb6
	.ascii "n\0"
	.byte 0x01,0x7b,0x03,0x91,0xc8,0x00,0x03,0x00
	.byte 0x00,0x01,0xb6
	.ascii "x\0"
	.byte 0x01,0x7b,0x03,0x91,0xcc,0x00,0x03,0x00
	.byte 0x00,0x01,0xb6
	.ascii "y\0"
	.byte 0x01,0x7b,0x03,0x91,0xd0,0x00,0x03,0x00
	.byte 0x00,0x31,0xe4
	.ascii "mask\0"
	.byte 0x01,0x7b,0x03,0x91,0xd4,0x00,0x04
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0xb6,0x01,0x01,0x7d,0x02
	.byte 0x91,0x78,0x00,0x18
	.ascii "gl_write_index_span\0"
	.byte 0x01,0x02,0x01,0xaa
	.uaword gl_write_index_span
	.uaword .L323
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x96,0x60
	.byte 0x03,0x00,0x00,0x95,0x2a
	.ascii "ctx\0"
	.byte 0x01,0xa7,0x03,0x91,0xc4,0x00,0x03,0x00
	.byte 0x00,0x01,0xdf
	.ascii "n\0"
	.byte 0x01,0xa8,0x03,0x91,0xc8,0x00,0x03,0x00
	.byte 0x00,0x01,0xb6
	.ascii "x\0"
	.byte 0x01,0xa8,0x03,0x91,0xcc,0x00,0x03,0x00
	.byte 0x00,0x01,0xb6
	.ascii "y\0"
	.byte 0x01,0xa8,0x03,0x91,0xd0,0x00,0x03,0x00
	.byte 0x00,0x66,0x21
	.ascii "z\0"
	.byte 0x01,0xa8,0x03,0x91,0xd4,0x00,0x03,0x00
	.byte 0x00,0x94,0x25
	.ascii "index\0"
	.byte 0x01,0xa9,0x03,0x91,0xd8,0x00,0x03,0x00
	.byte 0x00,0x31,0xb8
	.ascii "primitive\0"
	.byte 0x01,0xa9,0x03,0x91,0xdc,0x00,0x04
	.ascii "mask\0"
	.byte 0x00,0x00,0x96,0x60,0x01,0x01,0xab,0x03
	.byte 0x91,0xc0,0x73,0x04
	.ascii "index_save\0"
	.byte 0x00,0x00,0x96,0x73,0x01,0x01,0xac,0x03
	.byte 0x91,0xc0,0x41,0x00,0x0f,0x00,0x00,0x31
	.byte 0xd6,0x06,0x40,0x00,0x00,0x96,0x73,0x10
	.byte 0x00,0x00,0x02,0x03,0x06,0x3f,0x00,0x0f
	.byte 0x00,0x00,0x01,0xdf,0x19,0x00,0x00,0x00
	.byte 0x96,0x86,0x10,0x00,0x00,0x02,0x03,0x06
	.byte 0x3f,0x00,0x19
	.ascii "gl_write_monoindex_span\0"
	.byte 0x01,0x02,0x01,0x01,0x02
	.uaword gl_write_monoindex_span
	.uaword .L568
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x97,0x8e
	.byte 0x03,0x00,0x00,0x95,0x2a
	.ascii "ctx\0"
	.byte 0x01,0xff,0x03,0x91,0xc4,0x00,0x1a,0x00
	.byte 0x00,0x01,0xdf
	.ascii "n\0"
	.byte 0x01,0x01,0x00,0x03,0x91,0xc8,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "x\0"
	.byte 0x01,0x01,0x00,0x03,0x91,0xcc,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "y\0"
	.byte 0x01,0x01,0x00,0x03,0x91,0xd0,0x00,0x1a
	.byte 0x00,0x00,0x66,0x21
	.ascii "z\0"
	.byte 0x01,0x01,0x00,0x03,0x91,0xd4,0x00,0x1a
	.byte 0x00,0x00,0x01,0xdf
	.ascii "index\0"
	.byte 0x01,0x01,0x01,0x03,0x91,0xd8,0x00,0x1a
	.byte 0x00,0x00,0x31,0xb8
	.ascii "primitive\0"
	.byte 0x01,0x01,0x01,0x03,0x91,0xdc,0x00,0x1b
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0xdf,0x01,0x01,0x01,0x03
	.byte 0x02,0x91,0x7c,0x1b
	.ascii "mask\0"
	.byte 0x00,0x00,0x97,0x8e,0x01,0x01,0x01,0x04
	.byte 0x03,0x91,0xbc,0x73,0x1b
	.ascii "index_save\0"
	.byte 0x00,0x00,0x97,0xa1,0x01,0x01,0x01,0x05
	.byte 0x03,0x91,0xbc,0x41,0x1c
	.uaword .L430
	.uaword .L566
	.byte 0x1c
	.uaword .L440
	.uaword .L547
	.byte 0x1c
	.uaword .L441
	.uaword .L546
	.byte 0x1b
	.ascii "ispan\0"
	.byte 0x00,0x00,0x97,0xb4,0x01,0x01,0x01,0x30
	.byte 0x04,0x91,0xbc,0x8f,0x7f,0x00,0x00,0x00
	.byte 0x00,0x0f,0x00,0x00,0x31,0xd6,0x06,0x40
	.byte 0x00,0x00,0x97,0xa1,0x10,0x00,0x00,0x02
	.byte 0x03,0x06,0x3f,0x00,0x0f,0x00,0x00,0x01
	.byte 0xdf,0x19,0x00,0x00,0x00,0x97,0xb4,0x10
	.byte 0x00,0x00,0x02,0x03,0x06,0x3f,0x00,0x0f
	.byte 0x00,0x00,0x01,0xdf,0x19,0x00,0x00,0x00
	.byte 0x97,0xc7,0x10,0x00,0x00,0x02,0x03,0x06
	.byte 0x3f,0x00,0x19
	.ascii "gl_write_color_span\0"
	.byte 0x01,0x02,0x01,0x01,0x6c
	.uaword gl_write_color_span
	.uaword .L876
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x99,0x83
	.byte 0x1a,0x00,0x00,0x95,0x2a
	.ascii "ctx\0"
	.byte 0x01,0x01,0x67,0x03,0x91,0xc4,0x00,0x1a
	.byte 0x00,0x00,0x01,0xdf
	.ascii "n\0"
	.byte 0x01,0x01,0x68,0x03,0x91,0xc8,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "x\0"
	.byte 0x01,0x01,0x68,0x03,0x91,0xcc,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "y\0"
	.byte 0x01,0x01,0x68,0x03,0x91,0xd0,0x00,0x1a
	.byte 0x00,0x00,0x66,0x21
	.ascii "z\0"
	.byte 0x01,0x01,0x68,0x03,0x91,0xd4,0x00,0x1a
	.byte 0x00,0x00,0x31,0xe4
	.ascii "r\0"
	.byte 0x01,0x01,0x69,0x03,0x91,0xd8,0x00,0x1a
	.byte 0x00,0x00,0x31,0xe4
	.ascii "g\0"
	.byte 0x01,0x01,0x69,0x03,0x91,0xdc,0x00,0x1a
	.byte 0x00,0x00,0x31,0xe4
	.ascii "b\0"
	.byte 0x01,0x01,0x6a,0x03,0x91,0xe0,0x00,0x1a
	.byte 0x00,0x00,0x31,0xe4
	.ascii "a\0"
	.byte 0x01,0x01,0x6a,0x03,0x91,0xe4,0x00,0x1a
	.byte 0x00,0x00,0x31,0xb8
	.ascii "primitive\0"
	.byte 0x01,0x01,0x6b,0x03,0x91,0xe8,0x00,0x1b
	.ascii "mask\0"
	.byte 0x00,0x00,0x99,0x83,0x01,0x01,0x01,0x6d
	.byte 0x03,0x91,0xc0,0x73,0x1b
	.ascii "write_all\0"
	.byte 0x00,0x00,0x33,0x28,0x01,0x01,0x01,0x6e
	.byte 0x03,0x91,0xbf,0x73,0x1b
	.ascii "rtmp\0"
	.byte 0x00,0x00,0x99,0x96,0x01,0x01,0x01,0x6f
	.byte 0x03,0x91,0xff,0x66,0x1b
	.ascii "gtmp\0"
	.byte 0x00,0x00,0x99,0xa9,0x01,0x01,0x01,0x6f
	.byte 0x03,0x91,0xbf,0x5a,0x1b
	.ascii "btmp\0"
	.byte 0x00,0x00,0x99,0xbc,0x01,0x01,0x01,0x6f
	.byte 0x03,0x91,0xff,0x4d,0x1b
	.ascii "atmp\0"
	.byte 0x00,0x00,0x99,0xcf,0x01,0x01,0x01,0x6f
	.byte 0x03,0x91,0xbf,0x41,0x1b
	.ascii "red\0"
	.byte 0x00,0x00,0x31,0xe4,0x01,0x01,0x01,0x70
	.byte 0x03,0x91,0xb8,0x41,0x1b
	.ascii "green\0"
	.byte 0x00,0x00,0x31,0xe4,0x01,0x01,0x01,0x70
	.byte 0x03,0x91,0xb4,0x41,0x1b
	.ascii "blue\0"
	.byte 0x00,0x00,0x31,0xe4,0x01,0x01,0x01,0x70
	.byte 0x03,0x91,0xb0,0x41,0x1b
	.ascii "alpha\0"
	.byte 0x00,0x00,0x31,0xe4,0x01,0x01,0x01,0x70
	.byte 0x03,0x91,0xac,0x41,0x1c
	.uaword .L694
	.uaword .L747
	.byte 0x1c
	.uaword .L715
	.uaword .L746
	.byte 0x1c
	.uaword .L716
	.uaword .L745
	.byte 0x1c
	.uaword .L720
	.uaword .L744
	.byte 0x1c
	.uaword .L721
	.uaword .L743
	.byte 0x1b
	.ascii "m\0"
	.byte 0x00,0x00,0x01,0xdf,0x01,0x01,0x01,0xb6
	.byte 0x03,0x91,0xa8,0x41,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x0f,0x00,0x00,0x31,0xd6,0x06
	.byte 0x40,0x00,0x00,0x99,0x96,0x10,0x00,0x00
	.byte 0x02,0x03,0x06,0x3f,0x00,0x0f,0x00,0x00
	.byte 0x31,0xd6,0x06,0x40,0x00,0x00,0x99,0xa9
	.byte 0x10,0x00,0x00,0x02,0x03,0x06,0x3f,0x00
	.byte 0x0f,0x00,0x00,0x31,0xd6,0x06,0x40,0x00
	.byte 0x00,0x99,0xbc,0x10,0x00,0x00,0x02,0x03
	.byte 0x06,0x3f,0x00,0x0f,0x00,0x00,0x31,0xd6
	.byte 0x06,0x40,0x00,0x00,0x99,0xcf,0x10,0x00
	.byte 0x00,0x02,0x03,0x06,0x3f,0x00,0x0f,0x00
	.byte 0x00,0x31,0xd6,0x06,0x40,0x00,0x00,0x99
	.byte 0xe2,0x10,0x00,0x00,0x02,0x03,0x06,0x3f
	.byte 0x00,0x19
	.ascii "gl_write_monocolor_span\0"
	.byte 0x01,0x02,0x01,0x02,0x04
	.uaword gl_write_monocolor_span
	.uaword .L1260
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9b,0x9a
	.byte 0x1a,0x00,0x00,0x95,0x2a
	.ascii "ctx\0"
	.byte 0x01,0x02,0x00,0x03,0x91,0xc4,0x00,0x1a
	.byte 0x00,0x00,0x01,0xdf
	.ascii "n\0"
	.byte 0x01,0x02,0x01,0x03,0x91,0xc8,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "x\0"
	.byte 0x01,0x02,0x01,0x03,0x91,0xcc,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "y\0"
	.byte 0x01,0x02,0x01,0x03,0x91,0xd0,0x00,0x1a
	.byte 0x00,0x00,0x66,0x21
	.ascii "z\0"
	.byte 0x01,0x02,0x01,0x03,0x91,0xd4,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "r\0"
	.byte 0x01,0x02,0x02,0x03,0x91,0xd8,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "g\0"
	.byte 0x01,0x02,0x02,0x03,0x91,0xdc,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "b\0"
	.byte 0x01,0x02,0x02,0x03,0x91,0xe0,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "a\0"
	.byte 0x01,0x02,0x02,0x03,0x91,0xe4,0x00,0x1a
	.byte 0x00,0x00,0x31,0xb8
	.ascii "primitive\0"
	.byte 0x01,0x02,0x03,0x03,0x91,0xe8,0x00,0x1b
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0xdf,0x01,0x01,0x02,0x05
	.byte 0x02,0x91,0x7c,0x1b
	.ascii "mask\0"
	.byte 0x00,0x00,0x9b,0x9a,0x01,0x01,0x02,0x06
	.byte 0x03,0x91,0xbc,0x73,0x1b
	.ascii "write_all\0"
	.byte 0x00,0x00,0x33,0x28,0x01,0x01,0x02,0x07
	.byte 0x03,0x91,0xbb,0x73,0x1b
	.ascii "red\0"
	.byte 0x00,0x00,0x9b,0xad,0x01,0x01,0x02,0x08
	.byte 0x03,0x91,0xfb,0x66,0x1b
	.ascii "green\0"
	.byte 0x00,0x00,0x9b,0xc0,0x01,0x01,0x02,0x08
	.byte 0x03,0x91,0xbb,0x5a,0x1b
	.ascii "blue\0"
	.byte 0x00,0x00,0x9b,0xd3,0x01,0x01,0x02,0x08
	.byte 0x03,0x91,0xfb,0x4d,0x1b
	.ascii "alpha\0"
	.byte 0x00,0x00,0x9b,0xe6,0x01,0x01,0x02,0x08
	.byte 0x03,0x91,0xbb,0x41,0x1c
	.uaword .L938
	.uaword .L971
	.byte 0x1c
	.uaword .L942
	.uaword .L970
	.byte 0x1c
	.uaword .L943
	.uaword .L969
	.byte 0x1b
	.ascii "alpha\0"
	.byte 0x00,0x00,0x9b,0xf9,0x01,0x01,0x02,0x24
	.byte 0x04,0x91,0xfb,0xb4,0x7f,0x00,0x00,0x00
	.byte 0x1c
	.uaword .L972
	.uaword .L1025
	.byte 0x1c
	.uaword .L993
	.uaword .L1024
	.byte 0x1c
	.uaword .L994
	.uaword .L1023
	.byte 0x1c
	.uaword .L998
	.uaword .L1022
	.byte 0x1c
	.uaword .L999
	.uaword .L1021
	.byte 0x1b
	.ascii "m\0"
	.byte 0x00,0x00,0x01,0xdf,0x01,0x01,0x02,0x39
	.byte 0x03,0x91,0xb4,0x41,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x0f,0x00,0x00,0x31,0xd6,0x06
	.byte 0x40,0x00,0x00,0x9b,0xad,0x10,0x00,0x00
	.byte 0x02,0x03,0x06,0x3f,0x00,0x0f,0x00,0x00
	.byte 0x31,0xd6,0x06,0x40,0x00,0x00,0x9b,0xc0
	.byte 0x10,0x00,0x00,0x02,0x03,0x06,0x3f,0x00
	.byte 0x0f,0x00,0x00,0x31,0xd6,0x06,0x40,0x00
	.byte 0x00,0x9b,0xd3,0x10,0x00,0x00,0x02,0x03
	.byte 0x06,0x3f,0x00,0x0f,0x00,0x00,0x31,0xd6
	.byte 0x06,0x40,0x00,0x00,0x9b,0xe6,0x10,0x00
	.byte 0x00,0x02,0x03,0x06,0x3f,0x00,0x0f,0x00
	.byte 0x00,0x31,0xd6,0x06,0x40,0x00,0x00,0x9b
	.byte 0xf9,0x10,0x00,0x00,0x02,0x03,0x06,0x3f
	.byte 0x00,0x0f,0x00,0x00,0x31,0xd6,0x06,0x40
	.byte 0x00,0x00,0x9c,0x0c,0x10,0x00,0x00,0x02
	.byte 0x03,0x06,0x3f,0x00,0x19
	.ascii "gl_write_texture_span\0"
	.byte 0x01,0x02,0x01,0x02,0xaf
	.uaword gl_write_texture_span
	.uaword .L1567
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9e,0x07
	.byte 0x1a,0x00,0x00,0x95,0x2a
	.ascii "ctx\0"
	.byte 0x01,0x02,0xa8,0x03,0x91,0xc4,0x00,0x1a
	.byte 0x00,0x00,0x01,0xdf
	.ascii "n\0"
	.byte 0x01,0x02,0xa9,0x03,0x91,0xc8,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "x\0"
	.byte 0x01,0x02,0xa9,0x03,0x91,0xcc,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "y\0"
	.byte 0x01,0x02,0xa9,0x03,0x91,0xd0,0x00,0x1a
	.byte 0x00,0x00,0x66,0x21
	.ascii "z\0"
	.byte 0x01,0x02,0xa9,0x03,0x91,0xd4,0x00,0x1a
	.byte 0x00,0x00,0x91,0x6a
	.ascii "s\0"
	.byte 0x01,0x02,0xaa,0x03,0x91,0xd8,0x00,0x1a
	.byte 0x00,0x00,0x91,0x6a
	.ascii "t\0"
	.byte 0x01,0x02,0xaa,0x03,0x91,0xdc,0x00,0x1a
	.byte 0x00,0x00,0x91,0x6a
	.ascii "u\0"
	.byte 0x01,0x02,0xaa,0x03,0x91,0xe0,0x00,0x1a
	.byte 0x00,0x00,0x91,0x6a
	.ascii "lambda\0"
	.byte 0x01,0x02,0xab,0x03,0x91,0xe4,0x00,0x1a
	.byte 0x00,0x00,0x31,0xe4
	.ascii "r\0"
	.byte 0x01,0x02,0xac,0x03,0x91,0xe8,0x00,0x1a
	.byte 0x00,0x00,0x31,0xe4
	.ascii "g\0"
	.byte 0x01,0x02,0xac,0x03,0x91,0xec,0x00,0x1a
	.byte 0x00,0x00,0x31,0xe4
	.ascii "b\0"
	.byte 0x01,0x02,0xad,0x03,0x91,0xf0,0x00,0x1a
	.byte 0x00,0x00,0x31,0xe4
	.ascii "a\0"
	.byte 0x01,0x02,0xad,0x03,0x91,0xf4,0x00,0x1a
	.byte 0x00,0x00,0x31,0xb8
	.ascii "primitive\0"
	.byte 0x01,0x02,0xae,0x03,0x91,0xf8,0x00,0x1b
	.ascii "mask\0"
	.byte 0x00,0x00,0x9e,0x07,0x01,0x01,0x02,0xb0
	.byte 0x03,0x91,0xc0,0x73,0x1b
	.ascii "write_all\0"
	.byte 0x00,0x00,0x33,0x28,0x01,0x01,0x02,0xb1
	.byte 0x03,0x91,0xbf,0x73,0x1b
	.ascii "rtmp\0"
	.byte 0x00,0x00,0x9e,0x1a,0x01,0x01,0x02,0xb2
	.byte 0x03,0x91,0xff,0x66,0x1b
	.ascii "gtmp\0"
	.byte 0x00,0x00,0x9e,0x2d,0x01,0x01,0x02,0xb2
	.byte 0x03,0x91,0xbf,0x5a,0x1b
	.ascii "btmp\0"
	.byte 0x00,0x00,0x9e,0x40,0x01,0x01,0x02,0xb2
	.byte 0x03,0x91,0xff,0x4d,0x1b
	.ascii "atmp\0"
	.byte 0x00,0x00,0x9e,0x53,0x01,0x01,0x02,0xb2
	.byte 0x03,0x91,0xbf,0x41,0x1b
	.ascii "red\0"
	.byte 0x00,0x00,0x31,0xe4,0x01,0x01,0x02,0xb3
	.byte 0x03,0x91,0xb8,0x41,0x1b
	.ascii "green\0"
	.byte 0x00,0x00,0x31,0xe4,0x01,0x01,0x02,0xb3
	.byte 0x03,0x91,0xb4,0x41,0x1b
	.ascii "blue\0"
	.byte 0x00,0x00,0x31,0xe4,0x01,0x01,0x02,0xb3
	.byte 0x03,0x91,0xb0,0x41,0x1b
	.ascii "alpha\0"
	.byte 0x00,0x00,0x31,0xe4,0x01,0x01,0x02,0xb3
	.byte 0x03,0x91,0xac,0x41,0x1c
	.uaword .L1385
	.uaword .L1438
	.byte 0x1c
	.uaword .L1406
	.uaword .L1437
	.byte 0x1c
	.uaword .L1407
	.uaword .L1436
	.byte 0x1c
	.uaword .L1411
	.uaword .L1435
	.byte 0x1c
	.uaword .L1412
	.uaword .L1434
	.byte 0x1b
	.ascii "m\0"
	.byte 0x00,0x00,0x01,0xdf,0x01,0x01,0x02,0xfd
	.byte 0x03,0x91,0xa8,0x41,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x0f,0x00,0x00,0x31,0xd6,0x06
	.byte 0x40,0x00,0x00,0x9e,0x1a,0x10,0x00,0x00
	.byte 0x02,0x03,0x06,0x3f,0x00,0x0f,0x00,0x00
	.byte 0x31,0xd6,0x06,0x40,0x00,0x00,0x9e,0x2d
	.byte 0x10,0x00,0x00,0x02,0x03,0x06,0x3f,0x00
	.byte 0x0f,0x00,0x00,0x31,0xd6,0x06,0x40,0x00
	.byte 0x00,0x9e,0x40,0x10,0x00,0x00,0x02,0x03
	.byte 0x06,0x3f,0x00,0x0f,0x00,0x00,0x31,0xd6
	.byte 0x06,0x40,0x00,0x00,0x9e,0x53,0x10,0x00
	.byte 0x00,0x02,0x03,0x06,0x3f,0x00,0x0f,0x00
	.byte 0x00,0x31,0xd6,0x06,0x40,0x00,0x00,0x9e
	.byte 0x66,0x10,0x00,0x00,0x02,0x03,0x06,0x3f
	.byte 0x00,0x19
	.ascii "gl_read_color_span\0"
	.byte 0x01,0x02,0x01,0x03,0x43
	.uaword gl_read_color_span
	.uaword .L1676
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9f,0x1d
	.byte 0x1a,0x00,0x00,0x95,0x2a
	.ascii "ctx\0"
	.byte 0x01,0x03,0x3f,0x03,0x91,0xc4,0x00,0x1a
	.byte 0x00,0x00,0x01,0xdf
	.ascii "n\0"
	.byte 0x01,0x03,0x40,0x03,0x91,0xc8,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "x\0"
	.byte 0x01,0x03,0x40,0x03,0x91,0xcc,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "y\0"
	.byte 0x01,0x03,0x40,0x03,0x91,0xd0,0x00,0x1a
	.byte 0x00,0x00,0x31,0xe4
	.ascii "red\0"
	.byte 0x01,0x03,0x41,0x03,0x91,0xd4,0x00,0x1a
	.byte 0x00,0x00,0x31,0xe4
	.ascii "green\0"
	.byte 0x01,0x03,0x41,0x03,0x91,0xd8,0x00,0x1a
	.byte 0x00,0x00,0x31,0xe4
	.ascii "blue\0"
	.byte 0x01,0x03,0x42,0x03,0x91,0xdc,0x00,0x1a
	.byte 0x00,0x00,0x31,0xe4
	.ascii "alpha\0"
	.byte 0x01,0x03,0x42,0x03,0x91,0xe0,0x00,0x1b
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0xdf,0x01,0x01,0x03,0x44
	.byte 0x02,0x91,0x7c,0x00,0x19
	.ascii "gl_read_index_span\0"
	.byte 0x01,0x02,0x01,0x03,0x70
	.uaword gl_read_index_span
	.uaword .L1765
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9f,0xa0
	.byte 0x1a,0x00,0x00,0x95,0x2a
	.ascii "ctx\0"
	.byte 0x01,0x03,0x6e,0x03,0x91,0xc4,0x00,0x1a
	.byte 0x00,0x00,0x01,0xdf
	.ascii "n\0"
	.byte 0x01,0x03,0x6f,0x03,0x91,0xc8,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "x\0"
	.byte 0x01,0x03,0x6f,0x03,0x91,0xcc,0x00,0x1a
	.byte 0x00,0x00,0x01,0xb6
	.ascii "y\0"
	.byte 0x01,0x03,0x6f,0x03,0x91,0xd0,0x00,0x1a
	.byte 0x00,0x00,0x94,0x25
	.ascii "indx\0"
	.byte 0x01,0x03,0x6f,0x03,0x91,0xd4,0x00,0x1b
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0xdf,0x01,0x01,0x03,0x71
	.byte 0x02,0x91,0x7c,0x00,0x12,0x00,0x00,0x01
	.byte 0xec,0x08,0x00,0x00,0x9f,0xa0,0x12,0x00
	.byte 0x00,0x01,0xec,0x08,0x00,0x00,0x9f,0xaa
	.byte 0x12,0x00,0x00,0x01,0xec,0x08,0x00,0x00
	.byte 0x9f,0xb4,0x12,0x00,0x00,0x01,0xec,0x08
	.byte 0x00,0x00,0x9f,0xbe,0x1d
	.ascii "gl_texture_pixels\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa0,0x16
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x9f,0xa5,0x14
	.byte 0x00,0x00,0x9f,0xaf,0x14,0x00,0x00,0x9f
	.byte 0xb9,0x14,0x00,0x00,0x9f,0xc3,0x14,0x00
	.byte 0x00,0x34,0xf9,0x14,0x00,0x00,0x34,0xf9
	.byte 0x14,0x00,0x00,0x34,0xf9,0x14,0x00,0x00
	.byte 0x34,0xf9,0x00,0x12,0x00,0x00,0x48,0x84
	.byte 0x08,0x00,0x00,0xa0,0x16,0x1d
	.ascii "gl_depth_stencil_span\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa0,0x5e
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0xa0
	.byte 0x1b,0x14,0x00,0x00,0x34,0xf9,0x00,0x08
	.byte 0x00,0x00,0x35,0xfb,0x08,0x00,0x00,0x31
	.byte 0xc5,0x1e
	.ascii "gl_stencil_span\0"
	.byte 0x01,0x01,0x01,0x00,0x00,0x01,0xb6,0x01
	.byte 0x00,0x00,0xa0,0x9f,0x14,0x00,0x00,0xa0
	.byte 0x5e,0x14,0x00,0x00,0x01,0xd3,0x14,0x00
	.byte 0x00,0x01,0xb6,0x14,0x00,0x00,0x01,0xb6
	.byte 0x14,0x00,0x00,0xa0,0x63,0x00,0x1e
	.ascii "gl_scissor_span\0"
	.byte 0x01,0x01,0x01,0x00,0x00,0x01,0xb6,0x01
	.byte 0x00,0x00,0xa0,0xd6,0x14,0x00,0x00,0xa0
	.byte 0x5e,0x14,0x00,0x00,0x01,0xd3,0x14,0x00
	.byte 0x00,0x01,0xb6,0x14,0x00,0x00,0x01,0xb6
	.byte 0x14,0x00,0x00,0xa0,0x63,0x00,0x1d
	.ascii "gl_mask_index_span\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa1,0x0c
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x46
	.byte 0x2c,0x00,0x1d
	.ascii "gl_mask_color_span\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa1,0x51
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x34
	.byte 0xf9,0x14,0x00,0x00,0x34,0xf9,0x14,0x00
	.byte 0x00,0x34,0xf9,0x14,0x00,0x00,0x34,0xf9
	.byte 0x00,0x1d
	.ascii "gl_logicop_rgba_span\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa1,0x9d
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x34
	.byte 0xf9,0x14,0x00,0x00,0x34,0xf9,0x14,0x00
	.byte 0x00,0x34,0xf9,0x14,0x00,0x00,0x34,0xf9
	.byte 0x14,0x00,0x00,0x34,0xf9,0x00,0x1d
	.ascii "gl_logicop_ci_span\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa1,0xd8
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x46
	.byte 0x2c,0x14,0x00,0x00,0x34,0xf9,0x00,0x12
	.byte 0x00,0x00,0x48,0x84,0x08,0x00,0x00,0xa1
	.byte 0xd8,0x1d
	.ascii "gl_fog_index_pixels\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa2,0x14
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0xa1,0xdd,0x14
	.byte 0x00,0x00,0x46,0x2c,0x00,0x12,0x00,0x00
	.byte 0x48,0x84,0x08,0x00,0x00,0xa2,0x14,0x1d
	.ascii "gl_fog_color_pixels\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa2,0x5f
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0xa2,0x19,0x14
	.byte 0x00,0x00,0x34,0xf9,0x14,0x00,0x00,0x34
	.byte 0xf9,0x14,0x00,0x00,0x34,0xf9,0x14,0x00
	.byte 0x00,0x34,0xf9,0x00,0x1d
	.ascii "gl_blend_span\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa2,0xa4
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x34
	.byte 0xf9,0x14,0x00,0x00,0x34,0xf9,0x14,0x00
	.byte 0x00,0x34,0xf9,0x14,0x00,0x00,0x34,0xf9
	.byte 0x14,0x00,0x00,0x34,0xf9,0x00,0x1d
	.ascii "gl_read_alpha_span\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa2,0xda
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x34
	.byte 0xf9,0x00,0x1d
	.ascii "gl_write_mono_alpha_span\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa3,0x1b
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x31
	.byte 0xc5,0x14,0x00,0x00,0x34,0xf9,0x00,0x1d
	.ascii "gl_write_alpha_span\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa3,0x57
	.byte 0x14,0x00,0x00,0x3c,0xc8,0x14,0x00,0x00
	.byte 0x01,0xd3,0x14,0x00,0x00,0x01,0xaf,0x14
	.byte 0x00,0x00,0x01,0xaf,0x14,0x00,0x00,0x34
	.byte 0xf9,0x14,0x00,0x00,0x34,0xf9,0x00,0x12
	.byte 0x00,0x00,0x31,0xc5,0x08,0x00,0x00,0xa3
	.byte 0x57,0x1e
	.ascii "gl_alpha_test\0"
	.byte 0x01,0x01,0x01,0x00,0x00,0x01,0xb6,0x01
	.byte 0x00,0x00,0xa3,0x91,0x14,0x00,0x00,0xa0
	.byte 0x5e,0x14,0x00,0x00,0x01,0xd3,0x14,0x00
	.byte 0x00,0xa3,0x5c,0x14,0x00,0x00,0xa0,0x63
	.byte 0x00,0x1e
	.ascii "memset\0"
	.byte 0x01,0x01,0x01,0x00,0x00,0x31,0xf1,0x01
	.byte 0x00,0x00,0xa3,0xb5,0x14,0x00,0x00,0x31
	.byte 0xf1,0x14,0x00,0x00,0x01,0xaf,0x14,0x00
	.byte 0x00,0x01,0xd3,0x00,0x12,0x00,0x00,0x31
	.byte 0xe9,0x08,0x00,0x00,0xa3,0xb5,0x1f
	.ascii "memcpy\0"
	.byte 0x01,0x01,0x01,0x00,0x00,0x31,0xf1,0x01
	.byte 0x14,0x00,0x00,0x31,0xf1,0x14,0x00,0x00
	.byte 0xa3,0xba,0x14,0x00,0x00,0x01,0xd3,0x00
	.byte 0x00,0x00,0x00,0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_line
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=0, off=124, siz=4, lab1=stipple_polygon_span, lab2=, loff=0
!   reloc[1]: knd=0, off=131, siz=4, lab1=.L16, lab2=, loff=0
!   reloc[2]: knd=0, off=143, siz=4, lab1=.L17, lab2=, loff=0
!   reloc[3]: knd=0, off=151, siz=4, lab1=.L18, lab2=, loff=0
!   reloc[4]: knd=0, off=159, siz=4, lab1=.L20, lab2=, loff=0
!   reloc[5]: knd=0, off=167, siz=4, lab1=.L29, lab2=, loff=0
!   reloc[6]: knd=0, off=175, siz=4, lab1=.L33, lab2=, loff=0
!   reloc[7]: knd=0, off=183, siz=4, lab1=.L37, lab2=, loff=0
!   reloc[8]: knd=0, off=191, siz=4, lab1=.L40, lab2=, loff=0
!   reloc[9]: knd=0, off=199, siz=4, lab1=.L44, lab2=, loff=0
!   reloc[10]: knd=0, off=207, siz=4, lab1=.L50, lab2=, loff=0
!   reloc[11]: knd=0, off=217, siz=4, lab1=.L53, lab2=, loff=0
!   reloc[12]: knd=0, off=232, siz=4, lab1=clip_span, lab2=, loff=0
!   reloc[13]: knd=0, off=239, siz=4, lab1=.L62, lab2=, loff=0
!   reloc[14]: knd=0, off=251, siz=4, lab1=.L68, lab2=, loff=0
!   reloc[15]: knd=0, off=259, siz=4, lab1=.L74, lab2=, loff=0
!   reloc[16]: knd=0, off=269, siz=4, lab1=.L79, lab2=, loff=0
!   reloc[17]: knd=0, off=277, siz=4, lab1=.L85, lab2=, loff=0
!   reloc[18]: knd=0, off=285, siz=4, lab1=.L89, lab2=, loff=0
!   reloc[19]: knd=0, off=293, siz=4, lab1=.L95, lab2=, loff=0
!   reloc[20]: knd=0, off=301, siz=4, lab1=.L99, lab2=, loff=0
!   reloc[21]: knd=0, off=309, siz=4, lab1=.L105, lab2=, loff=0
!   reloc[22]: knd=0, off=319, siz=4, lab1=.L114, lab2=, loff=0
!   reloc[23]: knd=0, off=327, siz=4, lab1=.L120, lab2=, loff=0
!   reloc[24]: knd=0, off=335, siz=4, lab1=.L126, lab2=, loff=0
!   reloc[25]: knd=0, off=345, siz=4, lab1=.L129, lab2=, loff=0
!   reloc[26]: knd=0, off=355, siz=4, lab1=.L137, lab2=, loff=0
!   reloc[27]: knd=0, off=368, siz=4, lab1=gl_write_index_span, lab2=, loff=0
!   reloc[28]: knd=0, off=375, siz=4, lab1=.L144, lab2=, loff=0
!   reloc[29]: knd=0, off=387, siz=4, lab1=.L147, lab2=, loff=0
!   reloc[30]: knd=0, off=395, siz=4, lab1=.L155, lab2=, loff=0
!   reloc[31]: knd=0, off=403, siz=4, lab1=.L159, lab2=, loff=0
!   reloc[32]: knd=0, off=411, siz=4, lab1=.L168, lab2=, loff=0
!   reloc[33]: knd=0, off=421, siz=4, lab1=.L175, lab2=, loff=0
!   reloc[34]: knd=0, off=429, siz=4, lab1=.L181, lab2=, loff=0
!   reloc[35]: knd=0, off=439, siz=4, lab1=.L187, lab2=, loff=0
!   reloc[36]: knd=0, off=447, siz=4, lab1=.L191, lab2=, loff=0
!   reloc[37]: knd=0, off=455, siz=4, lab1=.L200, lab2=, loff=0
!   reloc[38]: knd=0, off=465, siz=4, lab1=.L205, lab2=, loff=0
!   reloc[39]: knd=0, off=473, siz=4, lab1=.L211, lab2=, loff=0
!   reloc[40]: knd=0, off=483, siz=4, lab1=.L217, lab2=, loff=0
!   reloc[41]: knd=0, off=491, siz=4, lab1=.L221, lab2=, loff=0
!   reloc[42]: knd=0, off=499, siz=4, lab1=.L225, lab2=, loff=0
!   reloc[43]: knd=0, off=509, siz=4, lab1=.L232, lab2=, loff=0
!   reloc[44]: knd=0, off=517, siz=4, lab1=.L238, lab2=, loff=0
!   reloc[45]: knd=0, off=525, siz=4, lab1=.L250, lab2=, loff=0
!   reloc[46]: knd=0, off=535, siz=4, lab1=.L254, lab2=, loff=0
!   reloc[47]: knd=0, off=543, siz=4, lab1=.L260, lab2=, loff=0
!   reloc[48]: knd=0, off=553, siz=4, lab1=.L264, lab2=, loff=0
!   reloc[49]: knd=0, off=563, siz=4, lab1=.L270, lab2=, loff=0
!   reloc[50]: knd=0, off=573, siz=4, lab1=.L274, lab2=, loff=0
!   reloc[51]: knd=0, off=581, siz=4, lab1=.L280, lab2=, loff=0
!   reloc[52]: knd=0, off=589, siz=4, lab1=.L284, lab2=, loff=0
!   reloc[53]: knd=0, off=597, siz=4, lab1=.L288, lab2=, loff=0
!   reloc[54]: knd=0, off=607, siz=4, lab1=.L291, lab2=, loff=0
!   reloc[55]: knd=0, off=617, siz=4, lab1=.L295, lab2=, loff=0
!   reloc[56]: knd=0, off=625, siz=4, lab1=.L296, lab2=, loff=0
!   reloc[57]: knd=0, off=633, siz=4, lab1=.L299, lab2=, loff=0
!   reloc[58]: knd=0, off=641, siz=4, lab1=.L303, lab2=, loff=0
!   reloc[59]: knd=0, off=649, siz=4, lab1=.L309, lab2=, loff=0
!   reloc[60]: knd=0, off=657, siz=4, lab1=.L313, lab2=, loff=0
!   reloc[61]: knd=0, off=665, siz=4, lab1=.L317, lab2=, loff=0
!   reloc[62]: knd=0, off=673, siz=4, lab1=.L318, lab2=, loff=0
!   reloc[63]: knd=0, off=681, siz=4, lab1=.L322, lab2=, loff=0
!   reloc[64]: knd=0, off=694, siz=4, lab1=gl_write_monoindex_span, lab2=, loff=0
!   reloc[65]: knd=0, off=701, siz=4, lab1=.L329, lab2=, loff=0
!   reloc[66]: knd=0, off=713, siz=4, lab1=.L332, lab2=, loff=0
!   reloc[67]: knd=0, off=721, siz=4, lab1=.L340, lab2=, loff=0
!   reloc[68]: knd=0, off=729, siz=4, lab1=.L344, lab2=, loff=0
!   reloc[69]: knd=0, off=737, siz=4, lab1=.L353, lab2=, loff=0
!   reloc[70]: knd=0, off=747, siz=4, lab1=.L359, lab2=, loff=0
!   reloc[71]: knd=0, off=755, siz=4, lab1=.L363, lab2=, loff=0
!   reloc[72]: knd=0, off=763, siz=4, lab1=.L372, lab2=, loff=0
!   reloc[73]: knd=0, off=773, siz=4, lab1=.L377, lab2=, loff=0
!   reloc[74]: knd=0, off=781, siz=4, lab1=.L383, lab2=, loff=0
!   reloc[75]: knd=0, off=791, siz=4, lab1=.L389, lab2=, loff=0
!   reloc[76]: knd=0, off=799, siz=4, lab1=.L393, lab2=, loff=0
!   reloc[77]: knd=0, off=807, siz=4, lab1=.L397, lab2=, loff=0
!   reloc[78]: knd=0, off=817, siz=4, lab1=.L404, lab2=, loff=0
!   reloc[79]: knd=0, off=825, siz=4, lab1=.L410, lab2=, loff=0
!   reloc[80]: knd=0, off=833, siz=4, lab1=.L422, lab2=, loff=0
!   reloc[81]: knd=0, off=843, siz=4, lab1=.L426, lab2=, loff=0
!   reloc[82]: knd=0, off=851, siz=4, lab1=.L432, lab2=, loff=0
!   reloc[83]: knd=0, off=861, siz=4, lab1=.L443, lab2=, loff=0
!   reloc[84]: knd=0, off=871, siz=4, lab1=.L450, lab2=, loff=0
!   reloc[85]: knd=0, off=879, siz=4, lab1=.L453, lab2=, loff=0
!   reloc[86]: knd=0, off=887, siz=4, lab1=.L458, lab2=, loff=0
!   reloc[87]: knd=0, off=897, siz=4, lab1=.L465, lab2=, loff=0
!   reloc[88]: knd=0, off=905, siz=4, lab1=.L471, lab2=, loff=0
!   reloc[89]: knd=0, off=915, siz=4, lab1=.L475, lab2=, loff=0
!   reloc[90]: knd=0, off=923, siz=4, lab1=.L481, lab2=, loff=0
!   reloc[91]: knd=0, off=933, siz=4, lab1=.L485, lab2=, loff=0
!   reloc[92]: knd=0, off=941, siz=4, lab1=.L491, lab2=, loff=0
!   reloc[93]: knd=0, off=951, siz=4, lab1=.L495, lab2=, loff=0
!   reloc[94]: knd=0, off=959, siz=4, lab1=.L499, lab2=, loff=0
!   reloc[95]: knd=0, off=969, siz=4, lab1=.L502, lab2=, loff=0
!   reloc[96]: knd=0, off=977, siz=4, lab1=.L506, lab2=, loff=0
!   reloc[97]: knd=0, off=985, siz=4, lab1=.L508, lab2=, loff=0
!   reloc[98]: knd=0, off=993, siz=4, lab1=.L515, lab2=, loff=0
!   reloc[99]: knd=0, off=1001, siz=4, lab1=.L518, lab2=, loff=0
!   reloc[100]: knd=0, off=1009, siz=4, lab1=.L523, lab2=, loff=0
!   reloc[101]: knd=0, off=1019, siz=4, lab1=.L527, lab2=, loff=0
!   reloc[102]: knd=0, off=1027, siz=4, lab1=.L533, lab2=, loff=0
!   reloc[103]: knd=0, off=1035, siz=4, lab1=.L537, lab2=, loff=0
!   reloc[104]: knd=0, off=1043, siz=4, lab1=.L541, lab2=, loff=0
!   reloc[105]: knd=0, off=1051, siz=4, lab1=.L542, lab2=, loff=0
!   reloc[106]: knd=0, off=1059, siz=4, lab1=.L551, lab2=, loff=0
!   reloc[107]: knd=0, off=1069, siz=4, lab1=.L554, lab2=, loff=0
!   reloc[108]: knd=0, off=1077, siz=4, lab1=.L558, lab2=, loff=0
!   reloc[109]: knd=0, off=1085, siz=4, lab1=.L559, lab2=, loff=0
!   reloc[110]: knd=0, off=1093, siz=4, lab1=.L560, lab2=, loff=0
!   reloc[111]: knd=0, off=1101, siz=4, lab1=.L567, lab2=, loff=0
!   reloc[112]: knd=0, off=1116, siz=4, lab1=gl_write_color_span, lab2=, loff=0
!   reloc[113]: knd=0, off=1123, siz=4, lab1=.L574, lab2=, loff=0
!   reloc[114]: knd=0, off=1135, siz=4, lab1=.L575, lab2=, loff=0
!   reloc[115]: knd=0, off=1145, siz=4, lab1=.L578, lab2=, loff=0
!   reloc[116]: knd=0, off=1153, siz=4, lab1=.L586, lab2=, loff=0
!   reloc[117]: knd=0, off=1161, siz=4, lab1=.L590, lab2=, loff=0
!   reloc[118]: knd=0, off=1169, siz=4, lab1=.L594, lab2=, loff=0
!   reloc[119]: knd=0, off=1177, siz=4, lab1=.L600, lab2=, loff=0
!   reloc[120]: knd=0, off=1187, siz=4, lab1=.L608, lab2=, loff=0
!   reloc[121]: knd=0, off=1195, siz=4, lab1=.L609, lab2=, loff=0
!   reloc[122]: knd=0, off=1203, siz=4, lab1=.L610, lab2=, loff=0
!   reloc[123]: knd=0, off=1211, siz=4, lab1=.L611, lab2=, loff=0
!   reloc[124]: knd=0, off=1219, siz=4, lab1=.L612, lab2=, loff=0
!   reloc[125]: knd=0, off=1227, siz=4, lab1=.L613, lab2=, loff=0
!   reloc[126]: knd=0, off=1235, siz=4, lab1=.L614, lab2=, loff=0
!   reloc[127]: knd=0, off=1243, siz=4, lab1=.L615, lab2=, loff=0
!   reloc[128]: knd=0, off=1251, siz=4, lab1=.L621, lab2=, loff=0
!   reloc[129]: knd=0, off=1261, siz=4, lab1=.L622, lab2=, loff=0
!   reloc[130]: knd=0, off=1269, siz=4, lab1=.L623, lab2=, loff=0
!   reloc[131]: knd=0, off=1277, siz=4, lab1=.L624, lab2=, loff=0
!   reloc[132]: knd=0, off=1285, siz=4, lab1=.L630, lab2=, loff=0
!   reloc[133]: knd=0, off=1295, siz=4, lab1=.L638, lab2=, loff=0
!   reloc[134]: knd=0, off=1303, siz=4, lab1=.L644, lab2=, loff=0
!   reloc[135]: knd=0, off=1313, siz=4, lab1=.L650, lab2=, loff=0
!   reloc[136]: knd=0, off=1321, siz=4, lab1=.L654, lab2=, loff=0
!   reloc[137]: knd=0, off=1329, siz=4, lab1=.L658, lab2=, loff=0
!   reloc[138]: knd=0, off=1337, siz=4, lab1=.L664, lab2=, loff=0
!   reloc[139]: knd=0, off=1347, siz=4, lab1=.L669, lab2=, loff=0
!   reloc[140]: knd=0, off=1355, siz=4, lab1=.L670, lab2=, loff=0
!   reloc[141]: knd=0, off=1363, siz=4, lab1=.L676, lab2=, loff=0
!   reloc[142]: knd=0, off=1373, siz=4, lab1=.L682, lab2=, loff=0
!   reloc[143]: knd=0, off=1381, siz=4, lab1=.L686, lab2=, loff=0
!   reloc[144]: knd=0, off=1389, siz=4, lab1=.L690, lab2=, loff=0
!   reloc[145]: knd=0, off=1397, siz=4, lab1=.L696, lab2=, loff=0
!   reloc[146]: knd=0, off=1407, siz=4, lab1=.L702, lab2=, loff=0
!   reloc[147]: knd=0, off=1415, siz=4, lab1=.L706, lab2=, loff=0
!   reloc[148]: knd=0, off=1423, siz=4, lab1=.L710, lab2=, loff=0
!   reloc[149]: knd=0, off=1433, siz=4, lab1=.L711, lab2=, loff=0
!   reloc[150]: knd=0, off=1441, siz=4, lab1=.L718, lab2=, loff=0
!   reloc[151]: knd=0, off=1449, siz=4, lab1=.L722, lab2=, loff=0
!   reloc[152]: knd=0, off=1457, siz=4, lab1=.L725, lab2=, loff=0
!   reloc[153]: knd=0, off=1465, siz=4, lab1=.L729, lab2=, loff=0
!   reloc[154]: knd=0, off=1473, siz=4, lab1=.L735, lab2=, loff=0
!   reloc[155]: knd=0, off=1481, siz=4, lab1=.L739, lab2=, loff=0
!   reloc[156]: knd=0, off=1489, siz=4, lab1=.L750, lab2=, loff=0
!   reloc[157]: knd=0, off=1499, siz=4, lab1=.L754, lab2=, loff=0
!   reloc[158]: knd=0, off=1507, siz=4, lab1=.L760, lab2=, loff=0
!   reloc[159]: knd=0, off=1517, siz=4, lab1=.L764, lab2=, loff=0
!   reloc[160]: knd=0, off=1525, siz=4, lab1=.L771, lab2=, loff=0
!   reloc[161]: knd=0, off=1533, siz=4, lab1=.L775, lab2=, loff=0
!   reloc[162]: knd=0, off=1541, siz=4, lab1=.L783, lab2=, loff=0
!   reloc[163]: knd=0, off=1551, siz=4, lab1=.L787, lab2=, loff=0
!   reloc[164]: knd=0, off=1559, siz=4, lab1=.L791, lab2=, loff=0
!   reloc[165]: knd=0, off=1569, siz=4, lab1=.L797, lab2=, loff=0
!   reloc[166]: knd=0, off=1577, siz=4, lab1=.L801, lab2=, loff=0
!   reloc[167]: knd=0, off=1585, siz=4, lab1=.L810, lab2=, loff=0
!   reloc[168]: knd=0, off=1595, siz=4, lab1=.L814, lab2=, loff=0
!   reloc[169]: knd=0, off=1603, siz=4, lab1=.L815, lab2=, loff=0
!   reloc[170]: knd=0, off=1611, siz=4, lab1=.L816, lab2=, loff=0
!   reloc[171]: knd=0, off=1619, siz=4, lab1=.L817, lab2=, loff=0
!   reloc[172]: knd=0, off=1627, siz=4, lab1=.L818, lab2=, loff=0
!   reloc[173]: knd=0, off=1635, siz=4, lab1=.L821, lab2=, loff=0
!   reloc[174]: knd=0, off=1643, siz=4, lab1=.L825, lab2=, loff=0
!   reloc[175]: knd=0, off=1651, siz=4, lab1=.L832, lab2=, loff=0
!   reloc[176]: knd=0, off=1659, siz=4, lab1=.L836, lab2=, loff=0
!   reloc[177]: knd=0, off=1667, siz=4, lab1=.L844, lab2=, loff=0
!   reloc[178]: knd=0, off=1675, siz=4, lab1=.L848, lab2=, loff=0
!   reloc[179]: knd=0, off=1683, siz=4, lab1=.L852, lab2=, loff=0
!   reloc[180]: knd=0, off=1693, siz=4, lab1=.L858, lab2=, loff=0
!   reloc[181]: knd=0, off=1701, siz=4, lab1=.L862, lab2=, loff=0
!   reloc[182]: knd=0, off=1709, siz=4, lab1=.L863, lab2=, loff=0
!   reloc[183]: knd=0, off=1717, siz=4, lab1=.L867, lab2=, loff=0
!   reloc[184]: knd=0, off=1725, siz=4, lab1=.L871, lab2=, loff=0
!   reloc[185]: knd=0, off=1733, siz=4, lab1=.L875, lab2=, loff=0
!   reloc[186]: knd=0, off=1748, siz=4, lab1=gl_write_monocolor_span, lab2=, loff=0
!   reloc[187]: knd=0, off=1755, siz=4, lab1=.L882, lab2=, loff=0
!   reloc[188]: knd=0, off=1767, siz=4, lab1=.L883, lab2=, loff=0
!   reloc[189]: knd=0, off=1777, siz=4, lab1=.L886, lab2=, loff=0
!   reloc[190]: knd=0, off=1785, siz=4, lab1=.L894, lab2=, loff=0
!   reloc[191]: knd=0, off=1793, siz=4, lab1=.L898, lab2=, loff=0
!   reloc[192]: knd=0, off=1801, siz=4, lab1=.L902, lab2=, loff=0
!   reloc[193]: knd=0, off=1809, siz=4, lab1=.L908, lab2=, loff=0
!   reloc[194]: knd=0, off=1819, siz=4, lab1=.L914, lab2=, loff=0
!   reloc[195]: knd=0, off=1827, siz=4, lab1=.L918, lab2=, loff=0
!   reloc[196]: knd=0, off=1835, siz=4, lab1=.L922, lab2=, loff=0
!   reloc[197]: knd=0, off=1843, siz=4, lab1=.L928, lab2=, loff=0
!   reloc[198]: knd=0, off=1853, siz=4, lab1=.L933, lab2=, loff=0
!   reloc[199]: knd=0, off=1861, siz=4, lab1=.L934, lab2=, loff=0
!   reloc[200]: knd=0, off=1869, siz=4, lab1=.L940, lab2=, loff=0
!   reloc[201]: knd=0, off=1879, siz=4, lab1=.L945, lab2=, loff=0
!   reloc[202]: knd=0, off=1887, siz=4, lab1=.L952, lab2=, loff=0
!   reloc[203]: knd=0, off=1895, siz=4, lab1=.L955, lab2=, loff=0
!   reloc[204]: knd=0, off=1903, siz=4, lab1=.L960, lab2=, loff=0
!   reloc[205]: knd=0, off=1913, siz=4, lab1=.L964, lab2=, loff=0
!   reloc[206]: knd=0, off=1921, siz=4, lab1=.L968, lab2=, loff=0
!   reloc[207]: knd=0, off=1929, siz=4, lab1=.L974, lab2=, loff=0
!   reloc[208]: knd=0, off=1939, siz=4, lab1=.L980, lab2=, loff=0
!   reloc[209]: knd=0, off=1947, siz=4, lab1=.L984, lab2=, loff=0
!   reloc[210]: knd=0, off=1955, siz=4, lab1=.L988, lab2=, loff=0
!   reloc[211]: knd=0, off=1965, siz=4, lab1=.L989, lab2=, loff=0
!   reloc[212]: knd=0, off=1973, siz=4, lab1=.L996, lab2=, loff=0
!   reloc[213]: knd=0, off=1981, siz=4, lab1=.L1000, lab2=, loff=0
!   reloc[214]: knd=0, off=1989, siz=4, lab1=.L1003, lab2=, loff=0
!   reloc[215]: knd=0, off=1997, siz=4, lab1=.L1007, lab2=, loff=0
!   reloc[216]: knd=0, off=2005, siz=4, lab1=.L1013, lab2=, loff=0
!   reloc[217]: knd=0, off=2013, siz=4, lab1=.L1017, lab2=, loff=0
!   reloc[218]: knd=0, off=2021, siz=4, lab1=.L1028, lab2=, loff=0
!   reloc[219]: knd=0, off=2031, siz=4, lab1=.L1032, lab2=, loff=0
!   reloc[220]: knd=0, off=2039, siz=4, lab1=.L1038, lab2=, loff=0
!   reloc[221]: knd=0, off=2049, siz=4, lab1=.L1046, lab2=, loff=0
!   reloc[222]: knd=0, off=2057, siz=4, lab1=.L1055, lab2=, loff=0
!   reloc[223]: knd=0, off=2065, siz=4, lab1=.L1059, lab2=, loff=0
!   reloc[224]: knd=0, off=2073, siz=4, lab1=.L1060, lab2=, loff=0
!   reloc[225]: knd=0, off=2081, siz=4, lab1=.L1061, lab2=, loff=0
!   reloc[226]: knd=0, off=2089, siz=4, lab1=.L1062, lab2=, loff=0
!   reloc[227]: knd=0, off=2097, siz=4, lab1=.L1068, lab2=, loff=0
!   reloc[228]: knd=0, off=2107, siz=4, lab1=.L1073, lab2=, loff=0
!   reloc[229]: knd=0, off=2117, siz=4, lab1=.L1077, lab2=, loff=0
!   reloc[230]: knd=0, off=2125, siz=4, lab1=.L1084, lab2=, loff=0
!   reloc[231]: knd=0, off=2133, siz=4, lab1=.L1088, lab2=, loff=0
!   reloc[232]: knd=0, off=2141, siz=4, lab1=.L1096, lab2=, loff=0
!   reloc[233]: knd=0, off=2151, siz=4, lab1=.L1100, lab2=, loff=0
!   reloc[234]: knd=0, off=2159, siz=4, lab1=.L1104, lab2=, loff=0
!   reloc[235]: knd=0, off=2169, siz=4, lab1=.L1110, lab2=, loff=0
!   reloc[236]: knd=0, off=2177, siz=4, lab1=.L1114, lab2=, loff=0
!   reloc[237]: knd=0, off=2185, siz=4, lab1=.L1123, lab2=, loff=0
!   reloc[238]: knd=0, off=2195, siz=4, lab1=.L1128, lab2=, loff=0
!   reloc[239]: knd=0, off=2203, siz=4, lab1=.L1137, lab2=, loff=0
!   reloc[240]: knd=0, off=2211, siz=4, lab1=.L1141, lab2=, loff=0
!   reloc[241]: knd=0, off=2219, siz=4, lab1=.L1142, lab2=, loff=0
!   reloc[242]: knd=0, off=2227, siz=4, lab1=.L1143, lab2=, loff=0
!   reloc[243]: knd=0, off=2235, siz=4, lab1=.L1144, lab2=, loff=0
!   reloc[244]: knd=0, off=2243, siz=4, lab1=.L1150, lab2=, loff=0
!   reloc[245]: knd=0, off=2253, siz=4, lab1=.L1153, lab2=, loff=0
!   reloc[246]: knd=0, off=2263, siz=4, lab1=.L1156, lab2=, loff=0
!   reloc[247]: knd=0, off=2271, siz=4, lab1=.L1160, lab2=, loff=0
!   reloc[248]: knd=0, off=2279, siz=4, lab1=.L1167, lab2=, loff=0
!   reloc[249]: knd=0, off=2287, siz=4, lab1=.L1171, lab2=, loff=0
!   reloc[250]: knd=0, off=2295, siz=4, lab1=.L1179, lab2=, loff=0
!   reloc[251]: knd=0, off=2303, siz=4, lab1=.L1183, lab2=, loff=0
!   reloc[252]: knd=0, off=2311, siz=4, lab1=.L1187, lab2=, loff=0
!   reloc[253]: knd=0, off=2321, siz=4, lab1=.L1191, lab2=, loff=0
!   reloc[254]: knd=0, off=2329, siz=4, lab1=.L1194, lab2=, loff=0
!   reloc[255]: knd=0, off=2337, siz=4, lab1=.L1198, lab2=, loff=0
!   reloc[256]: knd=0, off=2345, siz=4, lab1=.L1199, lab2=, loff=0
!   reloc[257]: knd=0, off=2353, siz=4, lab1=.L1203, lab2=, loff=0
!   reloc[258]: knd=0, off=2361, siz=4, lab1=.L1215, lab2=, loff=0
!   reloc[259]: knd=0, off=2371, siz=4, lab1=.L1218, lab2=, loff=0
!   reloc[260]: knd=0, off=2379, siz=4, lab1=.L1222, lab2=, loff=0
!   reloc[261]: knd=0, off=2387, siz=4, lab1=.L1231, lab2=, loff=0
!   reloc[262]: knd=0, off=2395, siz=4, lab1=.L1235, lab2=, loff=0
!   reloc[263]: knd=0, off=2403, siz=4, lab1=.L1236, lab2=, loff=0
!   reloc[264]: knd=0, off=2411, siz=4, lab1=.L1237, lab2=, loff=0
!   reloc[265]: knd=0, off=2419, siz=4, lab1=.L1240, lab2=, loff=0
!   reloc[266]: knd=0, off=2427, siz=4, lab1=.L1244, lab2=, loff=0
!   reloc[267]: knd=0, off=2435, siz=4, lab1=.L1245, lab2=, loff=0
!   reloc[268]: knd=0, off=2443, siz=4, lab1=.L1249, lab2=, loff=0
!   reloc[269]: knd=0, off=2451, siz=4, lab1=.L1259, lab2=, loff=0
!   reloc[270]: knd=0, off=2466, siz=4, lab1=gl_write_texture_span, lab2=, loff=0
!   reloc[271]: knd=0, off=2473, siz=4, lab1=.L1266, lab2=, loff=0
!   reloc[272]: knd=0, off=2485, siz=4, lab1=.L1267, lab2=, loff=0
!   reloc[273]: knd=0, off=2495, siz=4, lab1=.L1270, lab2=, loff=0
!   reloc[274]: knd=0, off=2503, siz=4, lab1=.L1278, lab2=, loff=0
!   reloc[275]: knd=0, off=2511, siz=4, lab1=.L1282, lab2=, loff=0
!   reloc[276]: knd=0, off=2519, siz=4, lab1=.L1286, lab2=, loff=0
!   reloc[277]: knd=0, off=2527, siz=4, lab1=.L1292, lab2=, loff=0
!   reloc[278]: knd=0, off=2537, siz=4, lab1=.L1298, lab2=, loff=0
!   reloc[279]: knd=0, off=2545, siz=4, lab1=.L1299, lab2=, loff=0
!   reloc[280]: knd=0, off=2553, siz=4, lab1=.L1300, lab2=, loff=0
!   reloc[281]: knd=0, off=2561, siz=4, lab1=.L1301, lab2=, loff=0
!   reloc[282]: knd=0, off=2569, siz=4, lab1=.L1302, lab2=, loff=0
!   reloc[283]: knd=0, off=2577, siz=4, lab1=.L1303, lab2=, loff=0
!   reloc[284]: knd=0, off=2585, siz=4, lab1=.L1304, lab2=, loff=0
!   reloc[285]: knd=0, off=2593, siz=4, lab1=.L1305, lab2=, loff=0
!   reloc[286]: knd=0, off=2601, siz=4, lab1=.L1311, lab2=, loff=0
!   reloc[287]: knd=0, off=2611, siz=4, lab1=.L1312, lab2=, loff=0
!   reloc[288]: knd=0, off=2619, siz=4, lab1=.L1313, lab2=, loff=0
!   reloc[289]: knd=0, off=2627, siz=4, lab1=.L1314, lab2=, loff=0
!   reloc[290]: knd=0, off=2635, siz=4, lab1=.L1318, lab2=, loff=0
!   reloc[291]: knd=0, off=2645, siz=4, lab1=.L1321, lab2=, loff=0
!   reloc[292]: knd=0, off=2655, siz=4, lab1=.L1329, lab2=, loff=0
!   reloc[293]: knd=0, off=2663, siz=4, lab1=.L1335, lab2=, loff=0
!   reloc[294]: knd=0, off=2673, siz=4, lab1=.L1341, lab2=, loff=0
!   reloc[295]: knd=0, off=2681, siz=4, lab1=.L1345, lab2=, loff=0
!   reloc[296]: knd=0, off=2689, siz=4, lab1=.L1349, lab2=, loff=0
!   reloc[297]: knd=0, off=2697, siz=4, lab1=.L1355, lab2=, loff=0
!   reloc[298]: knd=0, off=2707, siz=4, lab1=.L1360, lab2=, loff=0
!   reloc[299]: knd=0, off=2715, siz=4, lab1=.L1361, lab2=, loff=0
!   reloc[300]: knd=0, off=2723, siz=4, lab1=.L1367, lab2=, loff=0
!   reloc[301]: knd=0, off=2733, siz=4, lab1=.L1373, lab2=, loff=0
!   reloc[302]: knd=0, off=2741, siz=4, lab1=.L1377, lab2=, loff=0
!   reloc[303]: knd=0, off=2749, siz=4, lab1=.L1381, lab2=, loff=0
!   reloc[304]: knd=0, off=2757, siz=4, lab1=.L1387, lab2=, loff=0
!   reloc[305]: knd=0, off=2767, siz=4, lab1=.L1393, lab2=, loff=0
!   reloc[306]: knd=0, off=2775, siz=4, lab1=.L1397, lab2=, loff=0
!   reloc[307]: knd=0, off=2783, siz=4, lab1=.L1401, lab2=, loff=0
!   reloc[308]: knd=0, off=2793, siz=4, lab1=.L1402, lab2=, loff=0
!   reloc[309]: knd=0, off=2801, siz=4, lab1=.L1409, lab2=, loff=0
!   reloc[310]: knd=0, off=2809, siz=4, lab1=.L1413, lab2=, loff=0
!   reloc[311]: knd=0, off=2817, siz=4, lab1=.L1416, lab2=, loff=0
!   reloc[312]: knd=0, off=2825, siz=4, lab1=.L1420, lab2=, loff=0
!   reloc[313]: knd=0, off=2833, siz=4, lab1=.L1426, lab2=, loff=0
!   reloc[314]: knd=0, off=2841, siz=4, lab1=.L1430, lab2=, loff=0
!   reloc[315]: knd=0, off=2849, siz=4, lab1=.L1441, lab2=, loff=0
!   reloc[316]: knd=0, off=2859, siz=4, lab1=.L1445, lab2=, loff=0
!   reloc[317]: knd=0, off=2867, siz=4, lab1=.L1451, lab2=, loff=0
!   reloc[318]: knd=0, off=2877, siz=4, lab1=.L1455, lab2=, loff=0
!   reloc[319]: knd=0, off=2885, siz=4, lab1=.L1462, lab2=, loff=0
!   reloc[320]: knd=0, off=2893, siz=4, lab1=.L1466, lab2=, loff=0
!   reloc[321]: knd=0, off=2901, siz=4, lab1=.L1474, lab2=, loff=0
!   reloc[322]: knd=0, off=2911, siz=4, lab1=.L1478, lab2=, loff=0
!   reloc[323]: knd=0, off=2919, siz=4, lab1=.L1482, lab2=, loff=0
!   reloc[324]: knd=0, off=2929, siz=4, lab1=.L1488, lab2=, loff=0
!   reloc[325]: knd=0, off=2937, siz=4, lab1=.L1492, lab2=, loff=0
!   reloc[326]: knd=0, off=2945, siz=4, lab1=.L1501, lab2=, loff=0
!   reloc[327]: knd=0, off=2955, siz=4, lab1=.L1505, lab2=, loff=0
!   reloc[328]: knd=0, off=2963, siz=4, lab1=.L1506, lab2=, loff=0
!   reloc[329]: knd=0, off=2971, siz=4, lab1=.L1507, lab2=, loff=0
!   reloc[330]: knd=0, off=2979, siz=4, lab1=.L1508, lab2=, loff=0
!   reloc[331]: knd=0, off=2987, siz=4, lab1=.L1509, lab2=, loff=0
!   reloc[332]: knd=0, off=2995, siz=4, lab1=.L1512, lab2=, loff=0
!   reloc[333]: knd=0, off=3003, siz=4, lab1=.L1516, lab2=, loff=0
!   reloc[334]: knd=0, off=3011, siz=4, lab1=.L1523, lab2=, loff=0
!   reloc[335]: knd=0, off=3019, siz=4, lab1=.L1527, lab2=, loff=0
!   reloc[336]: knd=0, off=3027, siz=4, lab1=.L1535, lab2=, loff=0
!   reloc[337]: knd=0, off=3035, siz=4, lab1=.L1539, lab2=, loff=0
!   reloc[338]: knd=0, off=3043, siz=4, lab1=.L1543, lab2=, loff=0
!   reloc[339]: knd=0, off=3053, siz=4, lab1=.L1547, lab2=, loff=0
!   reloc[340]: knd=0, off=3061, siz=4, lab1=.L1550, lab2=, loff=0
!   reloc[341]: knd=0, off=3069, siz=4, lab1=.L1554, lab2=, loff=0
!   reloc[342]: knd=0, off=3077, siz=4, lab1=.L1555, lab2=, loff=0
!   reloc[343]: knd=0, off=3085, siz=4, lab1=.L1559, lab2=, loff=0
!   reloc[344]: knd=0, off=3093, siz=4, lab1=.L1566, lab2=, loff=0
!   reloc[345]: knd=0, off=3108, siz=4, lab1=gl_read_color_span, lab2=, loff=0
!   reloc[346]: knd=0, off=3115, siz=4, lab1=.L1575, lab2=, loff=0
!   reloc[347]: knd=0, off=3127, siz=4, lab1=.L1583, lab2=, loff=0
!   reloc[348]: knd=0, off=3135, siz=4, lab1=.L1590, lab2=, loff=0
!   reloc[349]: knd=0, off=3143, siz=4, lab1=.L1593, lab2=, loff=0
!   reloc[350]: knd=0, off=3151, siz=4, lab1=.L1603, lab2=, loff=0
!   reloc[351]: knd=0, off=3161, siz=4, lab1=.L1608, lab2=, loff=0
!   reloc[352]: knd=0, off=3169, siz=4, lab1=.L1611, lab2=, loff=0
!   reloc[353]: knd=0, off=3177, siz=4, lab1=.L1615, lab2=, loff=0
!   reloc[354]: knd=0, off=3185, siz=4, lab1=.L1624, lab2=, loff=0
!   reloc[355]: knd=0, off=3195, siz=4, lab1=.L1627, lab2=, loff=0
!   reloc[356]: knd=0, off=3203, siz=4, lab1=.L1635, lab2=, loff=0
!   reloc[357]: knd=0, off=3211, siz=4, lab1=.L1640, lab2=, loff=0
!   reloc[358]: knd=0, off=3219, siz=4, lab1=.L1641, lab2=, loff=0
!   reloc[359]: knd=0, off=3227, siz=4, lab1=.L1642, lab2=, loff=0
!   reloc[360]: knd=0, off=3235, siz=4, lab1=.L1643, lab2=, loff=0
!   reloc[361]: knd=0, off=3243, siz=4, lab1=.L1646, lab2=, loff=0
!   reloc[362]: knd=0, off=3253, siz=4, lab1=.L1654, lab2=, loff=0
!   reloc[363]: knd=0, off=3263, siz=4, lab1=.L1658, lab2=, loff=0
!   reloc[364]: knd=0, off=3271, siz=4, lab1=.L1661, lab2=, loff=0
!   reloc[365]: knd=0, off=3279, siz=4, lab1=.L1665, lab2=, loff=0
!   reloc[366]: knd=0, off=3287, siz=4, lab1=.L1675, lab2=, loff=0
!   reloc[367]: knd=0, off=3302, siz=4, lab1=gl_read_index_span, lab2=, loff=0
!   reloc[368]: knd=0, off=3309, siz=4, lab1=.L1684, lab2=, loff=0
!   reloc[369]: knd=0, off=3321, siz=4, lab1=.L1692, lab2=, loff=0
!   reloc[370]: knd=0, off=3329, siz=4, lab1=.L1699, lab2=, loff=0
!   reloc[371]: knd=0, off=3337, siz=4, lab1=.L1702, lab2=, loff=0
!   reloc[372]: knd=0, off=3345, siz=4, lab1=.L1712, lab2=, loff=0
!   reloc[373]: knd=0, off=3355, siz=4, lab1=.L1717, lab2=, loff=0
!   reloc[374]: knd=0, off=3363, siz=4, lab1=.L1723, lab2=, loff=0
!   reloc[375]: knd=0, off=3373, siz=4, lab1=.L1726, lab2=, loff=0
!   reloc[376]: knd=0, off=3381, siz=4, lab1=.L1734, lab2=, loff=0
!   reloc[377]: knd=0, off=3389, siz=4, lab1=.L1739, lab2=, loff=0
!   reloc[378]: knd=0, off=3397, siz=4, lab1=.L1740, lab2=, loff=0
!   reloc[379]: knd=0, off=3405, siz=4, lab1=.L1741, lab2=, loff=0
!   reloc[380]: knd=0, off=3413, siz=4, lab1=.L1742, lab2=, loff=0
!   reloc[381]: knd=0, off=3421, siz=4, lab1=.L1745, lab2=, loff=0
!   reloc[382]: knd=0, off=3431, siz=4, lab1=.L1753, lab2=, loff=0
!   reloc[383]: knd=0, off=3441, siz=4, lab1=.L1757, lab2=, loff=0
!   reloc[384]: knd=0, off=3449, siz=4, lab1=.L1764, lab2=, loff=0
	.section ".debug_line"
	.byte 0x00,0x00,0x0d,0x81,0x00,0x02,0x00,0x00
	.byte 0x00,0x6f,0x04,0x00,0xff,0x04,0x0a,0x00
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x01
	.byte 0x2f,0x68,0x6f,0x6d,0x65,0x2f,0x66,0x61
	.byte 0x63,0x75,0x6c,0x74,0x79,0x2f,0x6b,0x6f
	.byte 0x70,0x70,0x65,0x6c,0x2f,0x74,0x65,0x61
	.byte 0x63,0x68,0x2f,0x67,0x70,0x63,0x6f,0x6d
	.byte 0x2f,0x67,0x70,0x75,0x70,0x2f,0x72,0x73
	.byte 0x69,0x6d,0x2f,0x6d,0x65,0x73,0x61,0x2f
	.byte 0x6e,0x6f,0x2d,0x6f,0x70,0x74,0x00,0x47
	.byte 0x4c,0x00,0x00,0x73,0x70,0x61,0x6e,0x2e
	.byte 0x63,0x00,0x01,0x00,0x00,0x74,0x79,0x70
	.byte 0x65,0x73,0x2e,0x68,0x00,0x01,0x00,0x00
	.byte 0x67,0x6c,0x2e,0x68,0x00,0x02,0x00,0x00
	.byte 0x64,0x64,0x2e,0x68,0x00,0x01,0x00,0x00
	.byte 0x00,0x00,0x05,0x02
	.uaword stipple_polygon_span
	.byte 0x00,0x05,0x02
	.uaword .L16
	.byte 0x06,0x03,0xe2,0x00,0x01,0x00,0x05,0x02
	.uaword .L17
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L18
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L20
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L29
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L33
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L37
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L40
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L44
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L50
	.byte 0x03,0x7a,0x01,0x00,0x05,0x02
	.uaword .L53
	.byte 0x03,0x09,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword clip_span
	.byte 0x00,0x05,0x02
	.uaword .L62
	.byte 0x06,0x03,0xff,0x00,0x01,0x00,0x05,0x02
	.uaword .L68
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L74
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L79
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L85
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L89
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L95
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L99
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L105
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L114
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L120
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L126
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L129
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L137
	.byte 0x0d,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword gl_write_index_span
	.byte 0x00,0x05,0x02
	.uaword .L144
	.byte 0x06,0x03,0xae,0x01,0x01,0x00,0x05,0x02
	.uaword .L147
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L155
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L159
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L168
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L175
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L181
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L187
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L191
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L200
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L205
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L211
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L217
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L221
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L225
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L232
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L238
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L250
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L254
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L260
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L264
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L270
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L274
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L280
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L284
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L288
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L291
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L295
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L296
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L299
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L303
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L309
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L313
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L317
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L318
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L322
	.byte 0x0d,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword gl_write_monoindex_span
	.byte 0x00,0x05,0x02
	.uaword .L329
	.byte 0x06,0x03,0x87,0x02,0x01,0x00,0x05,0x02
	.uaword .L332
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L340
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L344
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L353
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L359
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L363
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L372
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L377
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L383
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L389
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L393
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L397
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L404
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L410
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L422
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L426
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L432
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L443
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L450
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L453
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L458
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L465
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L471
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L475
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L481
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L485
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L491
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L495
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L499
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L502
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L506
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L508
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L515
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L518
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L523
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L527
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L533
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L537
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L541
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L542
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L551
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L554
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L558
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L559
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L560
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L567
	.byte 0x03,0x03,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword gl_write_color_span
	.byte 0x00,0x05,0x02
	.uaword .L574
	.byte 0x06,0x03,0xed,0x02,0x01,0x00,0x05,0x02
	.uaword .L575
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L578
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L586
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L590
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L594
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L600
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L608
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L609
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L610
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L611
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L612
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L613
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L614
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L615
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L621
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L622
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L623
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L624
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L630
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L638
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L644
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L650
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L654
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L658
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L664
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L669
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L670
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L676
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L682
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L686
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L690
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L696
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L702
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L706
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L710
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L711
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L718
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L722
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L725
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L729
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L735
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L739
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L750
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L754
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L760
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L764
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L771
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L775
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L783
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L787
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L791
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L797
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L801
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L810
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L814
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L815
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L816
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L817
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L818
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L821
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L825
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L832
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L836
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L844
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L848
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L852
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L858
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L862
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L863
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L867
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L871
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L875
	.byte 0x03,0x03,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword gl_write_monocolor_span
	.byte 0x00,0x05,0x02
	.uaword .L882
	.byte 0x06,0x03,0x86,0x04,0x01,0x00,0x05,0x02
	.uaword .L883
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L886
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L894
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L898
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L902
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L908
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L914
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L918
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L922
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L928
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L933
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L934
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L940
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L945
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L952
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L955
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L960
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L964
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L968
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L974
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L980
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L984
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L988
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L989
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L996
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1000
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1003
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1007
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1013
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1017
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1028
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1032
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1038
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1046
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1055
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1059
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1060
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1061
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1062
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1068
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1073
	.byte 0x03,0x09,0x01,0x00,0x05,0x02
	.uaword .L1077
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1084
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1088
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1096
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1100
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1104
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1110
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1114
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1123
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1128
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1137
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1141
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1142
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1143
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1144
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1150
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1153
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1156
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1160
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1167
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1171
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1179
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1183
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1187
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1191
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1194
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1198
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1199
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1203
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1215
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1218
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1222
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1231
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1235
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1236
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1237
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1240
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1244
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1245
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1249
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1259
	.byte 0x03,0x04,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword gl_write_texture_span
	.byte 0x00,0x05,0x02
	.uaword .L1266
	.byte 0x06,0x03,0xb0,0x05,0x01,0x00,0x05,0x02
	.uaword .L1267
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1270
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1278
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1282
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1286
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1292
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1298
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1299
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1300
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1301
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1302
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1303
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1304
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1305
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1311
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1312
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1313
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1314
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1318
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1321
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1329
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1335
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1341
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1345
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1349
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1355
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1360
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1361
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1367
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1373
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1377
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1381
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1387
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1393
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1397
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1401
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1402
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1409
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1413
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1416
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1420
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1426
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1430
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1441
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1445
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1451
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1455
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1462
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1466
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1474
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1478
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1482
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1488
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1492
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1501
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1505
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1506
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1507
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1508
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1509
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1512
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1516
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1523
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1527
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1535
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1539
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1543
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1547
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1550
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1554
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1555
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1559
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1566
	.byte 0x03,0x03,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword gl_read_color_span
	.byte 0x00,0x05,0x02
	.uaword .L1575
	.byte 0x06,0x03,0xc5,0x06,0x01,0x00,0x05,0x02
	.uaword .L1583
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1590
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1593
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L1603
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1608
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1611
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1615
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1624
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1627
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1635
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1640
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1641
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1642
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1643
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1646
	.byte 0x03,0x7c,0x01,0x00,0x05,0x02
	.uaword .L1654
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L1658
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1661
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1665
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1675
	.byte 0x03,0x04,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword gl_read_index_span
	.byte 0x00,0x05,0x02
	.uaword .L1684
	.byte 0x06,0x03,0xf2,0x06,0x01,0x00,0x05,0x02
	.uaword .L1692
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1699
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1702
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L1712
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1717
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1723
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1726
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1734
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1739
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1740
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1741
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1742
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1745
	.byte 0x03,0x7c,0x01,0x00,0x05,0x02
	.uaword .L1753
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L1757
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1764
	.byte 0x03,0x03,0x01,0x02,0x01,0x00,0x01,0x01
!  End sdCreateSection
!  Begin sdCreateSection : .debug_abbrev
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
	.section ".debug_abbrev"
	.byte 0x01,0x11,0x01,0x03,0x08,0x13,0x0b,0x1b
	.byte 0x08,0x85,0x44,0x08,0x87,0x44,0x08,0x25
	.byte 0x08,0x10,0x06,0x00,0x00,0x02,0x2e,0x01
	.byte 0x03,0x08,0x17,0x0b,0x3a,0x0b,0x3b,0x0b
	.byte 0x11,0x01,0x12,0x01,0x40,0x0a,0x27,0x0c
	.byte 0x88,0x44,0x0b,0x01,0x13,0x00,0x00,0x03
	.byte 0x05,0x00,0x49,0x13,0x03,0x08,0x3a,0x0b
	.byte 0x3b,0x0b,0x02,0x0a,0x00,0x00,0x04,0x34
	.byte 0x00,0x03,0x08,0x49,0x13,0x17,0x0b,0x3a
	.byte 0x0b,0x3b,0x0b,0x02,0x0a,0x00,0x00,0x05
	.byte 0x24,0x00,0x03,0x08,0x3e,0x0b,0x0b,0x0b
	.byte 0x00,0x00,0x06,0x16,0x00,0x49,0x13,0x03
	.byte 0x08,0x3a,0x0b,0x00,0x00,0x07,0x13,0x00
	.byte 0x03,0x08,0x3c,0x0c,0x00,0x00,0x08,0x0f
	.byte 0x00,0x49,0x13,0x00,0x00,0x09,0x01,0x01
	.byte 0x49,0x13,0x0b,0x0b,0x01,0x13,0x00,0x00
	.byte 0x0a,0x21,0x00,0x49,0x13,0x2f,0x0b,0x00
	.byte 0x00,0x0b,0x04,0x01,0x0b,0x0b,0x3a,0x0b
	.byte 0x01,0x13,0x00,0x00,0x0c,0x28,0x00,0x03
	.byte 0x08,0x1c,0x0d,0x00,0x00,0x0d,0x13,0x01
	.byte 0x03,0x08,0x0b,0x0b,0x3a,0x0b,0x01,0x13
	.byte 0x00,0x00,0x0e,0x0d,0x00,0x03,0x08,0x49
	.byte 0x13,0x38,0x0a,0x00,0x00,0x0f,0x01,0x01
	.byte 0x49,0x13,0x0b,0x05,0x01,0x13,0x00,0x00
	.byte 0x10,0x21,0x00,0x49,0x13,0x2f,0x05,0x00
	.byte 0x00,0x11,0x13,0x01,0x03,0x08,0x0b,0x05
	.byte 0x3a,0x0b,0x01,0x13,0x00,0x00,0x12,0x26
	.byte 0x00,0x49,0x13,0x00,0x00,0x13,0x15,0x01
	.byte 0x27,0x0c,0x88,0x44,0x0b,0x01,0x13,0x00
	.byte 0x00,0x14,0x05,0x00,0x49,0x13,0x00,0x00
	.byte 0x15,0x15,0x01,0x27,0x0c,0x49,0x13,0x88
	.byte 0x44,0x0b,0x01,0x13,0x00,0x00,0x16,0x15
	.byte 0x00,0x27,0x0c,0x49,0x13,0x88,0x44,0x0b
	.byte 0x00,0x00,0x17,0x2e,0x01,0x03,0x08,0x17
	.byte 0x0b,0x3a,0x0b,0x3b,0x0b,0x11,0x01,0x12
	.byte 0x01,0x40,0x0a,0x27,0x0c,0x49,0x13,0x88
	.byte 0x44,0x0b,0x01,0x13,0x00,0x00,0x18,0x2e
	.byte 0x01,0x03,0x08,0x3f,0x0c,0x17,0x0b,0x3a
	.byte 0x0b,0x3b,0x0b,0x11,0x01,0x12,0x01,0x40
	.byte 0x0a,0x27,0x0c,0x88,0x44,0x0b,0x01,0x13
	.byte 0x00,0x00,0x19,0x2e,0x01,0x03,0x08,0x3f
	.byte 0x0c,0x17,0x0b,0x3a,0x0b,0x3b,0x05,0x11
	.byte 0x01,0x12,0x01,0x40,0x0a,0x27,0x0c,0x88
	.byte 0x44,0x0b,0x01,0x13,0x00,0x00,0x1a,0x05
	.byte 0x00,0x49,0x13,0x03,0x08,0x3a,0x0b,0x3b
	.byte 0x05,0x02,0x0a,0x00,0x00,0x1b,0x34,0x00
	.byte 0x03,0x08,0x49,0x13,0x17,0x0b,0x3a,0x0b
	.byte 0x3b,0x05,0x02,0x0a,0x00,0x00,0x1c,0x0b
	.byte 0x01,0x11,0x01,0x12,0x01,0x00,0x00,0x1d
	.byte 0x2e,0x01,0x03,0x08,0x3f,0x0c,0x3c,0x0c
	.byte 0x27,0x0c,0x88,0x44,0x0b,0x01,0x13,0x00
	.byte 0x00,0x1e,0x2e,0x01,0x03,0x08,0x3f,0x0c
	.byte 0x3c,0x0c,0x27,0x0c,0x49,0x13,0x88,0x44
	.byte 0x0b,0x01,0x13,0x00,0x00,0x1f,0x2e,0x01
	.byte 0x03,0x08,0x3f,0x0c,0x3c,0x0c,0x27,0x0c
	.byte 0x49,0x13,0x88,0x44,0x0b,0x00,0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_pubnames
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_info, lab2=, loff=0
	.section ".debug_pubnames"
	.byte 0x00,0x00,0x00,0xc0,0x00,0x02
	.uaword %section_symbol(".debug_info")
	.byte 0x00,0x00,0xa3,0xe4,0x00,0x00,0x95,0xa5
	.byte 0x67,0x6c,0x5f,0x77,0x72,0x69,0x74,0x65
	.byte 0x5f,0x69,0x6e,0x64,0x65,0x78,0x5f,0x73
	.byte 0x70,0x61,0x6e,0x00,0x00,0x00,0x96,0x86
	.byte 0x67,0x6c,0x5f,0x77,0x72,0x69,0x74,0x65
	.byte 0x5f,0x6d,0x6f,0x6e,0x6f,0x69,0x6e,0x64
	.byte 0x65,0x78,0x5f,0x73,0x70,0x61,0x6e,0x00
	.byte 0x00,0x00,0x97,0xc7,0x67,0x6c,0x5f,0x77
	.byte 0x72,0x69,0x74,0x65,0x5f,0x63,0x6f,0x6c
	.byte 0x6f,0x72,0x5f,0x73,0x70,0x61,0x6e,0x00
	.byte 0x00,0x00,0x99,0xe2,0x67,0x6c,0x5f,0x77
	.byte 0x72,0x69,0x74,0x65,0x5f,0x6d,0x6f,0x6e
	.byte 0x6f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x73
	.byte 0x70,0x61,0x6e,0x00,0x00,0x00,0x9c,0x0c
	.byte 0x67,0x6c,0x5f,0x77,0x72,0x69,0x74,0x65
	.byte 0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65
	.byte 0x5f,0x73,0x70,0x61,0x6e,0x00,0x00,0x00
	.byte 0x9e,0x66,0x67,0x6c,0x5f,0x72,0x65,0x61
	.byte 0x64,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f
	.byte 0x73,0x70,0x61,0x6e,0x00,0x00,0x00,0x9f
	.byte 0x1d,0x67,0x6c,0x5f,0x72,0x65,0x61,0x64
	.byte 0x5f,0x69,0x6e,0x64,0x65,0x78,0x5f,0x73
	.byte 0x70,0x61,0x6e,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_funcnames
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_info, lab2=, loff=0
	.section ".debug_funcnames"
	.byte 0x00,0x00,0x00,0x38,0x00,0x02
	.uaword %section_symbol(".debug_info")
	.byte 0x00,0x00,0xa3,0xe4,0x00,0x00,0x00,0xff
	.byte 0x73,0x74,0x69,0x70,0x70,0x6c,0x65,0x5f
	.byte 0x70,0x6f,0x6c,0x79,0x67,0x6f,0x6e,0x5f
	.byte 0x73,0x70,0x61,0x6e,0x00,0x00,0x00,0x95
	.byte 0x2f,0x63,0x6c,0x69,0x70,0x5f,0x73,0x70
	.byte 0x61,0x6e,0x00,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_typenames
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_info, lab2=, loff=0
	.section ".debug_typenames"
	.byte 0x00,0x00,0x04,0x24,0x00,0x02
	.uaword %section_symbol(".debug_info")
	.byte 0x00,0x00,0xa3,0xe4,0x00,0x00,0x01,0xb6
	.byte 0x47,0x4c,0x69,0x6e,0x74,0x00,0x00,0x00
	.byte 0x01,0xdf,0x47,0x4c,0x75,0x69,0x6e,0x74
	.byte 0x00,0x00,0x00,0x01,0xf5,0x47,0x4c,0x66
	.byte 0x6c,0x6f,0x61,0x74,0x00,0x00,0x00,0x02
	.byte 0x1c,0x00,0x00,0x00,0x31,0xb8,0x47,0x4c
	.byte 0x65,0x6e,0x75,0x6d,0x00,0x00,0x00,0x31
	.byte 0xd6,0x47,0x4c,0x75,0x62,0x79,0x74,0x65
	.byte 0x00,0x00,0x00,0x31,0xf6,0x67,0x6c,0x5f
	.byte 0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f
	.byte 0x69,0x6d,0x61,0x67,0x65,0x00,0x00,0x00
	.byte 0x33,0x28,0x47,0x4c,0x62,0x6f,0x6f,0x6c
	.byte 0x65,0x61,0x6e,0x00,0x00,0x00,0x35,0x3d
	.byte 0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x53
	.byte 0x61,0x6d,0x70,0x6c,0x65,0x46,0x75,0x6e
	.byte 0x63,0x00,0x00,0x00,0x33,0x38,0x67,0x6c
	.byte 0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65
	.byte 0x5f,0x6f,0x62,0x6a,0x65,0x63,0x74,0x00
	.byte 0x00,0x00,0x35,0x5a,0x67,0x6c,0x5f,0x73
	.byte 0x68,0x61,0x72,0x65,0x64,0x5f,0x73,0x74
	.byte 0x61,0x74,0x65,0x00,0x00,0x00,0x3d,0x7e
	.byte 0x47,0x4c,0x76,0x6f,0x69,0x64,0x00,0x00
	.byte 0x00,0x3d,0x90,0x67,0x6c,0x5f,0x69,0x6d
	.byte 0x61,0x67,0x65,0x00,0x00,0x00,0x55,0xb3
	.byte 0x67,0x6c,0x5f,0x61,0x70,0x69,0x5f,0x74
	.byte 0x61,0x62,0x6c,0x65,0x00,0x00,0x00,0x64
	.byte 0x57,0x67,0x6c,0x5f,0x76,0x69,0x73,0x75
	.byte 0x61,0x6c,0x00,0x00,0x00,0x65,0xff,0x47
	.byte 0x4c,0x76,0x69,0x73,0x75,0x61,0x6c,0x00
	.byte 0x00,0x00,0x66,0x13,0x47,0x4c,0x64,0x65
	.byte 0x70,0x74,0x68,0x00,0x00,0x00,0x66,0x26
	.byte 0x47,0x4c,0x73,0x74,0x65,0x6e,0x63,0x69
	.byte 0x6c,0x00,0x00,0x00,0x66,0x44,0x47,0x4c
	.byte 0x61,0x63,0x63,0x75,0x6d,0x00,0x00,0x00
	.byte 0x66,0x57,0x67,0x6c,0x5f,0x66,0x72,0x61
	.byte 0x6d,0x65,0x5f,0x62,0x75,0x66,0x66,0x65
	.byte 0x72,0x00,0x00,0x00,0x67,0x2e,0x47,0x4c
	.byte 0x66,0x72,0x61,0x6d,0x65,0x62,0x75,0x66
	.byte 0x66,0x65,0x72,0x00,0x00,0x00,0x6d,0x8c
	.byte 0x70,0x6f,0x69,0x6e,0x74,0x73,0x5f,0x66
	.byte 0x75,0x6e,0x63,0x00,0x00,0x00,0x6d,0xbf
	.byte 0x6c,0x69,0x6e,0x65,0x5f,0x66,0x75,0x6e
	.byte 0x63,0x00,0x00,0x00,0x6d,0xf5,0x74,0x72
	.byte 0x69,0x61,0x6e,0x67,0x6c,0x65,0x5f,0x66
	.byte 0x75,0x6e,0x63,0x00,0x00,0x00,0x6e,0x34
	.byte 0x71,0x75,0x61,0x64,0x5f,0x66,0x75,0x6e
	.byte 0x63,0x00,0x00,0x00,0x6e,0x6a,0x72,0x65
	.byte 0x63,0x74,0x5f,0x66,0x75,0x6e,0x63,0x00
	.byte 0x00,0x00,0x70,0x51,0x64,0x64,0x5f,0x66
	.byte 0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x5f
	.byte 0x74,0x61,0x62,0x6c,0x65,0x00,0x00,0x00
	.byte 0x75,0x89,0x47,0x4c,0x62,0x69,0x74,0x66
	.byte 0x69,0x65,0x6c,0x64,0x00,0x00,0x00,0x75
	.byte 0x9f,0x67,0x6c,0x5f,0x61,0x74,0x74,0x72
	.byte 0x69,0x62,0x5f,0x6e,0x6f,0x64,0x65,0x00
	.byte 0x00,0x00,0x75,0xff,0x67,0x6c,0x5f,0x61
	.byte 0x63,0x63,0x75,0x6d,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x76,0x4c
	.byte 0x67,0x6c,0x5f,0x63,0x6f,0x6c,0x6f,0x72
	.byte 0x62,0x75,0x66,0x66,0x65,0x72,0x5f,0x61
	.byte 0x74,0x74,0x72,0x69,0x62,0x00,0x00,0x00
	.byte 0x78,0x61,0x67,0x6c,0x5f,0x63,0x75,0x72
	.byte 0x72,0x65,0x6e,0x74,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x79,0x4b
	.byte 0x67,0x6c,0x5f,0x64,0x65,0x70,0x74,0x68
	.byte 0x62,0x75,0x66,0x66,0x65,0x72,0x5f,0x61
	.byte 0x74,0x74,0x72,0x69,0x62,0x00,0x00,0x00
	.byte 0x79,0x9e,0x67,0x6c,0x5f,0x65,0x76,0x61
	.byte 0x6c,0x5f,0x61,0x74,0x74,0x72,0x69,0x62
	.byte 0x00,0x00,0x00,0x7c,0x14,0x67,0x6c,0x5f
	.byte 0x66,0x6f,0x67,0x5f,0x61,0x74,0x74,0x72
	.byte 0x69,0x62,0x00,0x00,0x00,0x7c,0x8d,0x67
	.byte 0x6c,0x5f,0x68,0x69,0x6e,0x74,0x5f,0x61
	.byte 0x74,0x74,0x72,0x69,0x62,0x00,0x00,0x00
	.byte 0x7d,0x60,0x67,0x6c,0x5f,0x6c,0x69,0x67
	.byte 0x68,0x74,0x00,0x00,0x00,0x80,0x07,0x67
	.byte 0x6c,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d
	.byte 0x6f,0x64,0x65,0x6c,0x00,0x00,0x00,0x80
	.byte 0xa8,0x67,0x6c,0x5f,0x6d,0x61,0x74,0x65
	.byte 0x72,0x69,0x61,0x6c,0x00,0x00,0x00,0x81
	.byte 0x98,0x67,0x6c,0x5f,0x6c,0x69,0x67,0x68
	.byte 0x74,0x5f,0x61,0x74,0x74,0x72,0x69,0x62
	.byte 0x00,0x00,0x00,0x82,0xb9,0x47,0x4c,0x75
	.byte 0x73,0x68,0x6f,0x72,0x74,0x00,0x00,0x00
	.byte 0x82,0xc8,0x67,0x6c,0x5f,0x6c,0x69,0x6e
	.byte 0x65,0x5f,0x61,0x74,0x74,0x72,0x69,0x62
	.byte 0x00,0x00,0x00,0x83,0x41,0x67,0x6c,0x5f
	.byte 0x6c,0x69,0x73,0x74,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x84,0x27
	.byte 0x67,0x6c,0x5f,0x70,0x69,0x78,0x65,0x6c
	.byte 0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x00
	.byte 0x00,0x00,0x86,0xf7,0x67,0x6c,0x5f,0x70
	.byte 0x6f,0x69,0x6e,0x74,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x87,0x70
	.byte 0x67,0x6c,0x5f,0x70,0x6f,0x6c,0x79,0x67
	.byte 0x6f,0x6e,0x5f,0x61,0x74,0x74,0x72,0x69
	.byte 0x62,0x00,0x00,0x00,0x88,0xb4,0x47,0x4c
	.byte 0x73,0x69,0x7a,0x65,0x69,0x00,0x00,0x00
	.byte 0x88,0xc2,0x67,0x6c,0x5f,0x73,0x63,0x69
	.byte 0x73,0x73,0x6f,0x72,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x89,0x1d
	.byte 0x67,0x6c,0x5f,0x73,0x74,0x65,0x6e,0x63
	.byte 0x69,0x6c,0x5f,0x61,0x74,0x74,0x72,0x69
	.byte 0x62,0x00,0x00,0x00,0x8a,0x77,0x67,0x6c
	.byte 0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65
	.byte 0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x00
	.byte 0x00,0x00,0x8c,0xd9,0x67,0x6c,0x5f,0x74
	.byte 0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d
	.byte 0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x00
	.byte 0x00,0x00,0x8d,0x53,0x67,0x6c,0x5f,0x76
	.byte 0x69,0x65,0x77,0x70,0x6f,0x72,0x74,0x5f
	.byte 0x61,0x74,0x74,0x72,0x69,0x62,0x00,0x00
	.byte 0x00,0x8e,0x10,0x67,0x6c,0x5f,0x61,0x72
	.byte 0x72,0x61,0x79,0x5f,0x61,0x74,0x74,0x72
	.byte 0x69,0x62,0x00,0x00,0x00,0x90,0xbb,0x67
	.byte 0x6c,0x5f,0x70,0x69,0x78,0x65,0x6c,0x73
	.byte 0x74,0x6f,0x72,0x65,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x91,0x6f
	.byte 0x67,0x6c,0x5f,0x31,0x64,0x5f,0x6d,0x61
	.byte 0x70,0x00,0x00,0x00,0x91,0xc3,0x67,0x6c
	.byte 0x5f,0x32,0x64,0x5f,0x6d,0x61,0x70,0x00
	.byte 0x00,0x00,0x92,0x3d,0x67,0x6c,0x5f,0x65
	.byte 0x76,0x61,0x6c,0x75,0x61,0x74,0x6f,0x72
	.byte 0x73,0x00,0x00,0x00,0x93,0xc7,0x67,0x6c
	.byte 0x5f,0x66,0x65,0x65,0x64,0x62,0x61,0x63
	.byte 0x6b,0x00,0x00,0x00,0x94,0x3c,0x67,0x6c
	.byte 0x5f,0x73,0x65,0x6c,0x65,0x63,0x74,0x69
	.byte 0x6f,0x6e,0x00,0x00,0x00,0x35,0xfb,0x67
	.byte 0x6c,0x5f,0x63,0x6f,0x6e,0x74,0x65,0x78
	.byte 0x74,0x00,0x00,0x00,0x95,0x1a,0x47,0x4c
	.byte 0x63,0x6f,0x6e,0x74,0x65,0x78,0x74,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x00
!  End sdCreateSection
