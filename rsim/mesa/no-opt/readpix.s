
	.section	".text",#alloc,#execinstr
	.align	8
	.skip	16

	! block 0
	.type	read_index_pixels,#function
read_index_pixels:
	sethi	%hi(-6536),%g1
	or	%g1,%lo(-6536),%g1
	save	%sp,%g1,%sp

	! block 1
.L13:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]

	! block 2
.L14:
.L16:
.L18:

! File readpix.c:
!    1	/* $Id: readpix.c,v 1.10 1997/07/24 01:25:18 brianp Exp $ */
!    2	
!    3	/*
!    4	 * Mesa 3-D graphics library
!    5	 * Version:  2.4
!    6	 * Copyright (C) 1995-1997  Brian Paul
!    7	 *
!    8	 * This library is free software; you can redistribute it and/or
!    9	 * modify it under the terms of the GNU Library General Public
!   10	 * License as published by the Free Software Foundation; either
!   11	 * version 2 of the License, or (at your option) any later version.
!   12	 *
!   13	 * This library is distributed in the hope that it will be useful,
!   14	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
!   15	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
!   16	 * Library General Public License for more details.
!   17	 *
!   18	 * You should have received a copy of the GNU Library General Public
!   19	 * License along with this library; if not, write to the Free
!   20	 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
!   21	 */
!   22	
!   24	/*
!   25	 * $Log: readpix.c,v $
!   26	 * Revision 1.10  1997/07/24 01:25:18  brianp
!   27	 * changed precompiled header symbol from PCH to PC_HEADER
!   28	 *
!   29	 * Revision 1.9  1997/05/28 03:26:18  brianp
!   30	 * added precompiled header (PCH) support
!   31	 *
!   32	 * Revision 1.8  1997/05/08 01:43:50  brianp
!   33	 * added error check to gl_ReadPixels() for inside glBegin/glEnd
!   34	 *
!   35	 * Revision 1.7  1997/02/03 20:31:15  brianp
!   36	 * added a few DEFARRAY macros for BeOS
!   37	 *
!   38	 * Revision 1.6  1997/01/16 19:24:05  brianp
!   39	 * replaced a few abort()'s with gl_error() calls
!   40	 *
!   41	 * Revision 1.5  1996/12/20 20:28:04  brianp
!   42	 * use DEF/UNDEFARRAY() macros in read_color_pixels() for Mac compilers
!   43	 *
!   44	 * Revision 1.4  1996/11/01 03:20:47  brianp
!   45	 * reading GL_LUMINANCE pixels weren't clamped
!   46	 *
!   47	 * Revision 1.3  1996/09/27 01:29:47  brianp
!   48	 * added missing default cases to switches
!   49	 *
!   50	 * Revision 1.2  1996/09/15 14:18:37  brianp
!   51	 * now use GLframebuffer and GLvisual
!   52	 *
!   53	 * Revision 1.1  1996/09/13 01:38:16  brianp
!   54	 * Initial revision
!   55	 *
!   56	 */
!   57	
!   59	#ifdef PC_HEADER
!   60	#include "all.h"
!   61	#else
!   62	#include <math.h>
!   63	#include <stdlib.h>
!   64	#include <string.h>
!   65	#include "alphabuf.h"
!   66	#include "context.h"
!   67	#include "depth.h"
!   68	#include "feedback.h"
!   69	#include "dlist.h"
!   70	#include "macros.h"
!   71	#include "image.h"
!   72	#include "readpix.h"
!   73	#include "span.h"
!   74	#include "stencil.h"
!   75	#include "types.h"
!   76	#endif
!   77	
!   81	/*
!   82	 * Read a block of color index pixels.
!   83	 */
!   84	static void read_index_pixels( GLcontext *ctx,
!   85	                               GLint x, GLint y,
!   86				       GLsizei width, GLsizei height,
!   87				       GLenum type, GLvoid *pixels )
!   88	{
!   89	   GLint i, j;
!   90	   GLuint a, s, k, l, start;
!   91	
!   92	   /* error checking */
!   93	   if (ctx->Visual->RGBAflag) {

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ldub	[%l0+0],%l0
	cmp	%l0,%g0
	be	.L17
	nop

	! block 3
.L19:
.L20:
.L21:
.L22:

!   94	      gl_error( ctx, GL_INVALID_OPERATION, "glReadPixels" );

	ld	[%fp+68],%l0
	sethi	%hi(.L23),%l1
	or	%l1,%lo(.L23),%l1
	mov	%l0,%o0
	mov	1282,%o1
	call	gl_error
	mov	%l1,%o2

	! block 4
.L24:

!   95	      return;

	ba	.L12
	nop

	! block 5
.L25:
.L26:
.L17:
.L27:
.L28:

!   96	   }
!   97	
!   98	   /* Size of each component */
!   99	   s = gl_sizeof_type( type );

	ld	[%fp+88],%l0
	call	gl_sizeof_type
	mov	%l0,%o0
	st	%o0,[%fp-16]

	! block 6
.L29:
.L31:

!  100	   if (s<=0) {

	ld	[%fp-16],%l0
	cmp	%l0,0
	bgu	.L30
	nop

	! block 7
.L32:
.L33:
.L34:
.L35:

!  101	      gl_error( ctx, GL_INVALID_ENUM, "glReadPixels(type)" );

	ld	[%fp+68],%l0
	sethi	%hi(.L36),%l1
	or	%l1,%lo(.L36),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 8
.L37:

!  102	      return;

	ba	.L12
	nop

	! block 9
.L38:
.L39:
.L30:
.L40:
.L41:

!  103	   }
!  104	
!  105	   /* Compute packing parameters */
!  106	   a = ctx->Pack.Alignment;

	ld	[%fp+68],%l0
	sethi	%hi(0xddac),%l1
	or	%l1,%lo(0xddac),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-12]

	! block 10
.L42:
.L44:

!  107	   if (ctx->Pack.RowLength>0) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddb0),%l1
	or	%l1,%lo(0xddb0),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	ble	.L43
	nop

	! block 11
.L45:
.L46:
.L47:
.L48:

!  108	      l = ctx->Pack.RowLength;

	ld	[%fp+68],%l0
	sethi	%hi(0xddb0),%l1
	or	%l1,%lo(0xddb0),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-24]

	! block 12
.L49:
.L50:
	ba	.L51
	nop

	! block 13
.L43:
.L52:
.L53:
.L54:

!  109	   }
!  110	   else {
!  111	      l = width;

	ld	[%fp+80],%l0
	st	%l0,[%fp-24]

	! block 14
.L55:
.L56:
.L51:
.L57:
.L58:
.L60:

!  112	   }
!  113	   /* k = offset between rows in components */
!  114	   if (s>=a) {

	ld	[%fp-16],%l1
	ld	[%fp-12],%l0
	cmp	%l1,%l0
	blu	.L59
	nop

	! block 15
.L61:
.L62:
.L63:
.L64:

!  115	      k = l;

	ld	[%fp-24],%l0
	st	%l0,[%fp-20]

	! block 16
.L65:
.L66:
	ba	.L67
	nop

	! block 17
.L59:
.L68:
.L69:
.L70:

!  116	   }
!  117	   else {
!  118	      k = a/s * CEILING( s*l, a );

	ld	[%fp-16],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-12],%l1
	wr	%g0,%g0,%y
	nop
	nop
	nop
	udiv	%l0,%l1,%g1
	umul	%g1,%l1,%g1
	sub	%l0,%g1,%l0
	cmp	%l0,0
	bne	.L71
	nop

	! block 18
.L72:
	ld	[%fp-16],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-12],%l1
	wr	%g0,%g0,%y
	nop
	nop
	nop
	udiv	%l0,%l1,%l0
	ba	.L73
	st	%l0,[%fp-32]

	! block 19
.L71:
	ld	[%fp-16],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-12],%l1
	wr	%g0,%g0,%y
	nop
	nop
	nop
	udiv	%l0,%l1,%l0
	add	%l0,1,%l0
	st	%l0,[%fp-32]

	! block 20
.L73:
	ld	[%fp-12],%l0
	ld	[%fp-16],%l1
	wr	%g0,%g0,%y
	nop
	nop
	nop
	udiv	%l0,%l1,%l0
	ld	[%fp-32],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-20]

	! block 21
.L74:
.L75:
.L67:
.L76:
.L77:

!  119	   }
!  120	
!  121	   /* offset to first component returned */
!  122	   start = ctx->Pack.SkipRows * k + ctx->Pack.SkipPixels;

	ld	[%fp+68],%l2
	sethi	%hi(0xddb8),%l1
	or	%l1,%lo(0xddb8),%l1
	ld	[%l2+%l1],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sethi	%hi(0xddb4),%l1
	or	%l1,%lo(0xddb4),%l1
	ld	[%l2+%l1],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-28]

	! block 22
.L78:
.L79:

!  124	   /* process image row by row */
!  125	   for (j=0;j<height;j++,y++) {

	ld	[%fp+84],%l0
	cmp	%g0,%l0
	bge	.L82
	st	%g0,[%fp-8]

	! block 23
.L83:
.L80:
.L84:
.L85:
.L86:

!  126	      GLuint index[MAX_WIDTH];
!  127	      (*ctx->Driver.ReadIndexSpan)( ctx, width, x, y, index );

	ld	[%fp+68],%l1
	ld	[%l1+2276],%l4
	ld	[%fp+80],%l2
	ld	[%fp+72],%l3
	ld	[%fp+76],%l5
	sethi	0x6,%l0
	xor	%l0,-284,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l0,%o4
	jmpl	%l4,%o7
	nop

	! block 24
.L87:
.L89:

!  129	      if (ctx->Pixel.IndexShift!=0 || ctx->Pixel.IndexOffset!=0) {

	ld	[%fp+68],%l0
	sethi	%hi(0xae44),%l1
	or	%l1,%lo(0xae44),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	bne	.L90
	nop

	! block 25
.L91:
	ld	[%fp+68],%l0
	sethi	%hi(0xae48),%l1
	or	%l1,%lo(0xae48),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	be	.L88
	nop

	! block 26
.L92:
.L90:
.L93:
.L94:
.L95:
.L97:

!  130		 GLuint s;
!  131		 if (ctx->Pixel.IndexShift<0) {

	ld	[%fp+68],%l0
	sethi	%hi(0xae44),%l1
	or	%l1,%lo(0xae44),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	bge	.L96
	nop

	! block 27
.L98:
.L99:
.L100:
.L101:

!  132		    /* right shift */
!  133		    s = -ctx->Pixel.IndexShift;

	ld	[%fp+68],%l0
	sethi	%hi(0xae44),%l1
	or	%l1,%lo(0xae44),%l1
	ld	[%l0+%l1],%l0
	neg	%l0,%l1
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	st	%l1,[%fp+%l0]

	! block 28
.L102:
.L103:

!  134		    for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L106
	st	%g0,[%fp-4]

	! block 29
.L_y6:
	sethi	%hi(0xae48),%l6
	or	%l6,%lo(0xae48),%l6
	sethi	0x6,%l7
	xor	%l7,-288,%l7
	sethi	0x6,%l4
	xor	%l4,-284,%l4
.L107:
.L104:
.L108:
.L109:
.L110:

!  135		       index[i] = (index[i] >> s) + ctx->Pixel.IndexOffset;

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l5
	ld	[%l5+0],%l0
	ld	[%fp+%l7],%l1
	srl	%l0,%l1,%l3
	ld	[%fp+68],%l0
	ld	[%l0+%l6],%l1
	add	%l3,%l1,%l0
	st	%l0,[%l5+0]

	! block 30
.L111:
.L112:
.L113:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L104
	nop

	! block 31
.L114:
.L106:
.L115:
.L116:
.L117:
	ba	.L118
	nop

	! block 32
.L96:
.L119:
.L120:
.L121:

!  136		    }
!  137		 }
!  138		 else {
!  139		    /* left shift */
!  140		    s = ctx->Pixel.IndexShift;

	ld	[%fp+68],%l0
	sethi	%hi(0xae44),%l1
	or	%l1,%lo(0xae44),%l1
	ld	[%l0+%l1],%l1
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	st	%l1,[%fp+%l0]

	! block 33
.L122:
.L123:

!  141		    for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L126
	st	%g0,[%fp-4]

	! block 34
.L_y7:
	sethi	%hi(0xae48),%l6
	or	%l6,%lo(0xae48),%l6
	sethi	0x6,%l7
	xor	%l7,-288,%l7
	sethi	0x6,%l4
	xor	%l4,-284,%l4
.L127:
.L124:
.L128:
.L129:
.L130:

!  142		       index[i] = (index[i] << s) + ctx->Pixel.IndexOffset;

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l5
	ld	[%l5+0],%l0
	ld	[%fp+%l7],%l1
	sll	%l0,%l1,%l3
	ld	[%fp+68],%l0
	ld	[%l0+%l6],%l1
	add	%l3,%l1,%l0
	st	%l0,[%l5+0]

	! block 35
.L131:
.L132:
.L133:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L124
	nop

	! block 36
.L134:
.L126:
.L135:
.L136:
.L137:
.L118:
.L138:
.L139:
.L140:
.L88:
.L141:
.L142:
.L144:

!  143		    }
!  144		 }
!  145	      }
!  146	
!  147	      if (ctx->Pixel.MapColorFlag) {

	ld	[%fp+68],%l0
	sethi	%hi(0xae4c),%l1
	or	%l1,%lo(0xae4c),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L143
	nop

	! block 37
.L145:
.L146:
.L147:
.L148:
.L149:

!  148		 for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L152
	st	%g0,[%fp-4]

	! block 38
.L_y8:
	sethi	%hi(0xb280),%l6
	or	%l6,%lo(0xb280),%l6
	sethi	0x6,%l4
	xor	%l4,-284,%l4
.L153:
.L150:
.L154:
.L155:
.L156:

!  149		    index[i] = ctx->Pixel.MapItoI[ index[i] ];

	ld	[%fp+68],%l3
	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l5
	ld	[%l5+0],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l6],%l0
	st	%l0,[%l5+0]

	! block 39
.L157:
.L158:
.L159:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L150
	nop

	! block 40
.L160:
.L152:
.L161:
.L162:
.L163:
.L143:
.L164:
.L165:
.L168:

!  150		 }
!  151	      }
!  152	
!  153	      switch (type) {

	ba	.L167
	nop

	! block 41
.L169:
.L170:
.L171:
.L172:
.L173:

!  154		 case GL_UNSIGNED_BYTE:
!  155		    {
!  156		       GLubyte *dst = (GLubyte *) pixels + start + j * k;

	ld	[%fp+92],%l0
	ld	[%fp-28],%l1
	add	%l0,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	st	%l1,[%fp+%l0]

	! block 42
.L174:
.L175:

!  157		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L178
	st	%g0,[%fp-4]

	! block 43
.L_y9:
	sethi	0x6,%l3
	xor	%l3,-288,%l3
	sethi	0x6,%l4
	xor	%l4,-284,%l4
.L179:
.L176:
.L180:
.L181:
.L182:

!  158			  *dst++ = (GLubyte) index[i];

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%l1
	ld	[%fp+%l3],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l3]

	! block 44
.L183:
.L184:
.L185:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L176
	nop

	! block 45
.L186:
.L178:
.L187:
.L188:
.L189:

!  159		       }
!  160		    }
!  161		    break;

	ba	.L166
	nop

	! block 46
.L190:
.L191:
.L192:

!  162		 case GL_BYTE:
!  163		    {
!  164		       GLbyte *dst = (GLbyte *) pixels + start + j * k;

	ld	[%fp+92],%l0
	ld	[%fp-28],%l1
	add	%l0,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	st	%l1,[%fp+%l0]

	! block 47
.L193:
.L194:

!  165		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L197
	st	%g0,[%fp-4]

	! block 48
.L_y10:
	sethi	0x6,%l3
	xor	%l3,-288,%l3
	sethi	0x6,%l4
	xor	%l4,-284,%l4
.L198:
.L195:
.L199:
.L200:
.L201:

!  166			  *dst++ = (GLbyte) index[i];

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%l1
	ld	[%fp+%l3],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l3]

	! block 49
.L202:
.L203:
.L204:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L195
	nop

	! block 50
.L205:
.L197:
.L206:
.L207:
.L208:

!  167		       }
!  168		    }
!  169		    break;

	ba	.L166
	nop

	! block 51
.L209:
.L210:
.L211:

!  170		 case GL_UNSIGNED_SHORT:
!  171		    {
!  172		       GLushort *dst = (GLushort *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	st	%l1,[%fp+%l0]

	! block 52
.L212:
.L213:

!  173		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L216
	st	%g0,[%fp-4]

	! block 53
.L_y11:
	sethi	0x6,%l3
	xor	%l3,-288,%l3
	sethi	0x6,%l4
	xor	%l4,-284,%l4
.L217:
.L214:
.L218:
.L219:
.L220:

!  174			  *dst++ = (GLushort) index[i];

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%l1
	ld	[%fp+%l3],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l3]

	! block 54
.L221:
.L222:
.L223:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L214
	nop

	! block 55
.L224:
.L216:
.L225:
.L226:
.L228:

!  175		       }
!  176		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L227
	nop

	! block 56
.L229:
.L230:
.L231:
.L232:

!  177			  gl_swap2( (GLushort *) pixels + start + j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap2
	mov	%l1,%o1

	! block 57
.L233:
.L234:
.L227:
.L235:
.L236:
.L237:

!  178		       }
!  179		    }
!  180		    break;

	ba	.L166
	nop

	! block 58
.L238:
.L239:
.L240:

!  181		 case GL_SHORT:
!  182		    {
!  183		       GLshort *dst = (GLshort *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	st	%l1,[%fp+%l0]

	! block 59
.L241:
.L242:

!  184		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L245
	st	%g0,[%fp-4]

	! block 60
.L_y12:
	sethi	0x6,%l3
	xor	%l3,-288,%l3
	sethi	0x6,%l4
	xor	%l4,-284,%l4
.L246:
.L243:
.L247:
.L248:
.L249:

!  185			  *dst++ = (GLshort) index[i];

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%l1
	ld	[%fp+%l3],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l3]

	! block 61
.L250:
.L251:
.L252:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L243
	nop

	! block 62
.L253:
.L245:
.L254:
.L255:
.L257:

!  186		       }
!  187		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L256
	nop

	! block 63
.L258:
.L259:
.L260:
.L261:

!  188			  gl_swap2( (GLushort *) pixels + start + j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap2
	mov	%l1,%o1

	! block 64
.L262:
.L263:
.L256:
.L264:
.L265:
.L266:

!  189		       }
!  190		    }
!  191		    break;

	ba	.L166
	nop

	! block 65
.L267:
.L268:
.L269:

!  192		 case GL_UNSIGNED_INT:
!  193		    {
!  194		       GLuint *dst = (GLuint *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	st	%l1,[%fp+%l0]

	! block 66
.L270:
.L271:

!  195		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L274
	st	%g0,[%fp-4]

	! block 67
.L_y13:
	sethi	0x6,%l3
	xor	%l3,-288,%l3
	sethi	0x6,%l4
	xor	%l4,-284,%l4
.L275:
.L272:
.L276:
.L277:
.L278:

!  196			  *dst++ = (GLuint) index[i];

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%l1
	ld	[%fp+%l3],%l0
	st	%l1,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l3]

	! block 68
.L279:
.L280:
.L281:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L272
	nop

	! block 69
.L282:
.L274:
.L283:
.L284:
.L286:

!  197		       }
!  198		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L285
	nop

	! block 70
.L287:
.L288:
.L289:
.L290:

!  199			  gl_swap4( (GLuint *) pixels + start + j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap4
	mov	%l1,%o1

	! block 71
.L291:
.L292:
.L285:
.L293:
.L294:
.L295:

!  200		       }
!  201		    }
!  202		    break;

	ba	.L166
	nop

	! block 72
.L296:
.L297:
.L298:

!  203		 case GL_INT:
!  204		    {
!  205		       GLint *dst = (GLint *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	st	%l1,[%fp+%l0]

	! block 73
.L299:
.L300:

!  206		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L303
	st	%g0,[%fp-4]

	! block 74
.L_y14:
	sethi	0x6,%l3
	xor	%l3,-288,%l3
	sethi	0x6,%l4
	xor	%l4,-284,%l4
.L304:
.L301:
.L305:
.L306:
.L307:

!  207			  *dst++ = (GLint) index[i];

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%l1
	ld	[%fp+%l3],%l0
	st	%l1,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l3]

	! block 75
.L308:
.L309:
.L310:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L301
	nop

	! block 76
.L311:
.L303:
.L312:
.L313:
.L315:

!  208		       }
!  209		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L314
	nop

	! block 77
.L316:
.L317:
.L318:
.L319:

!  210			  gl_swap4( (GLuint *) pixels + start + j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap4
	mov	%l1,%o1

	! block 78
.L320:
.L321:
.L314:
.L322:
.L323:
.L324:

!  211		       }
!  212		    }
!  213		    break;

	ba	.L166
	nop

	! block 79
.L325:
.L326:
.L327:

!  214		 case GL_FLOAT:
!  215		    {
!  216		       GLfloat *dst = (GLfloat *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	st	%l1,[%fp+%l0]

	! block 80
.L328:
.L329:

!  217		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L332
	st	%g0,[%fp-4]

	! block 81
.L_y15:
	mov	0,%l3
	sethi	0x6,%l5
	xor	%l5,-292,%l5
	sethi	0x6,%l6
	xor	%l6,-296,%l6
	sethi	%hi(0x43300000),%l7
	sethi	0x6,%l4
	xor	%l4,-284,%l4
.L333:
.L330:
.L334:
.L335:
.L336:

!  218			  *dst++ = (GLfloat) index[i];

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%l0
	st	%l7,[%fp+%l6]
	st	%l0,[%fp+%l5]
	ldd	[%fp+%l6],%f6
	st	%l3,[%fp+%l5]
	ldd	[%fp+%l6],%f4
	fsubd	%f6,%f4,%f4
	fabss	%f4,%f4
	fdtos	%f4,%f4
	sethi	0x6,%l1
	xor	%l1,-288,%l1
	ld	[%fp+%l1],%l0
	st	%f4,[%l0+0]
	ld	[%fp+%l1],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l1]

	! block 82
.L337:
.L338:
.L339:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L330
	nop

	! block 83
.L340:
.L332:
.L341:
.L342:
.L344:

!  219		       }
!  220		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L343
	nop

	! block 84
.L345:
.L346:
.L347:
.L348:

!  221			  gl_swap4( (GLuint *) pixels + start + j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap4
	mov	%l1,%o1

	! block 85
.L349:
.L350:
.L343:
.L351:
.L352:
.L353:

!  222		       }
!  223		    }
!  224		    break;

	ba	.L166
	nop

	! block 86
.L354:
.L355:

!  225	         default:
!  226	            gl_error( ctx, GL_INVALID_ENUM, "glReadPixels(type)" );

	ld	[%fp+68],%l0
	sethi	%hi(.L356),%l1
	or	%l1,%lo(.L356),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 87
.L357:
.L358:
	ba	.L166
	nop

	! block 88
.L167:
.L359:
	ld	[%fp+88],%l0
	sethi	%hi(0x1400),%l1
	sub	%l0,%l1,%l0
	cmp	%l0,6
	bgu	.L354
	nop

	! block 89
	sll	%l0,2,%l1
	sethi	%hi(.L_y0-28),%l0
	or	%l0,%lo(.L_y0-28),%l0
	ld	[%l0+%l1],%l0
	jmp	%l0
	nop

	! block 90
.L360:
.L166:
.L361:
.L362:
.L363:
.L364:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp+76],%l0
	st	%l0,[%fp-32]
	ld	[%fp+76],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+76]
	ld	[%fp-8],%l1
	ld	[%fp+84],%l0
	cmp	%l1,%l0
	bl	.L80
	nop

	! block 91
.L365:
.L82:
.L366:

	! block 92
.L367:
.L368:
.L12:
	jmp	%i7+8
	restore
	.size	read_index_pixels,(.-read_index_pixels)

	.word	.L190
	.word	.L171
	.word	.L238
	.word	.L209
	.word	.L296
	.word	.L267
	.word	.L325
.L_y0:
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	read_depth_pixels,#function
read_depth_pixels:
	sethi	%hi(-6560),%g1
	or	%g1,%lo(-6560),%g1
	save	%sp,%g1,%sp

	! block 1
.L371:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]

	! block 2
.L372:
.L374:
.L376:

! File readpix.c:
!  227	      }
!  228	   }
!  229	}
!  230	
!  233	static void read_depth_pixels( GLcontext *ctx,
!  234	                               GLint x, GLint y,
!  235				       GLsizei width, GLsizei height,
!  236				       GLenum type, GLvoid *pixels )
!  237	{
!  238	   GLint i, j;
!  239	   GLuint a, s, k, l, start;
!  240	   GLboolean bias_or_scale;
!  241	
!  242	   /* Error checking */
!  243	   if (ctx->Visual->DepthBits<=0) {

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+64],%l0
	cmp	%l0,0
	bg	.L375
	nop

	! block 3
.L377:
.L378:
.L379:
.L380:

!  244	      /* No depth buffer */
!  245	      gl_error( ctx, GL_INVALID_OPERATION, "glReadPixels" );

	ld	[%fp+68],%l0
	sethi	%hi(.L381),%l1
	or	%l1,%lo(.L381),%l1
	mov	%l0,%o0
	mov	1282,%o1
	call	gl_error
	mov	%l1,%o2

	! block 4
.L382:

!  246	      return;

	ba	.L370
	nop

	! block 5
.L383:
.L384:
.L375:
.L385:
.L386:

!  247	   }
!  248	
!  249	   bias_or_scale = ctx->Pixel.DepthBias!=0.0 || ctx->Pixel.DepthScale!=1.0;

	ld	[%fp+68],%l0
	sethi	%hi(0xae3c),%l1
	or	%l1,%lo(0xae3c),%l1
	ld	[%l0+%l1],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg0),%l0
	ldd	[%l0+%lo(.L_cseg0)],%f4
	fcmpd	%f6,%f4
	fbne	.L388
	nop

	! block 6
.L389:
	ld	[%fp+68],%l0
	sethi	%hi(0xae40),%l1
	or	%l1,%lo(0xae40),%l1
	ld	[%l0+%l1],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg1),%l0
	ldd	[%l0+%lo(.L_cseg1)],%f4
	fcmpd	%f6,%f4
	fbe	.L387
	nop

	! block 7
.L390:
.L388:
	mov	1,%l0
	ba	.L391
	st	%l0,[%fp-36]

	! block 8
.L387:
	st	%g0,[%fp-36]

	! block 9
.L391:
	ld	[%fp-36],%l0
	stb	%l0,[%fp-29]

	! block 10
.L392:

!  251	   /* Size of each component */
!  252	   s = gl_sizeof_type( type );

	ld	[%fp+88],%l0
	call	gl_sizeof_type
	mov	%l0,%o0
	st	%o0,[%fp-16]

	! block 11
.L393:
.L395:

!  253	   if (s<=0) {

	ld	[%fp-16],%l0
	cmp	%l0,0
	bgu	.L394
	nop

	! block 12
.L396:
.L397:
.L398:
.L399:

!  254	      gl_error( ctx, GL_INVALID_ENUM, "glReadPixels(type)" );

	ld	[%fp+68],%l0
	sethi	%hi(.L400),%l1
	or	%l1,%lo(.L400),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 13
.L401:

!  255	      return;

	ba	.L370
	nop

	! block 14
.L402:
.L403:
.L394:
.L404:
.L405:

!  256	   }
!  257	
!  258	   /* Compute packing parameters */
!  259	   a = ctx->Pack.Alignment;

	ld	[%fp+68],%l0
	sethi	%hi(0xddac),%l1
	or	%l1,%lo(0xddac),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-12]

	! block 15
.L406:
.L408:

!  260	   if (ctx->Pack.RowLength>0) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddb0),%l1
	or	%l1,%lo(0xddb0),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	ble	.L407
	nop

	! block 16
.L409:
.L410:
.L411:
.L412:

!  261	      l = ctx->Pack.RowLength;

	ld	[%fp+68],%l0
	sethi	%hi(0xddb0),%l1
	or	%l1,%lo(0xddb0),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-24]

	! block 17
.L413:
.L414:
	ba	.L415
	nop

	! block 18
.L407:
.L416:
.L417:
.L418:

!  262	   }
!  263	   else {
!  264	      l = width;

	ld	[%fp+80],%l0
	st	%l0,[%fp-24]

	! block 19
.L419:
.L420:
.L415:
.L421:
.L422:
.L424:

!  265	   }
!  266	   /* k = offset between rows in components */
!  267	   if (s>=a) {

	ld	[%fp-16],%l1
	ld	[%fp-12],%l0
	cmp	%l1,%l0
	blu	.L423
	nop

	! block 20
.L425:
.L426:
.L427:
.L428:

!  268	      k = l;

	ld	[%fp-24],%l0
	st	%l0,[%fp-20]

	! block 21
.L429:
.L430:
	ba	.L431
	nop

	! block 22
.L423:
.L432:
.L433:
.L434:

!  269	   }
!  270	   else {
!  271	      k = a/s * CEILING( s*l, a );

	ld	[%fp-16],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-12],%l1
	wr	%g0,%g0,%y
	nop
	nop
	nop
	udiv	%l0,%l1,%g1
	umul	%g1,%l1,%g1
	sub	%l0,%g1,%l0
	cmp	%l0,0
	bne	.L435
	nop

	! block 23
.L436:
	ld	[%fp-16],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-12],%l1
	wr	%g0,%g0,%y
	nop
	nop
	nop
	udiv	%l0,%l1,%l0
	ba	.L437
	st	%l0,[%fp-40]

	! block 24
.L435:
	ld	[%fp-16],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-12],%l1
	wr	%g0,%g0,%y
	nop
	nop
	nop
	udiv	%l0,%l1,%l0
	add	%l0,1,%l0
	st	%l0,[%fp-40]

	! block 25
.L437:
	ld	[%fp-12],%l0
	ld	[%fp-16],%l1
	wr	%g0,%g0,%y
	nop
	nop
	nop
	udiv	%l0,%l1,%l0
	ld	[%fp-40],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-20]

	! block 26
.L438:
.L439:
.L431:
.L440:
.L441:

!  272	   }
!  273	
!  274	   /* offset to first component returned */
!  275	   start = ctx->Pack.SkipRows * k + ctx->Pack.SkipPixels;

	ld	[%fp+68],%l2
	sethi	%hi(0xddb8),%l1
	or	%l1,%lo(0xddb8),%l1
	ld	[%l2+%l1],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sethi	%hi(0xddb4),%l1
	or	%l1,%lo(0xddb4),%l1
	ld	[%l2+%l1],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-28]

	! block 27
.L442:
.L444:

!  277	   if (type==GL_UNSIGNED_SHORT && sizeof(GLdepth)==sizeof(GLushort)
!  278	       && !bias_or_scale && !ctx->Pack.SwapBytes) {

	ld	[%fp+88],%l1
	sethi	%hi(0x1403),%l0
	or	%l0,%lo(0x1403),%l0
	cmp	%l1,%l0
	bne	.L443
	nop

	! block 28
.L445:
	ldub	[%fp-29],%l0
	cmp	%l0,%g0
	bne	.L443
	nop

	! block 29
.L446:
	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	bne	.L443
	nop

	! block 30
.L447:
.L448:
.L449:
.L450:
.L451:

!  279	      /* Special case: directly read 16-bit unsigned depth values. */
!  280	      for (j=0;j<height;j++,y++) {

	ld	[%fp+84],%l0
	cmp	%g0,%l0
	bge	.L454
	st	%g0,[%fp-8]

	! block 31
.L455:
.L452:
.L456:
.L457:
.L458:

!  281	         GLushort *dst = (GLushort *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-40]

	! block 32
.L459:

!  282	         (*ctx->Driver.ReadDepthSpanInt)( ctx, width, x, y, (GLdepth*) dst);

	ld	[%fp+68],%l0
	ld	[%l0+2344],%l5
	ld	[%fp+80],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp-40],%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l4,%o4
	jmpl	%l5,%o7
	nop

	! block 33
.L460:
.L461:
.L462:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp+76],%l0
	st	%l0,[%fp-40]
	ld	[%fp+76],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+76]
	ld	[%fp-8],%l1
	ld	[%fp+84],%l0
	cmp	%l1,%l0
	bl	.L452
	nop

	! block 34
.L463:
.L454:
.L464:
.L465:
.L466:
	ba	.L467
	nop

	! block 35
.L443:
.L468:
.L469:
.L471:

!  283	      }
!  284	   }
!  285	   else if (type==GL_UNSIGNED_INT && sizeof(GLdepth)==sizeof(GLuint)
!  286	            && !bias_or_scale && !ctx->Pack.SwapBytes) {

	ld	[%fp+88],%l1
	sethi	%hi(0x1405),%l0
	or	%l0,%lo(0x1405),%l0
	cmp	%l1,%l0
	bne	.L470
	nop

	! block 36
.L472:
	ba	.L470
	nop

	! block 37
	ldub	[%fp-29],%l0
	cmp	%l0,%g0
	bne	.L470
	nop

	! block 38
.L473:
	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	bne	.L470
	nop

	! block 39
.L474:
.L475:
.L476:
.L477:

!  287	      /* Special case: directly read 32-bit unsigned depth values. */
!  288	      /* Compute shift value to scale depth values up to 32-bit uints. */
!  289	      GLuint shift = 0;

	st	%g0,[%fp-40]

	! block 40
.L478:

!  290	      GLuint max = MAX_DEPTH;

	sethi	%hi(0xffff),%l0
	or	%l0,%lo(0xffff),%l0
	st	%l0,[%fp-44]

	! block 41
.L479:
.L483:

!  291	      while ((max&0x80000000)==0) {

	ld	[%fp-44],%l0
	sethi	%hi(0x80000000),%l1
	and	%l0,%l1,%l0
	cmp	%l0,0
	bne	.L482
	nop

	! block 42
.L_y16:
	sethi	%hi(0x80000000),%l1
.L484:
.L480:
.L485:
.L486:
.L487:

!  292	         max = max << 1;

	ld	[%fp-44],%l0
	sll	%l0,1,%l0
	st	%l0,[%fp-44]

	! block 43
.L488:

!  293	         shift++;

	ld	[%fp-40],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-40]

	! block 44
.L489:
.L490:
.L491:
	ld	[%fp-44],%l0
	andcc	%l0,%l1,%l0
	be	.L480
	nop

	! block 45
.L492:
.L482:
.L493:
.L494:
.L495:

!  294	      }
!  295	      for (j=0;j<height;j++,y++) {

	ld	[%fp+84],%l0
	cmp	%g0,%l0
	bge	.L498
	st	%g0,[%fp-8]

	! block 46
.L499:
.L496:
.L500:
.L501:
.L502:

!  296	         GLuint *dst = (GLuint *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-48]

	! block 47
.L503:

!  297	         (*ctx->Driver.ReadDepthSpanInt)( ctx, width, x, y, (GLdepth*) dst);

	ld	[%fp+68],%l0
	ld	[%l0+2344],%l5
	ld	[%fp+80],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp-48],%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l4,%o4
	jmpl	%l5,%o7
	nop

	! block 48
.L504:
.L505:

!  298	         for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L508
	st	%g0,[%fp-4]

	! block 49
.L509:
.L506:
.L510:
.L511:
.L512:

!  299	            dst[i] = dst[i] << shift;

	ld	[%fp-48],%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%l2+0],%l0
	ld	[%fp-40],%l1
	sll	%l0,%l1,%l0
	st	%l0,[%l2+0]

	! block 50
.L513:
.L514:
.L515:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L506
	nop

	! block 51
.L516:
.L508:
.L517:
.L518:
.L519:
.L520:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp+76],%l0
	st	%l0,[%fp-48]
	ld	[%fp+76],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+76]
	ld	[%fp-8],%l1
	ld	[%fp+84],%l0
	cmp	%l1,%l0
	bl	.L496
	nop

	! block 52
.L521:
.L498:
.L522:
.L523:
.L524:
	ba	.L525
	nop

	! block 53
.L470:
.L526:
.L527:
.L528:
.L529:

!  300	         }
!  301	      }
!  302	   }
!  303	   else {
!  304	      /* General case (slow) */
!  305	      for (j=0;j<height;j++,y++) {

	ld	[%fp+84],%l0
	cmp	%g0,%l0
	bge	.L532
	st	%g0,[%fp-8]

	! block 54
.L533:
.L530:
.L534:
.L535:
.L536:

!  306	         GLfloat depth[MAX_WIDTH];
!  307	
!  308	         (*ctx->Driver.ReadDepthSpanFloat)( ctx, width, x, y, depth );

	ld	[%fp+68],%l1
	ld	[%l1+2340],%l4
	ld	[%fp+80],%l2
	ld	[%fp+72],%l3
	ld	[%fp+76],%l5
	sethi	0x6,%l0
	xor	%l0,-292,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l0,%o4
	jmpl	%l4,%o7
	nop

	! block 55
.L537:
.L539:

!  310	         if (bias_or_scale) {

	ldub	[%fp-29],%l0
	cmp	%l0,%g0
	be	.L538
	nop

	! block 56
.L540:
.L541:
.L542:
.L543:
.L544:

!  311	            for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L547
	st	%g0,[%fp-4]

	! block 57
.L548:
.L545:
.L549:
.L550:
.L551:

!  312	               GLfloat d;
!  313	               d = depth[i] * ctx->Pixel.DepthScale + ctx->Pixel.DepthBias;

	sethi	0x6,%l0
	xor	%l0,-292,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%fp+68],%l0
	sethi	%hi(0xae40),%l1
	or	%l1,%lo(0xae40),%l1
	ld	[%l0+%l1],%f4
	fmuls	%f5,%f4,%f5
	sethi	%hi(0xae3c),%l1
	or	%l1,%lo(0xae3c),%l1
	ld	[%l0+%l1],%f4
	fadds	%f5,%f4,%f4
	sethi	0x6,%l0
	xor	%l0,-296,%l0
	st	%f4,[%fp+%l0]

	! block 58
.L552:

!  314	               depth[i] = CLAMP( d, 0.0, 1.0 );

	sethi	0x6,%l0
	xor	%l0,-296,%l0
	ld	[%fp+%l0],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg0),%l0
	ldd	[%l0+%lo(.L_cseg0)],%f4
	fcmped	%f6,%f4
	fbuge	.L553
	nop

	! block 59
.L554:
	sethi	%hi(.L_cseg0),%l0
	ldd	[%l0+%lo(.L_cseg0)],%f4
	sethi	0x6,%l0
	xor	%l0,-304,%l0
	ba	.L555
	std	%f4,[%fp+%l0]

	! block 60
.L553:
	sethi	0x6,%l0
	xor	%l0,-296,%l0
	ld	[%fp+%l0],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg1),%l0
	ldd	[%l0+%lo(.L_cseg1)],%f4
	fcmped	%f6,%f4
	fbule	.L556
	nop

	! block 61
.L557:
	sethi	%hi(.L_cseg1),%l0
	ldd	[%l0+%lo(.L_cseg1)],%f4
	sethi	0x6,%l0
	xor	%l0,-312,%l0
	ba	.L558
	std	%f4,[%fp+%l0]

	! block 62
.L556:
	sethi	0x6,%l0
	xor	%l0,-296,%l0
	ld	[%fp+%l0],%f4
	fstod	%f4,%f4
	sethi	0x6,%l0
	xor	%l0,-312,%l0
	std	%f4,[%fp+%l0]

	! block 63
.L558:
	sethi	0x6,%l0
	xor	%l0,-312,%l0
	ldd	[%fp+%l0],%f4
	sethi	0x6,%l0
	xor	%l0,-304,%l0
	std	%f4,[%fp+%l0]

	! block 64
.L555:
	sethi	0x6,%l0
	xor	%l0,-304,%l0
	ldd	[%fp+%l0],%f4
	fdtos	%f4,%f4
	sethi	0x6,%l0
	xor	%l0,-292,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 65
.L559:
.L560:
.L561:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L545
	nop

	! block 66
.L562:
.L547:
.L563:
.L564:
.L565:
.L538:
.L566:
.L567:
.L570:

!  315	            }
!  316	         }
!  317	
!  318	         switch (type) {

	ba	.L569
	nop

	! block 67
.L571:
.L572:
.L573:
.L574:
.L575:

!  319	            case GL_UNSIGNED_BYTE:
!  320	               {
!  321	                  GLubyte *dst = (GLubyte *) pixels + start + j * k;

	ld	[%fp+92],%l0
	ld	[%fp-28],%l1
	add	%l0,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-296,%l0
	st	%l1,[%fp+%l0]

	! block 68
.L576:
.L577:

!  322	                  for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L580
	st	%g0,[%fp-4]

	! block 69
.L_y17:
	sethi	0x6,%l3
	xor	%l3,-296,%l3
	sethi	0x6,%l5
	xor	%l5,-316,%l5
	sethi	%hi(.L_cseg2),%l6
	or	%l6,%lo(.L_cseg2),%l6
	sethi	0x6,%l4
	xor	%l4,-292,%l4
.L581:
.L578:
.L582:
.L583:
.L584:

!  323	                     *dst++ = FLOAT_TO_UBYTE( depth[i] );

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%l6+0],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp+%l5]
	ld	[%fp+%l5],%l1
	ld	[%fp+%l3],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l3]

	! block 70
.L585:
.L586:
.L587:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L578
	nop

	! block 71
.L588:
.L580:
.L589:
.L590:
.L591:

!  324	                  }
!  325	               }
!  326	               break;

	ba	.L568
	nop

	! block 72
.L592:
.L593:
.L594:

!  327	            case GL_BYTE:
!  328	               {
!  329	                  GLbyte *dst = (GLbyte *) pixels + start + j * k;

	ld	[%fp+92],%l0
	ld	[%fp-28],%l1
	add	%l0,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-296,%l0
	st	%l1,[%fp+%l0]

	! block 73
.L595:
.L596:

!  330	                  for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L599
	st	%g0,[%fp-4]

	! block 74
.L_y18:
	sethi	0x6,%l3
	xor	%l3,-296,%l3
	sethi	0x6,%l5
	xor	%l5,-316,%l5
	sethi	%hi(.L_cseg2),%l6
	or	%l6,%lo(.L_cseg2),%l6
	sethi	0x6,%l4
	xor	%l4,-292,%l4
.L600:
.L597:
.L601:
.L602:
.L603:

!  331	                     *dst++ = FLOAT_TO_BYTE( depth[i] );

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%l6+0],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp+%l5]
	ld	[%fp+%l5],%l0
	sub	%l0,1,%l2
	sra	%l2,31,%l0
	and	%l0,1,%l1
	add	%l2,%l1,%l0
	sra	%l0,1,%l1
	ld	[%fp+%l3],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l3]

	! block 75
.L604:
.L605:
.L606:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L597
	nop

	! block 76
.L607:
.L599:
.L608:
.L609:
.L610:

!  332	                  }
!  333	               }
!  334	               break;

	ba	.L568
	nop

	! block 77
.L611:
.L612:
.L613:

!  335	            case GL_UNSIGNED_SHORT:
!  336	               {
!  337	                  GLushort *dst = (GLushort *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-296,%l0
	st	%l1,[%fp+%l0]

	! block 78
.L614:
.L615:

!  338	                  for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L618
	st	%g0,[%fp-4]

	! block 79
.L_y19:
	sethi	0x6,%l3
	xor	%l3,-296,%l3
	sethi	0x6,%l5
	xor	%l5,-316,%l5
	sethi	%hi(.L_cseg3),%l6
	or	%l6,%lo(.L_cseg3),%l6
	sethi	0x6,%l4
	xor	%l4,-292,%l4
.L619:
.L616:
.L620:
.L621:
.L622:

!  339	                     *dst++ = FLOAT_TO_USHORT( depth[i] );

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%l6+0],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp+%l5]
	ld	[%fp+%l5],%l1
	ld	[%fp+%l3],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l3]

	! block 80
.L623:
.L624:
.L625:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L616
	nop

	! block 81
.L626:
.L618:
.L627:
.L628:
.L630:

!  340	                  }
!  341	                  if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L629
	nop

	! block 82
.L631:
.L632:
.L633:
.L634:

!  342	                     gl_swap2( (GLushort *) pixels + start + j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap2
	mov	%l1,%o1

	! block 83
.L635:
.L636:
.L629:
.L637:
.L638:
.L639:

!  343	                  }
!  344	               }
!  345	               break;

	ba	.L568
	nop

	! block 84
.L640:
.L641:
.L642:

!  346	            case GL_SHORT:
!  347	               {
!  348	                  GLshort *dst = (GLshort *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-296,%l0
	st	%l1,[%fp+%l0]

	! block 85
.L643:
.L644:

!  349	                  for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L647
	st	%g0,[%fp-4]

	! block 86
.L_y20:
	sethi	0x6,%l3
	xor	%l3,-296,%l3
	sethi	0x6,%l5
	xor	%l5,-316,%l5
	sethi	%hi(.L_cseg3),%l6
	or	%l6,%lo(.L_cseg3),%l6
	sethi	0x6,%l4
	xor	%l4,-292,%l4
.L648:
.L645:
.L649:
.L650:
.L651:

!  350	                     *dst++ = FLOAT_TO_SHORT( depth[i] );

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%l6+0],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp+%l5]
	ld	[%fp+%l5],%l0
	sub	%l0,1,%l2
	sra	%l2,31,%l0
	and	%l0,1,%l1
	add	%l2,%l1,%l0
	sra	%l0,1,%l1
	ld	[%fp+%l3],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l3]

	! block 87
.L652:
.L653:
.L654:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L645
	nop

	! block 88
.L655:
.L647:
.L656:
.L657:
.L659:

!  351	                  }
!  352	                  if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L658
	nop

	! block 89
.L660:
.L661:
.L662:
.L663:

!  353	                     gl_swap2( (GLushort *) pixels + start + j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap2
	mov	%l1,%o1

	! block 90
.L664:
.L665:
.L658:
.L666:
.L667:
.L668:

!  354	                  }
!  355	               }
!  356	               break;

	ba	.L568
	nop

	! block 91
.L669:
.L670:
.L671:

!  357	            case GL_UNSIGNED_INT:
!  358	               {
!  359	                  GLuint *dst = (GLuint *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-296,%l0
	st	%l1,[%fp+%l0]

	! block 92
.L672:
.L673:

!  360	                  for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L676
	st	%g0,[%fp-4]

	! block 93
.L_y21:
	sethi	0x6,%l3
	xor	%l3,-296,%l3
	sethi	%hi(.L_cseg4),%l5
	or	%l5,%lo(.L_cseg4),%l5
	sethi	0x6,%l4
	xor	%l4,-292,%l4
.L677:
.L674:
.L678:
.L679:
.L680:

!  361	                     *dst++ = FLOAT_TO_UINT( depth[i] );

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	fstod	%f4,%f6
	ldd	[%l5+0],%f4
	fmuld	%f6,%f4,%f4
	std	%f4,[%sp+88]
	ldx	[%sp+88],%g1
	srlx	%g1,32,%o0
	or	%g0,%g1,%o1
	call	__dtou
	nop
	ld	[%fp+%l3],%l0
	st	%o0,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l3]

	! block 94
.L681:
.L682:
.L683:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L674
	nop

	! block 95
.L684:
.L676:
.L685:
.L686:
.L688:

!  362	                  }
!  363	                  if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L687
	nop

	! block 96
.L689:
.L690:
.L691:
.L692:

!  364	                     gl_swap4( (GLuint *) pixels + start + j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap4
	mov	%l1,%o1

	! block 97
.L693:
.L694:
.L687:
.L695:
.L696:
.L697:

!  365	                  }
!  366	               }
!  367	               break;

	ba	.L568
	nop

	! block 98
.L698:
.L699:
.L700:

!  368	            case GL_INT:
!  369	               {
!  370	                  GLint *dst = (GLint *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-296,%l0
	st	%l1,[%fp+%l0]

	! block 99
.L701:
.L702:

!  371	                  for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L705
	st	%g0,[%fp-4]

	! block 100
.L_y22:
	sethi	0x6,%l3
	xor	%l3,-296,%l3
	sethi	0x6,%l5
	xor	%l5,-316,%l5
	sethi	%hi(.L_cseg5),%l6
	or	%l6,%lo(.L_cseg5),%l6
	sethi	0x6,%l4
	xor	%l4,-292,%l4
.L706:
.L703:
.L707:
.L708:
.L709:

!  372	                     *dst++ = FLOAT_TO_INT( depth[i] );

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	fstod	%f4,%f6
	ldd	[%l6+0],%f4
	fmuld	%f6,%f4,%f4
	fdtoi	%f4,%f4
	st	%f4,[%fp+%l5]
	ld	[%fp+%l5],%l1
	ld	[%fp+%l3],%l0
	st	%l1,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l3]

	! block 101
.L710:
.L711:
.L712:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L703
	nop

	! block 102
.L713:
.L705:
.L714:
.L715:
.L717:

!  373	                  }
!  374	                  if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L716
	nop

	! block 103
.L718:
.L719:
.L720:
.L721:

!  375	                     gl_swap4( (GLuint *) pixels + start + j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap4
	mov	%l1,%o1

	! block 104
.L722:
.L723:
.L716:
.L724:
.L725:
.L726:

!  376	                  }
!  377	               }
!  378	               break;

	ba	.L568
	nop

	! block 105
.L727:
.L728:
.L729:

!  379	            case GL_FLOAT:
!  380	               {
!  381	                  GLfloat *dst = (GLfloat *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l1
	sethi	0x6,%l0
	xor	%l0,-296,%l0
	st	%l1,[%fp+%l0]

	! block 106
.L730:
.L731:

!  382	                  for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L734
	st	%g0,[%fp-4]

	! block 107
.L_y23:
	sethi	0x6,%l3
	xor	%l3,-296,%l3
	sethi	0x6,%l4
	xor	%l4,-292,%l4
.L735:
.L732:
.L736:
.L737:
.L738:

!  383	                     *dst++ = depth[i];

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	ld	[%fp+%l3],%l0
	st	%f4,[%l0+0]
	ld	[%fp+%l3],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l3]

	! block 108
.L739:
.L740:
.L741:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L732
	nop

	! block 109
.L742:
.L734:
.L743:
.L744:
.L746:

!  384	                  }
!  385	                  if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L745
	nop

	! block 110
.L747:
.L748:
.L749:
.L750:

!  386	                     gl_swap4( (GLuint *) pixels + start + j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap4
	mov	%l1,%o1

	! block 111
.L751:
.L752:
.L745:
.L753:
.L754:
.L755:

!  387	                  }
!  388	               }
!  389	               break;

	ba	.L568
	nop

	! block 112
.L756:
.L757:

!  390	            default:
!  391	               gl_error( ctx, GL_INVALID_ENUM, "glReadPixels(type)" );

	ld	[%fp+68],%l0
	sethi	%hi(.L758),%l1
	or	%l1,%lo(.L758),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 113
.L759:
.L760:
	ba	.L568
	nop

	! block 114
.L569:
.L761:
	ld	[%fp+88],%l0
	sethi	%hi(0x1400),%l1
	sub	%l0,%l1,%l0
	cmp	%l0,6
	bgu	.L756
	nop

	! block 115
	sll	%l0,2,%l1
	sethi	%hi(.L_y1-28),%l0
	or	%l0,%lo(.L_y1-28),%l0
	ld	[%l0+%l1],%l0
	jmp	%l0
	nop

	! block 116
.L762:
.L568:
.L763:
.L764:
.L765:
.L766:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp+76],%l0
	st	%l0,[%fp-40]
	ld	[%fp+76],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+76]
	ld	[%fp-8],%l1
	ld	[%fp+84],%l0
	cmp	%l1,%l0
	bl	.L530
	nop

	! block 117
.L767:
.L532:
.L768:
.L769:
.L770:
.L525:
.L771:
.L772:
.L467:
.L773:

	! block 118
.L774:
.L775:
.L370:
	jmp	%i7+8
	restore
	.size	read_depth_pixels,(.-read_depth_pixels)

	.word	.L592
	.word	.L573
	.word	.L640
	.word	.L611
	.word	.L698
	.word	.L669
	.word	.L727
.L_y1:
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	read_stencil_pixels,#function
read_stencil_pixels:
	save	%sp,-1744,%sp

	! block 1
.L778:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]

	! block 2
.L779:
.L781:
.L783:

! File readpix.c:
!  392	         }
!  393	      }
!  394	   }
!  395	}
!  396	
!  400	static void read_stencil_pixels( GLcontext *ctx,
!  401	                                 GLint x, GLint y,
!  402					 GLsizei width, GLsizei height,
!  403					 GLenum type, GLvoid *pixels )
!  404	{
!  405	   GLint i, j;
!  406	   GLuint a, s, k, l, start;
!  407	   GLboolean shift_or_offset;
!  408	
!  409	   if (ctx->Visual->StencilBits<=0) {

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+68],%l0
	cmp	%l0,0
	bg	.L782
	nop

	! block 3
.L784:
.L785:
.L786:
.L787:

!  410	      /* No stencil buffer */
!  411	      gl_error( ctx, GL_INVALID_OPERATION, "glReadPixels" );

	ld	[%fp+68],%l0
	sethi	%hi(.L788),%l1
	or	%l1,%lo(.L788),%l1
	mov	%l0,%o0
	mov	1282,%o1
	call	gl_error
	mov	%l1,%o2

	! block 4
.L789:

!  412	      return;

	ba	.L777
	nop

	! block 5
.L790:
.L791:
.L782:
.L792:
.L793:

!  413	   }
!  414	
!  415	   shift_or_offset = ctx->Pixel.IndexShift!=0 || ctx->Pixel.IndexOffset!=0;

	ld	[%fp+68],%l0
	sethi	%hi(0xae44),%l1
	or	%l1,%lo(0xae44),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	bne	.L795
	nop

	! block 6
.L796:
	ld	[%fp+68],%l0
	sethi	%hi(0xae48),%l1
	or	%l1,%lo(0xae48),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	be	.L794
	nop

	! block 7
.L797:
.L795:
	mov	1,%l0
	ba	.L798
	st	%l0,[%fp-36]

	! block 8
.L794:
	st	%g0,[%fp-36]

	! block 9
.L798:
	ld	[%fp-36],%l0
	stb	%l0,[%fp-29]

	! block 10
.L799:

!  417	   /* Size of each component */
!  418	   s = gl_sizeof_type( type );

	ld	[%fp+88],%l0
	call	gl_sizeof_type
	mov	%l0,%o0
	st	%o0,[%fp-16]

	! block 11
.L800:
.L802:

!  419	   if (s<=0) {

	ld	[%fp-16],%l0
	cmp	%l0,0
	bgu	.L801
	nop

	! block 12
.L803:
.L804:
.L805:
.L806:

!  420	      gl_error( ctx, GL_INVALID_ENUM, "glReadPixels(type)" );

	ld	[%fp+68],%l0
	sethi	%hi(.L807),%l1
	or	%l1,%lo(.L807),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 13
.L808:

!  421	      return;

	ba	.L777
	nop

	! block 14
.L809:
.L810:
.L801:
.L811:
.L812:

!  422	   }
!  423	
!  424	   /* Compute packing parameters */
!  425	   a = ctx->Pack.Alignment;

	ld	[%fp+68],%l0
	sethi	%hi(0xddac),%l1
	or	%l1,%lo(0xddac),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-12]

	! block 15
.L813:
.L815:

!  426	   if (ctx->Pack.RowLength>0) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddb0),%l1
	or	%l1,%lo(0xddb0),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	ble	.L814
	nop

	! block 16
.L816:
.L817:
.L818:
.L819:

!  427	      l = ctx->Pack.RowLength;

	ld	[%fp+68],%l0
	sethi	%hi(0xddb0),%l1
	or	%l1,%lo(0xddb0),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-24]

	! block 17
.L820:
.L821:
	ba	.L822
	nop

	! block 18
.L814:
.L823:
.L824:
.L825:

!  428	   }
!  429	   else {
!  430	      l = width;

	ld	[%fp+80],%l0
	st	%l0,[%fp-24]

	! block 19
.L826:
.L827:
.L822:
.L828:
.L829:
.L831:

!  431	   }
!  432	   /* k = offset between rows in components */
!  433	   if (s>=a) {

	ld	[%fp-16],%l1
	ld	[%fp-12],%l0
	cmp	%l1,%l0
	blu	.L830
	nop

	! block 20
.L832:
.L833:
.L834:
.L835:

!  434	      k = l;

	ld	[%fp-24],%l0
	st	%l0,[%fp-20]

	! block 21
.L836:
.L837:
	ba	.L838
	nop

	! block 22
.L830:
.L839:
.L840:
.L841:

!  435	   }
!  436	   else {
!  437	      k = a/s * CEILING( s*l, a );

	ld	[%fp-16],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-12],%l1
	wr	%g0,%g0,%y
	nop
	nop
	nop
	udiv	%l0,%l1,%g1
	umul	%g1,%l1,%g1
	sub	%l0,%g1,%l0
	cmp	%l0,0
	bne	.L842
	nop

	! block 23
.L843:
	ld	[%fp-16],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-12],%l1
	wr	%g0,%g0,%y
	nop
	nop
	nop
	udiv	%l0,%l1,%l0
	ba	.L844
	st	%l0,[%fp-40]

	! block 24
.L842:
	ld	[%fp-16],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-12],%l1
	wr	%g0,%g0,%y
	nop
	nop
	nop
	udiv	%l0,%l1,%l0
	add	%l0,1,%l0
	st	%l0,[%fp-40]

	! block 25
.L844:
	ld	[%fp-12],%l0
	ld	[%fp-16],%l1
	wr	%g0,%g0,%y
	nop
	nop
	nop
	udiv	%l0,%l1,%l0
	ld	[%fp-40],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-20]

	! block 26
.L845:
.L846:
.L838:
.L847:
.L848:

!  438	   }
!  439	
!  440	   /* offset to first component returned */
!  441	   start = ctx->Pack.SkipRows * k + ctx->Pack.SkipPixels;

	ld	[%fp+68],%l2
	sethi	%hi(0xddb8),%l1
	or	%l1,%lo(0xddb8),%l1
	ld	[%l2+%l1],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sethi	%hi(0xddb4),%l1
	or	%l1,%lo(0xddb4),%l1
	ld	[%l2+%l1],%l1
	add	%l0,%l1,%l0
	st	%l0,[%fp-28]

	! block 27
.L849:
.L850:

!  443	   /* process image row by row */
!  444	   for (j=0;j<height;j++,y++) {

	ld	[%fp+84],%l0
	cmp	%g0,%l0
	bge	.L853
	st	%g0,[%fp-8]

	! block 28
.L854:
.L851:
.L855:
.L856:
.L857:

!  445	      GLubyte stencil[MAX_WIDTH];
!  446	
!  447	      gl_read_stencil_span( ctx, width, x, y, stencil );

	ld	[%fp+68],%l0
	ld	[%fp+80],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	add	%fp,-1636,%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	call	gl_read_stencil_span
	mov	%l4,%o4

	! block 29
.L858:
.L860:

!  449	      if (shift_or_offset) {

	ldub	[%fp-29],%l0
	cmp	%l0,%g0
	be	.L859
	nop

	! block 30
.L861:
.L862:
.L863:
.L864:
.L866:

!  450		 GLuint s;
!  451		 if (ctx->Pixel.IndexShift<0) {

	ld	[%fp+68],%l0
	sethi	%hi(0xae44),%l1
	or	%l1,%lo(0xae44),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	bge	.L865
	nop

	! block 31
.L867:
.L868:
.L869:
.L870:

!  452		    /* right shift */
!  453		    s = -ctx->Pixel.IndexShift;

	ld	[%fp+68],%l0
	sethi	%hi(0xae44),%l1
	or	%l1,%lo(0xae44),%l1
	ld	[%l0+%l1],%l0
	neg	%l0,%l0
	st	%l0,[%fp-1640]

	! block 32
.L871:
.L872:

!  454		    for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L875
	st	%g0,[%fp-4]

	! block 33
.L_y24:
	sethi	%hi(0xae48),%l2
	or	%l2,%lo(0xae48),%l2
	add	%fp,-1636,%l4
.L876:
.L873:
.L877:
.L878:
.L879:

!  455		       stencil[i] = (stencil[i] >> s) + ctx->Pixel.IndexOffset;

	ld	[%fp-4],%l1
	add	%l4,%l1,%l5
	ldub	[%l5+0],%l0
	ld	[%fp-1640],%l1
	sra	%l0,%l1,%l3
	ld	[%fp+68],%l0
	ld	[%l0+%l2],%l1
	add	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 34
.L880:
.L881:
.L882:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L873
	nop

	! block 35
.L883:
.L875:
.L884:
.L885:
.L886:
	ba	.L887
	nop

	! block 36
.L865:
.L888:
.L889:
.L890:

!  456		    }
!  457		 }
!  458		 else {
!  459		    /* left shift */
!  460		    s = ctx->Pixel.IndexShift;

	ld	[%fp+68],%l0
	sethi	%hi(0xae44),%l1
	or	%l1,%lo(0xae44),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-1640]

	! block 37
.L891:
.L892:

!  461		    for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L895
	st	%g0,[%fp-4]

	! block 38
.L_y25:
	sethi	%hi(0xae48),%l2
	or	%l2,%lo(0xae48),%l2
	add	%fp,-1636,%l4
.L896:
.L893:
.L897:
.L898:
.L899:

!  462		       stencil[i] = (stencil[i] << s) + ctx->Pixel.IndexOffset;

	ld	[%fp-4],%l1
	add	%l4,%l1,%l5
	ldub	[%l5+0],%l0
	ld	[%fp-1640],%l1
	sll	%l0,%l1,%l3
	ld	[%fp+68],%l0
	ld	[%l0+%l2],%l1
	add	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 39
.L900:
.L901:
.L902:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L893
	nop

	! block 40
.L903:
.L895:
.L904:
.L905:
.L906:
.L887:
.L907:
.L908:
.L909:
.L859:
.L910:
.L911:
.L913:

!  463		    }
!  464		 }
!  465	      }
!  466	
!  467	      if (ctx->Pixel.MapStencilFlag) {

	ld	[%fp+68],%l0
	sethi	%hi(0xae4d),%l1
	or	%l1,%lo(0xae4d),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L912
	nop

	! block 41
.L914:
.L915:
.L916:
.L917:
.L918:

!  468		 for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L921
	st	%g0,[%fp-4]

	! block 42
.L_y26:
	sethi	%hi(0xae80),%l5
	or	%l5,%lo(0xae80),%l5
	add	%fp,-1636,%l4
.L922:
.L919:
.L923:
.L924:
.L925:

!  469		    stencil[i] = ctx->Pixel.MapStoS[ stencil[i] ];

	ld	[%fp+68],%l2
	ld	[%fp-4],%l1
	add	%l4,%l1,%l3
	ldub	[%l3+0],%l0
	sll	%l0,24,%l0
	srl	%l0,24,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%l0+%l5],%l0
	stb	%l0,[%l3+0]

	! block 43
.L926:
.L927:
.L928:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L919
	nop

	! block 44
.L929:
.L921:
.L930:
.L931:
.L932:
.L912:
.L933:
.L934:
.L937:

!  470		 }
!  471	      }
!  472	
!  473	      switch (type) {

	ba	.L936
	nop

	! block 45
.L938:
.L939:
.L940:
.L941:
.L942:

!  474		 case GL_UNSIGNED_BYTE:
!  475		    {
!  476		       GLubyte *dst = (GLubyte *) pixels + start + j * k;

	ld	[%fp+92],%l0
	ld	[%fp-28],%l1
	add	%l0,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-1640]

	! block 46
.L943:

!  477		       MEMCPY( dst, stencil, width );

	ld	[%fp-1640],%l0
	add	%fp,-1636,%l1
	ld	[%fp+80],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 47
.L944:
.L945:

!  478		    }
!  479		    break;

	ba	.L935
	nop

	! block 48
.L946:
.L947:
.L948:

!  480		 case GL_BYTE:
!  481		    {
!  482		       GLbyte *dst = (GLbyte  *) pixels + start + j * k;

	ld	[%fp+92],%l0
	ld	[%fp-28],%l1
	add	%l0,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-1640]

	! block 49
.L949:

!  483		       MEMCPY( dst, stencil, width );

	ld	[%fp-1640],%l0
	add	%fp,-1636,%l1
	ld	[%fp+80],%l2
	mov	%l0,%o0
	mov	%l1,%o1
	call	memcpy
	mov	%l2,%o2

	! block 50
.L950:
.L951:

!  484		    }
!  485		    break;

	ba	.L935
	nop

	! block 51
.L952:
.L953:
.L954:

!  486		 case GL_UNSIGNED_SHORT:
!  487		    {
!  488		       GLushort *dst = (GLushort *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-1640]

	! block 52
.L955:
.L956:

!  489		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L959
	st	%g0,[%fp-4]

	! block 53
.L_y27:
	add	%fp,-1636,%l2
.L960:
.L957:
.L961:
.L962:
.L963:

!  490			  *dst++ = (GLushort) stencil[i];

	ld	[%fp-4],%l1
	ldub	[%l2+%l1],%l1
	ld	[%fp-1640],%l0
	sth	%l1,[%l0+0]
	ld	[%fp-1640],%l0
	add	%l0,2,%l0
	st	%l0,[%fp-1640]

	! block 54
.L964:
.L965:
.L966:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L957
	nop

	! block 55
.L967:
.L959:
.L968:
.L969:
.L971:

!  491		       }
!  492		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L970
	nop

	! block 56
.L972:
.L973:
.L974:
.L975:

!  493			  gl_swap2( (GLushort *) pixels + start +j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap2
	mov	%l1,%o1

	! block 57
.L976:
.L977:
.L970:
.L978:
.L979:
.L980:

!  494		       }
!  495		    }
!  496		    break;

	ba	.L935
	nop

	! block 58
.L981:
.L982:
.L983:

!  497		 case GL_SHORT:
!  498		    {
!  499		       GLshort *dst = (GLshort *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-1640]

	! block 59
.L984:
.L985:

!  500		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L988
	st	%g0,[%fp-4]

	! block 60
.L_y28:
	add	%fp,-1636,%l2
.L989:
.L986:
.L990:
.L991:
.L992:

!  501			  *dst++ = (GLshort) stencil[i];

	ld	[%fp-4],%l1
	ldub	[%l2+%l1],%l1
	ld	[%fp-1640],%l0
	sth	%l1,[%l0+0]
	ld	[%fp-1640],%l0
	add	%l0,2,%l0
	st	%l0,[%fp-1640]

	! block 61
.L993:
.L994:
.L995:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L986
	nop

	! block 62
.L996:
.L988:
.L997:
.L998:
.L1000:

!  502		       }
!  503		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L999
	nop

	! block 63
.L1001:
.L1002:
.L1003:
.L1004:

!  504			  gl_swap2( (GLushort *) pixels + start +j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap2
	mov	%l1,%o1

	! block 64
.L1005:
.L1006:
.L999:
.L1007:
.L1008:
.L1009:

!  505		       }
!  506		    }
!  507		    break;

	ba	.L935
	nop

	! block 65
.L1010:
.L1011:
.L1012:

!  508		 case GL_UNSIGNED_INT:
!  509		    {
!  510		       GLuint *dst = (GLuint *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-1640]

	! block 66
.L1013:
.L1014:

!  511		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1017
	st	%g0,[%fp-4]

	! block 67
.L_y29:
	add	%fp,-1636,%l2
.L1018:
.L1015:
.L1019:
.L1020:
.L1021:

!  512			  *dst++ = (GLuint) stencil[i];

	ld	[%fp-4],%l1
	ldub	[%l2+%l1],%l1
	ld	[%fp-1640],%l0
	st	%l1,[%l0+0]
	ld	[%fp-1640],%l0
	add	%l0,4,%l0
	st	%l0,[%fp-1640]

	! block 68
.L1022:
.L1023:
.L1024:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1015
	nop

	! block 69
.L1025:
.L1017:
.L1026:
.L1027:
.L1029:

!  513		       }
!  514		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1028
	nop

	! block 70
.L1030:
.L1031:
.L1032:
.L1033:

!  515			  gl_swap4( (GLuint *) pixels + start +j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap4
	mov	%l1,%o1

	! block 71
.L1034:
.L1035:
.L1028:
.L1036:
.L1037:
.L1038:

!  516		       }
!  517		    }
!  518		    break;

	ba	.L935
	nop

	! block 72
.L1039:
.L1040:
.L1041:

!  519		 case GL_INT:
!  520		    {
!  521		       GLint *dst = (GLint *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-1640]

	! block 73
.L1042:
.L1043:

!  522		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1046
	st	%g0,[%fp-4]

	! block 74
.L_y30:
	add	%fp,-1636,%l2
.L1047:
.L1044:
.L1048:
.L1049:
.L1050:

!  523			  *dst++ = (GLint) stencil[i];

	ld	[%fp-4],%l1
	ldub	[%l2+%l1],%l1
	ld	[%fp-1640],%l0
	st	%l1,[%l0+0]
	ld	[%fp-1640],%l0
	add	%l0,4,%l0
	st	%l0,[%fp-1640]

	! block 75
.L1051:
.L1052:
.L1053:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1044
	nop

	! block 76
.L1054:
.L1046:
.L1055:
.L1056:
.L1058:

!  524		       }
!  525		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1057
	nop

	! block 77
.L1059:
.L1060:
.L1061:
.L1062:

!  526			  gl_swap4( (GLuint *) pixels + start +j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap4
	mov	%l1,%o1

	! block 78
.L1063:
.L1064:
.L1057:
.L1065:
.L1066:
.L1067:

!  527		       }
!  528		    }
!  529		    break;

	ba	.L935
	nop

	! block 79
.L1068:
.L1069:
.L1070:

!  530		 case GL_FLOAT:
!  531		    {
!  532		       GLfloat *dst = (GLfloat *) pixels + start + j * k;

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	st	%l0,[%fp-1640]

	! block 80
.L1071:
.L1072:

!  533		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1075
	st	%g0,[%fp-4]

	! block 81
.L_y31:
	mov	0,%l2
	sethi	%hi(0x43300000),%l3
	add	%fp,-1636,%l4
.L1076:
.L1073:
.L1077:
.L1078:
.L1079:

!  534			  *dst++ = (GLfloat) stencil[i];

	ld	[%fp-4],%l1
	ldub	[%l4+%l1],%l0
	st	%l3,[%fp-1648]
	st	%l0,[%fp-1644]
	ldd	[%fp-1648],%f6
	st	%l2,[%fp-1644]
	ldd	[%fp-1648],%f4
	fsubd	%f6,%f4,%f4
	fabss	%f4,%f4
	fdtos	%f4,%f4
	ld	[%fp-1640],%l0
	st	%f4,[%l0+0]
	ld	[%fp-1640],%l0
	add	%l0,4,%l0
	st	%l0,[%fp-1640]

	! block 82
.L1080:
.L1081:
.L1082:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1073
	nop

	! block 83
.L1083:
.L1075:
.L1084:
.L1085:
.L1087:

!  535		       }
!  536		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1086
	nop

	! block 84
.L1088:
.L1089:
.L1090:
.L1091:

!  537			  gl_swap4( (GLuint *) pixels + start +j * k, width );

	ld	[%fp+92],%l2
	ld	[%fp-28],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-20],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l0
	ld	[%fp+80],%l1
	mov	%l0,%o0
	call	gl_swap4
	mov	%l1,%o1

	! block 85
.L1092:
.L1093:
.L1086:
.L1094:
.L1095:
.L1096:

!  538		       }
!  539		    }
!  540		    break;

	ba	.L935
	nop

	! block 86
.L1097:
.L1098:

!  541	         default:
!  542	            gl_error( ctx, GL_INVALID_ENUM, "glReadPixels(type)" );

	ld	[%fp+68],%l0
	sethi	%hi(.L1099),%l1
	or	%l1,%lo(.L1099),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 87
.L1100:
.L1101:
	ba	.L935
	nop

	! block 88
.L936:
.L1102:
	ld	[%fp+88],%l0
	sethi	%hi(0x1400),%l1
	sub	%l0,%l1,%l0
	cmp	%l0,6
	bgu	.L1097
	nop

	! block 89
	sll	%l0,2,%l1
	sethi	%hi(.L_y2-28),%l0
	or	%l0,%lo(.L_y2-28),%l0
	ld	[%l0+%l1],%l0
	jmp	%l0
	nop

	! block 90
.L1103:
.L935:
.L1104:
.L1105:
.L1106:
.L1107:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp+76],%l0
	st	%l0,[%fp-40]
	ld	[%fp+76],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+76]
	ld	[%fp-8],%l1
	ld	[%fp+84],%l0
	cmp	%l1,%l0
	bl	.L851
	nop

	! block 91
.L1108:
.L853:
.L1109:

	! block 92
.L1110:
.L1111:
.L777:
	jmp	%i7+8
	restore
	.size	read_stencil_pixels,(.-read_stencil_pixels)

	.word	.L946
	.word	.L940
	.word	.L981
	.word	.L952
	.word	.L1039
	.word	.L1010
	.word	.L1068
.L_y2:
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	scale_or_bias_rgba,#function
scale_or_bias_rgba:
	save	%sp,-104,%sp

	! block 1
.L1114:
	st	%i0,[%fp+68]

	! block 2
.L1115:
.L1117:
.L1119:

! File readpix.c:
!  543	      }
!  544	   }
!  545	}
!  546	
!  549	/*
!  550	 * Test if scaling or biasing of colors is needed.
!  551	 */
!  552	static GLboolean scale_or_bias_rgba( GLcontext *ctx )
!  553	{
!  554	   if (ctx->Pixel.RedScale!=1.0F   || ctx->Pixel.RedBias!=0.0F ||
!  555	       ctx->Pixel.GreenScale!=1.0F || ctx->Pixel.GreenBias!=0.0F ||
!  556	       ctx->Pixel.BlueScale!=1.0F  || ctx->Pixel.BlueBias!=0.0F ||
!  557	       ctx->Pixel.AlphaScale!=1.0F || ctx->Pixel.AlphaBias!=0.0F) {

	ld	[%fp+68],%l0
	sethi	%hi(0xae20),%l1
	or	%l1,%lo(0xae20),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fcmps	%f5,%f4
	fbne	.L1120
	nop

	! block 3
.L1121:
	ld	[%fp+68],%l0
	sethi	%hi(0xae1c),%l1
	or	%l1,%lo(0xae1c),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	fcmps	%f5,%f4
	fbne	.L1120
	nop

	! block 4
.L1122:
	ld	[%fp+68],%l0
	sethi	%hi(0xae28),%l1
	or	%l1,%lo(0xae28),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fcmps	%f5,%f4
	fbne	.L1120
	nop

	! block 5
.L1123:
	ld	[%fp+68],%l0
	sethi	%hi(0xae24),%l1
	or	%l1,%lo(0xae24),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	fcmps	%f5,%f4
	fbne	.L1120
	nop

	! block 6
.L1124:
	ld	[%fp+68],%l0
	sethi	%hi(0xae30),%l1
	or	%l1,%lo(0xae30),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fcmps	%f5,%f4
	fbne	.L1120
	nop

	! block 7
.L1125:
	ld	[%fp+68],%l0
	sethi	%hi(0xae2c),%l1
	or	%l1,%lo(0xae2c),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	fcmps	%f5,%f4
	fbne	.L1120
	nop

	! block 8
.L1126:
	ld	[%fp+68],%l0
	sethi	%hi(0xae38),%l1
	or	%l1,%lo(0xae38),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fcmps	%f5,%f4
	fbne	.L1120
	nop

	! block 9
.L1127:
	ld	[%fp+68],%l0
	sethi	%hi(0xae34),%l1
	or	%l1,%lo(0xae34),%l1
	ld	[%l0+%l1],%f5
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	fcmps	%f5,%f4
	fbe	.L1118
	nop

	! block 10
.L1128:
.L1120:
.L1129:
.L1130:
.L1131:

!  558	      return GL_TRUE;

	mov	1,%l0
	ba	.L1113
	stb	%l0,[%fp-1]

	! block 11
.L1132:
.L1133:
.L1118:
.L1134:
.L1135:
.L1136:

!  559	   }
!  560	   else {
!  561	      return GL_FALSE;

	ba	.L1113
	stb	%g0,[%fp-1]

	! block 12
.L1137:
.L1138:
.L1139:

	! block 13
.L1140:
.L1141:
.L1113:
	ldub	[%fp-1],%l0
	mov	%l0,%i0
	jmp	%i7+8
	restore
	.size	scale_or_bias_rgba,(.-scale_or_bias_rgba)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	scale_and_bias_rgba,#function
scale_and_bias_rgba:
	save	%sp,-152,%sp

	! block 1
.L1144:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]

	! block 2
.L1145:
.L1147:
.L1148:

! File readpix.c:
!  562	   }
!  563	}
!  564	
!  567	/*
!  568	 * Apply scale and bias factors to an array of RGBA pixels.
!  569	 */
!  570	static void scale_and_bias_rgba( GLcontext *ctx,
!  571	                                 GLint n,
!  572					 GLfloat red[], GLfloat green[],
!  573					 GLfloat blue[], GLfloat alpha[] )
!  574	{
!  575	   register GLint i;
!  576	   register GLfloat r, g, b, a;
!  577	
!  578	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bge	.L1151
	st	%g0,[%fp-4]

	! block 3
.L1152:
.L1149:
.L1153:
.L1154:
.L1155:

!  579	      r = red[i]   * ctx->Pixel.RedScale   + ctx->Pixel.RedBias;

	ld	[%fp+76],%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%fp+68],%l0
	sethi	%hi(0xae20),%l1
	or	%l1,%lo(0xae20),%l1
	ld	[%l0+%l1],%f4
	fmuls	%f5,%f4,%f5
	sethi	%hi(0xae1c),%l1
	or	%l1,%lo(0xae1c),%l1
	ld	[%l0+%l1],%f4
	fadds	%f5,%f4,%f4
	st	%f4,[%fp-8]

	! block 4
.L1156:

!  580	      g = green[i] * ctx->Pixel.GreenScale + ctx->Pixel.GreenBias;

	ld	[%fp+80],%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%fp+68],%l0
	sethi	%hi(0xae28),%l1
	or	%l1,%lo(0xae28),%l1
	ld	[%l0+%l1],%f4
	fmuls	%f5,%f4,%f5
	sethi	%hi(0xae24),%l1
	or	%l1,%lo(0xae24),%l1
	ld	[%l0+%l1],%f4
	fadds	%f5,%f4,%f4
	st	%f4,[%fp-12]

	! block 5
.L1157:

!  581	      b = blue[i]  * ctx->Pixel.BlueScale  + ctx->Pixel.BlueBias;

	ld	[%fp+84],%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%fp+68],%l0
	sethi	%hi(0xae30),%l1
	or	%l1,%lo(0xae30),%l1
	ld	[%l0+%l1],%f4
	fmuls	%f5,%f4,%f5
	sethi	%hi(0xae2c),%l1
	or	%l1,%lo(0xae2c),%l1
	ld	[%l0+%l1],%f4
	fadds	%f5,%f4,%f4
	st	%f4,[%fp-16]

	! block 6
.L1158:

!  582	      a = alpha[i] * ctx->Pixel.AlphaScale + ctx->Pixel.AlphaBias;

	ld	[%fp+88],%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%fp+68],%l0
	sethi	%hi(0xae38),%l1
	or	%l1,%lo(0xae38),%l1
	ld	[%l0+%l1],%f4
	fmuls	%f5,%f4,%f5
	sethi	%hi(0xae34),%l1
	or	%l1,%lo(0xae34),%l1
	ld	[%l0+%l1],%f4
	fadds	%f5,%f4,%f4
	st	%f4,[%fp-20]

	! block 7
.L1159:

!  583	      red[i]   = CLAMP( r, 0.0F, 1.0F );

	ld	[%fp-8],%f5
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	fcmpes	%f5,%f4
	fbuge	.L1160
	nop

	! block 8
.L1161:
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	ba	.L1162
	st	%f4,[%fp-24]

	! block 9
.L1160:
	ld	[%fp-8],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fcmpes	%f5,%f4
	fbule	.L1163
	nop

	! block 10
.L1164:
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	ba	.L1165
	st	%f4,[%fp-28]

	! block 11
.L1163:
	ld	[%fp-8],%f4
	st	%f4,[%fp-28]

	! block 12
.L1165:
	ld	[%fp-28],%f4
	st	%f4,[%fp-24]

	! block 13
.L1162:
	ld	[%fp-24],%f4
	ld	[%fp+76],%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 14
.L1166:

!  584	      green[i] = CLAMP( g, 0.0F, 1.0F );

	ld	[%fp-12],%f5
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	fcmpes	%f5,%f4
	fbuge	.L1167
	nop

	! block 15
.L1168:
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	ba	.L1169
	st	%f4,[%fp-32]

	! block 16
.L1167:
	ld	[%fp-12],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fcmpes	%f5,%f4
	fbule	.L1170
	nop

	! block 17
.L1171:
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	ba	.L1172
	st	%f4,[%fp-36]

	! block 18
.L1170:
	ld	[%fp-12],%f4
	st	%f4,[%fp-36]

	! block 19
.L1172:
	ld	[%fp-36],%f4
	st	%f4,[%fp-32]

	! block 20
.L1169:
	ld	[%fp-32],%f4
	ld	[%fp+80],%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 21
.L1173:

!  585	      blue[i]  = CLAMP( b, 0.0F, 1.0F );

	ld	[%fp-16],%f5
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	fcmpes	%f5,%f4
	fbuge	.L1174
	nop

	! block 22
.L1175:
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	ba	.L1176
	st	%f4,[%fp-40]

	! block 23
.L1174:
	ld	[%fp-16],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fcmpes	%f5,%f4
	fbule	.L1177
	nop

	! block 24
.L1178:
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	ba	.L1179
	st	%f4,[%fp-44]

	! block 25
.L1177:
	ld	[%fp-16],%f4
	st	%f4,[%fp-44]

	! block 26
.L1179:
	ld	[%fp-44],%f4
	st	%f4,[%fp-40]

	! block 27
.L1176:
	ld	[%fp-40],%f4
	ld	[%fp+84],%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 28
.L1180:

!  586	      alpha[i] = CLAMP( a, 0.0F, 1.0F );

	ld	[%fp-20],%f5
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	fcmpes	%f5,%f4
	fbuge	.L1181
	nop

	! block 29
.L1182:
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	ba	.L1183
	st	%f4,[%fp-48]

	! block 30
.L1181:
	ld	[%fp-20],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fcmpes	%f5,%f4
	fbule	.L1184
	nop

	! block 31
.L1185:
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	ba	.L1186
	st	%f4,[%fp-52]

	! block 32
.L1184:
	ld	[%fp-20],%f4
	st	%f4,[%fp-52]

	! block 33
.L1186:
	ld	[%fp-52],%f4
	st	%f4,[%fp-48]

	! block 34
.L1183:
	ld	[%fp-48],%f4
	ld	[%fp+88],%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 35
.L1187:
.L1188:
.L1189:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	bl	.L1149
	nop

	! block 36
.L1190:
.L1151:
.L1191:

	! block 37
.L1192:
.L1193:
.L1143:
	jmp	%i7+8
	restore
	.size	scale_and_bias_rgba,(.-scale_and_bias_rgba)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	map_rgba,#function
map_rgba:
	save	%sp,-120,%sp

	! block 1
.L1196:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]

	! block 2
.L1197:
.L1199:

! File readpix.c:
!  587	   }
!  588	}
!  589	
!  592	/*
!  593	 * Apply pixel mapping to an array of RGBA pixels.
!  594	 */
!  595	static void map_rgba( GLcontext *ctx,
!  596	                      GLint n,
!  597			      GLfloat red[], GLfloat green[],
!  598			      GLfloat blue[], GLfloat alpha[] )
!  599	{
!  600	   GLfloat rscale = ctx->Pixel.MapRtoRsize-1;

	ld	[%fp+68],%l0
	sethi	%hi(0xae70),%l1
	or	%l1,%lo(0xae70),%l1
	ld	[%l0+%l1],%l0
	sub	%l0,1,%l0
	st	%l0,[%fp-24]
	ld	[%fp-24],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-4]

	! block 3
.L1200:

!  601	   GLfloat gscale = ctx->Pixel.MapGtoGsize-1;

	ld	[%fp+68],%l0
	sethi	%hi(0xae74),%l1
	or	%l1,%lo(0xae74),%l1
	ld	[%l0+%l1],%l0
	sub	%l0,1,%l0
	st	%l0,[%fp-24]
	ld	[%fp-24],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-8]

	! block 4
.L1201:

!  602	   GLfloat bscale = ctx->Pixel.MapBtoBsize-1;

	ld	[%fp+68],%l0
	sethi	%hi(0xae78),%l1
	or	%l1,%lo(0xae78),%l1
	ld	[%l0+%l1],%l0
	sub	%l0,1,%l0
	st	%l0,[%fp-24]
	ld	[%fp-24],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-12]

	! block 5
.L1202:

!  603	   GLfloat ascale = ctx->Pixel.MapAtoAsize-1;

	ld	[%fp+68],%l0
	sethi	%hi(0xae7c),%l1
	or	%l1,%lo(0xae7c),%l1
	ld	[%l0+%l1],%l0
	sub	%l0,1,%l0
	st	%l0,[%fp-24]
	ld	[%fp-24],%f4
	fitos	%f4,%f4
	st	%f4,[%fp-16]

	! block 6
.L1203:
.L1204:

!  604	   GLint i;
!  605	
!  606	   for (i=0;i<n;i++) {

	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bge	.L1207
	st	%g0,[%fp-20]

	! block 7
.L_y32:
	sethi	%hi(0xd280),%l5
	or	%l5,%lo(0xd280),%l5
	sethi	%hi(0xce80),%l6
	or	%l6,%lo(0xce80),%l6
	sethi	%hi(0xca80),%l7
	or	%l7,%lo(0xca80),%l7
	sethi	%hi(0xc680),%l4
	or	%l4,%lo(0xc680),%l4
.L1208:
.L1205:
.L1209:
.L1210:
.L1211:

!  607	      red[i]   = ctx->Pixel.MapRtoR[ (GLint) (red[i]   * rscale) ];

	ld	[%fp+68],%l3
	ld	[%fp+76],%l2
	ld	[%fp-20],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%fp-4],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-24]
	ld	[%fp-24],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l4],%f4
	ld	[%fp+76],%l2
	ld	[%fp-20],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 8
.L1212:

!  608	      green[i] = ctx->Pixel.MapGtoG[ (GLint) (green[i] * gscale) ];

	ld	[%fp+68],%l3
	ld	[%fp+80],%l2
	ld	[%fp-20],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%fp-8],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-24]
	ld	[%fp-24],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l7],%f4
	ld	[%fp+80],%l2
	ld	[%fp-20],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 9
.L1213:

!  609	      blue[i]  = ctx->Pixel.MapBtoB[ (GLint) (blue[i]  * bscale) ];

	ld	[%fp+68],%l3
	ld	[%fp+84],%l2
	ld	[%fp-20],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%fp-12],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-24]
	ld	[%fp-24],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l6],%f4
	ld	[%fp+84],%l2
	ld	[%fp-20],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 10
.L1214:

!  610	      alpha[i] = ctx->Pixel.MapAtoA[ (GLint) (alpha[i] * ascale) ];

	ld	[%fp+68],%l3
	ld	[%fp+88],%l2
	ld	[%fp-20],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	ld	[%fp-16],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	st	%f4,[%fp-24]
	ld	[%fp-24],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l5],%f4
	ld	[%fp+88],%l2
	ld	[%fp-20],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 11
.L1215:
.L1216:
.L1217:
	ld	[%fp-20],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-20]
	ld	[%fp-20],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	bl	.L1205
	nop

	! block 12
.L1218:
.L1207:
.L1219:

	! block 13
.L1220:
.L1221:
.L1195:
	jmp	%i7+8
	restore
	.size	map_rgba,(.-map_rgba)
	.align	8
	.align	8
	.skip	16

	! block 0
	.type	read_color_pixels,#function
read_color_pixels:
	sethi	%hi(-38576),%g1
	or	%g1,%lo(-38576),%g1
	save	%sp,%g1,%sp

	! block 1
.L1224:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]

	! block 2
.L1225:
.L1227:

! File readpix.c:
!  611	   }
!  612	}
!  613	
!  617	/*
!  618	 * Read R, G, B, A, RGB, L, or LA pixels.
!  619	 */
!  620	static void read_color_pixels( GLcontext *ctx,
!  621	                               GLint x, GLint y,
!  622				       GLsizei width, GLsizei height,
!  623				       GLenum format, GLenum type, GLvoid *pixels )
!  624	{
!  625	   GLint i, j, n, a, s, l, k;
!  626	   GLboolean scale_or_bias;
!  627	   DEFARRAY(GLfloat, red, MAX_WIDTH);
!  628	   DEFARRAY(GLfloat, green, MAX_WIDTH);
!  629	   DEFARRAY(GLfloat, blue, MAX_WIDTH);
!  630	   DEFARRAY(GLfloat, alpha, MAX_WIDTH);
!  631	   DEFARRAY(GLfloat, luminance, MAX_WIDTH);
!  632	   GLboolean r_flag, g_flag, b_flag, a_flag, l_flag;
!  633	   GLuint start;
!  634	
!  635	   scale_or_bias = scale_or_bias_rgba( ctx );

	ld	[%fp+68],%l0
	call	scale_or_bias_rgba
	mov	%l0,%o0
	stb	%o0,[%fp-29]

	! block 3
.L1228:

!  637	   /* Determine how many / which components to return */
!  638	   r_flag = g_flag = b_flag = a_flag = l_flag = GL_FALSE;

	sethi	0x1f,%l0
	xor	%l0,-293,%l0
	stb	%g0,[%fp+%l0]
	ldub	[%fp+%l0],%l0
	sethi	0x1f,%l1
	xor	%l1,-292,%l1
	stb	%l0,[%fp+%l1]
	ldub	[%fp+%l1],%l0
	sethi	0x1f,%l1
	xor	%l1,-291,%l1
	stb	%l0,[%fp+%l1]
	ldub	[%fp+%l1],%l0
	sethi	0x1f,%l1
	xor	%l1,-290,%l1
	stb	%l0,[%fp+%l1]
	ldub	[%fp+%l1],%l1
	sethi	0x1f,%l0
	xor	%l0,-289,%l0
	stb	%l1,[%fp+%l0]

	! block 4
.L1229:
.L1232:

!  639	   switch (format) {

	ba	.L1231
	nop

	! block 5
.L1233:
.L1234:
.L1235:
.L1236:

!  640	      case GL_RED:				r_flag = GL_TRUE;  n = 1;  break;

	mov	1,%l1
	sethi	0x1f,%l0
	xor	%l0,-289,%l0
	stb	%l1,[%fp+%l0]
	mov	1,%l0
	ba	.L1230
	st	%l0,[%fp-12]

	! block 6
.L1237:
.L1238:

!  641	      case GL_GREEN:				g_flag = GL_TRUE;  n = 1;  break;

	mov	1,%l1
	sethi	0x1f,%l0
	xor	%l0,-290,%l0
	stb	%l1,[%fp+%l0]
	mov	1,%l0
	ba	.L1230
	st	%l0,[%fp-12]

	! block 7
.L1239:
.L1240:

!  642	      case GL_BLUE:				b_flag = GL_TRUE;  n = 1;  break;

	mov	1,%l1
	sethi	0x1f,%l0
	xor	%l0,-291,%l0
	stb	%l1,[%fp+%l0]
	mov	1,%l0
	ba	.L1230
	st	%l0,[%fp-12]

	! block 8
.L1241:
.L1242:

!  643	      case GL_ALPHA:				a_flag = GL_TRUE;  n = 1;  break;

	mov	1,%l1
	sethi	0x1f,%l0
	xor	%l0,-292,%l0
	stb	%l1,[%fp+%l0]
	mov	1,%l0
	ba	.L1230
	st	%l0,[%fp-12]

	! block 9
.L1243:
.L1244:

!  644	      case GL_LUMINANCE:			l_flag = GL_TRUE;  n = 1;  break;

	mov	1,%l1
	sethi	0x1f,%l0
	xor	%l0,-293,%l0
	stb	%l1,[%fp+%l0]
	mov	1,%l0
	ba	.L1230
	st	%l0,[%fp-12]

	! block 10
.L1245:
.L1246:

!  645	      case GL_LUMINANCE_ALPHA:	       l_flag = a_flag = GL_TRUE;  n = 2;  break;

	mov	1,%l0
	sethi	0x1f,%l1
	xor	%l1,-292,%l1
	stb	%l0,[%fp+%l1]
	ldub	[%fp+%l1],%l1
	sethi	0x1f,%l0
	xor	%l0,-293,%l0
	stb	%l1,[%fp+%l0]
	mov	2,%l0
	ba	.L1230
	st	%l0,[%fp-12]

	! block 11
.L1247:
.L1248:

!  646	      case GL_RGB:	      r_flag = g_flag = b_flag = GL_TRUE;  n = 3;  break;

	mov	1,%l0
	sethi	0x1f,%l1
	xor	%l1,-291,%l1
	stb	%l0,[%fp+%l1]
	ldub	[%fp+%l1],%l0
	sethi	0x1f,%l1
	xor	%l1,-290,%l1
	stb	%l0,[%fp+%l1]
	ldub	[%fp+%l1],%l1
	sethi	0x1f,%l0
	xor	%l0,-289,%l0
	stb	%l1,[%fp+%l0]
	mov	3,%l0
	ba	.L1230
	st	%l0,[%fp-12]

	! block 12
.L1249:
.L1250:

!  647	      case GL_RGBA:  r_flag = g_flag = b_flag = a_flag = GL_TRUE;  n = 4;  break;

	mov	1,%l0
	sethi	0x1f,%l1
	xor	%l1,-292,%l1
	stb	%l0,[%fp+%l1]
	ldub	[%fp+%l1],%l0
	sethi	0x1f,%l1
	xor	%l1,-291,%l1
	stb	%l0,[%fp+%l1]
	ldub	[%fp+%l1],%l0
	sethi	0x1f,%l1
	xor	%l1,-290,%l1
	stb	%l0,[%fp+%l1]
	ldub	[%fp+%l1],%l1
	sethi	0x1f,%l0
	xor	%l0,-289,%l0
	stb	%l1,[%fp+%l0]
	mov	4,%l0
	ba	.L1230
	st	%l0,[%fp-12]

	! block 13
.L1251:
.L1252:

!  648	      default:
!  649		 gl_error( ctx, GL_INVALID_ENUM, "glReadPixels(format)" );

	ld	[%fp+68],%l0
	sethi	%hi(.L1253),%l1
	or	%l1,%lo(.L1253),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 14
.L1254:

!  650	         UNDEFARRAY( red );
!  651	         UNDEFARRAY( green );
!  652	         UNDEFARRAY( blue );
!  653	         UNDEFARRAY( alpha );
!  654	         UNDEFARRAY( luminance );
!  655	         return;

	ba	.L1223
	nop

	! block 15
.L1255:
.L1256:
.L1231:
.L1257:
	ld	[%fp+88],%l0
	sethi	%hi(0x1903),%l1
	or	%l1,%lo(0x1903),%l1
	sub	%l0,%l1,%l0
	cmp	%l0,7
	bgu	.L1251
	nop

	! block 16
	sll	%l0,2,%l1
	sethi	%hi(.L_y3-32),%l0
	or	%l0,%lo(.L_y3-32),%l0
	ld	[%l0+%l1],%l0
	jmp	%l0
	nop

	! block 17
.L1258:
.L1230:
.L1259:
.L1260:

!  656	   }
!  657	
!  658	   /* Size of each component */
!  659	   s = gl_sizeof_type( type );

	ld	[%fp+92],%l0
	call	gl_sizeof_type
	mov	%l0,%o0
	st	%o0,[%fp-20]

	! block 18
.L1261:
.L1263:

!  660	   if (s<=0) {

	ld	[%fp-20],%l0
	cmp	%l0,0
	bg	.L1262
	nop

	! block 19
.L1264:
.L1265:
.L1266:
.L1267:

!  661	      gl_error( ctx, GL_INVALID_ENUM, "glReadPixels(type)" );

	ld	[%fp+68],%l0
	sethi	%hi(.L1268),%l1
	or	%l1,%lo(.L1268),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 20
.L1269:

!  662	      UNDEFARRAY( red );
!  663	      UNDEFARRAY( green );
!  664	      UNDEFARRAY( blue );
!  665	      UNDEFARRAY( alpha );
!  666	      UNDEFARRAY( luminance );
!  667	      return;

	ba	.L1223
	nop

	! block 21
.L1270:
.L1271:
.L1262:
.L1272:
.L1273:

!  668	   }
!  669	
!  670	   /* Compute packing parameters */
!  671	   a = ctx->Pack.Alignment;

	ld	[%fp+68],%l0
	sethi	%hi(0xddac),%l1
	or	%l1,%lo(0xddac),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-16]

	! block 22
.L1274:
.L1276:

!  672	   if (ctx->Pack.RowLength>0) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddb0),%l1
	or	%l1,%lo(0xddb0),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	ble	.L1275
	nop

	! block 23
.L1277:
.L1278:
.L1279:
.L1280:

!  673	      l = ctx->Pack.RowLength;

	ld	[%fp+68],%l0
	sethi	%hi(0xddb0),%l1
	or	%l1,%lo(0xddb0),%l1
	ld	[%l0+%l1],%l0
	st	%l0,[%fp-24]

	! block 24
.L1281:
.L1282:
	ba	.L1283
	nop

	! block 25
.L1275:
.L1284:
.L1285:
.L1286:

!  674	   }
!  675	   else {
!  676	      l = width;

	ld	[%fp+80],%l0
	st	%l0,[%fp-24]

	! block 26
.L1287:
.L1288:
.L1283:
.L1289:
.L1290:
.L1292:

!  677	   }
!  678	   /* k = offset between rows in components */
!  679	   if (s>=a) {

	ld	[%fp-20],%l1
	ld	[%fp-16],%l0
	cmp	%l1,%l0
	bl	.L1291
	nop

	! block 27
.L1293:
.L1294:
.L1295:
.L1296:

!  680	      k = n * l;

	ld	[%fp-12],%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	st	%l0,[%fp-28]

	! block 28
.L1297:
.L1298:
	ba	.L1299
	nop

	! block 29
.L1291:
.L1300:
.L1301:
.L1302:

!  681	   }
!  682	   else {
!  683	      k = a/s * CEILING( s*n*l, a );

	ld	[%fp-20],%l0
	ld	[%fp-12],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-16],%l1
	sra	%l0,31,%g1
	wr	%g0,%g1,%y
	nop
	nop
	nop
	sdivcc	%l0,%l1,%g1
	bvs,a	.+8
	sethi	%hi(0x80000000),%g1
	smul	%g1,%l1,%g1
	sub	%l0,%g1,%l0
	cmp	%l0,0
	bne	.L1303
	nop

	! block 30
.L1304:
	ld	[%fp-20],%l0
	ld	[%fp-12],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-16],%l1
	sra	%l0,31,%g1
	wr	%g0,%g1,%y
	nop
	nop
	nop
	sdivcc	%l0,%l1,%l1
	bvs,a	.+8
	sethi	%hi(0x80000000),%l1
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	ba	.L1305
	st	%l1,[%fp+%l0]

	! block 31
.L1303:
	ld	[%fp-20],%l0
	ld	[%fp-12],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-24],%l1
	smul	%l0,%l1,%l0
	ld	[%fp-16],%l1
	sra	%l0,31,%g1
	wr	%g0,%g1,%y
	nop
	nop
	nop
	sdivcc	%l0,%l1,%l0
	bvs,a	.+8
	sethi	%hi(0x80000000),%l0
	add	%l0,1,%l1
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	st	%l1,[%fp+%l0]

	! block 32
.L1305:
	ld	[%fp-16],%l0
	ld	[%fp-20],%l1
	sra	%l0,31,%g1
	wr	%g0,%g1,%y
	nop
	nop
	nop
	sdivcc	%l0,%l1,%l2
	bvs,a	.+8
	sethi	%hi(0x80000000),%l2
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	ld	[%fp+%l0],%l1
	smul	%l2,%l1,%l0
	st	%l0,[%fp-28]

	! block 33
.L1306:
.L1307:
.L1299:
.L1308:
.L1309:

!  684	   }
!  685	
!  686	   /* offset to first component returned */
!  687	   start = ctx->Pack.SkipRows * k + ctx->Pack.SkipPixels * n;

	ld	[%fp+68],%l2
	sethi	%hi(0xddb8),%l1
	or	%l1,%lo(0xddb8),%l1
	ld	[%l2+%l1],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l3
	sethi	%hi(0xddb4),%l1
	or	%l1,%lo(0xddb4),%l1
	ld	[%l2+%l1],%l0
	ld	[%fp-12],%l1
	smul	%l0,%l1,%l1
	add	%l3,%l1,%l1
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	st	%l1,[%fp+%l0]

	! block 34
.L1310:
.L1311:

!  689	   /* process image row by row */
!  690	   for (j=0;j<height;j++,y++) {

	ld	[%fp+84],%l0
	cmp	%g0,%l0
	bge	.L1314
	st	%g0,[%fp-8]

	! block 35
.L1315:
.L1312:
.L1316:
.L1317:
.L1318:
.L1320:

!  692	      /*
!  693	       * Read the pixels from frame buffer
!  694	       */
!  695	      if (ctx->Visual->RGBAflag) {

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ldub	[%l0+0],%l0
	cmp	%l0,%g0
	be	.L1319
	nop

	! block 36
.L1321:
.L1322:
.L1323:
.L1324:

!  696	         DEFARRAY(GLubyte, r, MAX_WIDTH);
!  697	         DEFARRAY(GLubyte, g, MAX_WIDTH);
!  698	         DEFARRAY(GLubyte, b, MAX_WIDTH);
!  699	         DEFARRAY(GLubyte, a, MAX_WIDTH);
!  700		 GLfloat rscale = 1.0F * ctx->Visual->InvRedScale;

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+24],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fmuls	%f5,%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-560,%l0
	st	%f4,[%fp+%l0]

	! block 37
.L1325:

!  701		 GLfloat gscale = 1.0F * ctx->Visual->InvGreenScale;

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+28],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fmuls	%f5,%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-564,%l0
	st	%f4,[%fp+%l0]

	! block 38
.L1326:

!  702		 GLfloat bscale = 1.0F * ctx->Visual->InvBlueScale;

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+32],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fmuls	%f5,%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-568,%l0
	st	%f4,[%fp+%l0]

	! block 39
.L1327:

!  703		 GLfloat ascale = 1.0F * ctx->Visual->InvAlphaScale;

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+36],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fmuls	%f5,%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-572,%l0
	st	%f4,[%fp+%l0]

	! block 40
.L1328:

!  705		 /* read colors and convert to floats */
!  706		 (*ctx->Driver.ReadColorSpan)( ctx, width, x, y, r, g, b, a );

	ld	[%fp+68],%l1
	ld	[%l1+2280],%l4
	ld	[%fp+80],%l2
	ld	[%fp+72],%l3
	ld	[%fp+76],%l5
	sethi	0x20,%l0
	xor	%l0,-876,%l0
	add	%fp,%l0,%l6
	sethi	0x22,%l0
	xor	%l0,-428,%l0
	add	%fp,%l0,%l7
	sethi	0x23,%l0
	xor	%l0,-1004,%l0
	add	%fp,%l0,%i0
	sethi	0x25,%l0
	xor	%l0,-556,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	jmpl	%l4,%o7
	nop

	! block 41
.L1329:
.L1331:

!  707	         if (ctx->RasterMask & ALPHABUF_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,256,%l0
	be	.L1330
	nop

	! block 42
.L1332:
.L1333:
.L1334:
.L1335:

!  708	            gl_read_alpha_span( ctx, width, x, y, a );

	ld	[%fp+68],%l1
	ld	[%fp+80],%l2
	ld	[%fp+72],%l3
	ld	[%fp+76],%l5
	sethi	0x25,%l0
	xor	%l0,-556,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	call	gl_read_alpha_span
	mov	%l0,%o4

	! block 43
.L1336:
.L1337:
.L1330:
.L1338:
.L1339:
.L1340:

!  709	         }
!  710		 for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1343
	st	%g0,[%fp-4]

	! block 44
.L_y33:
	mov	0,%l3
	sethi	0x25,%l5
	xor	%l5,-580,%l5
	sethi	0x25,%l6
	xor	%l6,-584,%l6
	sethi	%hi(0x43300000),%l7
	sethi	0x20,%l4
	xor	%l4,-876,%l4
.L1344:
.L1341:
.L1345:
.L1346:
.L1347:

!  711		    red[i]   = r[i] * rscale;

	add	%fp,%l4,%l0
	ld	[%fp-4],%l1
	ldub	[%l0+%l1],%l0
	st	%l7,[%fp+%l6]
	st	%l0,[%fp+%l5]
	ldd	[%fp+%l6],%f6
	st	%l3,[%fp+%l5]
	ldd	[%fp+%l6],%f4
	fsubd	%f6,%f4,%f4
	fabss	%f4,%f4
	fdtos	%f4,%f5
	sethi	0x25,%l0
	xor	%l0,-560,%l0
	ld	[%fp+%l0],%f4
	fmuls	%f5,%f4,%f4
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 45
.L1348:

!  712		    green[i] = g[i] * gscale;

	sethi	0x22,%l0
	xor	%l0,-428,%l0
	add	%fp,%l0,%l0
	ld	[%fp-4],%l1
	ldub	[%l0+%l1],%l1
	sethi	%hi(0x43300000),%l0
	sethi	0x25,%l2
	xor	%l2,-584,%l2
	st	%l0,[%fp+%l2]
	sethi	0x25,%l0
	xor	%l0,-580,%l0
	st	%l1,[%fp+%l0]
	ldd	[%fp+%l2],%f6
	mov	0,%l1
	st	%l1,[%fp+%l0]
	ldd	[%fp+%l2],%f4
	fsubd	%f6,%f4,%f4
	fabss	%f4,%f4
	fdtos	%f4,%f5
	sethi	0x25,%l0
	xor	%l0,-564,%l0
	ld	[%fp+%l0],%f4
	fmuls	%f5,%f4,%f4
	sethi	0xc,%l0
	xor	%l0,-544,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 46
.L1349:

!  713		    blue[i]  = b[i] * bscale;

	sethi	0x23,%l0
	xor	%l0,-1004,%l0
	add	%fp,%l0,%l0
	ld	[%fp-4],%l1
	ldub	[%l0+%l1],%l1
	sethi	%hi(0x43300000),%l0
	sethi	0x25,%l2
	xor	%l2,-584,%l2
	st	%l0,[%fp+%l2]
	sethi	0x25,%l0
	xor	%l0,-580,%l0
	st	%l1,[%fp+%l0]
	ldd	[%fp+%l2],%f6
	mov	0,%l1
	st	%l1,[%fp+%l0]
	ldd	[%fp+%l2],%f4
	fsubd	%f6,%f4,%f4
	fabss	%f4,%f4
	fdtos	%f4,%f5
	sethi	0x25,%l0
	xor	%l0,-568,%l0
	ld	[%fp+%l0],%f4
	fmuls	%f5,%f4,%f4
	sethi	0x12,%l0
	xor	%l0,-800,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 47
.L1350:

!  714		    alpha[i] = a[i] * ascale;

	sethi	0x25,%l0
	xor	%l0,-556,%l0
	add	%fp,%l0,%l0
	ld	[%fp-4],%l1
	ldub	[%l0+%l1],%l1
	sethi	%hi(0x43300000),%l0
	sethi	0x25,%l2
	xor	%l2,-584,%l2
	st	%l0,[%fp+%l2]
	sethi	0x25,%l0
	xor	%l0,-580,%l0
	st	%l1,[%fp+%l0]
	ldd	[%fp+%l2],%f6
	mov	0,%l1
	st	%l1,[%fp+%l0]
	ldd	[%fp+%l2],%f4
	fsubd	%f6,%f4,%f4
	fabss	%f4,%f4
	fdtos	%f4,%f5
	sethi	0x25,%l0
	xor	%l0,-572,%l0
	ld	[%fp+%l0],%f4
	fmuls	%f5,%f4,%f4
	sethi	0x19,%l0
	xor	%l0,-32,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 48
.L1351:
.L1352:
.L1353:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1341
	nop

	! block 49
.L1354:
.L1343:
.L1355:
.L1356:
.L1358:

!  715		 }
!  716	
!  717		 if (scale_or_bias) {

	ldub	[%fp-29],%l0
	cmp	%l0,%g0
	be	.L1357
	nop

	! block 50
.L1359:
.L1360:
.L1361:
.L1362:

!  718		    scale_and_bias_rgba( ctx, width, red, green, blue, alpha );

	ld	[%fp+68],%l1
	ld	[%fp+80],%l2
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l3
	sethi	0xc,%l0
	xor	%l0,-544,%l0
	add	%fp,%l0,%l5
	sethi	0x12,%l0
	xor	%l0,-800,%l0
	add	%fp,%l0,%l6
	sethi	0x19,%l0
	xor	%l0,-32,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	call	scale_and_bias_rgba
	mov	%l0,%o5

	! block 51
.L1363:
.L1364:
.L1357:
.L1365:
.L1366:
.L1368:

!  719		 }
!  720		 if (ctx->Pixel.MapColorFlag) {

	ld	[%fp+68],%l0
	sethi	%hi(0xae4c),%l1
	or	%l1,%lo(0xae4c),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1367
	nop

	! block 52
.L1369:
.L1370:
.L1371:
.L1372:

!  721		    map_rgba( ctx, width, red, green, blue, alpha );

	ld	[%fp+68],%l1
	ld	[%fp+80],%l2
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l3
	sethi	0xc,%l0
	xor	%l0,-544,%l0
	add	%fp,%l0,%l5
	sethi	0x12,%l0
	xor	%l0,-800,%l0
	add	%fp,%l0,%l6
	sethi	0x19,%l0
	xor	%l0,-32,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	call	map_rgba
	mov	%l0,%o5

	! block 53
.L1373:
.L1374:
.L1367:
.L1375:
.L1376:
.L1377:
	ba	.L1378
	nop

	! block 54
.L1319:
.L1379:
.L1380:
.L1381:

!  722		 }
!  723	         UNDEFARRAY(r);
!  724	         UNDEFARRAY(g);
!  725	         UNDEFARRAY(b);
!  726	         UNDEFARRAY(a);
!  727	      }
!  728	      else {
!  729		 /* convert CI values to RGBA */
!  730		 GLuint index[MAX_WIDTH];
!  731		 (*ctx->Driver.ReadIndexSpan)( ctx, width, x, y, index );

	ld	[%fp+68],%l1
	ld	[%l1+2276],%l4
	ld	[%fp+80],%l2
	ld	[%fp+72],%l3
	ld	[%fp+76],%l5
	sethi	0x25,%l0
	xor	%l0,-556,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l0,%o4
	jmpl	%l4,%o7
	nop

	! block 55
.L1382:
.L1384:

!  733		 if (ctx->Pixel.IndexShift!=0 || ctx->Pixel.IndexOffset!=0) {

	ld	[%fp+68],%l0
	sethi	%hi(0xae44),%l1
	or	%l1,%lo(0xae44),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	bne	.L1385
	nop

	! block 56
.L1386:
	ld	[%fp+68],%l0
	sethi	%hi(0xae48),%l1
	or	%l1,%lo(0xae48),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	be	.L1383
	nop

	! block 57
.L1387:
.L1385:
.L1388:
.L1389:
.L1390:
.L1392:

!  734		    GLuint s;
!  735		    if (ctx->Pixel.IndexShift<0) {

	ld	[%fp+68],%l0
	sethi	%hi(0xae44),%l1
	or	%l1,%lo(0xae44),%l1
	ld	[%l0+%l1],%l0
	cmp	%l0,0
	bge	.L1391
	nop

	! block 58
.L1393:
.L1394:
.L1395:
.L1396:

!  736		       /* right shift */
!  737		       s = -ctx->Pixel.IndexShift;

	ld	[%fp+68],%l0
	sethi	%hi(0xae44),%l1
	or	%l1,%lo(0xae44),%l1
	ld	[%l0+%l1],%l0
	neg	%l0,%l1
	sethi	0x25,%l0
	xor	%l0,-560,%l0
	st	%l1,[%fp+%l0]

	! block 59
.L1397:
.L1398:

!  738		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1401
	st	%g0,[%fp-4]

	! block 60
.L_y34:
	sethi	%hi(0xae48),%l6
	or	%l6,%lo(0xae48),%l6
	sethi	0x25,%l7
	xor	%l7,-560,%l7
	sethi	0x25,%l4
	xor	%l4,-556,%l4
.L1402:
.L1399:
.L1403:
.L1404:
.L1405:

!  739			  index[i] = (index[i] >> s) + ctx->Pixel.IndexOffset;

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l5
	ld	[%l5+0],%l0
	ld	[%fp+%l7],%l1
	srl	%l0,%l1,%l3
	ld	[%fp+68],%l0
	ld	[%l0+%l6],%l1
	add	%l3,%l1,%l0
	st	%l0,[%l5+0]

	! block 61
.L1406:
.L1407:
.L1408:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1399
	nop

	! block 62
.L1409:
.L1401:
.L1410:
.L1411:
.L1412:
	ba	.L1413
	nop

	! block 63
.L1391:
.L1414:
.L1415:
.L1416:

!  740		       }
!  741		    }
!  742		    else {
!  743		       /* left shift */
!  744		       s = ctx->Pixel.IndexShift;

	ld	[%fp+68],%l0
	sethi	%hi(0xae44),%l1
	or	%l1,%lo(0xae44),%l1
	ld	[%l0+%l1],%l1
	sethi	0x25,%l0
	xor	%l0,-560,%l0
	st	%l1,[%fp+%l0]

	! block 64
.L1417:
.L1418:

!  745		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1421
	st	%g0,[%fp-4]

	! block 65
.L_y35:
	sethi	%hi(0xae48),%l6
	or	%l6,%lo(0xae48),%l6
	sethi	0x25,%l7
	xor	%l7,-560,%l7
	sethi	0x25,%l4
	xor	%l4,-556,%l4
.L1422:
.L1419:
.L1423:
.L1424:
.L1425:

!  746			  index[i] = (index[i] << s) + ctx->Pixel.IndexOffset;

	add	%fp,%l4,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l5
	ld	[%l5+0],%l0
	ld	[%fp+%l7],%l1
	sll	%l0,%l1,%l3
	ld	[%fp+68],%l0
	ld	[%l0+%l6],%l1
	add	%l3,%l1,%l0
	st	%l0,[%l5+0]

	! block 66
.L1426:
.L1427:
.L1428:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1419
	nop

	! block 67
.L1429:
.L1421:
.L1430:
.L1431:
.L1432:
.L1413:
.L1433:
.L1434:
.L1435:
.L1383:
.L1436:
.L1437:
.L1438:

!  747		       }
!  748		    }
!  749		 }
!  750	
!  751		 for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1441
	st	%g0,[%fp-4]

	! block 68
.L_y36:
	sethi	%hi(0xba80),%l6
	or	%l6,%lo(0xba80),%l6
	sethi	0x25,%l7
	xor	%l7,-556,%l7
	sethi	0x6,%i0
	xor	%i0,-288,%i0
	sethi	%hi(0xb680),%i1
	or	%i1,%lo(0xb680),%i1
	sethi	0x25,%l4
	xor	%l4,-556,%l4
.L1442:
.L1439:
.L1443:
.L1444:
.L1445:

!  752		    red[i]   = ctx->Pixel.MapItoR[ index[i] ];

	ld	[%fp+68],%l3
	add	%fp,%l4,%l1
	ld	[%fp-4],%l0
	sll	%l0,2,%l5
	ld	[%l1+%l5],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%i1],%f4
	add	%fp,%i0,%l0
	st	%f4,[%l0+%l5]

	! block 69
.L1446:

!  753		    green[i] = ctx->Pixel.MapItoG[ index[i] ];

	ld	[%fp+68],%l3
	add	%fp,%l7,%l1
	ld	[%fp-4],%l0
	sll	%l0,2,%l5
	ld	[%l1+%l5],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	ld	[%l0+%l6],%f4
	sethi	0xc,%l0
	xor	%l0,-544,%l0
	add	%fp,%l0,%l0
	st	%f4,[%l0+%l5]

	! block 70
.L1447:

!  754		    blue[i]  = ctx->Pixel.MapItoB[ index[i] ];

	ld	[%fp+68],%l3
	sethi	0x25,%l0
	xor	%l0,-556,%l0
	add	%fp,%l0,%l1
	ld	[%fp-4],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0xbe80),%l1
	or	%l1,%lo(0xbe80),%l1
	ld	[%l0+%l1],%f4
	sethi	0x12,%l0
	xor	%l0,-800,%l0
	add	%fp,%l0,%l0
	st	%f4,[%l0+%l2]

	! block 71
.L1448:

!  755		    alpha[i] = ctx->Pixel.MapItoA[ index[i] ];

	ld	[%fp+68],%l3
	sethi	0x25,%l0
	xor	%l0,-556,%l0
	add	%fp,%l0,%l1
	ld	[%fp-4],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	sethi	%hi(0xc280),%l1
	or	%l1,%lo(0xc280),%l1
	ld	[%l0+%l1],%f4
	sethi	0x19,%l0
	xor	%l0,-32,%l0
	add	%fp,%l0,%l0
	st	%f4,[%l0+%l2]

	! block 72
.L1449:
.L1450:
.L1451:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1439
	nop

	! block 73
.L1452:
.L1441:
.L1453:
.L1454:
.L1455:
.L1378:
.L1456:
.L1457:
.L1459:

!  756		 }
!  757	      }
!  758	
!  759	      if (l_flag) {

	sethi	0x1f,%l0
	xor	%l0,-293,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1458
	nop

	! block 74
.L1460:
.L1461:
.L1462:
.L1463:
.L1464:

!  760	         for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1467
	st	%g0,[%fp-4]

	! block 75
.L1468:
.L1465:
.L1469:
.L1470:
.L1471:

!  761	            GLfloat sum = red[i] + green[i] + blue[i];

	sethi	0x6,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l1
	ld	[%fp-4],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%f5
	sethi	0xc,%l0
	xor	%l0,-544,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%f4
	fadds	%f5,%f4,%f5
	sethi	0x12,%l0
	xor	%l0,-800,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%f4
	fadds	%f5,%f4,%f4
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	st	%f4,[%fp+%l0]

	! block 76
.L1472:

!  762	            luminance[i] = CLAMP( sum, 0.0F, 1.0F );

	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	ld	[%fp+%l0],%f5
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	fcmpes	%f5,%f4
	fbuge	.L1473
	nop

	! block 77
.L1474:
	sethi	%hi(.L_cseg7),%l0
	ld	[%l0+%lo(.L_cseg7)],%f4
	sethi	0x1f,%l0
	xor	%l0,-308,%l0
	ba	.L1475
	st	%f4,[%fp+%l0]

	! block 78
.L1473:
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	ld	[%fp+%l0],%f5
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	fcmpes	%f5,%f4
	fbule	.L1476
	nop

	! block 79
.L1477:
	sethi	%hi(.L_cseg6),%l0
	ld	[%l0+%lo(.L_cseg6)],%f4
	sethi	0x1f,%l0
	xor	%l0,-312,%l0
	ba	.L1478
	st	%f4,[%fp+%l0]

	! block 80
.L1476:
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	ld	[%fp+%l0],%f4
	sethi	0x1f,%l0
	xor	%l0,-312,%l0
	st	%f4,[%fp+%l0]

	! block 81
.L1478:
	sethi	0x1f,%l0
	xor	%l0,-312,%l0
	ld	[%fp+%l0],%f4
	sethi	0x1f,%l0
	xor	%l0,-308,%l0
	st	%f4,[%fp+%l0]

	! block 82
.L1475:
	sethi	0x1f,%l0
	xor	%l0,-308,%l0
	ld	[%fp+%l0],%f4
	sethi	0x1f,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	st	%f4,[%l2+%l1]

	! block 83
.L1479:
.L1480:
.L1481:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1465
	nop

	! block 84
.L1482:
.L1467:
.L1483:
.L1484:
.L1485:
.L1458:
.L1486:
.L1487:
.L1490:

!  763	         }
!  764	      }
!  765	
!  766	      /*
!  767	       * Pack/transfer/store the pixels
!  768	       */
!  769	
!  770	      switch (type) {

	ba	.L1489
	nop

	! block 85
.L1491:
.L1492:
.L1493:
.L1494:
.L1495:

!  771		 case GL_UNSIGNED_BYTE:
!  772		    {
!  773		       GLubyte *dst = (GLubyte *) pixels + start + j * k;

	ld	[%fp+96],%l2
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	ld	[%fp+%l0],%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l1
	add	%l2,%l1,%l1
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	st	%l1,[%fp+%l0]

	! block 86
.L1496:
.L1497:

!  774		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1500
	st	%g0,[%fp-4]

	! block 87
.L1501:
.L1498:
.L1502:
.L1503:
.L1504:
.L1506:

!  775			  if (r_flag)  *dst++ = FLOAT_TO_UBYTE( red[i] );

	sethi	0x1f,%l0
	xor	%l0,-289,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1505
	nop

	! block 88
.L1507:
.L1508:
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l2]

	! block 89
.L1509:
.L1505:
.L1510:
.L1511:
.L1513:

!  776			  if (g_flag)  *dst++ = FLOAT_TO_UBYTE( green[i] );

	sethi	0x1f,%l0
	xor	%l0,-290,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1512
	nop

	! block 90
.L1514:
.L1515:
	sethi	0xc,%l0
	xor	%l0,-544,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l2]

	! block 91
.L1516:
.L1512:
.L1517:
.L1518:
.L1520:

!  777			  if (b_flag)  *dst++ = FLOAT_TO_UBYTE( blue[i] );

	sethi	0x1f,%l0
	xor	%l0,-291,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1519
	nop

	! block 92
.L1521:
.L1522:
	sethi	0x12,%l0
	xor	%l0,-800,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l2]

	! block 93
.L1523:
.L1519:
.L1524:
.L1525:
.L1527:

!  778			  if (l_flag)  *dst++ = FLOAT_TO_UBYTE( luminance[i] );

	sethi	0x1f,%l0
	xor	%l0,-293,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1526
	nop

	! block 94
.L1528:
.L1529:
	sethi	0x1f,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l2]

	! block 95
.L1530:
.L1526:
.L1531:
.L1532:
.L1534:

!  779			  if (a_flag)  *dst++ = FLOAT_TO_UBYTE( alpha[i] );

	sethi	0x1f,%l0
	xor	%l0,-292,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1533
	nop

	! block 96
.L1535:
.L1536:
	sethi	0x19,%l0
	xor	%l0,-32,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l2]

	! block 97
.L1537:
.L1533:
.L1538:
.L1539:
.L1540:
.L1541:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1498
	nop

	! block 98
.L1542:
.L1500:
.L1543:
.L1544:
.L1545:

!  780		       }
!  781		    }
!  782		    break;

	ba	.L1488
	nop

	! block 99
.L1546:
.L1547:
.L1548:

!  783		 case GL_BYTE:
!  784		    {
!  785		       GLbyte *dst = (GLbyte *) pixels + start + j * k;

	ld	[%fp+96],%l2
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	ld	[%fp+%l0],%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l1
	add	%l2,%l1,%l1
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	st	%l1,[%fp+%l0]

	! block 100
.L1549:
.L1550:

!  786		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1553
	st	%g0,[%fp-4]

	! block 101
.L1554:
.L1551:
.L1555:
.L1556:
.L1557:
.L1559:

!  787			  if (r_flag)  *dst++ = FLOAT_TO_BYTE( red[i] );

	sethi	0x1f,%l0
	xor	%l0,-289,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1558
	nop

	! block 102
.L1560:
.L1561:
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l0
	sub	%l0,1,%l2
	sra	%l2,31,%l0
	and	%l0,1,%l1
	add	%l2,%l1,%l0
	sra	%l0,1,%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l2]

	! block 103
.L1562:
.L1558:
.L1563:
.L1564:
.L1566:

!  788			  if (g_flag)  *dst++ = FLOAT_TO_BYTE( green[i] );

	sethi	0x1f,%l0
	xor	%l0,-290,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1565
	nop

	! block 104
.L1567:
.L1568:
	sethi	0xc,%l0
	xor	%l0,-544,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l0
	sub	%l0,1,%l2
	sra	%l2,31,%l0
	and	%l0,1,%l1
	add	%l2,%l1,%l0
	sra	%l0,1,%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l2]

	! block 105
.L1569:
.L1565:
.L1570:
.L1571:
.L1573:

!  789			  if (b_flag)  *dst++ = FLOAT_TO_BYTE( blue[i] );

	sethi	0x1f,%l0
	xor	%l0,-291,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1572
	nop

	! block 106
.L1574:
.L1575:
	sethi	0x12,%l0
	xor	%l0,-800,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l0
	sub	%l0,1,%l2
	sra	%l2,31,%l0
	and	%l0,1,%l1
	add	%l2,%l1,%l0
	sra	%l0,1,%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l2]

	! block 107
.L1576:
.L1572:
.L1577:
.L1578:
.L1580:

!  790			  if (l_flag)  *dst++ = FLOAT_TO_BYTE( luminance[i] );

	sethi	0x1f,%l0
	xor	%l0,-293,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1579
	nop

	! block 108
.L1581:
.L1582:
	sethi	0x1f,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l0
	sub	%l0,1,%l2
	sra	%l2,31,%l0
	and	%l0,1,%l1
	add	%l2,%l1,%l0
	sra	%l0,1,%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l2]

	! block 109
.L1583:
.L1579:
.L1584:
.L1585:
.L1587:

!  791			  if (a_flag)  *dst++ = FLOAT_TO_BYTE( alpha[i] );

	sethi	0x1f,%l0
	xor	%l0,-292,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1586
	nop

	! block 110
.L1588:
.L1589:
	sethi	0x19,%l0
	xor	%l0,-32,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg2),%l0
	ld	[%l0+%lo(.L_cseg2)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l0
	sub	%l0,1,%l2
	sra	%l2,31,%l0
	and	%l0,1,%l1
	add	%l2,%l1,%l0
	sra	%l0,1,%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	stb	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l2]

	! block 111
.L1590:
.L1586:
.L1591:
.L1592:
.L1593:
.L1594:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1551
	nop

	! block 112
.L1595:
.L1553:
.L1596:
.L1597:
.L1598:

!  792		       }
!  793		    }
!  794		    break;

	ba	.L1488
	nop

	! block 113
.L1599:
.L1600:
.L1601:

!  795		 case GL_UNSIGNED_SHORT:
!  796		    {
!  797		       GLushort *dst = (GLushort *) pixels + start + j * k;

	ld	[%fp+96],%l2
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l1
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	st	%l1,[%fp+%l0]

	! block 114
.L1602:
.L1603:

!  798		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1606
	st	%g0,[%fp-4]

	! block 115
.L1607:
.L1604:
.L1608:
.L1609:
.L1610:
.L1612:

!  799			  if (r_flag)  *dst++ = FLOAT_TO_USHORT( red[i] );

	sethi	0x1f,%l0
	xor	%l0,-289,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1611
	nop

	! block 116
.L1613:
.L1614:
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l2]

	! block 117
.L1615:
.L1611:
.L1616:
.L1617:
.L1619:

!  800			  if (g_flag)  *dst++ = FLOAT_TO_USHORT( green[i] );

	sethi	0x1f,%l0
	xor	%l0,-290,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1618
	nop

	! block 118
.L1620:
.L1621:
	sethi	0xc,%l0
	xor	%l0,-544,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l2]

	! block 119
.L1622:
.L1618:
.L1623:
.L1624:
.L1626:

!  801			  if (b_flag)  *dst++ = FLOAT_TO_USHORT( blue[i] );

	sethi	0x1f,%l0
	xor	%l0,-291,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1625
	nop

	! block 120
.L1627:
.L1628:
	sethi	0x12,%l0
	xor	%l0,-800,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l2]

	! block 121
.L1629:
.L1625:
.L1630:
.L1631:
.L1633:

!  802			  if (l_flag)  *dst++ = FLOAT_TO_USHORT( luminance[i] );

	sethi	0x1f,%l0
	xor	%l0,-293,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1632
	nop

	! block 122
.L1634:
.L1635:
	sethi	0x1f,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l2]

	! block 123
.L1636:
.L1632:
.L1637:
.L1638:
.L1640:

!  803			  if (a_flag)  *dst++ = FLOAT_TO_USHORT( alpha[i] );

	sethi	0x1f,%l0
	xor	%l0,-292,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1639
	nop

	! block 124
.L1641:
.L1642:
	sethi	0x19,%l0
	xor	%l0,-32,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l2]

	! block 125
.L1643:
.L1639:
.L1644:
.L1645:
.L1646:
.L1647:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1604
	nop

	! block 126
.L1648:
.L1606:
.L1649:
.L1650:
.L1651:
.L1653:

!  804		       }
!  805		    }
!  806		    if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1652
	nop

	! block 127
.L1654:
.L1655:
.L1656:
.L1657:

!  807		       gl_swap2( (GLushort *) pixels + start + j * k, width*n );

	ld	[%fp+96],%l2
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp+80],%l0
	ld	[%fp-12],%l1
	smul	%l0,%l1,%l0
	mov	%l2,%o0
	call	gl_swap2
	mov	%l0,%o1

	! block 128
.L1658:
.L1659:
.L1652:
.L1660:
.L1661:

!  808		    }
!  809		    break;

	ba	.L1488
	nop

	! block 129
.L1662:
.L1663:
.L1664:

!  810		 case GL_SHORT:
!  811		    {
!  812		       GLshort *dst = (GLshort *) pixels + start + j * k;

	ld	[%fp+96],%l2
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l1
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	st	%l1,[%fp+%l0]

	! block 130
.L1665:
.L1666:

!  813		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1669
	st	%g0,[%fp-4]

	! block 131
.L1670:
.L1667:
.L1671:
.L1672:
.L1673:
.L1675:

!  814			  if (r_flag)  *dst++ = FLOAT_TO_SHORT( red[i] );

	sethi	0x1f,%l0
	xor	%l0,-289,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1674
	nop

	! block 132
.L1676:
.L1677:
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l0
	sub	%l0,1,%l2
	sra	%l2,31,%l0
	and	%l0,1,%l1
	add	%l2,%l1,%l0
	sra	%l0,1,%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l2]

	! block 133
.L1678:
.L1674:
.L1679:
.L1680:
.L1682:

!  815			  if (g_flag)  *dst++ = FLOAT_TO_SHORT( green[i] );

	sethi	0x1f,%l0
	xor	%l0,-290,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1681
	nop

	! block 134
.L1683:
.L1684:
	sethi	0xc,%l0
	xor	%l0,-544,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l0
	sub	%l0,1,%l2
	sra	%l2,31,%l0
	and	%l0,1,%l1
	add	%l2,%l1,%l0
	sra	%l0,1,%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l2]

	! block 135
.L1685:
.L1681:
.L1686:
.L1687:
.L1689:

!  816			  if (b_flag)  *dst++ = FLOAT_TO_SHORT( blue[i] );

	sethi	0x1f,%l0
	xor	%l0,-291,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1688
	nop

	! block 136
.L1690:
.L1691:
	sethi	0x12,%l0
	xor	%l0,-800,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l0
	sub	%l0,1,%l2
	sra	%l2,31,%l0
	and	%l0,1,%l1
	add	%l2,%l1,%l0
	sra	%l0,1,%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l2]

	! block 137
.L1692:
.L1688:
.L1693:
.L1694:
.L1696:

!  817			  if (l_flag)  *dst++ = FLOAT_TO_SHORT( luminance[i] );

	sethi	0x1f,%l0
	xor	%l0,-293,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1695
	nop

	! block 138
.L1697:
.L1698:
	sethi	0x1f,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l0
	sub	%l0,1,%l2
	sra	%l2,31,%l0
	and	%l0,1,%l1
	add	%l2,%l1,%l0
	sra	%l0,1,%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l2]

	! block 139
.L1699:
.L1695:
.L1700:
.L1701:
.L1703:

!  818			  if (a_flag)  *dst++ = FLOAT_TO_SHORT( alpha[i] );

	sethi	0x1f,%l0
	xor	%l0,-292,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1702
	nop

	! block 140
.L1704:
.L1705:
	sethi	0x19,%l0
	xor	%l0,-32,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f5
	sethi	%hi(.L_cseg3),%l0
	ld	[%l0+%lo(.L_cseg3)],%f4
	fmuls	%f5,%f4,%f4
	fstoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l0
	sub	%l0,1,%l2
	sra	%l2,31,%l0
	and	%l0,1,%l1
	add	%l2,%l1,%l0
	sra	%l0,1,%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	sth	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,2,%l0
	st	%l0,[%fp+%l2]

	! block 141
.L1706:
.L1702:
.L1707:
.L1708:
.L1709:
.L1710:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1667
	nop

	! block 142
.L1711:
.L1669:
.L1712:
.L1713:
.L1715:

!  819		       }
!  820		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1714
	nop

	! block 143
.L1716:
.L1717:
.L1718:
.L1719:

!  821			  gl_swap2( (GLushort *) pixels + start + j * k, width*n );

	ld	[%fp+96],%l2
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	sll	%l0,1,%l1
	add	%l2,%l1,%l2
	ld	[%fp+80],%l0
	ld	[%fp-12],%l1
	smul	%l0,%l1,%l0
	mov	%l2,%o0
	call	gl_swap2
	mov	%l0,%o1

	! block 144
.L1720:
.L1721:
.L1714:
.L1722:
.L1723:
.L1724:

!  822		       }
!  823		    }
!  824		    break;

	ba	.L1488
	nop

	! block 145
.L1725:
.L1726:
.L1727:

!  825		 case GL_UNSIGNED_INT:
!  826		    {
!  827		       GLuint *dst = (GLuint *) pixels + start + j * k;

	ld	[%fp+96],%l2
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l1
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	st	%l1,[%fp+%l0]

	! block 146
.L1728:
.L1729:

!  828		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1732
	st	%g0,[%fp-4]

	! block 147
.L1733:
.L1730:
.L1734:
.L1735:
.L1736:
.L1738:

!  829			  if (r_flag)  *dst++ = FLOAT_TO_UINT( red[i] );

	sethi	0x1f,%l0
	xor	%l0,-289,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1737
	nop

	! block 148
.L1739:
.L1740:
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg4),%l0
	ldd	[%l0+%lo(.L_cseg4)],%f4
	fmuld	%f6,%f4,%f4
	std	%f4,[%sp+88]
	ldx	[%sp+88],%g1
	srlx	%g1,32,%o0
	or	%g0,%g1,%o1
	call	__dtou
	nop
	sethi	0x1f,%l1
	xor	%l1,-304,%l1
	ld	[%fp+%l1],%l0
	st	%o0,[%l0+0]
	ld	[%fp+%l1],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l1]

	! block 149
.L1741:
.L1737:
.L1742:
.L1743:
.L1745:

!  830			  if (g_flag)  *dst++ = FLOAT_TO_UINT( green[i] );

	sethi	0x1f,%l0
	xor	%l0,-290,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1744
	nop

	! block 150
.L1746:
.L1747:
	sethi	0xc,%l0
	xor	%l0,-544,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg4),%l0
	ldd	[%l0+%lo(.L_cseg4)],%f4
	fmuld	%f6,%f4,%f4
	std	%f4,[%sp+88]
	ldx	[%sp+88],%g1
	srlx	%g1,32,%o0
	or	%g0,%g1,%o1
	call	__dtou
	nop
	sethi	0x1f,%l1
	xor	%l1,-304,%l1
	ld	[%fp+%l1],%l0
	st	%o0,[%l0+0]
	ld	[%fp+%l1],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l1]

	! block 151
.L1748:
.L1744:
.L1749:
.L1750:
.L1752:

!  831			  if (b_flag)  *dst++ = FLOAT_TO_UINT( blue[i] );

	sethi	0x1f,%l0
	xor	%l0,-291,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1751
	nop

	! block 152
.L1753:
.L1754:
	sethi	0x12,%l0
	xor	%l0,-800,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg4),%l0
	ldd	[%l0+%lo(.L_cseg4)],%f4
	fmuld	%f6,%f4,%f4
	std	%f4,[%sp+88]
	ldx	[%sp+88],%g1
	srlx	%g1,32,%o0
	or	%g0,%g1,%o1
	call	__dtou
	nop
	sethi	0x1f,%l1
	xor	%l1,-304,%l1
	ld	[%fp+%l1],%l0
	st	%o0,[%l0+0]
	ld	[%fp+%l1],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l1]

	! block 153
.L1755:
.L1751:
.L1756:
.L1757:
.L1759:

!  832			  if (l_flag)  *dst++ = FLOAT_TO_UINT( luminance[i] );

	sethi	0x1f,%l0
	xor	%l0,-293,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1758
	nop

	! block 154
.L1760:
.L1761:
	sethi	0x1f,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg4),%l0
	ldd	[%l0+%lo(.L_cseg4)],%f4
	fmuld	%f6,%f4,%f4
	std	%f4,[%sp+88]
	ldx	[%sp+88],%g1
	srlx	%g1,32,%o0
	or	%g0,%g1,%o1
	call	__dtou
	nop
	sethi	0x1f,%l1
	xor	%l1,-304,%l1
	ld	[%fp+%l1],%l0
	st	%o0,[%l0+0]
	ld	[%fp+%l1],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l1]

	! block 155
.L1762:
.L1758:
.L1763:
.L1764:
.L1766:

!  833			  if (a_flag)  *dst++ = FLOAT_TO_UINT( alpha[i] );

	sethi	0x1f,%l0
	xor	%l0,-292,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1765
	nop

	! block 156
.L1767:
.L1768:
	sethi	0x19,%l0
	xor	%l0,-32,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg4),%l0
	ldd	[%l0+%lo(.L_cseg4)],%f4
	fmuld	%f6,%f4,%f4
	std	%f4,[%sp+88]
	ldx	[%sp+88],%g1
	srlx	%g1,32,%o0
	or	%g0,%g1,%o1
	call	__dtou
	nop
	sethi	0x1f,%l1
	xor	%l1,-304,%l1
	ld	[%fp+%l1],%l0
	st	%o0,[%l0+0]
	ld	[%fp+%l1],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l1]

	! block 157
.L1769:
.L1765:
.L1770:
.L1771:
.L1772:
.L1773:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1730
	nop

	! block 158
.L1774:
.L1732:
.L1775:
.L1776:
.L1778:

!  834		       }
!  835		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1777
	nop

	! block 159
.L1779:
.L1780:
.L1781:
.L1782:

!  836			  gl_swap4( (GLuint *) pixels + start + j * k, width*n );

	ld	[%fp+96],%l2
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp+80],%l0
	ld	[%fp-12],%l1
	smul	%l0,%l1,%l0
	mov	%l2,%o0
	call	gl_swap4
	mov	%l0,%o1

	! block 160
.L1783:
.L1784:
.L1777:
.L1785:
.L1786:
.L1787:

!  837		       }
!  838		    }
!  839		    break;

	ba	.L1488
	nop

	! block 161
.L1788:
.L1789:
.L1790:

!  840		 case GL_INT:
!  841		    {
!  842		       GLint *dst = (GLint *) pixels + start + j * k;

	ld	[%fp+96],%l2
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l1
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	st	%l1,[%fp+%l0]

	! block 162
.L1791:
.L1792:

!  843		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1795
	st	%g0,[%fp-4]

	! block 163
.L1796:
.L1793:
.L1797:
.L1798:
.L1799:
.L1801:

!  844			  if (r_flag)  *dst++ = FLOAT_TO_INT( red[i] );

	sethi	0x1f,%l0
	xor	%l0,-289,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1800
	nop

	! block 164
.L1802:
.L1803:
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg5),%l0
	ldd	[%l0+%lo(.L_cseg5)],%f4
	fmuld	%f6,%f4,%f4
	fdtoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	st	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l2]

	! block 165
.L1804:
.L1800:
.L1805:
.L1806:
.L1808:

!  845			  if (g_flag)  *dst++ = FLOAT_TO_INT( green[i] );

	sethi	0x1f,%l0
	xor	%l0,-290,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1807
	nop

	! block 166
.L1809:
.L1810:
	sethi	0xc,%l0
	xor	%l0,-544,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg5),%l0
	ldd	[%l0+%lo(.L_cseg5)],%f4
	fmuld	%f6,%f4,%f4
	fdtoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	st	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l2]

	! block 167
.L1811:
.L1807:
.L1812:
.L1813:
.L1815:

!  846			  if (b_flag)  *dst++ = FLOAT_TO_INT( blue[i] );

	sethi	0x1f,%l0
	xor	%l0,-291,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1814
	nop

	! block 168
.L1816:
.L1817:
	sethi	0x12,%l0
	xor	%l0,-800,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg5),%l0
	ldd	[%l0+%lo(.L_cseg5)],%f4
	fmuld	%f6,%f4,%f4
	fdtoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	st	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l2]

	! block 169
.L1818:
.L1814:
.L1819:
.L1820:
.L1822:

!  847			  if (l_flag)  *dst++ = FLOAT_TO_INT( luminance[i] );

	sethi	0x1f,%l0
	xor	%l0,-293,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1821
	nop

	! block 170
.L1823:
.L1824:
	sethi	0x1f,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg5),%l0
	ldd	[%l0+%lo(.L_cseg5)],%f4
	fmuld	%f6,%f4,%f4
	fdtoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	st	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l2]

	! block 171
.L1825:
.L1821:
.L1826:
.L1827:
.L1829:

!  848			  if (a_flag)  *dst++ = FLOAT_TO_INT( alpha[i] );

	sethi	0x1f,%l0
	xor	%l0,-292,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1828
	nop

	! block 172
.L1830:
.L1831:
	sethi	0x19,%l0
	xor	%l0,-32,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	fstod	%f4,%f6
	sethi	%hi(.L_cseg5),%l0
	ldd	[%l0+%lo(.L_cseg5)],%f4
	fmuld	%f6,%f4,%f4
	fdtoi	%f4,%f4
	sethi	0x25,%l0
	xor	%l0,-584,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x1f,%l2
	xor	%l2,-304,%l2
	ld	[%fp+%l2],%l0
	st	%l1,[%l0+0]
	ld	[%fp+%l2],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l2]

	! block 173
.L1832:
.L1828:
.L1833:
.L1834:
.L1835:
.L1836:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1793
	nop

	! block 174
.L1837:
.L1795:
.L1838:
.L1839:
.L1841:

!  849		       }
!  850		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1840
	nop

	! block 175
.L1842:
.L1843:
.L1844:
.L1845:

!  851			  gl_swap4( (GLuint *) pixels + start + j * k, width*n );

	ld	[%fp+96],%l2
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp+80],%l0
	ld	[%fp-12],%l1
	smul	%l0,%l1,%l0
	mov	%l2,%o0
	call	gl_swap4
	mov	%l0,%o1

	! block 176
.L1846:
.L1847:
.L1840:
.L1848:
.L1849:
.L1850:

!  852		       }
!  853		    }
!  854		    break;

	ba	.L1488
	nop

	! block 177
.L1851:
.L1852:
.L1853:

!  855		 case GL_FLOAT:
!  856		    {
!  857		       GLfloat *dst = (GLfloat *) pixels + start + j * k;

	ld	[%fp+96],%l2
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l1
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	st	%l1,[%fp+%l0]

	! block 178
.L1854:
.L1855:

!  858		       for (i=0;i<width;i++) {

	ld	[%fp+80],%l0
	cmp	%g0,%l0
	bge	.L1858
	st	%g0,[%fp-4]

	! block 179
.L1859:
.L1856:
.L1860:
.L1861:
.L1862:
.L1864:

!  859			  if (r_flag)  *dst++ = red[i];

	sethi	0x1f,%l0
	xor	%l0,-289,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1863
	nop

	! block 180
.L1865:
.L1866:
	sethi	0x6,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	sethi	0x1f,%l1
	xor	%l1,-304,%l1
	ld	[%fp+%l1],%l0
	st	%f4,[%l0+0]
	ld	[%fp+%l1],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l1]

	! block 181
.L1867:
.L1863:
.L1868:
.L1869:
.L1871:

!  860			  if (g_flag)  *dst++ = green[i];

	sethi	0x1f,%l0
	xor	%l0,-290,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1870
	nop

	! block 182
.L1872:
.L1873:
	sethi	0xc,%l0
	xor	%l0,-544,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	sethi	0x1f,%l1
	xor	%l1,-304,%l1
	ld	[%fp+%l1],%l0
	st	%f4,[%l0+0]
	ld	[%fp+%l1],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l1]

	! block 183
.L1874:
.L1870:
.L1875:
.L1876:
.L1878:

!  861			  if (b_flag)  *dst++ = blue[i];

	sethi	0x1f,%l0
	xor	%l0,-291,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1877
	nop

	! block 184
.L1879:
.L1880:
	sethi	0x12,%l0
	xor	%l0,-800,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	sethi	0x1f,%l1
	xor	%l1,-304,%l1
	ld	[%fp+%l1],%l0
	st	%f4,[%l0+0]
	ld	[%fp+%l1],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l1]

	! block 185
.L1881:
.L1877:
.L1882:
.L1883:
.L1885:

!  862			  if (l_flag)  *dst++ = luminance[i];

	sethi	0x1f,%l0
	xor	%l0,-293,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1884
	nop

	! block 186
.L1886:
.L1887:
	sethi	0x1f,%l0
	xor	%l0,-288,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	sethi	0x1f,%l1
	xor	%l1,-304,%l1
	ld	[%fp+%l1],%l0
	st	%f4,[%l0+0]
	ld	[%fp+%l1],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l1]

	! block 187
.L1888:
.L1884:
.L1889:
.L1890:
.L1892:

!  863			  if (a_flag)  *dst++ = alpha[i];

	sethi	0x1f,%l0
	xor	%l0,-292,%l0
	ldub	[%fp+%l0],%l0
	cmp	%l0,%g0
	be	.L1891
	nop

	! block 188
.L1893:
.L1894:
	sethi	0x19,%l0
	xor	%l0,-32,%l0
	add	%fp,%l0,%l2
	ld	[%fp-4],%l0
	sll	%l0,2,%l1
	ld	[%l2+%l1],%f4
	sethi	0x1f,%l1
	xor	%l1,-304,%l1
	ld	[%fp+%l1],%l0
	st	%f4,[%l0+0]
	ld	[%fp+%l1],%l0
	add	%l0,4,%l0
	st	%l0,[%fp+%l1]

	! block 189
.L1895:
.L1891:
.L1896:
.L1897:
.L1898:
.L1899:
	ld	[%fp-4],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-4]
	ld	[%fp-4],%l1
	ld	[%fp+80],%l0
	cmp	%l1,%l0
	bl	.L1856
	nop

	! block 190
.L1900:
.L1858:
.L1901:
.L1902:
.L1904:

!  864		       }
!  865		       if (ctx->Pack.SwapBytes) {

	ld	[%fp+68],%l0
	sethi	%hi(0xddc4),%l1
	or	%l1,%lo(0xddc4),%l1
	ldub	[%l0+%l1],%l0
	cmp	%l0,%g0
	be	.L1903
	nop

	! block 191
.L1905:
.L1906:
.L1907:
.L1908:

!  866			  gl_swap4( (GLuint *) pixels + start + j * k, width*n );

	ld	[%fp+96],%l2
	sethi	0x1f,%l0
	xor	%l0,-300,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp-8],%l0
	ld	[%fp-28],%l1
	smul	%l0,%l1,%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l2
	ld	[%fp+80],%l0
	ld	[%fp-12],%l1
	smul	%l0,%l1,%l0
	mov	%l2,%o0
	call	gl_swap4
	mov	%l0,%o1

	! block 192
.L1909:
.L1910:
.L1903:
.L1911:
.L1912:
.L1913:

!  867		       }
!  868		    }
!  869		    break;

	ba	.L1488
	nop

	! block 193
.L1914:
.L1915:

!  870	         default:
!  871	            gl_error( ctx, GL_INVALID_ENUM, "glReadPixels(type)" );

	ld	[%fp+68],%l0
	sethi	%hi(.L1916),%l1
	or	%l1,%lo(.L1916),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 194
.L1917:
.L1918:
	ba	.L1488
	nop

	! block 195
.L1489:
.L1919:
	ld	[%fp+92],%l0
	sethi	%hi(0x1400),%l1
	sub	%l0,%l1,%l0
	cmp	%l0,6
	bgu	.L1914
	nop

	! block 196
	sll	%l0,2,%l1
	sethi	%hi(.L_y4-28),%l0
	or	%l0,%lo(.L_y4-28),%l0
	ld	[%l0+%l1],%l0
	jmp	%l0
	nop

	! block 197
.L1920:
.L1488:
.L1921:
.L1922:
.L1923:
.L1924:
	ld	[%fp-8],%l0
	add	%l0,1,%l0
	st	%l0,[%fp-8]
	ld	[%fp+76],%l1
	sethi	0x1f,%l0
	xor	%l0,-304,%l0
	st	%l1,[%fp+%l0]
	ld	[%fp+76],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+76]
	ld	[%fp-8],%l1
	ld	[%fp+84],%l0
	cmp	%l1,%l0
	bl	.L1312
	nop

	! block 198
.L1925:
.L1314:
.L1926:

	! block 199
.L1927:
.L1928:
.L1223:
	jmp	%i7+8
	restore
	.size	read_color_pixels,(.-read_color_pixels)

	.word	.L1235
	.word	.L1237
	.word	.L1239
	.word	.L1241
	.word	.L1247
	.word	.L1249
	.word	.L1243
	.word	.L1245
.L_y3:
	.word	.L1546
	.word	.L1493
	.word	.L1662
	.word	.L1599
	.word	.L1788
	.word	.L1725
	.word	.L1851
.L_y4:
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	gl_ReadPixels
	.type	gl_ReadPixels,#function
gl_ReadPixels:
	save	%sp,-104,%sp

	! block 1
.L1931:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]

	! block 2
.L1932:
.L1934:
.L1936:

! File readpix.c:
!  872	      }
!  873	   }
!  874	   UNDEFARRAY( red );
!  875	   UNDEFARRAY( green );
!  876	   UNDEFARRAY( blue );
!  877	   UNDEFARRAY( alpha );
!  878	   UNDEFARRAY( luminance );
!  879	}
!  880	
!  883	void gl_ReadPixels( GLcontext *ctx,
!  884	                    GLint x, GLint y, GLsizei width, GLsizei height,
!  885			    GLenum format, GLenum type, GLvoid *pixels )
!  886	{
!  887	   if (INSIDE_BEGIN_END(ctx)) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe0fc),%l1
	or	%l1,%lo(0xe0fc),%l1
	ld	[%l0+%l1],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	be	.L1935
	nop

	! block 3
.L1937:
.L1938:
.L1939:
.L1940:

!  888	      gl_error( ctx, GL_INVALID_OPERATION, "glReadPixels" );

	ld	[%fp+68],%l0
	sethi	%hi(.L1941),%l1
	or	%l1,%lo(.L1941),%l1
	mov	%l0,%o0
	mov	1282,%o1
	call	gl_error
	mov	%l1,%o2

	! block 4
.L1942:

!  889	      return;

	ba	.L1930
	nop

	! block 5
.L1943:
.L1944:
.L1935:
.L1945:
.L1946:

!  890	   }
!  891	
!  892	   (void) (*ctx->Driver.SetBuffer)( ctx, ctx->Pixel.ReadBuffer );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l2
	sethi	%hi(0xae18),%l1
	or	%l1,%lo(0xae18),%l1
	ld	[%l0+%l1],%l1
	mov	%l0,%o0
	mov	%l1,%o1
	jmpl	%l2,%o7
	nop

	! block 6
.L1947:
.L1950:

!  894	   switch (format) {

	ba	.L1949
	nop

	! block 7
.L1951:
.L1952:
.L1953:
.L1954:

!  895	      case GL_COLOR_INDEX:
!  896	         read_index_pixels( ctx, x, y, width, height, type, pixels );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	ld	[%fp+92],%l6
	ld	[%fp+96],%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	mov	%l6,%o5
	call	read_index_pixels
	st	%l4,[%sp+92]

	! block 8
.L1955:

!  897		 break;

	ba	.L1948
	nop

	! block 9
.L1956:
.L1957:

!  898	      case GL_STENCIL_INDEX:
!  899		 read_stencil_pixels( ctx, x, y, width, height, type, pixels );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	ld	[%fp+92],%l6
	ld	[%fp+96],%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	mov	%l6,%o5
	call	read_stencil_pixels
	st	%l4,[%sp+92]

	! block 10
.L1958:

!  900	         break;

	ba	.L1948
	nop

	! block 11
.L1959:
.L1960:

!  901	      case GL_DEPTH_COMPONENT:
!  902		 read_depth_pixels( ctx, x, y, width, height, type, pixels );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	ld	[%fp+92],%l6
	ld	[%fp+96],%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	mov	%l6,%o5
	call	read_depth_pixels
	st	%l4,[%sp+92]

	! block 12
.L1961:

!  903		 break;

	ba	.L1948
	nop

	! block 13
.L1962:
.L1963:
.L1964:
.L1965:
.L1966:
.L1967:
.L1968:
.L1969:
.L1970:

!  904	      case GL_RED:
!  905	      case GL_GREEN:
!  906	      case GL_BLUE:
!  907	      case GL_ALPHA:
!  908	      case GL_RGB:
!  909	      case GL_LUMINANCE:
!  910	      case GL_LUMINANCE_ALPHA:
!  911	      case GL_RGBA:
!  912		 read_color_pixels( ctx, x, y, width, height, format, type, pixels );

	ld	[%fp+68],%l0
	ld	[%fp+72],%l1
	ld	[%fp+76],%l2
	ld	[%fp+80],%l3
	ld	[%fp+84],%l5
	ld	[%fp+88],%l6
	ld	[%fp+92],%l7
	ld	[%fp+96],%l4
	mov	%l0,%o0
	mov	%l1,%o1
	mov	%l2,%o2
	mov	%l3,%o3
	mov	%l5,%o4
	mov	%l6,%o5
	st	%l7,[%sp+92]
	call	read_color_pixels
	st	%l4,[%sp+96]

	! block 14
.L1971:

!  913		 break;

	ba	.L1948
	nop

	! block 15
.L1972:
.L1973:

!  914	      default:
!  915		 gl_error( ctx, GL_INVALID_ENUM, "glReadPixels(format)" );

	ld	[%fp+68],%l0
	sethi	%hi(.L1974),%l1
	or	%l1,%lo(.L1974),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 16
.L1975:
.L1976:
	ba	.L1948
	nop

	! block 17
.L1949:
.L1977:
	ld	[%fp+88],%l0
	sethi	%hi(0x1900),%l1
	or	%l1,%lo(0x1900),%l1
	sub	%l0,%l1,%l0
	cmp	%l0,10
	bgu	.L1972
	nop

	! block 18
	sll	%l0,2,%l1
	sethi	%hi(.L_y5-44),%l0
	or	%l0,%lo(.L_y5-44),%l0
	ld	[%l0+%l1],%l0
	jmp	%l0
	nop

	! block 19
.L1978:
.L1948:
.L1979:
.L1980:

!  916	   }
!  917	
!  918	   (void) (*ctx->Driver.SetBuffer)( ctx, ctx->Color.DrawBuffer );

	ld	[%fp+68],%l0
	ld	[%l0+2236],%l2
	sethi	%hi(0x1e9c),%l1
	or	%l1,%lo(0x1e9c),%l1
	ld	[%l0+%l1],%l1
	mov	%l0,%o0
	mov	%l1,%o1
	jmpl	%l2,%o7
	nop

	! block 20
.L1981:
.L1982:
.L1930:
	jmp	%i7+8
	restore
	.size	gl_ReadPixels,(.-gl_ReadPixels)

	.word	.L1953
	.word	.L1956
	.word	.L1959
	.word	.L1962
	.word	.L1963
	.word	.L1964
	.word	.L1965
	.word	.L1966
	.word	.L1969
	.word	.L1967
	.word	.L1968
.L_y5:
	.align	8

	.section	".rodata1",#alloc
	.align	4
.L23:
	.ascii	"glReadPixels\000"
	.skip	3
	.type	.L23,#object
	.size	.L23,16
	.align	4
.L36:
	.ascii	"glReadPixels(type)\000"
	.skip	1
	.type	.L36,#object
	.size	.L36,20
	.align	4
.L356:
	.ascii	"glReadPixels(type)\000"
	.skip	1
	.type	.L356,#object
	.size	.L356,20
	.align	4
.L381:
	.ascii	"glReadPixels\000"
	.skip	3
	.type	.L381,#object
	.size	.L381,16
	.align	4
.L400:
	.ascii	"glReadPixels(type)\000"
	.skip	1
	.type	.L400,#object
	.size	.L400,20
	.align	4
.L758:
	.ascii	"glReadPixels(type)\000"
	.skip	1
	.type	.L758,#object
	.size	.L758,20

	.section	".rodata",#alloc
	.align	8
Drodata.rodata:
.L_cseg0:
	.skip	8
	.type	.L_cseg0,#object
	.size	.L_cseg0,8
	.align	8
.L_cseg1:
	.word	0x3ff00000,0x0
	.type	.L_cseg1,#object
	.size	.L_cseg1,8
	.align	4
.L_cseg2:
	.word	0x437f0000
	.type	.L_cseg2,#object
	.size	.L_cseg2,4
	.align	4
.L_cseg3:
	.word	0x477fff00
	.type	.L_cseg3,#object
	.size	.L_cseg3,4
	.align	8
.L_cseg4:
	.word	0x41efffff,0xffe00000
	.type	.L_cseg4,#object
	.size	.L_cseg4,8
	.align	8
.L_cseg5:
	.word	0x41dfffff,0xffc00000
	.type	.L_cseg5,#object
	.size	.L_cseg5,8

	.section	".rodata1",#alloc
	.align	4
.L788:
	.ascii	"glReadPixels\000"
	.skip	3
	.type	.L788,#object
	.size	.L788,16
	.align	4
.L807:
	.ascii	"glReadPixels(type)\000"
	.skip	1
	.type	.L807,#object
	.size	.L807,20
	.align	4
.L1099:
	.ascii	"glReadPixels(type)\000"
	.skip	1
	.type	.L1099,#object
	.size	.L1099,20

	.section	".rodata",#alloc
	.align	4
.L_cseg6:
	.word	0x3f800000
	.type	.L_cseg6,#object
	.size	.L_cseg6,4
	.align	4
.L_cseg7:
	.skip	4
	.type	.L_cseg7,#object
	.size	.L_cseg7,4

	.section	".rodata1",#alloc
	.align	4
.L1253:
	.ascii	"glReadPixels(format)\000"
	.skip	3
	.type	.L1253,#object
	.size	.L1253,24
	.align	4
.L1268:
	.ascii	"glReadPixels(type)\000"
	.skip	1
	.type	.L1268,#object
	.size	.L1268,20
	.align	4
.L1916:
	.ascii	"glReadPixels(type)\000"
	.skip	1
	.type	.L1916,#object
	.size	.L1916,20
	.align	4
.L1941:
	.ascii	"glReadPixels\000"
	.skip	3
	.type	.L1941,#object
	.size	.L1941,16
	.align	4
.L1974:
	.ascii	"glReadPixels(format)\000"
	.type	.L1974,#object
	.size	.L1974,21
	.section	".bss",#alloc,#write
Bbss.bss:
	.section	".data",#alloc,#write
Ddata.data:

	.file	"readpix.c"
	.ident	"@(#)math.h	2.24	04/10/23 SMI"
	.ident	"@(#)math_iso.h	1.9	04/10/23 SMI"
	.ident	"@(#)feature_tests.h	1.25	07/02/02 SMI"
	.ident	"@(#)ccompile.h	1.2	04/11/08 SMI"
	.ident	"@(#)isa_defs.h	1.28	07/02/01 SMI"
	.ident	"@(#)math_c99.h	1.9	04/11/01 SMI"
	.ident	"@(#)floatingpoint.h	2.9	04/10/23 SMI"
	.ident	"@(#)stdio_tag.h	1.4	04/09/28 SMI"
	.ident	"@(#)ieeefp.h	2.12	04/10/23 SMI"
	.ident	"@(#)stdlib.h	1.51	04/06/30 SMI"
	.ident	"@(#)stdlib_iso.h	1.9	04/09/28 SMI"
	.ident	"@(#)stdlib_c99.h	1.2	04/03/29 SMI"
	.ident	"@(#)string.h	1.27	07/01/14 SMI"
	.ident	"@(#)string_iso.h	1.5	04/06/18 SMI"
	.ident	"acomp: Sun C 5.9 SunOS_sparc 2007/05/03"
!  Begin sdCreateSection : .debug_loc
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
	.section ".debug_loc"
!  End sdCreateSection
!  Begin sdCreateSection : .debug_info
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_abbrev, lab2=, loff=0
!   reloc[1]: knd=2, off=257, siz=4, lab1=.debug_line, lab2=, loff=0
!   reloc[2]: knd=0, off=283, siz=4, lab1=read_index_pixels, lab2=, loff=0
!   reloc[3]: knd=0, off=287, siz=4, lab1=.L368, lab2=, loff=0
!   reloc[4]: knd=0, off=505, siz=4, lab1=.L78, lab2=, loff=0
!   reloc[5]: knd=0, off=509, siz=4, lab1=.L366, lab2=, loff=0
!   reloc[6]: knd=0, off=514, siz=4, lab1=.L84, lab2=, loff=0
!   reloc[7]: knd=0, off=518, siz=4, lab1=.L363, lab2=, loff=0
!   reloc[8]: knd=0, off=523, siz=4, lab1=.L85, lab2=, loff=0
!   reloc[9]: knd=0, off=527, siz=4, lab1=.L362, lab2=, loff=0
!   reloc[10]: knd=0, off=550, siz=4, lab1=.L87, lab2=, loff=0
!   reloc[11]: knd=0, off=554, siz=4, lab1=.L141, lab2=, loff=0
!   reloc[12]: knd=0, off=559, siz=4, lab1=.L93, lab2=, loff=0
!   reloc[13]: knd=0, off=563, siz=4, lab1=.L140, lab2=, loff=0
!   reloc[14]: knd=0, off=568, siz=4, lab1=.L94, lab2=, loff=0
!   reloc[15]: knd=0, off=572, siz=4, lab1=.L139, lab2=, loff=0
!   reloc[16]: knd=0, off=594, siz=4, lab1=.L165, lab2=, loff=0
!   reloc[17]: knd=0, off=598, siz=4, lab1=.L361, lab2=, loff=0
!   reloc[18]: knd=0, off=603, siz=4, lab1=.L169, lab2=, loff=0
!   reloc[19]: knd=0, off=607, siz=4, lab1=.L358, lab2=, loff=0
!   reloc[20]: knd=0, off=612, siz=4, lab1=.L170, lab2=, loff=0
!   reloc[21]: knd=0, off=616, siz=4, lab1=.L357, lab2=, loff=0
!   reloc[22]: knd=0, off=621, siz=4, lab1=.L172, lab2=, loff=0
!   reloc[23]: knd=0, off=625, siz=4, lab1=.L188, lab2=, loff=0
!   reloc[24]: knd=0, off=647, siz=4, lab1=.L191, lab2=, loff=0
!   reloc[25]: knd=0, off=651, siz=4, lab1=.L207, lab2=, loff=0
!   reloc[26]: knd=0, off=673, siz=4, lab1=.L210, lab2=, loff=0
!   reloc[27]: knd=0, off=677, siz=4, lab1=.L236, lab2=, loff=0
!   reloc[28]: knd=0, off=699, siz=4, lab1=.L239, lab2=, loff=0
!   reloc[29]: knd=0, off=703, siz=4, lab1=.L265, lab2=, loff=0
!   reloc[30]: knd=0, off=725, siz=4, lab1=.L268, lab2=, loff=0
!   reloc[31]: knd=0, off=729, siz=4, lab1=.L294, lab2=, loff=0
!   reloc[32]: knd=0, off=751, siz=4, lab1=.L297, lab2=, loff=0
!   reloc[33]: knd=0, off=755, siz=4, lab1=.L323, lab2=, loff=0
!   reloc[34]: knd=0, off=777, siz=4, lab1=.L326, lab2=, loff=0
!   reloc[35]: knd=0, off=781, siz=4, lab1=.L352, lab2=, loff=0
!   reloc[36]: knd=0, off=38672, siz=4, lab1=read_depth_pixels, lab2=, loff=0
!   reloc[37]: knd=0, off=38676, siz=4, lab1=.L775, lab2=, loff=0
!   reloc[38]: knd=0, off=38919, siz=4, lab1=.L442, lab2=, loff=0
!   reloc[39]: knd=0, off=38923, siz=4, lab1=.L773, lab2=, loff=0
!   reloc[40]: knd=0, off=38928, siz=4, lab1=.L448, lab2=, loff=0
!   reloc[41]: knd=0, off=38932, siz=4, lab1=.L466, lab2=, loff=0
!   reloc[42]: knd=0, off=38937, siz=4, lab1=.L449, lab2=, loff=0
!   reloc[43]: knd=0, off=38941, siz=4, lab1=.L465, lab2=, loff=0
!   reloc[44]: knd=0, off=38946, siz=4, lab1=.L450, lab2=, loff=0
!   reloc[45]: knd=0, off=38950, siz=4, lab1=.L464, lab2=, loff=0
!   reloc[46]: knd=0, off=38955, siz=4, lab1=.L456, lab2=, loff=0
!   reloc[47]: knd=0, off=38959, siz=4, lab1=.L461, lab2=, loff=0
!   reloc[48]: knd=0, off=38964, siz=4, lab1=.L457, lab2=, loff=0
!   reloc[49]: knd=0, off=38968, siz=4, lab1=.L460, lab2=, loff=0
!   reloc[50]: knd=0, off=38994, siz=4, lab1=.L468, lab2=, loff=0
!   reloc[51]: knd=0, off=38998, siz=4, lab1=.L772, lab2=, loff=0
!   reloc[52]: knd=0, off=39003, siz=4, lab1=.L469, lab2=, loff=0
!   reloc[53]: knd=0, off=39007, siz=4, lab1=.L771, lab2=, loff=0
!   reloc[54]: knd=0, off=39012, siz=4, lab1=.L475, lab2=, loff=0
!   reloc[55]: knd=0, off=39016, siz=4, lab1=.L524, lab2=, loff=0
!   reloc[56]: knd=0, off=39021, siz=4, lab1=.L476, lab2=, loff=0
!   reloc[57]: knd=0, off=39025, siz=4, lab1=.L523, lab2=, loff=0
!   reloc[58]: knd=0, off=39064, siz=4, lab1=.L494, lab2=, loff=0
!   reloc[59]: knd=0, off=39068, siz=4, lab1=.L522, lab2=, loff=0
!   reloc[60]: knd=0, off=39073, siz=4, lab1=.L500, lab2=, loff=0
!   reloc[61]: knd=0, off=39077, siz=4, lab1=.L519, lab2=, loff=0
!   reloc[62]: knd=0, off=39082, siz=4, lab1=.L501, lab2=, loff=0
!   reloc[63]: knd=0, off=39086, siz=4, lab1=.L518, lab2=, loff=0
!   reloc[64]: knd=0, off=39112, siz=4, lab1=.L526, lab2=, loff=0
!   reloc[65]: knd=0, off=39116, siz=4, lab1=.L770, lab2=, loff=0
!   reloc[66]: knd=0, off=39121, siz=4, lab1=.L527, lab2=, loff=0
!   reloc[67]: knd=0, off=39125, siz=4, lab1=.L769, lab2=, loff=0
!   reloc[68]: knd=0, off=39130, siz=4, lab1=.L528, lab2=, loff=0
!   reloc[69]: knd=0, off=39134, siz=4, lab1=.L768, lab2=, loff=0
!   reloc[70]: knd=0, off=39139, siz=4, lab1=.L534, lab2=, loff=0
!   reloc[71]: knd=0, off=39143, siz=4, lab1=.L765, lab2=, loff=0
!   reloc[72]: knd=0, off=39148, siz=4, lab1=.L535, lab2=, loff=0
!   reloc[73]: knd=0, off=39152, siz=4, lab1=.L764, lab2=, loff=0
!   reloc[74]: knd=0, off=39176, siz=4, lab1=.L537, lab2=, loff=0
!   reloc[75]: knd=0, off=39180, siz=4, lab1=.L566, lab2=, loff=0
!   reloc[76]: knd=0, off=39185, siz=4, lab1=.L541, lab2=, loff=0
!   reloc[77]: knd=0, off=39189, siz=4, lab1=.L565, lab2=, loff=0
!   reloc[78]: knd=0, off=39194, siz=4, lab1=.L542, lab2=, loff=0
!   reloc[79]: knd=0, off=39198, siz=4, lab1=.L564, lab2=, loff=0
!   reloc[80]: knd=0, off=39203, siz=4, lab1=.L543, lab2=, loff=0
!   reloc[81]: knd=0, off=39207, siz=4, lab1=.L563, lab2=, loff=0
!   reloc[82]: knd=0, off=39212, siz=4, lab1=.L549, lab2=, loff=0
!   reloc[83]: knd=0, off=39216, siz=4, lab1=.L560, lab2=, loff=0
!   reloc[84]: knd=0, off=39221, siz=4, lab1=.L550, lab2=, loff=0
!   reloc[85]: knd=0, off=39225, siz=4, lab1=.L559, lab2=, loff=0
!   reloc[86]: knd=0, off=39251, siz=4, lab1=.L567, lab2=, loff=0
!   reloc[87]: knd=0, off=39255, siz=4, lab1=.L763, lab2=, loff=0
!   reloc[88]: knd=0, off=39260, siz=4, lab1=.L571, lab2=, loff=0
!   reloc[89]: knd=0, off=39264, siz=4, lab1=.L760, lab2=, loff=0
!   reloc[90]: knd=0, off=39269, siz=4, lab1=.L572, lab2=, loff=0
!   reloc[91]: knd=0, off=39273, siz=4, lab1=.L759, lab2=, loff=0
!   reloc[92]: knd=0, off=39278, siz=4, lab1=.L574, lab2=, loff=0
!   reloc[93]: knd=0, off=39282, siz=4, lab1=.L590, lab2=, loff=0
!   reloc[94]: knd=0, off=39305, siz=4, lab1=.L593, lab2=, loff=0
!   reloc[95]: knd=0, off=39309, siz=4, lab1=.L609, lab2=, loff=0
!   reloc[96]: knd=0, off=39332, siz=4, lab1=.L612, lab2=, loff=0
!   reloc[97]: knd=0, off=39336, siz=4, lab1=.L638, lab2=, loff=0
!   reloc[98]: knd=0, off=39359, siz=4, lab1=.L641, lab2=, loff=0
!   reloc[99]: knd=0, off=39363, siz=4, lab1=.L667, lab2=, loff=0
!   reloc[100]: knd=0, off=39386, siz=4, lab1=.L670, lab2=, loff=0
!   reloc[101]: knd=0, off=39390, siz=4, lab1=.L696, lab2=, loff=0
!   reloc[102]: knd=0, off=39413, siz=4, lab1=.L699, lab2=, loff=0
!   reloc[103]: knd=0, off=39417, siz=4, lab1=.L725, lab2=, loff=0
!   reloc[104]: knd=0, off=39440, siz=4, lab1=.L728, lab2=, loff=0
!   reloc[105]: knd=0, off=39444, siz=4, lab1=.L754, lab2=, loff=0
!   reloc[106]: knd=0, off=39522, siz=4, lab1=read_stencil_pixels, lab2=, loff=0
!   reloc[107]: knd=0, off=39526, siz=4, lab1=.L1111, lab2=, loff=0
!   reloc[108]: knd=0, off=39786, siz=4, lab1=.L849, lab2=, loff=0
!   reloc[109]: knd=0, off=39790, siz=4, lab1=.L1109, lab2=, loff=0
!   reloc[110]: knd=0, off=39795, siz=4, lab1=.L855, lab2=, loff=0
!   reloc[111]: knd=0, off=39799, siz=4, lab1=.L1106, lab2=, loff=0
!   reloc[112]: knd=0, off=39804, siz=4, lab1=.L856, lab2=, loff=0
!   reloc[113]: knd=0, off=39808, siz=4, lab1=.L1105, lab2=, loff=0
!   reloc[114]: knd=0, off=39834, siz=4, lab1=.L858, lab2=, loff=0
!   reloc[115]: knd=0, off=39838, siz=4, lab1=.L910, lab2=, loff=0
!   reloc[116]: knd=0, off=39843, siz=4, lab1=.L862, lab2=, loff=0
!   reloc[117]: knd=0, off=39847, siz=4, lab1=.L909, lab2=, loff=0
!   reloc[118]: knd=0, off=39852, siz=4, lab1=.L863, lab2=, loff=0
!   reloc[119]: knd=0, off=39856, siz=4, lab1=.L908, lab2=, loff=0
!   reloc[120]: knd=0, off=39879, siz=4, lab1=.L934, lab2=, loff=0
!   reloc[121]: knd=0, off=39883, siz=4, lab1=.L1104, lab2=, loff=0
!   reloc[122]: knd=0, off=39888, siz=4, lab1=.L938, lab2=, loff=0
!   reloc[123]: knd=0, off=39892, siz=4, lab1=.L1101, lab2=, loff=0
!   reloc[124]: knd=0, off=39897, siz=4, lab1=.L939, lab2=, loff=0
!   reloc[125]: knd=0, off=39901, siz=4, lab1=.L1100, lab2=, loff=0
!   reloc[126]: knd=0, off=39906, siz=4, lab1=.L941, lab2=, loff=0
!   reloc[127]: knd=0, off=39910, siz=4, lab1=.L944, lab2=, loff=0
!   reloc[128]: knd=0, off=39933, siz=4, lab1=.L947, lab2=, loff=0
!   reloc[129]: knd=0, off=39937, siz=4, lab1=.L950, lab2=, loff=0
!   reloc[130]: knd=0, off=39960, siz=4, lab1=.L953, lab2=, loff=0
!   reloc[131]: knd=0, off=39964, siz=4, lab1=.L979, lab2=, loff=0
!   reloc[132]: knd=0, off=39987, siz=4, lab1=.L982, lab2=, loff=0
!   reloc[133]: knd=0, off=39991, siz=4, lab1=.L1008, lab2=, loff=0
!   reloc[134]: knd=0, off=40014, siz=4, lab1=.L1011, lab2=, loff=0
!   reloc[135]: knd=0, off=40018, siz=4, lab1=.L1037, lab2=, loff=0
!   reloc[136]: knd=0, off=40041, siz=4, lab1=.L1040, lab2=, loff=0
!   reloc[137]: knd=0, off=40045, siz=4, lab1=.L1066, lab2=, loff=0
!   reloc[138]: knd=0, off=40068, siz=4, lab1=.L1069, lab2=, loff=0
!   reloc[139]: knd=0, off=40072, siz=4, lab1=.L1095, lab2=, loff=0
!   reloc[140]: knd=0, off=40144, siz=4, lab1=scale_or_bias_rgba, lab2=, loff=0
!   reloc[141]: knd=0, off=40148, siz=4, lab1=.L1141, lab2=, loff=0
!   reloc[142]: knd=0, off=40206, siz=4, lab1=scale_and_bias_rgba, lab2=, loff=0
!   reloc[143]: knd=0, off=40210, siz=4, lab1=.L1193, lab2=, loff=0
!   reloc[144]: knd=0, off=40406, siz=4, lab1=map_rgba, lab2=, loff=0
!   reloc[145]: knd=0, off=40410, siz=4, lab1=.L1221, lab2=, loff=0
!   reloc[146]: knd=0, off=40635, siz=4, lab1=read_color_pixels, lab2=, loff=0
!   reloc[147]: knd=0, off=40639, siz=4, lab1=.L1928, lab2=, loff=0
!   reloc[148]: knd=0, off=41137, siz=4, lab1=.L1310, lab2=, loff=0
!   reloc[149]: knd=0, off=41141, siz=4, lab1=.L1926, lab2=, loff=0
!   reloc[150]: knd=0, off=41146, siz=4, lab1=.L1316, lab2=, loff=0
!   reloc[151]: knd=0, off=41150, siz=4, lab1=.L1923, lab2=, loff=0
!   reloc[152]: knd=0, off=41155, siz=4, lab1=.L1317, lab2=, loff=0
!   reloc[153]: knd=0, off=41159, siz=4, lab1=.L1922, lab2=, loff=0
!   reloc[154]: knd=0, off=41164, siz=4, lab1=.L1318, lab2=, loff=0
!   reloc[155]: knd=0, off=41168, siz=4, lab1=.L1456, lab2=, loff=0
!   reloc[156]: knd=0, off=41173, siz=4, lab1=.L1322, lab2=, loff=0
!   reloc[157]: knd=0, off=41177, siz=4, lab1=.L1377, lab2=, loff=0
!   reloc[158]: knd=0, off=41182, siz=4, lab1=.L1323, lab2=, loff=0
!   reloc[159]: knd=0, off=41186, siz=4, lab1=.L1376, lab2=, loff=0
!   reloc[160]: knd=0, off=41341, siz=4, lab1=.L1379, lab2=, loff=0
!   reloc[161]: knd=0, off=41345, siz=4, lab1=.L1455, lab2=, loff=0
!   reloc[162]: knd=0, off=41350, siz=4, lab1=.L1380, lab2=, loff=0
!   reloc[163]: knd=0, off=41354, siz=4, lab1=.L1454, lab2=, loff=0
!   reloc[164]: knd=0, off=41379, siz=4, lab1=.L1382, lab2=, loff=0
!   reloc[165]: knd=0, off=41383, siz=4, lab1=.L1436, lab2=, loff=0
!   reloc[166]: knd=0, off=41388, siz=4, lab1=.L1388, lab2=, loff=0
!   reloc[167]: knd=0, off=41392, siz=4, lab1=.L1435, lab2=, loff=0
!   reloc[168]: knd=0, off=41397, siz=4, lab1=.L1389, lab2=, loff=0
!   reloc[169]: knd=0, off=41401, siz=4, lab1=.L1434, lab2=, loff=0
!   reloc[170]: knd=0, off=41428, siz=4, lab1=.L1457, lab2=, loff=0
!   reloc[171]: knd=0, off=41432, siz=4, lab1=.L1486, lab2=, loff=0
!   reloc[172]: knd=0, off=41437, siz=4, lab1=.L1461, lab2=, loff=0
!   reloc[173]: knd=0, off=41441, siz=4, lab1=.L1485, lab2=, loff=0
!   reloc[174]: knd=0, off=41446, siz=4, lab1=.L1462, lab2=, loff=0
!   reloc[175]: knd=0, off=41450, siz=4, lab1=.L1484, lab2=, loff=0
!   reloc[176]: knd=0, off=41455, siz=4, lab1=.L1463, lab2=, loff=0
!   reloc[177]: knd=0, off=41459, siz=4, lab1=.L1483, lab2=, loff=0
!   reloc[178]: knd=0, off=41464, siz=4, lab1=.L1469, lab2=, loff=0
!   reloc[179]: knd=0, off=41468, siz=4, lab1=.L1480, lab2=, loff=0
!   reloc[180]: knd=0, off=41473, siz=4, lab1=.L1470, lab2=, loff=0
!   reloc[181]: knd=0, off=41477, siz=4, lab1=.L1479, lab2=, loff=0
!   reloc[182]: knd=0, off=41506, siz=4, lab1=.L1487, lab2=, loff=0
!   reloc[183]: knd=0, off=41510, siz=4, lab1=.L1921, lab2=, loff=0
!   reloc[184]: knd=0, off=41515, siz=4, lab1=.L1491, lab2=, loff=0
!   reloc[185]: knd=0, off=41519, siz=4, lab1=.L1918, lab2=, loff=0
!   reloc[186]: knd=0, off=41524, siz=4, lab1=.L1492, lab2=, loff=0
!   reloc[187]: knd=0, off=41528, siz=4, lab1=.L1917, lab2=, loff=0
!   reloc[188]: knd=0, off=41533, siz=4, lab1=.L1494, lab2=, loff=0
!   reloc[189]: knd=0, off=41537, siz=4, lab1=.L1544, lab2=, loff=0
!   reloc[190]: knd=0, off=41561, siz=4, lab1=.L1547, lab2=, loff=0
!   reloc[191]: knd=0, off=41565, siz=4, lab1=.L1597, lab2=, loff=0
!   reloc[192]: knd=0, off=41589, siz=4, lab1=.L1600, lab2=, loff=0
!   reloc[193]: knd=0, off=41593, siz=4, lab1=.L1650, lab2=, loff=0
!   reloc[194]: knd=0, off=41617, siz=4, lab1=.L1663, lab2=, loff=0
!   reloc[195]: knd=0, off=41621, siz=4, lab1=.L1723, lab2=, loff=0
!   reloc[196]: knd=0, off=41645, siz=4, lab1=.L1726, lab2=, loff=0
!   reloc[197]: knd=0, off=41649, siz=4, lab1=.L1786, lab2=, loff=0
!   reloc[198]: knd=0, off=41673, siz=4, lab1=.L1789, lab2=, loff=0
!   reloc[199]: knd=0, off=41677, siz=4, lab1=.L1849, lab2=, loff=0
!   reloc[200]: knd=0, off=41701, siz=4, lab1=.L1852, lab2=, loff=0
!   reloc[201]: knd=0, off=41705, siz=4, lab1=.L1912, lab2=, loff=0
!   reloc[202]: knd=0, off=41945, siz=4, lab1=gl_ReadPixels, lab2=, loff=0
!   reloc[203]: knd=0, off=41949, siz=4, lab1=.L1982, lab2=, loff=0
	.section ".debug_info"
	.byte 0x00,0x00,0xa5,0x90,0x00,0x02
	.uaword %section_symbol(".debug_abbrev")
	.byte 0x04,0x01
	.ascii "readpix.c\0"
	.byte 0x0c
	.ascii "/home/faculty/koppel/teach/gpcom/gpup/rsim/mesa/no-opt\0"
	.ascii " /local/SUNWspro/prod/bin/cc -g -xtarget=ultraT2 -S  readpix.c -W0,-xp\\$XAa59JCSsd3L2FL.\0"
	.ascii "Xa;g;R=Sun C 5.9 SunOS_sparc 2007/05/03;G=$XAa59JCSsd3L2FL.;backend;raw;cd;\0"
	.ascii "DBG_GEN 5.2.1\0"
	.uaword %section_symbol(".debug_line")
	.byte 0x02
	.ascii "read_index_pixels\0"
	.byte 0x03,0x01,0x58
	.uaword read_index_pixels
	.uaword .L368
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x03,0x29
	.byte 0x03,0x00,0x00,0x96,0xa4
	.ascii "ctx\0"
	.byte 0x01,0x54,0x03,0x91,0xc4,0x00,0x03,0x00
	.byte 0x00,0x03,0x30
	.ascii "x\0"
	.byte 0x01,0x55,0x03,0x91,0xc8,0x00,0x03,0x00
	.byte 0x00,0x03,0x30
	.ascii "y\0"
	.byte 0x01,0x55,0x03,0x91,0xcc,0x00,0x03,0x00
	.byte 0x00,0x8a,0x2e
	.ascii "width\0"
	.byte 0x01,0x56,0x03,0x91,0xd0,0x00,0x03,0x00
	.byte 0x00,0x8a,0x2e
	.ascii "height\0"
	.byte 0x01,0x56,0x03,0x91,0xd4,0x00,0x03,0x00
	.byte 0x00,0x33,0x32
	.ascii "type\0"
	.byte 0x01,0x57,0x03,0x91,0xd8,0x00,0x03,0x00
	.byte 0x00,0x3f,0x05
	.ascii "pixels\0"
	.byte 0x01,0x57,0x03,0x91,0xdc,0x00,0x04
	.ascii "i\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x59,0x02
	.byte 0x91,0x7c,0x04
	.ascii "j\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x59,0x02
	.byte 0x91,0x78,0x04
	.ascii "a\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x5a,0x02
	.byte 0x91,0x74,0x04
	.ascii "s\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x5a,0x02
	.byte 0x91,0x70,0x04
	.ascii "k\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x5a,0x02
	.byte 0x91,0x6c,0x04
	.ascii "l\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x5a,0x02
	.byte 0x91,0x68,0x04
	.ascii "start\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x5a,0x02
	.byte 0x91,0x64,0x05
	.uaword .L78
	.uaword .L366
	.byte 0x05
	.uaword .L84
	.uaword .L363
	.byte 0x05
	.uaword .L85
	.uaword .L362
	.byte 0x04
	.ascii "index\0"
	.byte 0x00,0x00,0x96,0xa9,0x01,0x01,0x7e,0x03
	.byte 0x91,0xe4,0x4d,0x05
	.uaword .L87
	.uaword .L141
	.byte 0x05
	.uaword .L93
	.uaword .L140
	.byte 0x05
	.uaword .L94
	.uaword .L139
	.byte 0x04
	.ascii "s\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x82,0x03
	.byte 0x91,0xe0,0x4d,0x00,0x00,0x00,0x05
	.uaword .L165
	.uaword .L361
	.byte 0x05
	.uaword .L169
	.uaword .L358
	.byte 0x05
	.uaword .L170
	.uaword .L357
	.byte 0x05
	.uaword .L172
	.uaword .L188
	.byte 0x04
	.ascii "dst\0"
	.byte 0x00,0x00,0x33,0x5e,0x01,0x01,0x9c,0x03
	.byte 0x91,0xe0,0x4d,0x00,0x05
	.uaword .L191
	.uaword .L207
	.byte 0x04
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xd8,0x01,0x01,0xa4,0x03
	.byte 0x91,0xe0,0x4d,0x00,0x05
	.uaword .L210
	.uaword .L236
	.byte 0x04
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xdd,0x01,0x01,0xac,0x03
	.byte 0x91,0xe0,0x4d,0x00,0x05
	.uaword .L239
	.uaword .L265
	.byte 0x04
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xf0,0x01,0x01,0xb7,0x03
	.byte 0x91,0xe0,0x4d,0x00,0x05
	.uaword .L268
	.uaword .L294
	.byte 0x04
	.ascii "dst\0"
	.byte 0x00,0x00,0x95,0x9f,0x01,0x01,0xc2,0x03
	.byte 0x91,0xe0,0x4d,0x00,0x05
	.uaword .L297
	.uaword .L323
	.byte 0x04
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xf5,0x01,0x01,0xcd,0x03
	.byte 0x91,0xe0,0x4d,0x00,0x05
	.uaword .L326
	.uaword .L352
	.byte 0x04
	.ascii "dst\0"
	.byte 0x00,0x00,0x92,0xe4,0x01,0x01,0xd8,0x03
	.byte 0x91,0xe0,0x4d,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x06
	.ascii "int\0"
	.byte 0x05,0x04,0x07,0x00,0x00,0x03,0x29
	.ascii "GLint\0"
	.byte 0x03,0x08
	.ascii "HashTable\0"
	.byte 0x01,0x09,0x00,0x00,0x03,0x3c,0x06
	.ascii "unsigned\0"
	.byte 0x07,0x04,0x07,0x00,0x00,0x03,0x4d
	.ascii "GLuint\0"
	.byte 0x03,0x06
	.ascii "float\0"
	.byte 0x04,0x04,0x07,0x00,0x00,0x03,0x66
	.ascii "GLfloat\0"
	.byte 0x03,0x06
	.ascii "long\0"
	.byte 0x05,0x04,0x0a,0x00,0x00,0x03,0x30,0x10
	.byte 0x00,0x00,0x03,0x96,0x0b,0x00,0x00,0x03
	.byte 0x7d,0x03,0x00,0x0c,0x04,0x03,0x00,0x00
	.byte 0x33,0x32,0x0d
	.ascii "GL_FALSE\0"
	.byte 0x00,0x0d
	.ascii "GL_TRUE\0"
	.byte 0x01,0x0d
	.ascii "GL_BYTE\0"
	.byte 0x80,0x28,0x0d
	.ascii "GL_UNSIGNED_BYTE\0"
	.byte 0x81,0x28,0x0d
	.ascii "GL_SHORT\0"
	.byte 0x82,0x28,0x0d
	.ascii "GL_UNSIGNED_SHORT\0"
	.byte 0x83,0x28,0x0d
	.ascii "GL_INT\0"
	.byte 0x84,0x28,0x0d
	.ascii "GL_UNSIGNED_INT\0"
	.byte 0x85,0x28,0x0d
	.ascii "GL_FLOAT\0"
	.byte 0x86,0x28,0x0d
	.ascii "GL_DOUBLE\0"
	.byte 0x8a,0x28,0x0d
	.ascii "GL_2_BYTES\0"
	.byte 0x87,0x28,0x0d
	.ascii "GL_3_BYTES\0"
	.byte 0x88,0x28,0x0d
	.ascii "GL_4_BYTES\0"
	.byte 0x89,0x28,0x0d
	.ascii "GL_LINES\0"
	.byte 0x01,0x0d
	.ascii "GL_POINTS\0"
	.byte 0x00,0x0d
	.ascii "GL_LINE_STRIP\0"
	.byte 0x03,0x0d
	.ascii "GL_LINE_LOOP\0"
	.byte 0x02,0x0d
	.ascii "GL_TRIANGLES\0"
	.byte 0x04,0x0d
	.ascii "GL_TRIANGLE_STRIP\0"
	.byte 0x05,0x0d
	.ascii "GL_TRIANGLE_FAN\0"
	.byte 0x06,0x0d
	.ascii "GL_QUADS\0"
	.byte 0x07,0x0d
	.ascii "GL_QUAD_STRIP\0"
	.byte 0x08,0x0d
	.ascii "GL_POLYGON\0"
	.byte 0x09,0x0d
	.ascii "GL_EDGE_FLAG\0"
	.byte 0xc3,0x16,0x0d
	.ascii "GL_VERTEX_ARRAY\0"
	.byte 0xf4,0x80,0x02,0x0d
	.ascii "GL_NORMAL_ARRAY\0"
	.byte 0xf5,0x80,0x02,0x0d
	.ascii "GL_COLOR_ARRAY\0"
	.byte 0xf6,0x80,0x02,0x0d
	.ascii "GL_INDEX_ARRAY\0"
	.byte 0xf7,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_COORD_ARRAY\0"
	.byte 0xf8,0x80,0x02,0x0d
	.ascii "GL_EDGE_FLAG_ARRAY\0"
	.byte 0xf9,0x80,0x02,0x0d
	.ascii "GL_VERTEX_ARRAY_SIZE\0"
	.byte 0xfa,0x80,0x02,0x0d
	.ascii "GL_VERTEX_ARRAY_TYPE\0"
	.byte 0xfb,0x80,0x02,0x0d
	.ascii "GL_VERTEX_ARRAY_STRIDE\0"
	.byte 0xfc,0x80,0x02,0x0d
	.ascii "GL_NORMAL_ARRAY_TYPE\0"
	.byte 0xfe,0x80,0x02,0x0d
	.ascii "GL_NORMAL_ARRAY_STRIDE\0"
	.byte 0xff,0x80,0x02,0x0d
	.ascii "GL_COLOR_ARRAY_SIZE\0"
	.byte 0x81,0x81,0x02,0x0d
	.ascii "GL_COLOR_ARRAY_TYPE\0"
	.byte 0x82,0x81,0x02,0x0d
	.ascii "GL_COLOR_ARRAY_STRIDE\0"
	.byte 0x83,0x81,0x02,0x0d
	.ascii "GL_INDEX_ARRAY_TYPE\0"
	.byte 0x85,0x81,0x02,0x0d
	.ascii "GL_INDEX_ARRAY_STRIDE\0"
	.byte 0x86,0x81,0x02,0x0d
	.ascii "GL_TEXTURE_COORD_ARRAY_SIZE\0"
	.byte 0x88,0x81,0x02,0x0d
	.ascii "GL_TEXTURE_COORD_ARRAY_TYPE\0"
	.byte 0x89,0x81,0x02,0x0d
	.ascii "GL_TEXTURE_COORD_ARRAY_STRIDE\0"
	.byte 0x8a,0x81,0x02,0x0d
	.ascii "GL_EDGE_FLAG_ARRAY_STRIDE\0"
	.byte 0x8c,0x81,0x02,0x0d
	.ascii "GL_VERTEX_ARRAY_POINTER\0"
	.byte 0x8e,0x81,0x02,0x0d
	.ascii "GL_NORMAL_ARRAY_POINTER\0"
	.byte 0x8f,0x81,0x02,0x0d
	.ascii "GL_COLOR_ARRAY_POINTER\0"
	.byte 0x90,0x81,0x02,0x0d
	.ascii "GL_INDEX_ARRAY_POINTER\0"
	.byte 0x91,0x81,0x02,0x0d
	.ascii "GL_TEXTURE_COORD_ARRAY_POINTER\0"
	.byte 0x92,0x81,0x02,0x0d
	.ascii "GL_EDGE_FLAG_ARRAY_POINTER\0"
	.byte 0x93,0x81,0x02,0x0d
	.ascii "GL_V2F\0"
	.byte 0xa0,0xd4,0x00,0x0d
	.ascii "GL_V3F\0"
	.byte 0xa1,0xd4,0x00,0x0d
	.ascii "GL_C4UB_V2F\0"
	.byte 0xa2,0xd4,0x00,0x0d
	.ascii "GL_C4UB_V3F\0"
	.byte 0xa3,0xd4,0x00,0x0d
	.ascii "GL_C3F_V3F\0"
	.byte 0xa4,0xd4,0x00,0x0d
	.ascii "GL_N3F_V3F\0"
	.byte 0xa5,0xd4,0x00,0x0d
	.ascii "GL_C4F_N3F_V3F\0"
	.byte 0xa6,0xd4,0x00,0x0d
	.ascii "GL_T2F_V3F\0"
	.byte 0xa7,0xd4,0x00,0x0d
	.ascii "GL_T4F_V4F\0"
	.byte 0xa8,0xd4,0x00,0x0d
	.ascii "GL_T2F_C4UB_V3F\0"
	.byte 0xa9,0xd4,0x00,0x0d
	.ascii "GL_T2F_C3F_V3F\0"
	.byte 0xaa,0xd4,0x00,0x0d
	.ascii "GL_T2F_N3F_V3F\0"
	.byte 0xab,0xd4,0x00,0x0d
	.ascii "GL_T2F_C4F_N3F_V3F\0"
	.byte 0xac,0xd4,0x00,0x0d
	.ascii "GL_T4F_C4F_N3F_V4F\0"
	.byte 0xad,0xd4,0x00,0x0d
	.ascii "GL_MATRIX_MODE\0"
	.byte 0xa0,0x17,0x0d
	.ascii "GL_MODELVIEW\0"
	.byte 0x80,0x2e,0x0d
	.ascii "GL_PROJECTION\0"
	.byte 0x81,0x2e,0x0d
	.ascii "GL_TEXTURE\0"
	.byte 0x82,0x2e,0x0d
	.ascii "GL_POINT_SMOOTH\0"
	.byte 0x90,0x16,0x0d
	.ascii "GL_POINT_SIZE\0"
	.byte 0x91,0x16,0x0d
	.ascii "GL_POINT_SIZE_GRANULARITY\0"
	.byte 0x93,0x16,0x0d
	.ascii "GL_POINT_SIZE_RANGE\0"
	.byte 0x92,0x16,0x0d
	.ascii "GL_LINE_SMOOTH\0"
	.byte 0xa0,0x16,0x0d
	.ascii "GL_LINE_STIPPLE\0"
	.byte 0xa4,0x16,0x0d
	.ascii "GL_LINE_STIPPLE_PATTERN\0"
	.byte 0xa5,0x16,0x0d
	.ascii "GL_LINE_STIPPLE_REPEAT\0"
	.byte 0xa6,0x16,0x0d
	.ascii "GL_LINE_WIDTH\0"
	.byte 0xa1,0x16,0x0d
	.ascii "GL_LINE_WIDTH_GRANULARITY\0"
	.byte 0xa3,0x16,0x0d
	.ascii "GL_LINE_WIDTH_RANGE\0"
	.byte 0xa2,0x16,0x0d
	.ascii "GL_POINT\0"
	.byte 0x80,0x36,0x0d
	.ascii "GL_LINE\0"
	.byte 0x81,0x36,0x0d
	.ascii "GL_FILL\0"
	.byte 0x82,0x36,0x0d
	.ascii "GL_CCW\0"
	.byte 0x81,0x12,0x0d
	.ascii "GL_CW\0"
	.byte 0x80,0x12,0x0d
	.ascii "GL_FRONT\0"
	.byte 0x84,0x08,0x0d
	.ascii "GL_BACK\0"
	.byte 0x85,0x08,0x0d
	.ascii "GL_CULL_FACE\0"
	.byte 0xc4,0x16,0x0d
	.ascii "GL_CULL_FACE_MODE\0"
	.byte 0xc5,0x16,0x0d
	.ascii "GL_POLYGON_SMOOTH\0"
	.byte 0xc1,0x16,0x0d
	.ascii "GL_POLYGON_STIPPLE\0"
	.byte 0xc2,0x16,0x0d
	.ascii "GL_FRONT_FACE\0"
	.byte 0xc6,0x16,0x0d
	.ascii "GL_POLYGON_MODE\0"
	.byte 0xc0,0x16,0x0d
	.ascii "GL_POLYGON_OFFSET_FACTOR\0"
	.byte 0xb8,0x80,0x02,0x0d
	.ascii "GL_POLYGON_OFFSET_UNITS\0"
	.byte 0x80,0xd4,0x00,0x0d
	.ascii "GL_POLYGON_OFFSET_POINT\0"
	.byte 0x81,0xd4,0x00,0x0d
	.ascii "GL_POLYGON_OFFSET_LINE\0"
	.byte 0x82,0xd4,0x00,0x0d
	.ascii "GL_POLYGON_OFFSET_FILL\0"
	.byte 0xb7,0x80,0x02,0x0d
	.ascii "GL_COMPILE\0"
	.byte 0x80,0x26,0x0d
	.ascii "GL_COMPILE_AND_EXECUTE\0"
	.byte 0x81,0x26,0x0d
	.ascii "GL_LIST_BASE\0"
	.byte 0xb2,0x16,0x0d
	.ascii "GL_LIST_INDEX\0"
	.byte 0xb3,0x16,0x0d
	.ascii "GL_LIST_MODE\0"
	.byte 0xb0,0x16,0x0d
	.ascii "GL_NEVER\0"
	.byte 0x80,0x04,0x0d
	.ascii "GL_LESS\0"
	.byte 0x81,0x04,0x0d
	.ascii "GL_GEQUAL\0"
	.byte 0x86,0x04,0x0d
	.ascii "GL_LEQUAL\0"
	.byte 0x83,0x04,0x0d
	.ascii "GL_GREATER\0"
	.byte 0x84,0x04,0x0d
	.ascii "GL_NOTEQUAL\0"
	.byte 0x85,0x04,0x0d
	.ascii "GL_EQUAL\0"
	.byte 0x82,0x04,0x0d
	.ascii "GL_ALWAYS\0"
	.byte 0x87,0x04,0x0d
	.ascii "GL_DEPTH_TEST\0"
	.byte 0xf1,0x16,0x0d
	.ascii "GL_DEPTH_BITS\0"
	.byte 0xd6,0x1a,0x0d
	.ascii "GL_DEPTH_CLEAR_VALUE\0"
	.byte 0xf3,0x16,0x0d
	.ascii "GL_DEPTH_FUNC\0"
	.byte 0xf4,0x16,0x0d
	.ascii "GL_DEPTH_RANGE\0"
	.byte 0xf0,0x16,0x0d
	.ascii "GL_DEPTH_WRITEMASK\0"
	.byte 0xf2,0x16,0x0d
	.ascii "GL_DEPTH_COMPONENT\0"
	.byte 0x82,0x32,0x0d
	.ascii "GL_LIGHTING\0"
	.byte 0xd0,0x16,0x0d
	.ascii "GL_LIGHT0\0"
	.byte 0x80,0x80,0x01,0x0d
	.ascii "GL_LIGHT1\0"
	.byte 0x81,0x80,0x01,0x0d
	.ascii "GL_LIGHT2\0"
	.byte 0x82,0x80,0x01,0x0d
	.ascii "GL_LIGHT3\0"
	.byte 0x83,0x80,0x01,0x0d
	.ascii "GL_LIGHT4\0"
	.byte 0x84,0x80,0x01,0x0d
	.ascii "GL_LIGHT5\0"
	.byte 0x85,0x80,0x01,0x0d
	.ascii "GL_LIGHT6\0"
	.byte 0x86,0x80,0x01,0x0d
	.ascii "GL_LIGHT7\0"
	.byte 0x87,0x80,0x01,0x0d
	.ascii "GL_SPOT_EXPONENT\0"
	.byte 0x85,0x24,0x0d
	.ascii "GL_SPOT_CUTOFF\0"
	.byte 0x86,0x24,0x0d
	.ascii "GL_CONSTANT_ATTENUATION\0"
	.byte 0x87,0x24,0x0d
	.ascii "GL_LINEAR_ATTENUATION\0"
	.byte 0x88,0x24,0x0d
	.ascii "GL_QUADRATIC_ATTENUATION\0"
	.byte 0x89,0x24,0x0d
	.ascii "GL_AMBIENT\0"
	.byte 0x80,0x24,0x0d
	.ascii "GL_DIFFUSE\0"
	.byte 0x81,0x24,0x0d
	.ascii "GL_SPECULAR\0"
	.byte 0x82,0x24,0x0d
	.ascii "GL_SHININESS\0"
	.byte 0x81,0x2c,0x0d
	.ascii "GL_EMISSION\0"
	.byte 0x80,0x2c,0x0d
	.ascii "GL_POSITION\0"
	.byte 0x83,0x24,0x0d
	.ascii "GL_SPOT_DIRECTION\0"
	.byte 0x84,0x24,0x0d
	.ascii "GL_AMBIENT_AND_DIFFUSE\0"
	.byte 0x82,0x2c,0x0d
	.ascii "GL_COLOR_INDEXES\0"
	.byte 0x83,0x2c,0x0d
	.ascii "GL_LIGHT_MODEL_TWO_SIDE\0"
	.byte 0xd2,0x16,0x0d
	.ascii "GL_LIGHT_MODEL_LOCAL_VIEWER\0"
	.byte 0xd1,0x16,0x0d
	.ascii "GL_LIGHT_MODEL_AMBIENT\0"
	.byte 0xd3,0x16,0x0d
	.ascii "GL_FRONT_AND_BACK\0"
	.byte 0x88,0x08,0x0d
	.ascii "GL_SHADE_MODEL\0"
	.byte 0xd4,0x16,0x0d
	.ascii "GL_FLAT\0"
	.byte 0x80,0x3a,0x0d
	.ascii "GL_SMOOTH\0"
	.byte 0x81,0x3a,0x0d
	.ascii "GL_COLOR_MATERIAL\0"
	.byte 0xd7,0x16,0x0d
	.ascii "GL_COLOR_MATERIAL_FACE\0"
	.byte 0xd5,0x16,0x0d
	.ascii "GL_COLOR_MATERIAL_PARAMETER\0"
	.byte 0xd6,0x16,0x0d
	.ascii "GL_NORMALIZE\0"
	.byte 0xa1,0x17,0x0d
	.ascii "GL_CLIP_PLANE0\0"
	.byte 0x80,0xe0,0x00,0x0d
	.ascii "GL_CLIP_PLANE1\0"
	.byte 0x81,0xe0,0x00,0x0d
	.ascii "GL_CLIP_PLANE2\0"
	.byte 0x82,0xe0,0x00,0x0d
	.ascii "GL_CLIP_PLANE3\0"
	.byte 0x83,0xe0,0x00,0x0d
	.ascii "GL_CLIP_PLANE4\0"
	.byte 0x84,0xe0,0x00,0x0d
	.ascii "GL_CLIP_PLANE5\0"
	.byte 0x85,0xe0,0x00,0x0d
	.ascii "GL_ACCUM_RED_BITS\0"
	.byte 0xd8,0x1a,0x0d
	.ascii "GL_ACCUM_GREEN_BITS\0"
	.byte 0xd9,0x1a,0x0d
	.ascii "GL_ACCUM_BLUE_BITS\0"
	.byte 0xda,0x1a,0x0d
	.ascii "GL_ACCUM_ALPHA_BITS\0"
	.byte 0xdb,0x1a,0x0d
	.ascii "GL_ACCUM_CLEAR_VALUE\0"
	.byte 0x80,0x17,0x0d
	.ascii "GL_ACCUM\0"
	.byte 0x80,0x02,0x0d
	.ascii "GL_ADD\0"
	.byte 0x84,0x02,0x0d
	.ascii "GL_LOAD\0"
	.byte 0x81,0x02,0x0d
	.ascii "GL_MULT\0"
	.byte 0x83,0x02
	.byte 0x0d
	.ascii "GL_RETURN\0"
	.byte 0x82,0x02,0x0d
	.ascii "GL_ALPHA_TEST\0"
	.byte 0xc0,0x17,0x0d
	.ascii "GL_ALPHA_TEST_REF\0"
	.byte 0xc2,0x17,0x0d
	.ascii "GL_ALPHA_TEST_FUNC\0"
	.byte 0xc1,0x17,0x0d
	.ascii "GL_BLEND\0"
	.byte 0xe2,0x17,0x0d
	.ascii "GL_BLEND_SRC\0"
	.byte 0xe1,0x17,0x0d
	.ascii "GL_BLEND_DST\0"
	.byte 0xe0,0x17,0x0d
	.ascii "GL_ZERO\0"
	.byte 0x00,0x0d
	.ascii "GL_ONE\0"
	.byte 0x01,0x0d
	.ascii "GL_SRC_COLOR\0"
	.byte 0x80,0x06,0x0d
	.ascii "GL_ONE_MINUS_SRC_COLOR\0"
	.byte 0x81,0x06,0x0d
	.ascii "GL_DST_COLOR\0"
	.byte 0x86,0x06,0x0d
	.ascii "GL_ONE_MINUS_DST_COLOR\0"
	.byte 0x87,0x06,0x0d
	.ascii "GL_SRC_ALPHA\0"
	.byte 0x82,0x06,0x0d
	.ascii "GL_ONE_MINUS_SRC_ALPHA\0"
	.byte 0x83,0x06,0x0d
	.ascii "GL_DST_ALPHA\0"
	.byte 0x84,0x06,0x0d
	.ascii "GL_ONE_MINUS_DST_ALPHA\0"
	.byte 0x85,0x06,0x0d
	.ascii "GL_SRC_ALPHA_SATURATE\0"
	.byte 0x88,0x06,0x0d
	.ascii "GL_CONSTANT_COLOR\0"
	.byte 0x81,0x80,0x02,0x0d
	.ascii "GL_ONE_MINUS_CONSTANT_COLOR\0"
	.byte 0x82,0x80,0x02,0x0d
	.ascii "GL_CONSTANT_ALPHA\0"
	.byte 0x83,0x80,0x02,0x0d
	.ascii "GL_ONE_MINUS_CONSTANT_ALPHA\0"
	.byte 0x84,0x80,0x02,0x0d
	.ascii "GL_FEEDBACK\0"
	.byte 0x81,0x38,0x0d
	.ascii "GL_RENDER\0"
	.byte 0x80,0x38,0x0d
	.ascii "GL_SELECT\0"
	.byte 0x82,0x38,0x0d
	.ascii "GL_2D\0"
	.byte 0x80,0x0c,0x0d
	.ascii "GL_3D\0"
	.byte 0x81,0x0c,0x0d
	.ascii "GL_3D_COLOR\0"
	.byte 0x82,0x0c,0x0d
	.ascii "GL_3D_COLOR_TEXTURE\0"
	.byte 0x83,0x0c,0x0d
	.ascii "GL_4D_COLOR_TEXTURE\0"
	.byte 0x84,0x0c,0x0d
	.ascii "GL_POINT_TOKEN\0"
	.byte 0x81,0x0e,0x0d
	.ascii "GL_LINE_TOKEN\0"
	.byte 0x82,0x0e,0x0d
	.ascii "GL_LINE_RESET_TOKEN\0"
	.byte 0x87,0x0e,0x0d
	.ascii "GL_POLYGON_TOKEN\0"
	.byte 0x83,0x0e,0x0d
	.ascii "GL_BITMAP_TOKEN\0"
	.byte 0x84,0x0e,0x0d
	.ascii "GL_DRAW_PIXEL_TOKEN\0"
	.byte 0x85,0x0e,0x0d
	.ascii "GL_COPY_PIXEL_TOKEN\0"
	.byte 0x86,0x0e,0x0d
	.ascii "GL_PASS_THROUGH_TOKEN\0"
	.byte 0x80,0x0e,0x0d
	.ascii "GL_FEEDBACK_BUFFER_POINTER\0"
	.byte 0xf0,0x1b,0x0d
	.ascii "GL_FEEDBACK_BUFFER_SIZE\0"
	.byte 0xf1,0x1b,0x0d
	.ascii "GL_FEEDBACK_BUFFER_TYPE\0"
	.byte 0xf2,0x1b,0x0d
	.ascii "GL_FOG\0"
	.byte 0xe0,0x16,0x0d
	.ascii "GL_FOG_MODE\0"
	.byte 0xe5,0x16,0x0d
	.ascii "GL_FOG_DENSITY\0"
	.byte 0xe2,0x16,0x0d
	.ascii "GL_FOG_COLOR\0"
	.byte 0xe6,0x16,0x0d
	.ascii "GL_FOG_INDEX\0"
	.byte 0xe1,0x16,0x0d
	.ascii "GL_FOG_START\0"
	.byte 0xe3,0x16,0x0d
	.ascii "GL_FOG_END\0"
	.byte 0xe4,0x16,0x0d
	.ascii "GL_LINEAR\0"
	.byte 0x81,0xcc,0x00,0x0d
	.ascii "GL_EXP\0"
	.byte 0x80,0x10,0x0d
	.ascii "GL_EXP2\0"
	.byte 0x81,0x10,0x0d
	.ascii "GL_LOGIC_OP\0"
	.byte 0xf1,0x17,0x0d
	.ascii "GL_INDEX_LOGIC_OP\0"
	.byte 0xf1,0x17,0x0d
	.ascii "GL_COLOR_LOGIC_OP\0"
	.byte 0xf2,0x17,0x0d
	.ascii "GL_LOGIC_OP_MODE\0"
	.byte 0xf0,0x17,0x0d
	.ascii "GL_CLEAR\0"
	.byte 0x80,0x2a,0x0d
	.ascii "GL_SET\0"
	.byte 0x8f,0x2a,0x0d
	.ascii "GL_COPY\0"
	.byte 0x83,0x2a,0x0d
	.ascii "GL_COPY_INVERTED\0"
	.byte 0x8c,0x2a,0x0d
	.ascii "GL_NOOP\0"
	.byte 0x85,0x2a,0x0d
	.ascii "GL_INVERT\0"
	.byte 0x8a,0x2a,0x0d
	.ascii "GL_AND\0"
	.byte 0x81,0x2a,0x0d
	.ascii "GL_NAND\0"
	.byte 0x8e,0x2a,0x0d
	.ascii "GL_OR\0"
	.byte 0x87,0x2a,0x0d
	.ascii "GL_NOR\0"
	.byte 0x88,0x2a,0x0d
	.ascii "GL_XOR\0"
	.byte 0x86,0x2a,0x0d
	.ascii "GL_EQUIV\0"
	.byte 0x89,0x2a,0x0d
	.ascii "GL_AND_REVERSE\0"
	.byte 0x82,0x2a,0x0d
	.ascii "GL_AND_INVERTED\0"
	.byte 0x84,0x2a,0x0d
	.ascii "GL_OR_REVERSE\0"
	.byte 0x8b,0x2a,0x0d
	.ascii "GL_OR_INVERTED\0"
	.byte 0x8d,0x2a,0x0d
	.ascii "GL_STENCIL_TEST\0"
	.byte 0x90,0x17,0x0d
	.ascii "GL_STENCIL_WRITEMASK\0"
	.byte 0x98,0x17,0x0d
	.ascii "GL_STENCIL_BITS\0"
	.byte 0xd7,0x1a,0x0d
	.ascii "GL_STENCIL_FUNC\0"
	.byte 0x92,0x17,0x0d
	.ascii "GL_STENCIL_VALUE_MASK\0"
	.byte 0x93,0x17,0x0d
	.ascii "GL_STENCIL_REF\0"
	.byte 0x97,0x17,0x0d
	.ascii "GL_STENCIL_FAIL\0"
	.byte 0x94,0x17,0x0d
	.ascii "GL_STENCIL_PASS_DEPTH_PASS\0"
	.byte 0x96,0x17,0x0d
	.ascii "GL_STENCIL_PASS_DEPTH_FAIL\0"
	.byte 0x95,0x17,0x0d
	.ascii "GL_STENCIL_CLEAR_VALUE\0"
	.byte 0x91,0x17,0x0d
	.ascii "GL_STENCIL_INDEX\0"
	.byte 0x81,0x32,0x0d
	.ascii "GL_KEEP\0"
	.byte 0x80,0x3c,0x0d
	.ascii "GL_REPLACE\0"
	.byte 0x81,0x3c,0x0d
	.ascii "GL_INCR\0"
	.byte 0x82,0x3c,0x0d
	.ascii "GL_DECR\0"
	.byte 0x83,0x3c,0x0d
	.ascii "GL_NONE\0"
	.byte 0x00,0x0d
	.ascii "GL_LEFT\0"
	.byte 0x86,0x08,0x0d
	.ascii "GL_RIGHT\0"
	.byte 0x87,0x08,0x0d
	.ascii "GL_FRONT_LEFT\0"
	.byte 0x80,0x08,0x0d
	.ascii "GL_FRONT_RIGHT\0"
	.byte 0x81,0x08,0x0d
	.ascii "GL_BACK_LEFT\0"
	.byte 0x82,0x08,0x0d
	.ascii "GL_BACK_RIGHT\0"
	.byte 0x83,0x08,0x0d
	.ascii "GL_AUX0\0"
	.byte 0x89,0x08,0x0d
	.ascii "GL_AUX1\0"
	.byte 0x8a,0x08,0x0d
	.ascii "GL_AUX2\0"
	.byte 0x8b,0x08,0x0d
	.ascii "GL_AUX3\0"
	.byte 0x8c,0x08,0x0d
	.ascii "GL_COLOR_INDEX\0"
	.byte 0x80,0x32,0x0d
	.ascii "GL_RED\0"
	.byte 0x83,0x32,0x0d
	.ascii "GL_GREEN\0"
	.byte 0x84,0x32,0x0d
	.ascii "GL_BLUE\0"
	.byte 0x85,0x32,0x0d
	.ascii "GL_ALPHA\0"
	.byte 0x86,0x32,0x0d
	.ascii "GL_LUMINANCE\0"
	.byte 0x89,0x32,0x0d
	.ascii "GL_LUMINANCE_ALPHA\0"
	.byte 0x8a,0x32,0x0d
	.ascii "GL_ALPHA_BITS\0"
	.byte 0xd5,0x1a,0x0d
	.ascii "GL_RED_BITS\0"
	.byte 0xd2,0x1a,0x0d
	.ascii "GL_GREEN_BITS\0"
	.byte 0xd3,0x1a,0x0d
	.ascii "GL_BLUE_BITS\0"
	.byte 0xd4,0x1a,0x0d
	.ascii "GL_INDEX_BITS\0"
	.byte 0xd1,0x1a,0x0d
	.ascii "GL_SUBPIXEL_BITS\0"
	.byte 0xd0,0x1a,0x0d
	.ascii "GL_AUX_BUFFERS\0"
	.byte 0x80,0x18,0x0d
	.ascii "GL_READ_BUFFER\0"
	.byte 0x82,0x18,0x0d
	.ascii "GL_DRAW_BUFFER\0"
	.byte 0x81,0x18,0x0d
	.ascii "GL_DOUBLEBUFFER\0"
	.byte 0xb2,0x18,0x0d
	.ascii "GL_STEREO\0"
	.byte 0xb3,0x18,0x0d
	.ascii "GL_BITMAP\0"
	.byte 0x80,0x34,0x0d
	.ascii "GL_COLOR\0"
	.byte 0x80,0x30,0x0d
	.ascii "GL_DEPTH\0"
	.byte 0x81,0x30,0x0d
	.ascii "GL_STENCIL\0"
	.byte 0x82,0x30,0x0d
	.ascii "GL_DITHER\0"
	.byte 0xd0,0x17,0x0d
	.ascii "GL_RGB\0"
	.byte 0x87,0x32,0x0d
	.ascii "GL_RGBA\0"
	.byte 0x88,0x32,0x0d
	.ascii "GL_MAX_LIST_NESTING\0"
	.byte 0xb1,0x16,0x0d
	.ascii "GL_MAX_ATTRIB_STACK_DEPTH\0"
	.byte 0xb5,0x1a,0x0d
	.ascii "GL_MAX_MODELVIEW_STACK_DEPTH\0"
	.byte 0xb6,0x1a,0x0d
	.ascii "GL_MAX_NAME_STACK_DEPTH\0"
	.byte 0xb7,0x1a,0x0d
	.ascii "GL_MAX_PROJECTION_STACK_DEPTH\0"
	.byte 0xb8,0x1a,0x0d
	.ascii "GL_MAX_TEXTURE_STACK_DEPTH\0"
	.byte 0xb9,0x1a,0x0d
	.ascii "GL_MAX_EVAL_ORDER\0"
	.byte 0xb0,0x1a,0x0d
	.ascii "GL_MAX_LIGHTS\0"
	.byte 0xb1,0x1a,0x0d
	.ascii "GL_MAX_CLIP_PLANES\0"
	.byte 0xb2,0x1a,0x0d
	.ascii "GL_MAX_TEXTURE_SIZE\0"
	.byte 0xb3,0x1a,0x0d
	.ascii "GL_MAX_PIXEL_MAP_TABLE\0"
	.byte 0xb4,0x1a,0x0d
	.ascii "GL_MAX_VIEWPORT_DIMS\0"
	.byte 0xba,0x1a,0x0d
	.ascii "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH\0"
	.byte 0xbb,0x1a,0x0d
	.ascii "GL_ATTRIB_STACK_DEPTH\0"
	.byte 0xb0,0x17,0x0d
	.ascii "GL_CLIENT_ATTRIB_STACK_DEPTH\0"
	.byte 0xb1,0x17,0x0d
	.ascii "GL_COLOR_CLEAR_VALUE\0"
	.byte 0xa2,0x18,0x0d
	.ascii "GL_COLOR_WRITEMASK\0"
	.byte 0xa3,0x18,0x0d
	.ascii "GL_CURRENT_INDEX\0"
	.byte 0x81,0x16,0x0d
	.ascii "GL_CURRENT_COLOR\0"
	.byte 0x80,0x16,0x0d
	.ascii "GL_CURRENT_NORMAL\0"
	.byte 0x82,0x16,0x0d
	.ascii "GL_CURRENT_RASTER_COLOR\0"
	.byte 0x84,0x16,0x0d
	.ascii "GL_CURRENT_RASTER_DISTANCE\0"
	.byte 0x89,0x16,0x0d
	.ascii "GL_CURRENT_RASTER_INDEX\0"
	.byte 0x85,0x16,0x0d
	.ascii "GL_CURRENT_RASTER_POSITION\0"
	.byte 0x87,0x16,0x0d
	.ascii "GL_CURRENT_RASTER_TEXTURE_COORDS\0"
	.byte 0x86,0x16,0x0d
	.ascii "GL_CURRENT_RASTER_POSITION_VALID\0"
	.byte 0x88,0x16,0x0d
	.ascii "GL_CURRENT_TEXTURE_COORDS\0"
	.byte 0x83,0x16,0x0d
	.ascii "GL_INDEX_CLEAR_VALUE\0"
	.byte 0xa0,0x18,0x0d
	.ascii "GL_INDEX_MODE\0"
	.byte 0xb0,0x18,0x0d
	.ascii "GL_INDEX_WRITEMASK\0"
	.byte 0xa1,0x18,0x0d
	.ascii "GL_MODELVIEW_MATRIX\0"
	.byte 0xa6,0x17,0x0d
	.ascii "GL_MODELVIEW_STACK_DEPTH\0"
	.byte 0xa3,0x17,0x0d
	.ascii "GL_NAME_STACK_DEPTH\0"
	.byte 0xf0,0x1a,0x0d
	.ascii "GL_PROJECTION_MATRIX\0"
	.byte 0xa7,0x17,0x0d
	.ascii "GL_PROJECTION_STACK_DEPTH\0"
	.byte 0xa4,0x17,0x0d
	.ascii "GL_RENDER_MODE\0"
	.byte 0xc0,0x18,0x0d
	.ascii "GL_RGBA_MODE\0"
	.byte 0xb1,0x18,0x0d
	.ascii "GL_TEXTURE_MATRIX\0"
	.byte 0xa8,0x17,0x0d
	.ascii "GL_TEXTURE_STACK_DEPTH\0"
	.byte 0xa5,0x17,0x0d
	.ascii "GL_VIEWPORT\0"
	.byte 0xa2,0x17,0x0d
	.ascii "GL_AUTO_NORMAL\0"
	.byte 0x80,0x1b,0x0d
	.ascii "GL_MAP1_COLOR_4\0"
	.byte 0x90,0x1b,0x0d
	.ascii "GL_MAP1_GRID_DOMAIN\0"
	.byte 0xd0,0x1b,0x0d
	.ascii "GL_MAP1_GRID_SEGMENTS\0"
	.byte 0xd1,0x1b,0x0d
	.ascii "GL_MAP1_INDEX\0"
	.byte 0x91,0x1b,0x0d
	.ascii "GL_MAP1_NORMAL\0"
	.byte 0x92,0x1b,0x0d
	.ascii "GL_MAP1_TEXTURE_COORD_1\0"
	.byte 0x93,0x1b,0x0d
	.ascii "GL_MAP1_TEXTURE_COORD_2\0"
	.byte 0x94,0x1b,0x0d
	.ascii "GL_MAP1_TEXTURE_COORD_3\0"
	.byte 0x95,0x1b,0x0d
	.ascii "GL_MAP1_TEXTURE_COORD_4\0"
	.byte 0x96,0x1b,0x0d
	.ascii "GL_MAP1_VERTEX_3\0"
	.byte 0x97,0x1b,0x0d
	.ascii "GL_MAP1_VERTEX_4\0"
	.byte 0x98,0x1b,0x0d
	.ascii "GL_MAP2_COLOR_4\0"
	.byte 0xb0,0x1b,0x0d
	.ascii "GL_MAP2_GRID_DOMAIN\0"
	.byte 0xd2,0x1b,0x0d
	.ascii "GL_MAP2_GRID_SEGMENTS\0"
	.byte 0xd3,0x1b,0x0d
	.ascii "GL_MAP2_INDEX\0"
	.byte 0xb1,0x1b,0x0d
	.ascii "GL_MAP2_NORMAL\0"
	.byte 0xb2,0x1b,0x0d
	.ascii "GL_MAP2_TEXTURE_COORD_1\0"
	.byte 0xb3,0x1b,0x0d
	.ascii "GL_MAP2_TEXTURE_COORD_2\0"
	.byte 0xb4,0x1b,0x0d
	.ascii "GL_MAP2_TEXTURE_COORD_3\0"
	.byte 0xb5,0x1b,0x0d
	.ascii "GL_MAP2_TEXTURE_COORD_4\0"
	.byte 0xb6,0x1b,0x0d
	.ascii "GL_MAP2_VERTEX_3\0"
	.byte 0xb7,0x1b,0x0d
	.ascii "GL_MAP2_VERTEX_4\0"
	.byte 0xb8,0x1b,0x0d
	.ascii "GL_COEFF\0"
	.byte 0x80,0x14,0x0d
	.ascii "GL_DOMAIN\0"
	.byte 0x82,0x14,0x0d
	.ascii "GL_ORDER\0"
	.byte 0x81,0x14,0x0d
	.ascii "GL_FOG_HINT\0"
	.byte 0xd4,0x18,0x0d
	.ascii "GL_LINE_SMOOTH_HINT\0"
	.byte 0xd2,0x18,0x0d
	.ascii "GL_PERSPECTIVE_CORRECTION_HINT\0"
	.byte 0xd0,0x18,0x0d
	.ascii "GL_POINT_SMOOTH_HINT\0"
	.byte 0xd1,0x18,0x0d
	.ascii "GL_POLYGON_SMOOTH_HINT\0"
	.byte 0xd3,0x18,0x0d
	.ascii "GL_DONT_CARE\0"
	.byte 0x80,0x22,0x0d
	.ascii "GL_FASTEST\0"
	.byte 0x81,0x22,0x0d
	.ascii "GL_NICEST\0"
	.byte 0x82,0x22,0x0d
	.ascii "GL_SCISSOR_TEST\0"
	.byte 0x91,0x18,0x0d
	.ascii "GL_SCISSOR_BOX\0"
	.byte 0x90,0x18,0x0d
	.ascii "GL_MAP_COLOR\0"
	.byte 0x90,0x1a,0x0d
	.ascii "GL_MAP_STENCIL\0"
	.byte 0x91,0x1a,0x0d
	.ascii "GL_INDEX_SHIFT\0"
	.byte 0x92,0x1a,0x0d
	.ascii "GL_INDEX_OFFSET\0"
	.byte 0x93,0x1a,0x0d
	.ascii "GL_RED_SCALE\0"
	.byte 0x94,0x1a,0x0d
	.ascii "GL_RED_BIAS\0"
	.byte 0x95,0x1a,0x0d
	.ascii "GL_GREEN_SCALE\0"
	.byte 0x98,0x1a,0x0d
	.ascii "GL_GREEN_BIAS\0"
	.byte 0x99,0x1a,0x0d
	.ascii "GL_BLUE_SCALE\0"
	.byte 0x9a,0x1a,0x0d
	.ascii "GL_BLUE_BIAS\0"
	.byte 0x9b,0x1a,0x0d
	.ascii "GL_ALPHA_SCALE\0"
	.byte 0x9c,0x1a,0x0d
	.ascii "GL_ALPHA_BIAS\0"
	.byte 0x9d,0x1a,0x0d
	.ascii "GL_DEPTH_SCALE\0"
	.byte 0x9e,0x1a,0x0d
	.ascii "GL_DEPTH_BIAS\0"
	.byte 0x9f,0x1a,0x0d
	.ascii "GL_PIXEL_MAP_S_TO_S_SIZE\0"
	.byte 0xb1,0x19,0x0d
	.ascii "GL_PIXEL_MAP_I_TO_I_SIZE\0"
	.byte 0xb0,0x19,0x0d
	.ascii "GL_PIXEL_MAP_I_TO_R_SIZE\0"
	.byte 0xb2,0x19,0x0d
	.ascii "GL_PIXEL_MAP_I_TO_G_SIZE\0"
	.byte 0xb3,0x19,0x0d
	.ascii "GL_PIXEL_MAP_I_TO_B_SIZE\0"
	.byte 0xb4,0x19,0x0d
	.ascii "GL_PIXEL_MAP_I_TO_A_SIZE\0"
	.byte 0xb5,0x19,0x0d
	.ascii "GL_PIXEL_MAP_R_TO_R_SIZE\0"
	.byte 0xb6,0x19,0x0d
	.ascii "GL_PIXEL_MAP_G_TO_G_SIZE\0"
	.byte 0xb7,0x19,0x0d
	.ascii "GL_PIXEL_MAP_B_TO_B_SIZE\0"
	.byte 0xb8,0x19,0x0d
	.ascii "GL_PIXEL_MAP_A_TO_A_SIZE\0"
	.byte 0xb9,0x19,0x0d
	.ascii "GL_PIXEL_MAP_S_TO_S\0"
	.byte 0xf1,0x18,0x0d
	.ascii "GL_PIXEL_MAP_I_TO_I\0"
	.byte 0xf0,0x18,0x0d
	.ascii "GL_PIXEL_MAP_I_TO_R\0"
	.byte 0xf2,0x18,0x0d
	.ascii "GL_PIXEL_MAP_I_TO_G\0"
	.byte 0xf3,0x18,0x0d
	.ascii "GL_PIXEL_MAP_I_TO_B\0"
	.byte 0xf4,0x18,0x0d
	.ascii "GL_PIXEL_MAP_I_TO_A\0"
	.byte 0xf5,0x18,0x0d
	.ascii "GL_PIXEL_MAP_R_TO_R\0"
	.byte 0xf6,0x18,0x0d
	.ascii "GL_PIXEL_MAP_G_TO_G\0"
	.byte 0xf7,0x18,0x0d
	.ascii "GL_PIXEL_MAP_B_TO_B\0"
	.byte 0xf8,0x18,0x0d
	.ascii "GL_PIXEL_MAP_A_TO_A\0"
	.byte 0xf9,0x18,0x0d
	.ascii "GL_PACK_ALIGNMENT\0"
	.byte 0x85,0x1a,0x0d
	.ascii "GL_PACK_LSB_FIRST\0"
	.byte 0x81,0x1a,0x0d
	.ascii "GL_PACK_ROW_LENGTH\0"
	.byte 0x82,0x1a,0x0d
	.ascii "GL_PACK_SKIP_PIXELS\0"
	.byte 0x84,0x1a,0x0d
	.ascii "GL_PACK_SKIP_ROWS\0"
	.byte 0x83,0x1a,0x0d
	.ascii "GL_PACK_SWAP_BYTES\0"
	.byte 0x80,0x1a,0x0d
	.ascii "GL_UNPACK_ALIGNMENT\0"
	.byte 0xf5,0x19,0x0d
	.ascii "GL_UNPACK_LSB_FIRST\0"
	.byte 0xf1,0x19,0x0d
	.ascii "GL_UNPACK_ROW_LENGTH\0"
	.byte 0xf2,0x19,0x0d
	.ascii "GL_UNPACK_SKIP_PIXELS\0"
	.byte 0xf4,0x19,0x0d
	.ascii "GL_UNPACK_SKIP_ROWS\0"
	.byte 0xf3,0x19,0x0d
	.ascii "GL_UNPACK_SWAP_BYTES\0"
	.byte 0xf0,0x19,0x0d
	.ascii "GL_ZOOM_X\0"
	.byte 0x96,0x1a,0x0d
	.ascii "GL_ZOOM_Y\0"
	.byte 0x97,0x1a,0x0d
	.ascii "GL_TEXTURE_ENV\0"
	.byte 0x80,0xc6,0x00,0x0d
	.ascii "GL_TEXTURE_ENV_MODE\0"
	.byte 0x80,0xc4,0x00,0x0d
	.ascii "GL_TEXTURE_1D\0"
	.byte 0xe0,0x1b,0x0d
	.ascii "GL_TEXTURE_2D\0"
	.byte 0xe1,0x1b,0x0d
	.ascii "GL_TEXTURE_WRAP_S\0"
	.byte 0x82,0xd0,0x00,0x0d
	.ascii "GL_TEXTURE_WRAP_T\0"
	.byte 0x83,0xd0,0x00,0x0d
	.ascii "GL_TEXTURE_MAG_FILTER\0"
	.byte 0x80,0xd0,0x00,0x0d
	.ascii "GL_TEXTURE_MIN_FILTER\0"
	.byte 0x81,0xd0,0x00,0x0d
	.ascii "GL_TEXTURE_ENV_COLOR\0"
	.byte 0x81,0xc4,0x00,0x0d
	.ascii "GL_TEXTURE_GEN_S\0"
	.byte 0xe0,0x18,0x0d
	.ascii "GL_TEXTURE_GEN_T\0"
	.byte 0xe1,0x18,0x0d
	.ascii "GL_TEXTURE_GEN_MODE\0"
	.byte 0x80,0xca,0x00,0x0d
	.ascii "GL_TEXTURE_BORDER_COLOR\0"
	.byte 0x84,0x20,0x0d
	.ascii "GL_TEXTURE_WIDTH\0"
	.byte 0x80,0x20,0x0d
	.ascii "GL_TEXTURE_HEIGHT\0"
	.byte 0x81,0x20,0x0d
	.ascii "GL_TEXTURE_BORDER\0"
	.byte 0x85,0x20,0x0d
	.ascii "GL_TEXTURE_COMPONENTS\0"
	.byte 0x83,0x20,0x0d
	.ascii "GL_TEXTURE_RED_SIZE\0"
	.byte 0xdc,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_GREEN_SIZE\0"
	.byte 0xdd,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_BLUE_SIZE\0"
	.byte 0xde,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_ALPHA_SIZE\0"
	.byte 0xdf,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_LUMINANCE_SIZE\0"
	.byte 0xe0,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_INTENSITY_SIZE\0"
	.byte 0xe1,0x80,0x02,0x0d
	.ascii "GL_NEAREST_MIPMAP_NEAREST\0"
	.byte 0x80,0xce,0x00,0x0d
	.ascii "GL_NEAREST_MIPMAP_LINEAR\0"
	.byte 0x82,0xce,0x00,0x0d
	.ascii "GL_LINEAR_MIPMAP_NEAREST\0"
	.byte 0x81,0xce,0x00,0x0d
	.ascii "GL_LINEAR_MIPMAP_LINEAR\0"
	.byte 0x83,0xce,0x00,0x0d
	.ascii "GL_OBJECT_LINEAR\0"
	.byte 0x81,0xc8,0x00,0x0d
	.ascii "GL_OBJECT_PLANE\0"
	.byte 0x81,0xca,0x00,0x0d
	.ascii "GL_EYE_LINEAR\0"
	.byte 0x80,0xc8,0x00,0x0d
	.ascii "GL_EYE_PLANE\0"
	.byte 0x82,0xca,0x00,0x0d
	.ascii "GL_SPHERE_MAP\0"
	.byte 0x82,0xc8,0x00,0x0d
	.ascii "GL_DECAL\0"
	.byte 0x81,0xc2,0x00,0x0d
	.ascii "GL_MODULATE\0"
	.byte 0x80,0xc2,0x00,0x0d
	.ascii "GL_NEAREST\0"
	.byte 0x80,0xcc,0x00,0x0d
	.ascii "GL_REPEAT\0"
	.byte 0x81,0xd2,0x00,0x0d
	.ascii "GL_CLAMP\0"
	.byte 0x80,0xd2,0x00,0x0d
	.ascii "GL_S\0"
	.byte 0x80,0xc0,0x00,0x0d
	.ascii "GL_T\0"
	.byte 0x81,0xc0,0x00,0x0d
	.ascii "GL_R\0"
	.byte 0x82,0xc0,0x00,0x0d
	.ascii "GL_Q\0"
	.byte 0x83,0xc0,0x00,0x0d
	.ascii "GL_TEXTURE_GEN_R\0"
	.byte 0xe2,0x18,0x0d
	.ascii "GL_TEXTURE_GEN_Q\0"
	.byte 0xe3,0x18,0x0d
	.ascii "GL_PROXY_TEXTURE_1D\0"
	.byte 0xe3,0x80,0x02,0x0d
	.ascii "GL_PROXY_TEXTURE_2D\0"
	.byte 0xe4,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_PRIORITY\0"
	.byte 0xe6,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_RESIDENT\0"
	.byte 0xe7,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_BINDING_1D\0"
	.byte 0xe8,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_BINDING_2D\0"
	.byte 0xe9,0x80,0x02,0x0d
	.ascii "GL_ALPHA4\0"
	.byte 0xbb,0x80,0x02,0x0d
	.ascii "GL_ALPHA8\0"
	.byte 0xbc,0x80,0x02,0x0d
	.ascii "GL_ALPHA12\0"
	.byte 0xbd,0x80,0x02,0x0d
	.ascii "GL_ALPHA16\0"
	.byte 0xbe,0x80,0x02,0x0d
	.ascii "GL_LUMINANCE4\0"
	.byte 0xbf,0x80,0x02,0x0d
	.ascii "GL_LUMINANCE8\0"
	.byte 0xc0,0x80,0x02,0x0d
	.ascii "GL_LUMINANCE12\0"
	.byte 0xc1,0x80,0x02,0x0d
	.ascii "GL_LUMINANCE16\0"
	.byte 0xc2,0x80,0x02,0x0d
	.ascii "GL_LUMINANCE4_ALPHA4\0"
	.byte 0xc3,0x80,0x02,0x0d
	.ascii "GL_LUMINANCE6_ALPHA2\0"
	.byte 0xc4,0x80,0x02,0x0d
	.ascii "GL_LUMINANCE8_ALPHA8\0"
	.byte 0xc5,0x80,0x02,0x0d
	.ascii "GL_LUMINANCE12_ALPHA4\0"
	.byte 0xc6,0x80,0x02,0x0d
	.ascii "GL_LUMINANCE12_ALPHA12\0"
	.byte 0xc7,0x80,0x02,0x0d
	.ascii "GL_LUMINANCE16_ALPHA16\0"
	.byte 0xc8,0x80,0x02,0x0d
	.ascii "GL_INTENSITY\0"
	.byte 0xc9,0x80,0x02,0x0d
	.ascii "GL_INTENSITY4\0"
	.byte 0xca,0x80,0x02,0x0d
	.ascii "GL_INTENSITY8\0"
	.byte 0xcb,0x80,0x02,0x0d
	.ascii "GL_INTENSITY12\0"
	.byte 0xcc,0x80,0x02,0x0d
	.ascii "GL_INTENSITY16\0"
	.byte 0xcd,0x80,0x02,0x0d
	.ascii "GL_R3_G3_B2\0"
	.byte 0x90,0xd4,0x00,0x0d
	.ascii "GL_RGB4\0"
	.byte 0xcf,0x80,0x02,0x0d
	.ascii "GL_RGB5\0"
	.byte 0xd0,0x80,0x02,0x0d
	.ascii "GL_RGB8\0"
	.byte 0xd1,0x80,0x02,0x0d
	.ascii "GL_RGB10\0"
	.byte 0xd2,0x80,0x02,0x0d
	.ascii "GL_RGB12\0"
	.byte 0xd3,0x80,0x02,0x0d
	.ascii "GL_RGB16\0"
	.byte 0xd4,0x80,0x02,0x0d
	.ascii "GL_RGBA2\0"
	.byte 0xd5,0x80,0x02,0x0d
	.ascii "GL_RGBA4\0"
	.byte 0xd6,0x80,0x02,0x0d
	.ascii "GL_RGB5_A1\0"
	.byte 0xd7,0x80,0x02,0x0d
	.ascii "GL_RGBA8\0"
	.byte 0xd8,0x80,0x02,0x0d
	.ascii "GL_RGB10_A2\0"
	.byte 0xd9,0x80,0x02,0x0d
	.ascii "GL_RGBA12\0"
	.byte 0xda,0x80,0x02,0x0d
	.ascii "GL_RGBA16\0"
	.byte 0xdb,0x80,0x02,0x0d
	.ascii "GL_VENDOR\0"
	.byte 0x80,0x3e,0x0d
	.ascii "GL_RENDERER\0"
	.byte 0x81,0x3e,0x0d
	.ascii "GL_VERSION\0"
	.byte 0x82,0x3e,0x0d
	.ascii "GL_EXTENSIONS\0"
	.byte 0x83,0x3e,0x0d
	.ascii "GL_INVALID_VALUE\0"
	.byte 0x81,0x0a,0x0d
	.ascii "GL_INVALID_ENUM\0"
	.byte 0x80,0x0a,0x0d
	.ascii "GL_INVALID_OPERATION\0"
	.byte 0x82,0x0a,0x0d
	.ascii "GL_STACK_OVERFLOW\0"
	.byte 0x83,0x0a,0x0d
	.ascii "GL_STACK_UNDERFLOW\0"
	.byte 0x84,0x0a,0x0d
	.ascii "GL_OUT_OF_MEMORY\0"
	.byte 0x85,0x0a,0x0d
	.ascii "GL_CONSTANT_COLOR_EXT\0"
	.byte 0x81,0x80,0x02,0x0d
	.ascii "GL_ONE_MINUS_CONSTANT_COLOR_EXT\0"
	.byte 0x82,0x80,0x02,0x0d
	.ascii "GL_CONSTANT_ALPHA_EXT\0"
	.byte 0x83,0x80,0x02,0x0d
	.ascii "GL_ONE_MINUS_CONSTANT_ALPHA_EXT\0"
	.byte 0x84,0x80,0x02,0x0d
	.ascii "GL_BLEND_EQUATION_EXT\0"
	.byte 0x89,0x80,0x02,0x0d
	.ascii "GL_MIN_EXT\0"
	.byte 0x87,0x80,0x02,0x0d
	.ascii "GL_MAX_EXT\0"
	.byte 0x88,0x80,0x02,0x0d
	.ascii "GL_FUNC_ADD_EXT\0"
	.byte 0x86,0x80,0x02,0x0d
	.ascii "GL_FUNC_SUBTRACT_EXT\0"
	.byte 0x8a,0x80,0x02,0x0d
	.ascii "GL_FUNC_REVERSE_SUBTRACT_EXT\0"
	.byte 0x8b,0x80,0x02,0x0d
	.ascii "GL_BLEND_COLOR_EXT\0"
	.byte 0x85,0x80,0x02,0x0d
	.ascii "GL_POLYGON_OFFSET_EXT\0"
	.byte 0xb7,0x80,0x02,0x0d
	.ascii "GL_POLYGON_OFFSET_FACTOR_EXT\0"
	.byte 0xb8,0x80,0x02,0x0d
	.ascii "GL_POLYGON_OFFSET_BIAS_EXT\0"
	.byte 0xb9,0x80,0x02,0x0d
	.ascii "GL_VERTEX_ARRAY_EXT\0"
	.byte 0xf4,0x80,0x02,0x0d
	.ascii "GL_NORMAL_ARRAY_EXT\0"
	.byte 0xf5,0x80,0x02,0x0d
	.ascii "GL_COLOR_ARRAY_EXT\0"
	.byte 0xf6,0x80,0x02,0x0d
	.ascii "GL_INDEX_ARRAY_EXT\0"
	.byte 0xf7,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_COORD_ARRAY_EXT\0"
	.byte 0xf8,0x80,0x02,0x0d
	.ascii "GL_EDGE_FLAG_ARRAY_EXT\0"
	.byte 0xf9,0x80,0x02,0x0d
	.ascii "GL_VERTEX_ARRAY_SIZE_EXT\0"
	.byte 0xfa,0x80,0x02,0x0d
	.ascii "GL_VERTEX_ARRAY_TYPE_EXT\0"
	.byte 0xfb,0x80,0x02,0x0d
	.ascii "GL_VERTEX_ARRAY_STRIDE_EXT\0"
	.byte 0xfc,0x80,0x02,0x0d
	.ascii "GL_VERTEX_ARRAY_COUNT_EXT\0"
	.byte 0xfd,0x80,0x02,0x0d
	.ascii "GL_NORMAL_ARRAY_TYPE_EXT\0"
	.byte 0xfe,0x80,0x02,0x0d
	.ascii "GL_NORMAL_ARRAY_STRIDE_EXT\0"
	.byte 0xff,0x80,0x02,0x0d
	.ascii "GL_NORMAL_ARRAY_COUNT_EXT\0"
	.byte 0x80,0x81,0x02,0x0d
	.ascii "GL_COLOR_ARRAY_SIZE_EXT\0"
	.byte 0x81,0x81,0x02,0x0d
	.ascii "GL_COLOR_ARRAY_TYPE_EXT\0"
	.byte 0x82,0x81,0x02,0x0d
	.ascii "GL_COLOR_ARRAY_STRIDE_EXT\0"
	.byte 0x83,0x81,0x02,0x0d
	.ascii "GL_COLOR_ARRAY_COUNT_EXT\0"
	.byte 0x84,0x81,0x02,0x0d
	.ascii "GL_INDEX_ARRAY_TYPE_EXT\0"
	.byte 0x85,0x81,0x02,0x0d
	.ascii "GL_INDEX_ARRAY_STRIDE_EXT\0"
	.byte 0x86,0x81,0x02,0x0d
	.ascii "GL_INDEX_ARRAY_COUNT_EXT\0"
	.byte 0x87,0x81,0x02,0x0d
	.ascii "GL_TEXTURE_COORD_ARRAY_SIZE_EXT\0"
	.byte 0x88,0x81,0x02,0x0d
	.ascii "GL_TEXTURE_COORD_ARRAY_TYPE_EXT\0"
	.byte 0x89,0x81,0x02,0x0d
	.ascii "GL_TEXTURE_COORD_ARRAY_STRIDE_EXT\0"
	.byte 0x8a,0x81,0x02,0x0d
	.ascii "GL_TEXTURE_COORD_ARRAY_COUNT_EXT\0"
	.byte 0x8b,0x81,0x02,0x0d
	.ascii "GL_EDGE_FLAG_ARRAY_STRIDE_EXT\0"
	.byte 0x8c,0x81,0x02,0x0d
	.ascii "GL_EDGE_FLAG_ARRAY_COUNT_EXT\0"
	.byte 0x8d,0x81,0x02,0x0d
	.ascii "GL_VERTEX_ARRAY_POINTER_EXT\0"
	.byte 0x8e,0x81,0x02,0x0d
	.ascii "GL_NORMAL_ARRAY_POINTER_EXT\0"
	.byte 0x8f,0x81,0x02,0x0d
	.ascii "GL_COLOR_ARRAY_POINTER_EXT\0"
	.byte 0x90,0x81,0x02,0x0d
	.ascii "GL_INDEX_ARRAY_POINTER_EXT\0"
	.byte 0x91,0x81,0x02,0x0d
	.ascii "GL_TEXTURE_COORD_ARRAY_POINTER_EXT\0"
	.byte 0x92,0x81,0x02,0x0d
	.ascii "GL_EDGE_FLAG_ARRAY_POINTER_EXT\0"
	.byte 0x93,0x81,0x02,0x0d
	.ascii "GL_TEXTURE_PRIORITY_EXT\0"
	.byte 0xe6,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_RESIDENT_EXT\0"
	.byte 0xe7,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_1D_BINDING_EXT\0"
	.byte 0xe8,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_2D_BINDING_EXT\0"
	.byte 0xe9,0x80,0x02,0x0d
	.ascii "GL_PACK_SKIP_IMAGES_EXT\0"
	.byte 0xeb,0x80,0x02,0x0d
	.ascii "GL_PACK_IMAGE_HEIGHT_EXT\0"
	.byte 0xec,0x80,0x02,0x0d
	.ascii "GL_UNPACK_SKIP_IMAGES_EXT\0"
	.byte 0xed,0x80,0x02,0x0d
	.ascii "GL_UNPACK_IMAGE_HEIGHT_EXT\0"
	.byte 0xee,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_3D_EXT\0"
	.byte 0xef,0x80,0x02,0x0d
	.ascii "GL_PROXY_TEXTURE_3D_EXT\0"
	.byte 0xf0,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_DEPTH_EXT\0"
	.byte 0xf1,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_WRAP_R_EXT\0"
	.byte 0xf2,0x80,0x02,0x0d
	.ascii "GL_MAX_3D_TEXTURE_SIZE_EXT\0"
	.byte 0xf3,0x80,0x02,0x0d
	.ascii "GL_TEXTURE_3D_BINDING_EXT\0"
	.byte 0xea,0x80,0x02,0x0d
	.ascii "GL_TABLE_TOO_LARGE_EXT\0"
	.byte 0xb1,0x80,0x02,0x0d
	.ascii "GL_COLOR_TABLE_FORMAT_EXT\0"
	.byte 0xd8,0x81,0x02,0x0d
	.ascii "GL_COLOR_TABLE_WIDTH_EXT\0"
	.byte 0xd9,0x81,0x02,0x0d
	.ascii "GL_COLOR_TABLE_RED_SIZE_EXT\0"
	.byte 0xda,0x81,0x02,0x0d
	.ascii "GL_COLOR_TABLE_GREEN_SIZE_EXT\0"
	.byte 0xdb,0x81,0x02,0x0d
	.ascii "GL_COLOR_TABLE_BLUE_SIZE_EXT\0"
	.byte 0xdc,0x81,0x02,0x0d
	.ascii "GL_COLOR_TABLE_ALPHA_SIZE_EXT\0"
	.byte 0xdd,0x81,0x02,0x0d
	.ascii "GL_COLOR_TABLE_LUMINANCE_SIZE_EXT\0"
	.byte 0xde,0x81,0x02,0x0d
	.ascii "GL_COLOR_TABLE_INTENSITY_SIZE_EXT\0"
	.byte 0xdf,0x81,0x02,0x0d
	.ascii "GL_TEXTURE_INDEX_SIZE_EXT\0"
	.byte 0xe1,0x81,0x02,0x0d
	.ascii "GL_COLOR_INDEX1_EXT\0"
	.byte 0xe2,0x81,0x02,0x0d
	.ascii "GL_COLOR_INDEX2_EXT\0"
	.byte 0xe3,0x81,0x02,0x0d
	.ascii "GL_COLOR_INDEX4_EXT\0"
	.byte 0xe4,0x81,0x02,0x0d
	.ascii "GL_COLOR_INDEX8_EXT\0"
	.byte 0xe5,0x81,0x02,0x0d
	.ascii "GL_COLOR_INDEX12_EXT\0"
	.byte 0xe6,0x81,0x02,0x0d
	.ascii "GL_COLOR_INDEX16_EXT\0"
	.byte 0xe7,0x81,0x02,0x0d
	.ascii "GL_SHARED_TEXTURE_PALETTE_EXT\0"
	.byte 0xfb,0x83,0x02,0x0d
	.ascii "GL_POINT_SIZE_MIN_EXT\0"
	.byte 0xa6,0x82,0x02,0x0d
	.ascii "GL_POINT_SIZE_MAX_EXT\0"
	.byte 0xa7,0x82,0x02,0x0d
	.ascii "GL_POINT_FADE_THRESHOLD_SIZE_EXT\0"
	.byte 0xa8,0x82,0x02,0x0d
	.ascii "GL_DISTANCE_ATTENUATION_EXT\0"
	.byte 0xa9,0x82,0x02,0x00,0x07,0x00,0x00,0x03
	.byte 0x96
	.ascii "GLenum\0"
	.byte 0x03,0x06
	.ascii "unsigned char\0"
	.byte 0x08,0x01,0x07,0x00,0x00,0x33,0x3f
	.ascii "GLubyte\0"
	.byte 0x03,0x09,0x00,0x00,0x33,0x50,0x06
	.ascii "void\0"
	.byte 0x05,0x00,0x09,0x00,0x00,0x33,0x63,0x0e
	.ascii "gl_texture_image\0"
	.byte 0x3c,0x02,0x00,0x00,0x34,0x79,0x0f
	.ascii "Format\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x00,0x0f
	.ascii "IntFormat\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x04,0x0f
	.ascii "Border\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x08,0x0f
	.ascii "Width\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x0c,0x0f
	.ascii "Height\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x10,0x0f
	.ascii "Depth\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x14,0x0f
	.ascii "Width2\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x18,0x0f
	.ascii "Height2\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x1c,0x0f
	.ascii "Depth2\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x20,0x0f
	.ascii "WidthLog2\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x24,0x0f
	.ascii "HeightLog2\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x28,0x0f
	.ascii "DepthLog2\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x2c,0x0f
	.ascii "MaxLog2\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x30,0x0f
	.ascii "Data\0"
	.byte 0x00,0x00,0x33,0x5e,0x02,0x23,0x34,0x0f
	.ascii "DriverData\0"
	.byte 0x00,0x00,0x33,0x6b,0x02,0x23,0x38,0x00
	.byte 0x09,0x00,0x00,0x33,0x70,0x0a,0x00,0x00
	.byte 0x34,0x79,0x2c,0x00,0x00,0x34,0x8f,0x0b
	.byte 0x00,0x00,0x03,0x7d,0x0a,0x00,0x10,0x00
	.byte 0x00,0x33,0x50,0x04,0x00,0x00,0x00,0x34
	.byte 0xa2,0x11,0x00,0x00,0x03,0x7d,0x03,0xff
	.byte 0x00,0x07,0x00,0x00,0x33,0x3f
	.ascii "GLboolean\0"
	.byte 0x03,0x12
	.ascii "gl_texture_object\0"
	.byte 0x04,0x84,0x02,0x00,0x00,0x36,0x41,0x0f
	.ascii "RefCount\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x00,0x0f
	.ascii "Name\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x04,0x0f
	.ascii "Dimensions\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x08,0x0f
	.ascii "Priority\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x0c,0x0f
	.ascii "BorderColor\0"
	.byte 0x00,0x00,0x03,0x85,0x02,0x23,0x10,0x0f
	.ascii "WrapS\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x20,0x0f
	.ascii "WrapT\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x24,0x0f
	.ascii "WrapR\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x28,0x0f
	.ascii "MinFilter\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x2c,0x0f
	.ascii "MagFilter\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x30,0x0f
	.ascii "MinMagThresh\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x34,0x0f
	.ascii "Image\0"
	.byte 0x00,0x00,0x34,0x7e,0x02,0x23,0x38,0x0f
	.ascii "Palette\0"
	.byte 0x00,0x00,0x34,0x8f,0x02,0x23,0x64,0x0f
	.ascii "PaletteSize\0"
	.byte 0x00,0x00,0x03,0x59,0x03,0x23,0xe4,0x08
	.byte 0x0f
	.ascii "PaletteIntFormat\0"
	.byte 0x00,0x00,0x33,0x32,0x03,0x23,0xe8,0x08
	.byte 0x0f
	.ascii "PaletteFormat\0"
	.byte 0x00,0x00,0x33,0x32,0x03,0x23,0xec,0x08
	.byte 0x0f
	.ascii "Dirty\0"
	.byte 0x00,0x00,0x34,0xa2,0x03,0x23,0xf0,0x08
	.byte 0x0f
	.ascii "DriverData\0"
	.byte 0x00,0x00,0x33,0x6b,0x03,0x23,0xf4,0x08
	.byte 0x0f
	.ascii "Complete\0"
	.byte 0x00,0x00,0x34,0xa2,0x03,0x23,0xf8,0x08
	.byte 0x0f
	.ascii "SampleFunc\0"
	.byte 0x00,0x00,0x36,0xb7,0x03,0x23,0xfc,0x08
	.byte 0x0f
	.ascii "Next\0"
	.byte 0x00,0x00,0x36,0xcf,0x03,0x23,0x80,0x09
	.byte 0x00,0x13,0x00,0x00,0x34,0xb2,0x09,0x00
	.byte 0x00,0x36,0x41,0x13,0x00,0x00,0x03,0x66
	.byte 0x09,0x00,0x00,0x36,0x4b,0x13,0x00,0x00
	.byte 0x03,0x66,0x09,0x00,0x00,0x36,0x55,0x13
	.byte 0x00,0x00,0x03,0x66,0x09,0x00,0x00,0x36
	.byte 0x5f,0x13,0x00,0x00,0x03,0x66,0x09,0x00
	.byte 0x00,0x36,0x69,0x09,0x00,0x00,0x33,0x3f
	.byte 0x14,0x01,0x01,0x00,0x00,0x36,0xb2,0x15
	.byte 0x00,0x00,0x36,0x46,0x15,0x00,0x00,0x03
	.byte 0x4d,0x15,0x00,0x00,0x36,0x50,0x15,0x00
	.byte 0x00,0x36,0x5a,0x15,0x00,0x00,0x36,0x64
	.byte 0x15,0x00,0x00,0x36,0x6e,0x15,0x00,0x00
	.byte 0x36,0x73,0x15,0x00,0x00,0x36,0x73,0x15
	.byte 0x00,0x00,0x36,0x73,0x15,0x00,0x00,0x36
	.byte 0x73,0x00,0x09,0x00,0x00,0x36,0x78,0x07
	.byte 0x00,0x00,0x36,0xb2
	.ascii "TextureSampleFunc\0"
	.byte 0x02,0x09,0x00,0x00,0x34,0xb2,0x0e
	.ascii "gl_shared_state\0"
	.byte 0x1c,0x02,0x00,0x00,0x37,0x70,0x0f
	.ascii "RefCount\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x00,0x0f
	.ascii "DisplayList\0"
	.byte 0x00,0x00,0x03,0x48,0x02,0x23,0x04,0x0f
	.ascii "TexObjects\0"
	.byte 0x00,0x00,0x03,0x48,0x02,0x23,0x08,0x0f
	.ascii "TexObjectList\0"
	.byte 0x00,0x00,0x36,0xcf,0x02,0x23,0x0c,0x0f
	.ascii "Default1D\0"
	.byte 0x00,0x00,0x36,0xcf,0x02,0x23,0x10,0x0f
	.ascii "Default2D\0"
	.byte 0x00,0x00,0x36,0xcf,0x02,0x23,0x14,0x0f
	.ascii "Default3D\0"
	.byte 0x00,0x00,0x36,0xcf,0x02,0x23,0x18,0x00
	.byte 0x09,0x00,0x00,0x36,0xd4,0x12
	.ascii "gl_context\0"
	.byte 0xe1,0x40,0x02,0x00,0x00,0x3e,0x42,0x0f
	.ascii "Shared\0"
	.byte 0x00,0x00,0x37,0x70,0x02,0x23,0x00,0x0f
	.ascii "API\0"
	.byte 0x00,0x00,0x57,0x2d,0x02,0x23,0x04,0x0f
	.ascii "Save\0"
	.byte 0x00,0x00,0x57,0x2d,0x03,0x23,0xe0,0x05
	.byte 0x0f
	.ascii "Exec\0"
	.byte 0x00,0x00,0x57,0x2d,0x03,0x23,0xbc,0x0b
	.byte 0x0f
	.ascii "Visual\0"
	.byte 0x00,0x00,0x67,0x88,0x03,0x23,0x98,0x11
	.byte 0x0f
	.ascii "Buffer\0"
	.byte 0x00,0x00,0x68,0xbc,0x03,0x23,0x9c,0x11
	.byte 0x0f
	.ascii "Driver\0"
	.byte 0x00,0x00,0x71,0xcb,0x03,0x23,0xa0,0x11
	.byte 0x0f
	.ascii "DriverCtx\0"
	.byte 0x00,0x00,0x33,0x6b,0x03,0x23,0xf4,0x12
	.byte 0x0f
	.ascii "DriverMgrCtx\0"
	.byte 0x00,0x00,0x33,0x6b,0x03,0x23,0xf8,0x12
	.byte 0x0f
	.ascii "NewModelViewMatrix\0"
	.byte 0x00,0x00,0x34,0xa2,0x03,0x23,0xfc,0x12
	.byte 0x0f
	.ascii "ModelViewMatrixType\0"
	.byte 0x00,0x00,0x03,0x59,0x03,0x23,0x80,0x13
	.byte 0x0f
	.ascii "ModelViewMatrix\0"
	.byte 0x00,0x00,0x76,0x33,0x03,0x23,0x84,0x13
	.byte 0x0f
	.ascii "ModelViewInv\0"
	.byte 0x00,0x00,0x76,0x44,0x03,0x23,0xc4,0x13
	.byte 0x0f
	.ascii "ModelViewStackDepth\0"
	.byte 0x00,0x00,0x03,0x59,0x03,0x23,0x84,0x14
	.byte 0x0f
	.ascii "ModelViewStack\0"
	.byte 0x00,0x00,0x76,0x66,0x03,0x23,0x88,0x14
	.byte 0x0f
	.ascii "NewProjectionMatrix\0"
	.byte 0x00,0x00,0x34,0xa2,0x03,0x23,0x88,0x24
	.byte 0x0f
	.ascii "ProjectionMatrixType\0"
	.byte 0x00,0x00,0x03,0x59,0x03,0x23,0x8c,0x24
	.byte 0x0f
	.ascii "ProjectionMatrix\0"
	.byte 0x00,0x00,0x76,0x78,0x03,0x23,0x90,0x24
	.byte 0x0f
	.ascii "ProjectionStackDepth\0"
	.byte 0x00,0x00,0x03,0x59,0x03,0x23,0xd0,0x24
	.byte 0x0f
	.ascii "ProjectionStack\0"
	.byte 0x00,0x00,0x76,0x9a,0x03,0x23,0xd4,0x24
	.byte 0x0f
	.ascii "NearFarStack\0"
	.byte 0x00,0x00,0x76,0xbd,0x03,0x23,0xd4,0x34
	.byte 0x0f
	.ascii "NewTextureMatrix\0"
	.byte 0x00,0x00,0x34,0xa2,0x03,0x23,0xd4,0x36
	.byte 0x0f
	.ascii "TextureMatrixType\0"
	.byte 0x00,0x00,0x03,0x59,0x03,0x23,0xd8,0x36
	.byte 0x0f
	.ascii "TextureMatrix\0"
	.byte 0x00,0x00,0x76,0xcf,0x03,0x23,0xdc,0x36
	.byte 0x0f
	.ascii "TextureStackDepth\0"
	.byte 0x00,0x00,0x03,0x59,0x03,0x23,0x9c,0x37
	.byte 0x0f
	.ascii "TextureStack\0"
	.byte 0x00,0x00,0x76,0xf1,0x03,0x23,0xa0,0x37
	.byte 0x0f
	.ascii "CallDepth\0"
	.byte 0x00,0x00,0x03,0x59,0x03,0x23,0xa0,0x3c
	.byte 0x0f
	.ascii "ExecuteFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x03,0x23,0xa4,0x3c
	.byte 0x0f
	.ascii "CompileFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x03,0x23,0xa5,0x3c
	.byte 0x0f
	.ascii "AttribStackDepth\0"
	.byte 0x00,0x00,0x03,0x59,0x03,0x23,0xa8,0x3c
	.byte 0x0f
	.ascii "AttribStack\0"
	.byte 0x00,0x00,0x77,0x57,0x03,0x23,0xac,0x3c
	.byte 0x0f
	.ascii "Accum\0"
	.byte 0x00,0x00,0x77,0x79,0x03,0x23,0xec,0x3c
	.byte 0x0f
	.ascii "Color\0"
	.byte 0x00,0x00,0x77,0xc6,0x03,0x23,0xfc,0x3c
	.byte 0x0f
	.ascii "Current\0"
	.byte 0x00,0x00,0x79,0xdb,0x03,0x23,0xd4,0x3d
	.byte 0x0f
	.ascii "Depth\0"
	.byte 0x00,0x00,0x7a,0xc5,0x03,0x23,0xb4,0x3e
	.byte 0x0f
	.ascii "Eval\0"
	.byte 0x00,0x00,0x7b,0x18,0x03,0x23,0xc0,0x3e
	.byte 0x0f
	.ascii "Fog\0"
	.byte 0x00,0x00,0x7d,0x8e,0x03,0x23,0xf8,0x3e
	.byte 0x0f
	.ascii "Hint\0"
	.byte 0x00,0x00,0x7e,0x07,0x03,0x23,0xa0,0x3f
	.byte 0x0f
	.ascii "Light\0"
	.byte 0x00,0x00,0x83,0x12,0x03,0x23,0xb4,0x3f
	.byte 0x0f
	.ascii "Line\0"
	.byte 0x00,0x00,0x84,0x42,0x04,0x23,0x88,0xdc
	.byte 0x02,0x0f
	.ascii "List\0"
	.byte 0x00,0x00,0x84,0xbb,0x04,0x23,0x94,0xdc
	.byte 0x02,0x0f
	.ascii "Pixel\0"
	.byte 0x00,0x00,0x85,0xa1,0x04,0x23,0x98,0xdc
	.byte 0x02,0x0f
	.ascii "Point\0"
	.byte 0x00,0x00,0x88,0x71,0x04,0x23,0x80,0xad
	.byte 0x03,0x0f
	.ascii "Polygon\0"
	.byte 0x00,0x00,0x88,0xea,0x04,0x23,0xa0,0xad
	.byte 0x03,0x0f
	.ascii "PolygonStipple\0"
	.byte 0x00,0x00,0x8a,0x1d,0x04,0x23,0xc8,0xad
	.byte 0x03,0x0f
	.ascii "Scissor\0"
	.byte 0x00,0x00,0x8a,0x3c,0x04,0x23,0xc8,0xae
	.byte 0x03,0x0f
	.ascii "Stencil\0"
	.byte 0x00,0x00,0x8a,0x97,0x04,0x23,0xdc,0xae
	.byte 0x03,0x0f
	.ascii "Texture\0"
	.byte 0x00,0x00,0x8b,0xf1,0x04,0x23,0xf4,0xae
	.byte 0x03,0x0f
	.ascii "Transform\0"
	.byte 0x00,0x00,0x8e,0x53,0x04,0x23,0xcc,0xb8
	.byte 0x03,0x0f
	.ascii "Viewport\0"
	.byte 0x00,0x00,0x8e,0xcd,0x04,0x23,0xb8,0xb9
	.byte 0x03,0x0f
	.ascii "ClientAttribStackDepth\0"
	.byte 0x00,0x00,0x03,0x59,0x04,0x23,0xe8,0xb9
	.byte 0x03,0x0f
	.ascii "ClientAttribStack\0"
	.byte 0x00,0x00,0x8f,0x74,0x04,0x23,0xec,0xb9
	.byte 0x03,0x0f
	.ascii "Array\0"
	.byte 0x00,0x00,0x8f,0x8a,0x04,0x23,0xac,0xba
	.byte 0x03,0x0f
	.ascii "Pack\0"
	.byte 0x00,0x00,0x92,0x35,0x04,0x23,0xac,0xbb
	.byte 0x03,0x0f
	.ascii "Unpack\0"
	.byte 0x00,0x00,0x92,0x35,0x04,0x23,0xc8,0xbb
	.byte 0x03,0x0f
	.ascii "EvalMap\0"
	.byte 0x00,0x00,0x93,0xb7,0x04,0x23,0xe4,0xbb
	.byte 0x03,0x0f
	.ascii "Feedback\0"
	.byte 0x00,0x00,0x95,0x41,0x04,0x23,0xb8,0xbf
	.byte 0x03,0x0f
	.ascii "Select\0"
	.byte 0x00,0x00,0x95,0xb6,0x04,0x23,0xcc,0xbf
	.byte 0x03,0x0f
	.ascii "ErrorValue\0"
	.byte 0x00,0x00,0x33,0x32,0x04,0x23,0xec,0xc1
	.byte 0x03,0x0f
	.ascii "DirectContext\0"
	.byte 0x00,0x00,0x34,0xa2,0x04,0x23,0xf0,0xc1
	.byte 0x03,0x0f
	.ascii "NewState\0"
	.byte 0x00,0x00,0x03,0x59,0x04,0x23,0xf4,0xc1
	.byte 0x03,0x0f
	.ascii "RenderMode\0"
	.byte 0x00,0x00,0x33,0x32,0x04,0x23,0xf8,0xc1
	.byte 0x03,0x0f
	.ascii "Primitive\0"
	.byte 0x00,0x00,0x33,0x32,0x04,0x23,0xfc,0xc1
	.byte 0x03,0x0f
	.ascii "StippleCounter\0"
	.byte 0x00,0x00,0x03,0x59,0x04,0x23,0x80,0xc2
	.byte 0x03,0x0f
	.ascii "ClipMask\0"
	.byte 0x00,0x00,0x03,0x59,0x04,0x23,0x84,0xc2
	.byte 0x03,0x0f
	.ascii "RasterMask\0"
	.byte 0x00,0x00,0x03,0x59,0x04,0x23,0x88,0xc2
	.byte 0x03,0x0f
	.ascii "LightTwoSide\0"
	.byte 0x00,0x00,0x34,0xa2,0x04,0x23,0x8c,0xc2
	.byte 0x03,0x0f
	.ascii "DirectTriangles\0"
	.byte 0x00,0x00,0x34,0xa2,0x04,0x23,0x8d,0xc2
	.byte 0x03,0x0f
	.ascii "PolygonZoffset\0"
	.byte 0x00,0x00,0x03,0x6f,0x04,0x23,0x90,0xc2
	.byte 0x03,0x0f
	.ascii "LineZoffset\0"
	.byte 0x00,0x00,0x03,0x6f,0x04,0x23,0x94,0xc2
	.byte 0x03,0x0f
	.ascii "PointZoffset\0"
	.byte 0x00,0x00,0x03,0x6f,0x04,0x23,0x98,0xc2
	.byte 0x03,0x0f
	.ascii "NeedNormals\0"
	.byte 0x00,0x00,0x34,0xa2,0x04,0x23,0x9c,0xc2
	.byte 0x03,0x0f
	.ascii "FastDrawPixels\0"
	.byte 0x00,0x00,0x34,0xa2,0x04,0x23,0x9d,0xc2
	.byte 0x03,0x0f
	.ascii "MutablePixels\0"
	.byte 0x00,0x00,0x34,0xa2,0x04,0x23,0x9e,0xc2
	.byte 0x03,0x0f
	.ascii "MonoPixels\0"
	.byte 0x00,0x00,0x34,0xa2,0x04,0x23,0x9f,0xc2
	.byte 0x03,0x0f
	.ascii "PointsFunc\0"
	.byte 0x00,0x00,0x6f,0x06,0x04,0x23,0xa0,0xc2
	.byte 0x03,0x0f
	.ascii "LineFunc\0"
	.byte 0x00,0x00,0x6f,0x39,0x04,0x23,0xa4,0xc2
	.byte 0x03,0x0f
	.ascii "TriangleFunc\0"
	.byte 0x00,0x00,0x6f,0x6f,0x04,0x23,0xa8,0xc2
	.byte 0x03,0x0f
	.ascii "QuadFunc\0"
	.byte 0x00,0x00,0x6f,0xae,0x04,0x23,0xac,0xc2
	.byte 0x03,0x0f
	.ascii "RectFunc\0"
	.byte 0x00,0x00,0x6f,0xe4,0x04,0x23,0xb0,0xc2
	.byte 0x03,0x0f
	.ascii "VB\0"
	.byte 0x00,0x00,0x96,0x7b,0x04,0x23,0xb4,0xc2
	.byte 0x03,0x0f
	.ascii "PB\0"
	.byte 0x00,0x00,0x96,0x8f,0x04,0x23,0xb8,0xc2
	.byte 0x03,0x0f
	.ascii "NoRaster\0"
	.byte 0x00,0x00,0x34,0xa2,0x04,0x23,0xbc,0xc2
	.byte 0x03,0x0f
	.ascii "NoDither\0"
	.byte 0x00,0x00,0x34,0xa2,0x04,0x23,0xbd,0xc2
	.byte 0x03,0x00,0x09,0x00,0x00,0x37,0x75,0x14
	.byte 0x01,0x01,0x00,0x00,0x3e,0x5e,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x96
	.byte 0x15,0x00,0x00,0x03,0x66,0x00,0x09,0x00
	.byte 0x00,0x3e,0x47,0x14,0x01,0x01,0x00,0x00
	.byte 0x3e,0x7a,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x03
	.byte 0x66,0x00,0x09,0x00,0x00,0x3e,0x63,0x13
	.byte 0x00,0x00,0x03,0x4d,0x09,0x00,0x00,0x3e
	.byte 0x7f,0x16,0x01,0x00,0x00,0x33,0x3f,0x01
	.byte 0x00,0x00,0x3e,0xa9,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x3e,0x84,0x15,0x00,0x00,0x36,0x73
	.byte 0x00,0x09,0x00,0x00,0x3e,0x89,0x14,0x01
	.byte 0x01,0x00,0x00,0x3e,0xc0,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x29,0x00
	.byte 0x09,0x00,0x00,0x3e,0xae,0x14,0x01,0x01
	.byte 0x00,0x00,0x3e,0xd7,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x96,0x00,0x09
	.byte 0x00,0x00,0x3e,0xc5,0x14,0x01,0x01,0x00
	.byte 0x00,0x3e,0xf3,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x03,0x4d,0x00,0x09,0x00,0x00,0x3e,0xdc
	.byte 0x07,0x00,0x00,0x33,0x63
	.ascii "GLvoid\0"
	.byte 0x03,0x09,0x00,0x00,0x3e,0xf8,0x0e
	.ascii "gl_image\0"
	.byte 0x24,0x02,0x00,0x00,0x3f,0xa7,0x0f
	.ascii "Width\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x00,0x0f
	.ascii "Height\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x04,0x0f
	.ascii "Depth\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x08,0x0f
	.ascii "Components\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x0c,0x0f
	.ascii "Format\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x10,0x0f
	.ascii "Type\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x14,0x0f
	.ascii "Data\0"
	.byte 0x00,0x00,0x3f,0x05,0x02,0x23,0x18,0x0f
	.ascii "Interleaved\0"
	.byte 0x00,0x00,0x34,0xa2
	.byte 0x02,0x23,0x1c,0x0f
	.ascii "RefCount\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x20,0x00
	.byte 0x13,0x00,0x00,0x3f,0x0a,0x09,0x00,0x00
	.byte 0x3f,0xa7,0x14,0x01,0x01,0x00,0x00,0x3f
	.byte 0xe1,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x66,0x15,0x00,0x00
	.byte 0x03,0x66,0x15,0x00,0x00,0x03,0x66,0x15
	.byte 0x00,0x00,0x03,0x66,0x15,0x00,0x00,0x3f
	.byte 0xac,0x00,0x09,0x00,0x00,0x3f,0xb1,0x14
	.byte 0x01,0x01,0x00,0x00,0x40,0x07,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x66
	.byte 0x15,0x00,0x00,0x03,0x66,0x15,0x00,0x00
	.byte 0x03,0x66,0x15,0x00,0x00,0x03,0x66,0x00
	.byte 0x09,0x00,0x00,0x3f,0xe6,0x14,0x01,0x01
	.byte 0x00,0x00,0x40,0x1e,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x96,0x00,0x09
	.byte 0x00,0x00,0x40,0x0c,0x14,0x01,0x01,0x00
	.byte 0x00,0x40,0x3a,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x03,0x96,0x00,0x09,0x00,0x00,0x40,0x23
	.byte 0x14,0x01,0x01,0x00,0x00,0x40,0x51,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x4d,0x00,0x09,0x00,0x00,0x40,0x3f,0x13
	.byte 0x00,0x00,0x33,0x63,0x09,0x00,0x00,0x40
	.byte 0x56,0x14,0x01,0x01,0x00,0x00,0x40,0x7c
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x40,0x5b,0x00,0x09,0x00,0x00
	.byte 0x40,0x60,0x14,0x01,0x01,0x00,0x00,0x40
	.byte 0x93,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x4d,0x00,0x09,0x00,0x00,0x40
	.byte 0x81,0x14,0x01,0x01,0x00,0x00,0x40,0xb9
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x66,0x15,0x00,0x00,0x03,0x66,0x15
	.byte 0x00,0x00,0x03,0x66,0x15,0x00,0x00,0x03
	.byte 0x66,0x00,0x09,0x00,0x00,0x40,0x98,0x14
	.byte 0x01,0x01,0x00,0x00,0x40,0xdf,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x66
	.byte 0x15,0x00,0x00,0x03,0x66,0x15,0x00,0x00
	.byte 0x03,0x66,0x15,0x00,0x00,0x03,0x66,0x00
	.byte 0x09,0x00,0x00,0x40,0xbe,0x06
	.ascii "double\0"
	.byte 0x04,0x08,0x14,0x01,0x01,0x00,0x00,0x41
	.byte 0x00,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x40,0xe4,0x00,0x09,0x00,0x00,0x40
	.byte 0xee,0x14,0x01,0x01,0x00,0x00,0x41,0x17
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x66,0x00,0x09,0x00,0x00,0x41,0x05
	.byte 0x14,0x01,0x01,0x00,0x00,0x41,0x2e,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x29,0x00,0x09,0x00,0x00,0x41,0x1c,0x13
	.byte 0x00,0x00,0x03,0x66,0x09,0x00,0x00,0x41
	.byte 0x33,0x14,0x01,0x01,0x00,0x00,0x41,0x54
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x41,0x38,0x00
	.byte 0x09,0x00,0x00,0x41,0x3d,0x14,0x01,0x01
	.byte 0x00,0x00,0x41,0x75,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x66,0x15,0x00
	.byte 0x00,0x03,0x66,0x15,0x00,0x00,0x03,0x66
	.byte 0x00,0x09,0x00,0x00,0x41,0x59,0x13,0x00
	.byte 0x00,0x03,0x66,0x09,0x00,0x00,0x41,0x7a
	.byte 0x14,0x01,0x01,0x00,0x00,0x41,0x96,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x41
	.byte 0x7f,0x00,0x09,0x00,0x00,0x41,0x84,0x14
	.byte 0x01,0x01,0x00,0x00,0x41,0xbc,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x66
	.byte 0x15,0x00,0x00,0x03,0x66,0x15,0x00,0x00
	.byte 0x03,0x66,0x15,0x00,0x00,0x03,0x66,0x00
	.byte 0x09,0x00,0x00,0x41,0x9b,0x13,0x00,0x00
	.byte 0x03,0x66,0x09,0x00,0x00,0x41,0xc1,0x14
	.byte 0x01,0x01,0x00,0x00,0x41,0xdd,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x41,0xc6
	.byte 0x00,0x09,0x00,0x00,0x41,0xcb,0x14,0x01
	.byte 0x01,0x00,0x00,0x42,0x03,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x33,0x3f,0x15
	.byte 0x00,0x00,0x33,0x3f,0x15,0x00,0x00,0x33
	.byte 0x3f,0x15,0x00,0x00,0x33,0x3f,0x00,0x09
	.byte 0x00,0x00,0x41,0xe2,0x13,0x00,0x00,0x33
	.byte 0x3f,0x09,0x00,0x00,0x42,0x08,0x14,0x01
	.byte 0x01,0x00,0x00,0x42,0x24,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x42,0x0d,0x00
	.byte 0x09,0x00,0x00,0x42,0x12,0x14,0x01,0x01
	.byte 0x00,0x00,0x42,0x4a,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x33,0x3f,0x15,0x00
	.byte 0x00,0x33,0x3f,0x15,0x00,0x00,0x33,0x3f
	.byte 0x15,0x00,0x00,0x33,0x3f,0x00,0x09,0x00
	.byte 0x00,0x42,0x29,0x14,0x01,0x01,0x00,0x00
	.byte 0x42,0x66,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x03
	.byte 0x96,0x00,0x09,0x00,0x00,0x42,0x4f,0x13
	.byte 0x00,0x00,0x33,0x63,0x09,0x00,0x00,0x42
	.byte 0x6b,0x14,0x01,0x01,0x00,0x00,0x42,0x96
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x42
	.byte 0x70,0x00,0x09,0x00,0x00,0x42,0x75,0x09
	.byte 0x00,0x00,0x3f,0x0a,0x14,0x01,0x01,0x00
	.byte 0x00,0x42,0xbc,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x42,0x9b,0x00
	.byte 0x09,0x00,0x00,0x42,0xa0,0x14,0x01,0x01
	.byte 0x00,0x00,0x42,0xdd,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x42,0x9b
	.byte 0x00,0x09,0x00,0x00,0x42,0xc1,0x14,0x01
	.byte 0x01,0x00,0x00,0x43,0x08,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x03
	.byte 0x29,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x96,0x00,0x09,0x00,0x00,0x42
	.byte 0xe2,0x14,0x01,0x01,0x00,0x00,0x43,0x3d
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x03
	.byte 0x29,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x03,0x29
	.byte 0x00,0x09,0x00,0x00,0x43,0x0d,0x14,0x01
	.byte 0x01,0x00,0x00,0x43,0x77,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x00,0x09,0x00,0x00,0x43,0x42
	.byte 0x14,0x01,0x01,0x00,0x00,0x43,0xa7,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x00,0x09,0x00,0x00,0x43,0x7c
	.byte 0x14,0x01,0x01,0x00,0x00,0x43,0xe1,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x29,0x00,0x09,0x00,0x00
	.byte 0x43,0xac,0x14,0x01,0x01,0x00,0x00,0x44
	.byte 0x20,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x03
	.byte 0x29,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x29,0x00,0x09,0x00,0x00,0x43
	.byte 0xe6,0x14,0x01,0x01,0x00,0x00,0x44,0x37
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x00,0x09,0x00,0x00,0x44,0x25
	.byte 0x14,0x01,0x01,0x00,0x00,0x44,0x53,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x4d,0x15,0x00,0x00,0x03,0x29,0x00,0x09
	.byte 0x00,0x00,0x44,0x3c,0x13,0x00,0x00,0x03
	.byte 0x4d,0x09,0x00,0x00,0x44,0x58,0x14,0x01
	.byte 0x01,0x00,0x00,0x44,0x79,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x44,0x5d,0x00,0x09,0x00,0x00
	.byte 0x44,0x62,0x14,0x01,0x01,0x00,0x00,0x44
	.byte 0x90,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x00,0x09,0x00,0x00,0x44
	.byte 0x7e,0x14,0x01,0x01,0x00,0x00,0x44,0xa7
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x33,0x3f,0x00,0x09,0x00,0x00,0x44,0x95
	.byte 0x14,0x01,0x01,0x00,0x00,0x44,0xc3,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x40
	.byte 0xe4,0x15,0x00,0x00,0x40,0xe4,0x00,0x09
	.byte 0x00,0x00,0x44,0xac,0x14,0x01,0x01,0x00
	.byte 0x00,0x44,0xda,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x00,0x09,0x00
	.byte 0x00,0x44,0xc8,0x14,0x01,0x01,0x00,0x00
	.byte 0x44,0xf1,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x00,0x09,0x00,0x00
	.byte 0x44,0xdf,0x14,0x01,0x01,0x00,0x00,0x45
	.byte 0x12,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x00,0x09,0x00
	.byte 0x00,0x44,0xf6,0x14,0x01,0x01,0x00,0x00
	.byte 0x45,0x29,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x00,0x09,0x00,0x00
	.byte 0x45,0x17,0x13,0x00,0x00,0x33,0x63,0x09
	.byte 0x00,0x00,0x45,0x2e,0x14,0x01,0x01,0x00
	.byte 0x00,0x45,0x59,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x45,0x33,0x00,0x09,0x00,0x00
	.byte 0x45,0x38,0x13,0x00,0x00,0x33,0x63,0x09
	.byte 0x00,0x00,0x45,0x5e,0x14,0x01,0x01,0x00
	.byte 0x00,0x45,0x8e,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x45
	.byte 0x63,0x00,0x09,0x00,0x00,0x45,0x68,0x14
	.byte 0x01,0x01,0x00,0x00,0x45,0xa5,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x33,0x3f
	.byte 0x00,0x09,0x00,0x00,0x45,0x93,0x13,0x00
	.byte 0x00,0x33,0x3f,0x09,0x00,0x00,0x45,0xaa
	.byte 0x14,0x01,0x01,0x00,0x00,0x45,0xcb,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x29,0x15,0x00,0x00,0x45,0xaf,0x00,0x09
	.byte 0x00,0x00,0x45,0xb4,0x14,0x01,0x01,0x00
	.byte 0x00,0x45,0xe2,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x00,0x09,0x00
	.byte 0x00,0x45,0xd0,0x14,0x01,0x01,0x00,0x00
	.byte 0x45,0xf9,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x00,0x09,0x00,0x00
	.byte 0x45,0xe7,0x14,0x01,0x01,0x00,0x00,0x46
	.byte 0x0b,0x15,0x00,0x00,0x3e,0x42,0x00,0x09
	.byte 0x00,0x00,0x45,0xfe,0x14,0x01,0x01,0x00
	.byte 0x00,0x46,0x1d,0x15,0x00,0x00,0x3e,0x42
	.byte 0x00,0x09,0x00,0x00,0x46,0x10,0x14,0x01
	.byte 0x01,0x00,0x00,0x46,0x34,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x66,0x00
	.byte 0x09,0x00,0x00,0x46,0x22,0x14,0x01,0x01
	.byte 0x00,0x00,0x46,0x50,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x66,0x15,0x00
	.byte 0x00,0x03,0x66,0x00,0x09,0x00,0x00,0x46
	.byte 0x39,0x14,0x01,0x01,0x00,0x00,0x46,0x71
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x29,0x00,0x09,0x00,0x00
	.byte 0x46,0x55,0x14,0x01,0x01,0x00,0x00,0x46
	.byte 0x9c,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x29,0x00
	.byte 0x09,0x00,0x00,0x46,0x76,0x14,0x01,0x01
	.byte 0x00,0x00,0x46,0xb3,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x29,0x00,0x09
	.byte 0x00,0x00,0x46,0xa1,0x14,0x01,0x01,0x00
	.byte 0x00,0x46,0xcf,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x00,0x09,0x00,0x00,0x46,0xb8
	.byte 0x09,0x00,0x00,0x03,0x66,0x14,0x01,0x01
	.byte 0x00,0x00,0x46,0xf5,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x46,0xd4
	.byte 0x00,0x09,0x00,0x00,0x46,0xd9,0x14,0x01
	.byte 0x01,0x00,0x00,0x47,0x07,0x15,0x00,0x00
	.byte 0x3e,0x42,0x00,0x09,0x00,0x00,0x46,0xfa
	.byte 0x14,0x01,0x01,0x00,0x00,0x47,0x19,0x15
	.byte 0x00,0x00,0x3e,0x42,0x00,0x09,0x00,0x00
	.byte 0x47,0x0c,0x13,0x00,0x00,0x03,0x66,0x09
	.byte 0x00,0x00,0x47,0x1e,0x14,0x01,0x01,0x00
	.byte 0x00,0x47,0x3f,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x47,0x23,0x00,0x09,0x00,0x00,0x47,0x28
	.byte 0x14,0x01,0x01,0x00,0x00,0x47,0x56,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x00,0x09,0x00,0x00,0x47,0x44,0x14
	.byte 0x01,0x01,0x00,0x00,0x47,0x86,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x40,0xe4
	.byte 0x15,0x00,0x00,0x40,0xe4,0x15,0x00,0x00
	.byte 0x40,0xe4,0x15,0x00,0x00,0x40,0xe4,0x15
	.byte 0x00,0x00,0x40,0xe4,0x15,0x00,0x00,0x40
	.byte 0xe4,0x00,0x09,0x00,0x00,0x47,0x5b,0x16
	.byte 0x01,0x00,0x00,0x03,0x4d,0x01,0x00,0x00
	.byte 0x47,0xa1,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x29,0x00,0x09,0x00,0x00
	.byte 0x47,0x8b,0x09,0x00,0x00,0x03,0x4d,0x14
	.byte 0x01,0x01,0x00,0x00,0x47,0xc2,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x47,0xa6,0x00,0x09,0x00
	.byte 0x00,0x47,0xab,0x14,0x01,0x01,0x00,0x00
	.byte 0x47,0xde,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x36
	.byte 0x73,0x00,0x09,0x00,0x00,0x47,0xc7,0x09
	.byte 0x00,0x00,0x40,0xe4,0x14,0x01,0x01,0x00
	.byte 0x00,0x47,0xff,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x47,0xe3,0x00,0x09,0x00,0x00,0x47,0xe8
	.byte 0x14,0x01,0x01,0x00,0x00,0x48,0x25,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x33,0x6b
	.byte 0x00,0x09,0x00,0x00,0x48,0x04,0x09,0x00
	.byte 0x00,0x03,0x29,0x14,0x01,0x01,0x00,0x00
	.byte 0x48,0x4b,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x48,0x2a,0x00,0x09
	.byte 0x00,0x00,0x48,0x2f,0x14,0x01,0x01,0x00
	.byte 0x00,0x48,0x67,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x47,0xe3,0x00,0x09,0x00,0x00,0x48,0x50
	.byte 0x16,0x01,0x00,0x00,0x03,0x96,0x01,0x00
	.byte 0x00,0x48,0x7d,0x15,0x00,0x00,0x3e,0x42
	.byte 0x00,0x09,0x00,0x00,0x48,0x6c,0x14,0x01
	.byte 0x01,0x00,0x00,0x48,0x99,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x46,0xd4,0x00,0x09,0x00,0x00
	.byte 0x48,0x82,0x14,0x01,0x01,0x00,0x00,0x48
	.byte 0xb5,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x48,0x2a
	.byte 0x00,0x09,0x00,0x00,0x48,0x9e,0x13,0x00
	.byte 0x00,0x33,0x3f,0x09,0x00,0x00,0x48,0xba
	.byte 0x16,0x01,0x00,0x00,0x48,0xbf,0x01,0x00
	.byte 0x00,0x48,0xda,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x00,0x09,0x00
	.byte 0x00,0x48,0xc4,0x14,0x01,0x01,0x00,0x00
	.byte 0x48,0xfb,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x46,0xd4,0x00,0x09
	.byte 0x00,0x00,0x48,0xdf,0x14,0x01,0x01,0x00
	.byte 0x00,0x49,0x1c,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x48,0x2a,0x00
	.byte 0x09,0x00,0x00,0x49,0x00,0x14,0x01,0x01
	.byte 0x00,0x00,0x49,0x3d,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x47,0xe3
	.byte 0x00,0x09,0x00,0x00,0x49,0x21,0x14,0x01
	.byte 0x01,0x00,0x00,0x49,0x5e,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x46
	.byte 0xd4,0x00,0x09,0x00,0x00,0x49,0x42,0x14
	.byte 0x01,0x01,0x00,0x00,0x49,0x7f,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x96
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x48,0x2a,0x00,0x09,0x00,0x00,0x49,0x63
	.byte 0x14,0x01,0x01,0x00,0x00,0x49,0xa0,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x46,0xd4,0x00,0x09,0x00,0x00,0x49
	.byte 0x84,0x14,0x01,0x01,0x00,0x00,0x49,0xc1
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x48,0x2a,0x00,0x09,0x00,0x00
	.byte 0x49,0xa5,0x14,0x01,0x01,0x00,0x00,0x49
	.byte 0xdd,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x46,0xd4
	.byte 0x00,0x09,0x00,0x00,0x49,0xc6,0x14,0x01
	.byte 0x01,0x00,0x00,0x49,0xf9,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x47,0xa6,0x00,0x09,0x00,0x00
	.byte 0x49,0xe2,0x06
	.ascii "unsigned short\0"
	.byte 0x07,0x02,0x09,0x00,0x00,0x49,0xfe,0x14
	.byte 0x01,0x01,0x00,0x00,0x4a,0x2c,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x96
	.byte 0x15,0x00,0x00,0x4a,0x10,0x00,0x09,0x00
	.byte 0x00,0x4a,0x15,0x09,0x00,0x00,0x33,0x6b
	.byte 0x14,0x01,0x01,0x00,0x00,0x4a,0x4d,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x4a,0x31,0x00,0x09
	.byte 0x00,0x00,0x4a,0x36,0x14,0x01,0x01,0x00
	.byte 0x00,0x4a,0x64,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x36,0x73,0x00,0x09,0x00
	.byte 0x00,0x4a,0x52,0x13,0x00,0x00,0x03,0x4d
	.byte 0x09,0x00,0x00,0x4a,0x69,0x13,0x00,0x00
	.byte 0x03,0x66,0x09,0x00,0x00,0x4a,0x73,0x14
	.byte 0x01,0x01,0x00,0x00,0x4a,0x99,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x4a,0x6e,0x15,0x00,0x00
	.byte 0x4a,0x78,0x00,0x09,0x00,0x00,0x4a,0x7d
	.byte 0x14,0x01,0x01,0x00,0x00,0x4a,0xba,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x46,0xd4,0x00,0x09,0x00,0x00,0x4a
	.byte 0x9e,0x14,0x01,0x01,0x00,0x00,0x4a,0xdb
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x48,0x2a,0x00,0x09,0x00,0x00
	.byte 0x4a,0xbf,0x14,0x01,0x01,0x00,0x00,0x4a
	.byte 0xfc,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x03,0x96
	.byte 0x15,0x00,0x00,0x47,0xe3,0x00,0x09,0x00
	.byte 0x00,0x4a,0xe0,0x14,0x01,0x01,0x00,0x00
	.byte 0x4b,0x1d,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x46,0xd4,0x00,0x09
	.byte 0x00,0x00,0x4b,0x01,0x14,0x01,0x01,0x00
	.byte 0x00,0x4b,0x3e,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x48,0x2a,0x00
	.byte 0x09,0x00,0x00,0x4b,0x22,0x14,0x01,0x01
	.byte 0x00,0x00,0x4b,0x69,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x03,0x96
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x33,0x6b,0x00,0x09,0x00,0x00,0x4b,0x43
	.byte 0x14,0x01,0x01,0x00,0x00,0x4b,0x8f,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x46,0xd4
	.byte 0x00,0x09,0x00,0x00,0x4b,0x6e,0x14,0x01
	.byte 0x01,0x00,0x00,0x4b,0xb5,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x48,0x2a,0x00,0x09
	.byte 0x00,0x00,0x4b,0x94,0x14,0x01,0x01,0x00
	.byte 0x00,0x4b,0xd6,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x46,0xd4,0x00
	.byte 0x09,0x00,0x00,0x4b,0xba,0x14,0x01,0x01
	.byte 0x00,0x00,0x4b,0xf7,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x48,0x2a
	.byte 0x00,0x09,0x00,0x00,0x4b,0xdb,0x14,0x01
	.byte 0x01,0x00,0x00,0x4c,0x13,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x03,0x96,0x00,0x09,0x00,0x00
	.byte 0x4b,0xfc,0x14,0x01,0x01,0x00,0x00,0x4c
	.byte 0x2a,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x4d,0x00,0x09,0x00,0x00,0x4c
	.byte 0x18,0x14,0x01,0x01,0x00,0x00,0x4c,0x41
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x66,0x00,0x09,0x00,0x00,0x4c,0x2f
	.byte 0x14,0x01,0x01,0x00,0x00,0x4c,0x58,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x29,0x00,0x09,0x00,0x00,0x4c,0x46,0x13
	.byte 0x00,0x00,0x33,0x63,0x09,0x00,0x00,0x4c
	.byte 0x5d,0x14,0x01,0x01,0x00,0x00,0x4c,0x83
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x4c,0x62,0x00,0x09,0x00,0x00
	.byte 0x4c,0x67,0x14,0x01,0x01,0x00,0x00,0x4c
	.byte 0x95,0x15,0x00,0x00,0x3e,0x42,0x00,0x09
	.byte 0x00,0x00,0x4c,0x88,0x13,0x00,0x00,0x33
	.byte 0x63,0x09,0x00,0x00,0x4c,0x9a,0x14,0x01
	.byte 0x01,0x00,0x00,0x4c,0xc0,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x4c
	.byte 0x9f,0x00,0x09,0x00,0x00,0x4c,0xa4,0x16
	.byte 0x01,0x00,0x00,0x33,0x3f,0x01,0x00,0x00
	.byte 0x4c,0xdb,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x00,0x09,0x00,0x00
	.byte 0x4c,0xc5,0x16,0x01,0x00,0x00,0x33,0x3f
	.byte 0x01,0x00,0x00,0x4c,0xf6,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x4d,0x00
	.byte 0x09,0x00,0x00,0x4c,0xe0,0x16,0x01,0x00
	.byte 0x00,0x33,0x3f,0x01,0x00,0x00,0x4d,0x11
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x4d,0x00,0x09,0x00,0x00,0x4c,0xfb
	.byte 0x13,0x00,0x00,0x03,0x66,0x09,0x00,0x00
	.byte 0x4d,0x16,0x14,0x01,0x01,0x00,0x00,0x4d
	.byte 0x37,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x4d,0x1b
	.byte 0x00,0x09,0x00,0x00,0x4d,0x20,0x13,0x00
	.byte 0x00,0x03,0x66,0x09,0x00,0x00,0x4d,0x3c
	.byte 0x14,0x01,0x01,0x00,0x00,0x4d,0x67,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x4d,0x41,0x15,0x00,0x00,0x03,0x29
	.byte 0x00,0x09,0x00,0x00,0x4d,0x46,0x14,0x01
	.byte 0x01,0x00,0x00,0x4d,0x83,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x49,0xfe,0x00,0x09,0x00,0x00
	.byte 0x4d,0x6c,0x14,0x01,0x01,0x00,0x00,0x4d
	.byte 0x9a,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x66,0x00,0x09,0x00,0x00,0x4d
	.byte 0x88,0x14,0x01,0x01,0x00,0x00,0x4d,0xb1
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x4d,0x00,0x09,0x00,0x00,0x4d,0x9f
	.byte 0x14,0x01,0x01,0x00,0x00,0x4d,0xc3,0x15
	.byte 0x00,0x00,0x3e,0x42,0x00,0x09,0x00,0x00
	.byte 0x4d,0xb6,0x13,0x00,0x00,0x03,0x66,0x09
	.byte 0x00,0x00,0x4d,0xc8,0x14,0x01,0x01,0x00
	.byte 0x00,0x4d,0xe4,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x4d,0xcd,0x00,0x09,0x00
	.byte 0x00,0x4d,0xd2,0x14,0x01,0x01,0x00,0x00
	.byte 0x4d,0xfb,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x4d,0x00,0x09,0x00,0x00
	.byte 0x4d,0xe9,0x14,0x01,0x01,0x00,0x00,0x4e
	.byte 0x12,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x00,0x09,0x00,0x00,0x4e
	.byte 0x00,0x13,0x00,0x00,0x03,0x66,0x09,0x00
	.byte 0x00,0x4e,0x17,0x14,0x01,0x01,0x00,0x00
	.byte 0x4e,0x51,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x03
	.byte 0x66,0x15,0x00,0x00,0x03,0x66,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x4e,0x1c,0x15,0x00,0x00
	.byte 0x33,0x3f,0x00,0x09,0x00,0x00,0x4e,0x21
	.byte 0x13,0x00,0x00,0x03,0x66,0x09,0x00,0x00
	.byte 0x4e,0x56,0x14,0x01,0x01,0x00,0x00,0x4e
	.byte 0xa4,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x03,0x66
	.byte 0x15,0x00,0x00,0x03,0x66,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x66,0x15,0x00,0x00,0x03
	.byte 0x66,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x4e,0x5b
	.byte 0x15,0x00,0x00,0x33,0x3f,0x00,0x09,0x00
	.byte 0x00,0x4e,0x60,0x14,0x01,0x01,0x00,0x00
	.byte 0x4e,0xc5,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x03
	.byte 0x66,0x15,0x00,0x00,0x03,0x66,0x00,0x09
	.byte 0x00,0x00,0x4e,0xa9,0x14,0x01,0x01,0x00
	.byte 0x00,0x4e,0xf5,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x66,0x15,0x00,0x00,0x03,0x66,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x03
	.byte 0x66,0x15,0x00,0x00,0x03,0x66,0x00,0x09
	.byte 0x00,0x00,0x4e,0xca,0x13,0x00,0x00,0x03
	.byte 0x66,0x09,0x00,0x00,0x4e,0xfa,0x14,0x01
	.byte 0x01,0x00,0x00,0x4f,0x20,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x4e
	.byte 0xff,0x00,0x09,0x00,0x00,0x4f,0x04,0x14
	.byte 0x01,0x01,0x00,0x00,0x4f,0x37,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x96
	.byte 0x00,0x09,0x00,0x00,0x4f,0x25,0x13,0x00
	.byte 0x00,0x03,0x66,0x09,0x00,0x00,0x4f,0x3c
	.byte 0x14,0x01,0x01,0x00,0x00,0x4f,0x58,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x4f
	.byte 0x41,0x00,0x09,0x00,0x00,0x4f,0x46,0x14
	.byte 0x01,0x01,0x00,0x00,0x4f,0x74,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x4d
	.byte 0x15,0x00,0x00,0x03,0x96,0x00,0x09,0x00
	.byte 0x00,0x4f,0x5d,0x14,0x01,0x01
	.byte 0x00,0x00,0x4f,0x95,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x66,0x15,0x00
	.byte 0x00,0x03,0x66,0x15,0x00,0x00,0x03,0x66
	.byte 0x00,0x09,0x00,0x00,0x4f,0x79,0x13,0x00
	.byte 0x00,0x03,0x66,0x09,0x00,0x00,0x4f,0x9a
	.byte 0x14,0x01,0x01,0x00,0x00,0x4f,0xb6,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x4f
	.byte 0x9f,0x00,0x09,0x00,0x00,0x4f,0xa4,0x13
	.byte 0x00,0x00,0x33,0x63,0x09,0x00,0x00,0x4f
	.byte 0xbb,0x14,0x01,0x01,0x00,0x00,0x4f,0xe1
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x4f,0xc0,0x00,0x09,0x00,0x00
	.byte 0x4f,0xc5,0x14,0x01,0x01,0x00,0x00,0x50
	.byte 0x11,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x40,0xe4,0x15,0x00,0x00,0x40,0xe4
	.byte 0x15,0x00,0x00,0x40,0xe4,0x15,0x00,0x00
	.byte 0x40,0xe4,0x15,0x00,0x00,0x40,0xe4,0x15
	.byte 0x00,0x00,0x40,0xe4,0x00,0x09,0x00,0x00
	.byte 0x4f,0xe6,0x14,0x01,0x01,0x00,0x00,0x50
	.byte 0x28,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x66,0x00,0x09,0x00,0x00,0x50
	.byte 0x16,0x13,0x00,0x00,0x03,0x66,0x09,0x00
	.byte 0x00,0x50,0x2d,0x14,0x01,0x01,0x00,0x00
	.byte 0x50,0x53,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x03
	.byte 0x29,0x15,0x00,0x00,0x50,0x32,0x00,0x09
	.byte 0x00,0x00,0x50,0x37,0x14,0x01,0x01,0x00
	.byte 0x00,0x50,0x6f,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x03,0x29,0x00,0x09,0x00,0x00,0x50,0x58
	.byte 0x14,0x01,0x01,0x00,0x00,0x50,0x8b,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x03,0x66,0x00,0x09
	.byte 0x00,0x00,0x50,0x74,0x14,0x01,0x01,0x00
	.byte 0x00,0x50,0xa7,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x66,0x15,0x00,0x00
	.byte 0x03,0x66,0x00,0x09,0x00,0x00,0x50,0x90
	.byte 0x13,0x00,0x00,0x03,0x66,0x09,0x00,0x00
	.byte 0x50,0xac,0x14,0x01,0x01,0x00,0x00,0x50
	.byte 0xcd,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x50,0xb1
	.byte 0x00,0x09,0x00,0x00,0x50,0xb6,0x14,0x01
	.byte 0x01,0x00,0x00,0x50,0xe4,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x66,0x00
	.byte 0x09,0x00,0x00,0x50,0xd2,0x14,0x01,0x01
	.byte 0x00,0x00,0x51,0x00,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x03,0x96,0x00,0x09,0x00,0x00,0x50
	.byte 0xe9,0x14,0x01,0x01,0x00,0x00,0x51,0x1c
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x66,0x15,0x00,0x00,0x03,0x66,0x00
	.byte 0x09,0x00,0x00,0x51,0x05,0x13,0x00,0x00
	.byte 0x33,0x3f,0x09,0x00,0x00,0x51,0x21,0x14
	.byte 0x01,0x01,0x00,0x00,0x51,0x3d,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x51,0x26
	.byte 0x00,0x09,0x00,0x00,0x51,0x2b,0x14,0x01
	.byte 0x01,0x00,0x00,0x51,0x4f,0x15,0x00,0x00
	.byte 0x3e,0x42,0x00,0x09,0x00,0x00,0x51,0x42
	.byte 0x14,0x01,0x01,0x00,0x00,0x51,0x61,0x15
	.byte 0x00,0x00,0x3e,0x42,0x00,0x09,0x00,0x00
	.byte 0x51,0x54,0x14,0x01,0x01,0x00,0x00,0x51
	.byte 0x73,0x15,0x00,0x00,0x3e,0x42,0x00,0x09
	.byte 0x00,0x00,0x51,0x66,0x14,0x01,0x01,0x00
	.byte 0x00,0x51,0x85,0x15,0x00,0x00,0x3e,0x42
	.byte 0x00,0x09,0x00,0x00,0x51,0x78,0x14,0x01
	.byte 0x01,0x00,0x00,0x51,0x9c,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x4d,0x00
	.byte 0x09,0x00,0x00,0x51,0x8a,0x14,0x01,0x01
	.byte 0x00,0x00,0x51,0xb3,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x4d,0x00,0x09
	.byte 0x00,0x00,0x51,0xa1,0x14,0x01,0x01,0x00
	.byte 0x00,0x51,0xc5,0x15,0x00,0x00,0x3e,0x42
	.byte 0x00,0x09,0x00,0x00,0x51,0xb8,0x14,0x01
	.byte 0x01,0x00,0x00,0x51,0xdc,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x4d,0x00
	.byte 0x09,0x00,0x00,0x51,0xca,0x14,0x01,0x01
	.byte 0x00,0x00,0x52,0x02,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x66,0x15,0x00
	.byte 0x00,0x03,0x66,0x15,0x00,0x00,0x03,0x66
	.byte 0x15,0x00,0x00,0x03,0x66,0x00,0x09,0x00
	.byte 0x00,0x51,0xe1,0x14,0x01,0x01,0x00,0x00
	.byte 0x52,0x19,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x00,0x09,0x00,0x00
	.byte 0x52,0x07,0x14,0x01,0x01,0x00,0x00,0x52
	.byte 0x4e,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x33
	.byte 0x6b,0x00,0x09,0x00,0x00,0x52,0x1e,0x14
	.byte 0x01,0x01,0x00,0x00,0x52,0x74,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x66
	.byte 0x15,0x00,0x00,0x03,0x66,0x15,0x00,0x00
	.byte 0x03,0x66,0x15,0x00,0x00,0x03,0x66,0x00
	.byte 0x09,0x00,0x00,0x52,0x53,0x16,0x01,0x00
	.byte 0x00,0x03,0x29,0x01,0x00,0x00,0x52,0x8f
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x00,0x09,0x00,0x00,0x52,0x79
	.byte 0x14,0x01,0x01,0x00,0x00,0x52,0xb5,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x66,0x15,0x00,0x00,0x03,0x66,0x15,0x00
	.byte 0x00,0x03,0x66,0x15,0x00,0x00,0x03,0x66
	.byte 0x00,0x09,0x00,0x00,0x52,0x94,0x14,0x01
	.byte 0x01,0x00,0x00,0x52,0xd6,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x66,0x15
	.byte 0x00,0x00,0x03,0x66,0x15,0x00,0x00,0x03
	.byte 0x66,0x00,0x09,0x00,0x00,0x52,0xba,0x14
	.byte 0x01,0x01,0x00,0x00,0x52,0xfc,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x29,0x00
	.byte 0x09,0x00,0x00,0x52,0xdb,0x14,0x01,0x01
	.byte 0x00,0x00,0x53,0x18,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x47,0xa6,0x00,0x09,0x00,0x00,0x53
	.byte 0x01,0x14,0x01,0x01,0x00,0x00,0x53,0x2f
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x00,0x09,0x00,0x00,0x53,0x1d
	.byte 0x14,0x01,0x01,0x00,0x00,0x53,0x50,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x4d,0x00,0x09,0x00,0x00,0x53
	.byte 0x34,0x14,0x01,0x01,0x00,0x00,0x53,0x67
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x4d,0x00,0x09,0x00,0x00,0x53,0x55
	.byte 0x14,0x01,0x01,0x00,0x00,0x53,0x88,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x03,0x96,0x00,0x09,0x00,0x00,0x53
	.byte 0x6c,0x14,0x01,0x01,0x00,0x00,0x53,0xa4
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x66,0x15,0x00,0x00,0x03,0x66,0x00
	.byte 0x09,0x00,0x00,0x53,0x8d,0x14,0x01,0x01
	.byte 0x00,0x00,0x53,0xca,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x66,0x15,0x00
	.byte 0x00,0x03,0x66,0x15,0x00,0x00,0x03,0x66
	.byte 0x15,0x00,0x00,0x03,0x66,0x00,0x09,0x00
	.byte 0x00,0x53,0xa9,0x13,0x00,0x00,0x33,0x63
	.byte 0x09,0x00,0x00,0x53,0xcf,0x14,0x01,0x01
	.byte 0x00,0x00,0x53,0xfa,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x53,0xd4,0x00,0x09,0x00
	.byte 0x00,0x53,0xd9,0x13,0x00,0x00,0x03,0x66
	.byte 0x09,0x00,0x00,0x53,0xff,0x14,0x01,0x01
	.byte 0x00,0x00,0x54,0x25,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x54,0x04
	.byte 0x00,0x09,0x00,0x00,0x54,0x09,0x13,0x00
	.byte 0x00,0x03,0x66,0x09,0x00,0x00,0x54,0x2a
	.byte 0x14,0x01,0x01,0x00,0x00,0x54,0x50,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x54,0x2f,0x00,0x09,0x00,0x00,0x54
	.byte 0x34,0x14,0x01,0x01,0x00,0x00,0x54,0x8a
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x03
	.byte 0x29,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x03,0x96
	.byte 0x15,0x00,0x00,0x42,0x9b,0x00,0x09,0x00
	.byte 0x00,0x54,0x55,0x14,0x01,0x01,0x00,0x00
	.byte 0x54,0xc9,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x03
	.byte 0x29,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x42,0x9b,0x00,0x09,0x00,0x00
	.byte 0x54,0x8f,0x14,0x01,0x01,0x00,0x00,0x54
	.byte 0xfe,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x42
	.byte 0x9b,0x00,0x09,0x00,0x00,0x54,0xce,0x14
	.byte 0x01,0x01,0x00,0x00,0x55,0x3d,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x96
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x03
	.byte 0x29,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x42,0x9b
	.byte 0x00,0x09,0x00,0x00,0x55,0x03,0x14,0x01
	.byte 0x01,0x00,0x00,0x55,0x81,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x03
	.byte 0x29,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x42,0x9b,0x00,0x09,0x00,0x00
	.byte 0x55,0x42,0x14,0x01,0x01,0x00,0x00,0x55
	.byte 0xca,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x03
	.byte 0x29,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x03,0x96
	.byte 0x15,0x00,0x00,0x42,0x9b,0x00,0x09,0x00
	.byte 0x00,0x55,0x86,0x13,0x00,0x00,0x03,0x66
	.byte 0x09,0x00,0x00,0x55,0xcf,0x14,0x01,0x01
	.byte 0x00,0x00,0x55,0xf5,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x96,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x55,0xd4
	.byte 0x00,0x09,0x00,0x00,0x55,0xd9,0x14,0x01
	.byte 0x01,0x00,0x00,0x56,0x16,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x66,0x15
	.byte 0x00,0x00,0x03,0x66,0x15,0x00,0x00,0x03
	.byte 0x66,0x00,0x09,0x00,0x00,0x55,0xfa,0x14
	.byte 0x01,0x01,0x00,0x00,0x56,0x32,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x66
	.byte 0x15,0x00,0x00,0x03,0x66,0x00,0x09,0x00
	.byte 0x00,0x56,0x1b,0x14,0x01,0x01,0x00,0x00
	.byte 0x56,0x53,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x66,0x15,0x00,0x00,0x03
	.byte 0x66,0x15,0x00,0x00,0x03,0x66,0x00,0x09
	.byte 0x00,0x00,0x56,0x37,0x14,0x01,0x01,0x00
	.byte 0x00,0x56,0x79,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x66,0x15,0x00,0x00
	.byte 0x03,0x66,0x15,0x00,0x00,0x03,0x66,0x15
	.byte 0x00,0x00,0x03,0x66,0x00,0x09,0x00,0x00
	.byte 0x56,0x58,0x13,0x00,0x00,0x03,0x66,0x09
	.byte 0x00,0x00,0x56,0x7e,0x14,0x01,0x01,0x00
	.byte 0x00,0x56,0x9a,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x56,0x83,0x00,0x09,0x00
	.byte 0x00,0x56,0x88,0x13,0x00,0x00,0x33,0x63
	.byte 0x09,0x00,0x00,0x56,0x9f,0x14,0x01,0x01
	.byte 0x00,0x00,0x56,0xca,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x96,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x56,0xa4,0x00,0x09,0x00
	.byte 0x00,0x56,0xa9,0x14,0x01,0x01,0x00,0x00
	.byte 0x56,0xf0,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x03
	.byte 0x29,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x29,0x00,0x09,0x00,0x00,0x56
	.byte 0xcf,0x14,0x01,0x01,0x00,0x00,0x57,0x16
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x66,0x15,0x00,0x00,0x03,0x66,0x15
	.byte 0x00,0x00,0x03,0x66,0x15,0x00,0x00,0x03
	.byte 0x66,0x00,0x09,0x00,0x00,0x56,0xf5,0x14
	.byte 0x01,0x01,0x00,0x00,0x57,0x28,0x15,0x00
	.byte 0x00,0x3e,0x42,0x00,0x09,0x00,0x00,0x57
	.byte 0x1b,0x12
	.ascii "gl_api_table\0"
	.byte 0x02,0xdc,0x02,0x00,0x00,0x65,0xd1,0x0f
	.ascii "Accum\0"
	.byte 0x00,0x00,0x3e,0x5e,0x02,0x23,0x00,0x0f
	.ascii "AlphaFunc\0"
	.byte 0x00,0x00,0x3e,0x7a,0x02,0x23,0x04,0x0f
	.ascii "AreTexturesResident\0"
	.byte 0x00,0x00,0x3e,0xa9,0x02,0x23,0x08,0x0f
	.ascii "ArrayElement\0"
	.byte 0x00,0x00,0x3e,0xc0,0x02,0x23,0x0c,0x0f
	.ascii "Begin\0"
	.byte 0x00,0x00,0x3e,0xd7,0x02,0x23,0x10,0x0f
	.ascii "BindTexture\0"
	.byte 0x00,0x00,0x3e,0xf3,0x02,0x23,0x14,0x0f
	.ascii "Bitmap\0"
	.byte 0x00,0x00,0x3f,0xe1,0x02,0x23,0x18,0x0f
	.ascii "BlendColor\0"
	.byte 0x00,0x00,0x40,0x07,0x02,0x23,0x1c,0x0f
	.ascii "BlendEquation\0"
	.byte 0x00,0x00,0x40,0x1e,0x02,0x23,0x20,0x0f
	.ascii "BlendFunc\0"
	.byte 0x00,0x00,0x40,0x3a,0x02,0x23,0x24,0x0f
	.ascii "CallList\0"
	.byte 0x00,0x00,0x40,0x51,0x02,0x23,0x28,0x0f
	.ascii "CallLists\0"
	.byte 0x00,0x00,0x40,0x7c,0x02,0x23,0x2c,0x0f
	.ascii "Clear\0"
	.byte 0x00,0x00,0x40,0x93,0x02,0x23,0x30,0x0f
	.ascii "ClearAccum\0"
	.byte 0x00,0x00,0x40,0xb9,0x02,0x23,0x34,0x0f
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x40,0xdf,0x02,0x23,0x38,0x0f
	.ascii "ClearDepth\0"
	.byte 0x00,0x00,0x41,0x00,0x02,0x23,0x3c,0x0f
	.ascii "ClearIndex\0"
	.byte 0x00,0x00,0x41,0x17,0x02,0x23,0x40,0x0f
	.ascii "ClearStencil\0"
	.byte 0x00,0x00,0x41,0x2e,0x02,0x23,0x44,0x0f
	.ascii "ClipPlane\0"
	.byte 0x00,0x00,0x41,0x54,0x02,0x23,0x48,0x0f
	.ascii "Color3f\0"
	.byte 0x00,0x00,0x41,0x75,0x02,0x23,0x4c,0x0f
	.ascii "Color3fv\0"
	.byte 0x00,0x00,0x41,0x96,0x02,0x23,0x50,0x0f
	.ascii "Color4f\0"
	.byte 0x00,0x00,0x41,0xbc,0x02,0x23,0x54,0x0f
	.ascii "Color4fv\0"
	.byte 0x00,0x00,0x41,0xdd,0x02,0x23,0x58,0x0f
	.ascii "Color4ub\0"
	.byte 0x00,0x00,0x42,0x03,0x02,0x23,0x5c,0x0f
	.ascii "Color4ubv\0"
	.byte 0x00,0x00,0x42,0x24,0x02,0x23,0x60,0x0f
	.ascii "ColorMask\0"
	.byte 0x00,0x00,0x42,0x4a,0x02,0x23,0x64,0x0f
	.ascii "ColorMaterial\0"
	.byte 0x00,0x00,0x42,0x66,0x02,0x23,0x68,0x0f
	.ascii "ColorPointer\0"
	.byte 0x00,0x00,0x42,0x96,0x02,0x23,0x6c,0x0f
	.ascii "ColorTable\0"
	.byte 0x00,0x00,0x42,0xbc,0x02,0x23,0x70,0x0f
	.ascii "ColorSubTable\0"
	.byte 0x00,0x00,0x42,0xdd,0x02,0x23,0x74,0x0f
	.ascii "CopyPixels\0"
	.byte 0x00,0x00,0x43,0x08,0x02,0x23,0x78,0x0f
	.ascii "CopyTexImage1D\0"
	.byte 0x00,0x00,0x43,0x3d,0x02,0x23,0x7c,0x0f
	.ascii "CopyTexImage2D\0"
	.byte 0x00,0x00,0x43,0x77,0x03,0x23,0x80,0x01
	.byte 0x0f
	.ascii "CopyTexSubImage1D\0"
	.byte 0x00,0x00,0x43,0xa7,0x03,0x23,0x84,0x01
	.byte 0x0f
	.ascii "CopyTexSubImage2D\0"
	.byte 0x00,0x00,0x43,0xe1,0x03,0x23,0x88,0x01
	.byte 0x0f
	.ascii "CopyTexSubImage3DEXT\0"
	.byte 0x00,0x00,0x44,0x20,0x03,0x23,0x8c,0x01
	.byte 0x0f
	.ascii "CullFace\0"
	.byte 0x00,0x00,0x44,0x37,0x03,0x23,0x90,0x01
	.byte 0x0f
	.ascii "DeleteLists\0"
	.byte 0x00,0x00,0x44,0x53,0x03,0x23,0x94,0x01
	.byte 0x0f
	.ascii "DeleteTextures\0"
	.byte 0x00,0x00,0x44,0x79,0x03,0x23,0x98,0x01
	.byte 0x0f
	.ascii "DepthFunc\0"
	.byte 0x00,0x00,0x44,0x90,0x03,0x23,0x9c,0x01
	.byte 0x0f
	.ascii "DepthMask\0"
	.byte 0x00,0x00,0x44,0xa7,0x03,0x23,0xa0,0x01
	.byte 0x0f
	.ascii "DepthRange\0"
	.byte 0x00,0x00,0x44,0xc3,0x03,0x23,0xa4,0x01
	.byte 0x0f
	.ascii "Disable\0"
	.byte 0x00,0x00,0x44,0xda,0x03,0x23,0xa8,0x01
	.byte 0x0f
	.ascii "DisableClientState\0"
	.byte 0x00,0x00,0x44,0xf1,0x03,0x23,0xac,0x01
	.byte 0x0f
	.ascii "DrawArrays\0"
	.byte 0x00,0x00,0x45,0x12,0x03,0x23,0xb0,0x01
	.byte 0x0f
	.ascii "DrawBuffer\0"
	.byte 0x00,0x00,0x45,0x29,0x03,0x23,0xb4,0x01
	.byte 0x0f
	.ascii "DrawElements\0"
	.byte 0x00,0x00,0x45,0x59,0x03,0x23,0xb8,0x01
	.byte 0x0f
	.ascii "DrawPixels\0"
	.byte 0x00,0x00,0x45,0x8e,0x03,0x23,0xbc,0x01
	.byte 0x0f
	.ascii "EdgeFlag\0"
	.byte 0x00,0x00,0x45,0xa5,0x03,0x23,0xc0,0x01
	.byte 0x0f
	.ascii "EdgeFlagPointer\0"
	.byte 0x00,0x00,0x45,0xcb,0x03,0x23,0xc4,0x01
	.byte 0x0f
	.ascii "Enable\0"
	.byte 0x00,0x00,0x45,0xe2,0x03,0x23,0xc8,0x01
	.byte 0x0f
	.ascii "EnableClientState\0"
	.byte 0x00,0x00,0x45,0xf9,0x03,0x23,0xcc,0x01
	.byte 0x0f
	.ascii "End\0"
	.byte 0x00,0x00,0x46,0x0b,0x03,0x23,0xd0,0x01
	.byte 0x0f
	.ascii "EndList\0"
	.byte 0x00,0x00,0x46,0x1d,0x03,0x23,0xd4,0x01
	.byte 0x0f
	.ascii "EvalCoord1f\0"
	.byte 0x00,0x00,0x46,0x34,0x03,0x23,0xd8,0x01
	.byte 0x0f
	.ascii "EvalCoord2f\0"
	.byte 0x00,0x00,0x46,0x50,0x03,0x23,0xdc,0x01
	.byte 0x0f
	.ascii "EvalMesh1\0"
	.byte 0x00,0x00,0x46,0x71,0x03,0x23,0xe0,0x01
	.byte 0x0f
	.ascii "EvalMesh2\0"
	.byte 0x00,0x00,0x46,0x9c,0x03,0x23,0xe4,0x01
	.byte 0x0f
	.ascii "EvalPoint1\0"
	.byte 0x00,0x00,0x46,0xb3,0x03,0x23,0xe8,0x01
	.byte 0x0f
	.ascii "EvalPoint2\0"
	.byte 0x00,0x00,0x46,0xcf,0x03,0x23,0xec,0x01
	.byte 0x0f
	.ascii "FeedbackBuffer\0"
	.byte 0x00,0x00,0x46,0xf5,0x03,0x23,0xf0,0x01
	.byte 0x0f
	.ascii "Finish\0"
	.byte 0x00,0x00,0x47,0x07,0x03,0x23,0xf4,0x01
	.byte 0x0f
	.ascii "Flush\0"
	.byte 0x00,0x00,0x47,0x19,0x03,0x23,0xf8,0x01
	.byte 0x0f
	.ascii "Fogfv\0"
	.byte 0x00,0x00,0x47,0x3f,0x03,0x23,0xfc,0x01
	.byte 0x0f
	.ascii "FrontFace\0"
	.byte 0x00,0x00,0x47,0x56,0x03,0x23,0x80,0x02
	.byte 0x0f
	.ascii "Frustum\0"
	.byte 0x00,0x00,0x47,0x86,0x03,0x23,0x84,0x02
	.byte 0x0f
	.ascii "GenLists\0"
	.byte 0x00,0x00,0x47,0xa1,0x03,0x23,0x88,0x02
	.byte 0x0f
	.ascii "GenTextures\0"
	.byte 0x00,0x00,0x47,0xc2,0x03,0x23,0x8c,0x02
	.byte 0x0f
	.ascii "GetBooleanv\0"
	.byte 0x00,0x00,0x47,0xde,0x03,0x23,0x90,0x02
	.byte 0x0f
	.ascii "GetClipPlane\0"
	.byte 0x00,0x00,0x47,0xff,0x03,0x23,0x94,0x02
	.byte 0x0f
	.ascii "GetColorTable\0"
	.byte 0x00,0x00,0x48,0x25,0x03,0x23,0x98,0x02
	.byte 0x0f
	.ascii "GetColorTableParameteriv\0"
	.byte 0x00,0x00,0x48,0x4b,0x03,0x23,0x9c,0x02
	.byte 0x0f
	.ascii "GetDoublev\0"
	.byte 0x00,0x00,0x48,0x67,0x03,0x23,0xa0,0x02
	.byte 0x0f
	.ascii "GetError\0"
	.byte 0x00,0x00,0x48,0x7d,0x03,0x23,0xa4,0x02
	.byte 0x0f
	.ascii "GetFloatv\0"
	.byte 0x00,0x00,0x48,0x99,0x03,0x23,0xa8,0x02
	.byte 0x0f
	.ascii "GetIntegerv\0"
	.byte 0x00,0x00,0x48,0xb5,0x03,0x23,0xac,0x02
	.byte 0x0f
	.ascii "GetString\0"
	.byte 0x00,0x00,0x48,0xda,0x03,0x23,0xb0,0x02
	.byte 0x0f
	.ascii "GetLightfv\0"
	.byte 0x00,0x00,0x48,0xfb,0x03,0x23,0xb4,0x02
	.byte 0x0f
	.ascii "GetLightiv\0"
	.byte 0x00,0x00,0x49,0x1c,0x03,0x23,0xb8,0x02
	.byte 0x0f
	.ascii "GetMapdv\0"
	.byte 0x00,0x00,0x49,0x3d,0x03,0x23,0xbc,0x02
	.byte 0x0f
	.ascii "GetMapfv\0"
	.byte 0x00,0x00,0x49,0x5e,0x03,0x23,0xc0,0x02
	.byte 0x0f
	.ascii "GetMapiv\0"
	.byte 0x00,0x00,0x49,0x7f,0x03,0x23,0xc4,0x02
	.byte 0x0f
	.ascii "GetMaterialfv\0"
	.byte 0x00,0x00,0x49,0xa0,0x03,0x23,0xc8,0x02
	.byte 0x0f
	.ascii "GetMaterialiv\0"
	.byte 0x00,0x00,0x49,0xc1,0x03,0x23,0xcc,0x02
	.byte 0x0f
	.ascii "GetPixelMapfv\0"
	.byte 0x00,0x00,0x49,0xdd,0x03,0x23,0xd0,0x02
	.byte 0x0f
	.ascii "GetPixelMapuiv\0"
	.byte 0x00,0x00,0x49,0xf9,0x03,0x23,0xd4,0x02
	.byte 0x0f
	.ascii "GetPixelMapusv\0"
	.byte 0x00,0x00,0x4a,0x2c,0x03,0x23,0xd8,0x02
	.byte 0x0f
	.ascii "GetPointerv\0"
	.byte 0x00,0x00,0x4a,0x4d,0x03,0x23,0xdc,0x02
	.byte 0x0f
	.ascii "GetPolygonStipple\0"
	.byte 0x00,0x00,0x4a,0x64,0x03,0x23,0xe0,0x02
	.byte 0x0f
	.ascii "PrioritizeTextures\0"
	.byte 0x00,0x00,0x4a,0x99,0x03,0x23,0xe4,0x02
	.byte 0x0f
	.ascii "GetTexEnvfv\0"
	.byte 0x00,0x00,0x4a,0xba,0x03,0x23,0xe8,0x02
	.byte 0x0f
	.ascii "GetTexEnviv\0"
	.byte 0x00,0x00,0x4a,0xdb,0x03,0x23,0xec,0x02
	.byte 0x0f
	.ascii "GetTexGendv\0"
	.byte 0x00,0x00,0x4a,0xfc,0x03,0x23,0xf0,0x02
	.byte 0x0f
	.ascii "GetTexGenfv\0"
	.byte 0x00,0x00,0x4b,0x1d,0x03,0x23,0xf4,0x02
	.byte 0x0f
	.ascii "GetTexGeniv\0"
	.byte 0x00,0x00,0x4b,0x3e,0x03,0x23,0xf8,0x02
	.byte 0x0f
	.ascii "GetTexImage\0"
	.byte 0x00,0x00,0x4b,0x69,0x03,0x23,0xfc,0x02
	.byte 0x0f
	.ascii "GetTexLevelParameterfv\0"
	.byte 0x00,0x00,0x4b,0x8f,0x03,0x23,0x80,0x03
	.byte 0x0f
	.ascii "GetTexLevelParameteriv\0"
	.byte 0x00,0x00,0x4b,0xb5,0x03,0x23,0x84,0x03
	.byte 0x0f
	.ascii "GetTexParameterfv\0"
	.byte 0x00,0x00,0x4b,0xd6,0x03,0x23,0x88,0x03
	.byte 0x0f
	.ascii "GetTexParameteriv\0"
	.byte 0x00,0x00,0x4b,0xf7,0x03,0x23,0x8c,0x03
	.byte 0x0f
	.ascii "Hint\0"
	.byte 0x00,0x00,0x4c,0x13,0x03,0x23,0x90,0x03
	.byte 0x0f
	.ascii "IndexMask\0"
	.byte 0x00,0x00,0x4c,0x2a,0x03,0x23,0x94,0x03
	.byte 0x0f
	.ascii "Indexf\0"
	.byte 0x00,0x00,0x4c,0x41,0x03,0x23,0x98,0x03
	.byte 0x0f
	.ascii "Indexi\0"
	.byte 0x00,0x00,0x4c,0x58,0x03,0x23,0x9c,0x03
	.byte 0x0f
	.ascii "IndexPointer\0"
	.byte 0x00,0x00,0x4c,0x83,0x03,0x23,0xa0,0x03
	.byte 0x0f
	.ascii "InitNames\0"
	.byte 0x00,0x00,0x4c,0x95,0x03,0x23,0xa4,0x03
	.byte 0x0f
	.ascii "InterleavedArrays\0"
	.byte 0x00,0x00,0x4c,0xc0,0x03,0x23,0xa8,0x03
	.byte 0x0f
	.ascii "IsEnabled\0"
	.byte 0x00,0x00,0x4c,0xdb,0x03,0x23,0xac,0x03
	.byte 0x0f
	.ascii "IsList\0"
	.byte 0x00,0x00,0x4c,0xf6,0x03,0x23,0xb0,0x03
	.byte 0x0f
	.ascii "IsTexture\0"
	.byte 0x00,0x00,0x4d,0x11,0x03,0x23,0xb4,0x03
	.byte 0x0f
	.ascii "LightModelfv\0"
	.byte 0x00,0x00,0x4d,0x37,0x03,0x23,0xb8,0x03
	.byte 0x0f
	.ascii "Lightfv\0"
	.byte 0x00,0x00,0x4d,0x67,0x03,0x23,0xbc,0x03
	.byte 0x0f
	.ascii "LineStipple\0"
	.byte 0x00,0x00,0x4d,0x83,0x03,0x23,0xc0,0x03
	.byte 0x0f
	.ascii "LineWidth\0"
	.byte 0x00,0x00,0x4d,0x9a,0x03,0x23,0xc4,0x03
	.byte 0x0f
	.ascii "ListBase\0"
	.byte 0x00,0x00,0x4d,0xb1,0x03,0x23,0xc8,0x03
	.byte 0x0f
	.ascii "LoadIdentity\0"
	.byte 0x00,0x00,0x4d,0xc3,0x03,0x23,0xcc,0x03
	.byte 0x0f
	.ascii "LoadMatrixf\0"
	.byte 0x00,0x00,0x4d,0xe4,0x03,0x23,0xd0,0x03
	.byte 0x0f
	.ascii "LoadName\0"
	.byte 0x00,0x00,0x4d,0xfb,0x03,0x23,0xd4,0x03
	.byte 0x0f
	.ascii "LogicOp\0"
	.byte 0x00,0x00,0x4e,0x12,0x03,0x23,0xd8,0x03
	.byte 0x0f
	.ascii "Map1f\0"
	.byte 0x00,0x00,0x4e,0x51,0x03,0x23,0xdc,0x03
	.byte 0x0f
	.ascii "Map2f\0"
	.byte 0x00,0x00,0x4e,0xa4,0x03,0x23,0xe0,0x03
	.byte 0x0f
	.ascii "MapGrid1f\0"
	.byte 0x00,0x00,0x4e,0xc5,0x03,0x23,0xe4,0x03
	.byte 0x0f
	.ascii "MapGrid2f\0"
	.byte 0x00,0x00,0x4e,0xf5,0x03,0x23,0xe8,0x03
	.byte 0x0f
	.ascii "Materialfv\0"
	.byte 0x00,0x00,0x4f,0x20,0x03,0x23,0xec,0x03
	.byte 0x0f
	.ascii "MatrixMode\0"
	.byte 0x00,0x00,0x4f,0x37,0x03,0x23,0xf0,0x03
	.byte 0x0f
	.ascii "MultMatrixf\0"
	.byte 0x00,0x00,0x4f,0x58,0x03,0x23,0xf4,0x03
	.byte 0x0f
	.ascii "NewList\0"
	.byte 0x00,0x00,0x4f,0x74,0x03,0x23,0xf8,0x03
	.byte 0x0f
	.ascii "Normal3f\0"
	.byte 0x00,0x00,0x4f,0x95,0x03,0x23,0xfc,0x03
	.byte 0x0f
	.ascii "Normal3fv\0"
	.byte 0x00,0x00,0x4f,0xb6,0x03,0x23,0x80,0x04
	.byte 0x0f
	.ascii "NormalPointer\0"
	.byte 0x00,0x00,0x4f,0xe1,0x03,0x23,0x84,0x04
	.byte 0x0f
	.ascii "Ortho\0"
	.byte 0x00,0x00,0x50,0x11,0x03,0x23,0x88,0x04
	.byte 0x0f
	.ascii "PassThrough\0"
	.byte 0x00,0x00,0x50,0x28,0x03,0x23,0x8c,0x04
	.byte 0x0f
	.ascii "PixelMapfv\0"
	.byte 0x00,0x00,0x50,0x53,0x03,0x23,0x90,0x04
	.byte 0x0f
	.ascii "PixelStorei\0"
	.byte 0x00,0x00,0x50,0x6f,0x03,0x23,0x94,0x04
	.byte 0x0f
	.ascii "PixelTransferf\0"
	.byte 0x00,0x00,0x50,0x8b,0x03,0x23,0x98,0x04
	.byte 0x0f
	.ascii "PixelZoom\0"
	.byte 0x00,0x00,0x50,0xa7,0x03,0x23,0x9c,0x04
	.byte 0x0f
	.ascii "PointParameterfvEXT\0"
	.byte 0x00,0x00,0x50,0xcd,0x03,0x23,0xa0,0x04
	.byte 0x0f
	.ascii "PointSize\0"
	.byte 0x00,0x00,0x50,0xe4,0x03,0x23,0xa4,0x04
	.byte 0x0f
	.ascii "PolygonMode\0"
	.byte 0x00,0x00,0x51,0x00,0x03,0x23,0xa8,0x04
	.byte 0x0f
	.ascii "PolygonOffset\0"
	.byte 0x00,0x00,0x51,0x1c,0x03,0x23,0xac,0x04
	.byte 0x0f
	.ascii "PolygonStipple\0"
	.byte 0x00,0x00,0x51,0x3d,0x03,0x23,0xb0,0x04
	.byte 0x0f
	.ascii "PopAttrib\0"
	.byte 0x00,0x00,0x51,0x4f,0x03,0x23,0xb4,0x04
	.byte 0x0f
	.ascii "PopClientAttrib\0"
	.byte 0x00,0x00,0x51,0x61,0x03,0x23,0xb8,0x04
	.byte 0x0f
	.ascii "PopMatrix\0"
	.byte 0x00,0x00,0x51,0x73,0x03,0x23,0xbc,0x04
	.byte 0x0f
	.ascii "PopName\0"
	.byte 0x00,0x00,0x51,0x85,0x03,0x23,0xc0,0x04
	.byte 0x0f
	.ascii "PushAttrib\0"
	.byte 0x00,0x00,0x51,0x9c,0x03,0x23,0xc4,0x04
	.byte 0x0f
	.ascii "PushClientAttrib\0"
	.byte 0x00,0x00,0x51,0xb3,0x03,0x23,0xc8,0x04
	.byte 0x0f
	.ascii "PushMatrix\0"
	.byte 0x00,0x00,0x51,0xc5,0x03,0x23,0xcc,0x04
	.byte 0x0f
	.ascii "PushName\0"
	.byte 0x00,0x00,0x51,0xdc,0x03,0x23,0xd0,0x04
	.byte 0x0f
	.ascii "RasterPos4f\0"
	.byte 0x00,0x00,0x52,0x02,0x03,0x23,0xd4,0x04
	.byte 0x0f
	.ascii "ReadBuffer\0"
	.byte 0x00,0x00,0x52,0x19,0x03,0x23,0xd8,0x04
	.byte 0x0f
	.ascii "ReadPixels\0"
	.byte 0x00,0x00,0x52,0x4e,0x03,0x23,0xdc,0x04
	.byte 0x0f
	.ascii "Rectf\0"
	.byte 0x00,0x00,0x52,0x74,0x03,0x23,0xe0,0x04
	.byte 0x0f
	.ascii "RenderMode\0"
	.byte 0x00,0x00,0x52,0x8f,0x03,0x23,0xe4,0x04
	.byte 0x0f
	.ascii "Rotatef\0"
	.byte 0x00,0x00,0x52,0xb5,0x03,0x23,0xe8,0x04
	.byte 0x0f
	.ascii "Scalef\0"
	.byte 0x00,0x00,0x52,0xd6,0x03,0x23,0xec,0x04
	.byte 0x0f
	.ascii "Scissor\0"
	.byte 0x00,0x00,0x52,0xfc,0x03,0x23,0xf0,0x04
	.byte 0x0f
	.ascii "SelectBuffer\0"
	.byte 0x00,0x00,0x53,0x18,0x03,0x23,0xf4,0x04
	.byte 0x0f
	.ascii "ShadeModel\0"
	.byte 0x00,0x00,0x53,0x2f,0x03,0x23,0xf8,0x04
	.byte 0x0f
	.ascii "StencilFunc\0"
	.byte 0x00,0x00,0x53,0x50,0x03,0x23,0xfc,0x04
	.byte 0x0f
	.ascii "StencilMask\0"
	.byte 0x00,0x00,0x53,0x67,0x03,0x23,0x80,0x05
	.byte 0x0f
	.ascii "StencilOp\0"
	.byte 0x00,0x00,0x53,0x88,0x03,0x23,0x84,0x05
	.byte 0x0f
	.ascii "TexCoord2f\0"
	.byte 0x00,0x00,0x53,0xa4,0x03,0x23,0x88,0x05
	.byte 0x0f
	.ascii "TexCoord4f\0"
	.byte 0x00,0x00,0x53,0xca,0x03,0x23,0x8c,0x05
	.byte 0x0f
	.ascii "TexCoordPointer\0"
	.byte 0x00,0x00,0x53,0xfa,0x03,0x23,0x90,0x05
	.byte 0x0f
	.ascii "TexEnvfv\0"
	.byte 0x00,0x00,0x54,0x25,0x03,0x23,0x94,0x05
	.byte 0x0f
	.ascii "TexGenfv\0"
	.byte 0x00,0x00,0x54,0x50,0x03,0x23,0x98,0x05
	.byte 0x0f
	.ascii "TexImage1D\0"
	.byte 0x00,0x00,0x54,0x8a,0x03,0x23,0x9c,0x05
	.byte 0x0f
	.ascii "TexImage2D\0"
	.byte 0x00,0x00,0x54,0xc9,0x03,0x23,0xa0,0x05
	.byte 0x0f
	.ascii "TexSubImage1D\0"
	.byte 0x00,0x00,0x54,0xfe,0x03,0x23,0xa4,0x05
	.byte 0x0f
	.ascii "TexSubImage2D\0"
	.byte 0x00,0x00,0x55,0x3d,0x03,0x23,0xa8,0x05
	.byte 0x0f
	.ascii "TexImage3DEXT\0"
	.byte 0x00,0x00,0x55,0x81,0x03,0x23,0xac,0x05
	.byte 0x0f
	.ascii "TexSubImage3DEXT\0"
	.byte 0x00,0x00,0x55,0xca,0x03,0x23,0xb0,0x05
	.byte 0x0f
	.ascii "TexParameterfv\0"
	.byte 0x00,0x00,0x55,0xf5,0x03,0x23,0xb4,0x05
	.byte 0x0f
	.ascii "Translatef\0"
	.byte 0x00,0x00,0x56,0x16,0x03,0x23,0xb8,0x05
	.byte 0x0f
	.ascii "Vertex2f\0"
	.byte 0x00,0x00,0x56,0x32,0x03,0x23,0xbc,0x05
	.byte 0x0f
	.ascii "Vertex3f\0"
	.byte 0x00,0x00,0x56,0x53,0x03,0x23,0xc0,0x05
	.byte 0x0f
	.ascii "Vertex4f\0"
	.byte 0x00,0x00,0x56,0x79,0x03,0x23,0xc4,0x05
	.byte 0x0f
	.ascii "Vertex3fv\0"
	.byte 0x00,0x00,0x56,0x9a,0x03,0x23,0xc8,0x05
	.byte 0x0f
	.ascii "VertexPointer\0"
	.byte 0x00,0x00,0x56,0xca,0x03,0x23,0xcc,0x05
	.byte 0x0f
	.ascii "Viewport\0"
	.byte 0x00,0x00,0x56,0xf0,0x03,0x23,0xd0,0x05
	.byte 0x0f
	.ascii "WindowPos4fMESA\0"
	.byte 0x00,0x00,0x57,0x16,0x03,0x23,0xd4,0x05
	.byte 0x0f
	.ascii "ResizeBuffersMESA\0"
	.byte 0x00,0x00,0x57,0x28,0x03,0x23,0xd8,0x05
	.byte 0x00,0x0e
	.ascii "gl_visual\0"
	.byte 0x4c,0x02,0x00,0x00,0x67,0x79,0x0f
	.ascii "RGBAflag\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x00,0x0f
	.ascii "DBflag\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x01,0x0f
	.ascii "RedScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x04,0x0f
	.ascii "GreenScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x08,0x0f
	.ascii "BlueScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x0c,0x0f
	.ascii "AlphaScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x10,0x0f
	.ascii "EightBitColor\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x14,0x0f
	.ascii "InvRedScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x18,0x0f
	.ascii "InvGreenScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x1c,0x0f
	.ascii "InvBlueScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x20,0x0f
	.ascii "InvAlphaScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x24,0x0f
	.ascii "RedBits\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x28,0x0f
	.ascii "GreenBits\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x2c,0x0f
	.ascii "BlueBits\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x30,0x0f
	.ascii "AlphaBits\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x34,0x0f
	.ascii "IndexBits\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x38,0x0f
	.ascii "AccumBits\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x3c,0x0f
	.ascii "DepthBits\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x40,0x0f
	.ascii "StencilBits\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x44,0x0f
	.ascii "FrontAlphaEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x48,0x0f
	.ascii "BackAlphaEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x49,0x00
	.byte 0x07,0x00,0x00,0x65,0xd1
	.ascii "GLvisual\0"
	.byte 0x02,0x09,0x00,0x00,0x67,0x79,0x07,0x00
	.byte 0x00,0x49,0xfe
	.ascii "GLdepth\0"
	.byte 0x02,0x09,0x00,0x00,0x67,0x8d,0x07,0x00
	.byte 0x00,0x33,0x3f
	.ascii "GLstencil\0"
	.byte 0x02,0x09,0x00,0x00,0x67,0xa0,0x06
	.ascii "short\0"
	.byte 0x05,0x02,0x07,0x00,0x00,0x67,0xb5
	.ascii "GLaccum\0"
	.byte 0x02,0x09,0x00,0x00,0x67,0xbe,0x0e
	.ascii "gl_frame_buffer\0"
	.byte 0x34,0x02,0x00,0x00,0x68,0xa8,0x0f
	.ascii "Visual\0"
	.byte 0x00,0x00,0x67,0x88,0x02,0x23,0x00,0x0f
	.ascii "Width\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x04,0x0f
	.ascii "Height\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x08,0x0f
	.ascii "Depth\0"
	.byte 0x00,0x00,0x67,0x9b,0x02,0x23,0x0c,0x0f
	.ascii "Stencil\0"
	.byte 0x00,0x00,0x67,0xb0,0x02,0x23,0x10,0x0f
	.ascii "Accum\0"
	.byte 0x00,0x00,0x67,0xcc,0x02,0x23,0x14,0x0f
	.ascii "FrontAlpha\0"
	.byte 0x00,0x00,0x33,0x5e,0x02,0x23,0x18,0x0f
	.ascii "BackAlpha\0"
	.byte 0x00,0x00,0x33,0x5e,0x02,0x23,0x1c,0x0f
	.ascii "Alpha\0"
	.byte 0x00,0x00,0x33,0x5e,0x02,0x23,0x20,0x0f
	.ascii "Xmin\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x24,0x0f
	.ascii "Xmax\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x28,0x0f
	.ascii "Ymin\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x2c,0x0f
	.ascii "Ymax\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x30,0x00
	.byte 0x07,0x00,0x00,0x67,0xd1
	.ascii "GLframebuffer\0"
	.byte 0x02,0x09,0x00,0x00,0x68,0xa8,0x06
	.ascii "char\0"
	.byte 0x06,0x01,0x13,0x00,0x00,0x68,0xc1,0x09
	.byte 0x00,0x00,0x68,0xc9,0x17,0x01,0x00,0x00
	.byte 0x68,0xce,0x01,0x09,0x00,0x00,0x68,0xd3
	.byte 0x14,0x01,0x01,0x00,0x00,0x68,0xec,0x15
	.byte 0x00,0x00,0x3e,0x42,0x00,0x09,0x00,0x00
	.byte 0x68,0xdf,0x14,0x01,0x01,0x00,0x00,0x69
	.byte 0x03,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x4d,0x00,0x09,0x00,0x00,0x68
	.byte 0xf1,0x14,0x01,0x01,0x00,0x00,0x69,0x29
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x33,0x3f,0x15,0x00,0x00,0x33,0x3f,0x15
	.byte 0x00,0x00,0x33,0x3f,0x15,0x00,0x00,0x33
	.byte 0x3f,0x00,0x09,0x00,0x00,0x69,0x08,0x14
	.byte 0x01,0x01,0x00,0x00,0x69,0x54,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x33,0x3f
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x29,0x00,0x09,0x00,0x00
	.byte 0x69,0x2e,0x14,0x01,0x01,0x00,0x00,0x69
	.byte 0x6b,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x4d,0x00,0x09,0x00,0x00,0x69
	.byte 0x59,0x14,0x01,0x01,0x00,0x00,0x69,0x91
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x33,0x3f,0x15,0x00,0x00,0x33,0x3f,0x15
	.byte 0x00,0x00,0x33,0x3f,0x15,0x00,0x00,0x33
	.byte 0x3f,0x00,0x09,0x00,0x00,0x69,0x70,0x16
	.byte 0x01,0x00,0x00,0x33,0x3f,0x01,0x00,0x00
	.byte 0x69,0xac,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x96,0x00,0x09,0x00,0x00
	.byte 0x69,0x96,0x14,0x01,0x01,0x00,0x00,0x69
	.byte 0xc8,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x47,0xa6,0x15,0x00,0x00,0x47,0xa6
	.byte 0x00,0x09,0x00,0x00,0x69,0xb1,0x13,0x00
	.byte 0x00,0x33,0x3f,0x09,0x00,0x00,0x69,0xcd
	.byte 0x13,0x00,0x00,0x33,0x3f,0x09,0x00,0x00
	.byte 0x69,0xd7,0x13,0x00,0x00,0x33,0x3f,0x09
	.byte 0x00,0x00,0x69,0xe1,0x13,0x00,0x00,0x33
	.byte 0x3f,0x09,0x00,0x00,0x69,0xeb,0x13,0x00
	.byte 0x00,0x33,0x3f,0x09,0x00,0x00,0x69,0xf5
	.byte 0x14,0x01,0x01,0x00,0x00,0x6a,0x34,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x4d,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x69,0xd2
	.byte 0x15,0x00,0x00,0x69,0xdc,0x15,0x00,0x00
	.byte 0x69,0xe6,0x15,0x00,0x00,0x69,0xf0,0x15
	.byte 0x00,0x00,0x69,0xfa,0x00,0x09,0x00,0x00
	.byte 0x69,0xff,0x13,0x00,0x00,0x33,0x3f,0x09
	.byte 0x00,0x00,0x6a,0x39,0x14,0x01,0x01,0x00
	.byte 0x00,0x6a,0x64,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x4d,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x6a,0x3e,0x00,0x09,0x00,0x00
	.byte 0x6a,0x43,0x13,0x00,0x00,0x03,0x29,0x09
	.byte 0x00,0x00,0x6a,0x69,0x13,0x00,0x00,0x03
	.byte 0x29,0x09,0x00,0x00,0x6a,0x73,0x13,0x00
	.byte 0x00,0x33,0x3f,0x09,0x00,0x00,0x6a,0x7d
	.byte 0x13,0x00,0x00,0x33,0x3f,0x09,0x00,0x00
	.byte 0x6a,0x87,0x13,0x00,0x00,0x33,0x3f,0x09
	.byte 0x00,0x00,0x6a,0x91,0x13,0x00,0x00,0x33
	.byte 0x3f,0x09,0x00,0x00,0x6a,0x9b,0x13,0x00
	.byte 0x00,0x33,0x3f,0x09,0x00,0x00,0x6a,0xa5
	.byte 0x14,0x01,0x01,0x00,0x00,0x6a,0xe4,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x4d,0x15,0x00,0x00,0x6a,0x6e,0x15,0x00
	.byte 0x00,0x6a,0x78,0x15,0x00,0x00,0x6a,0x82
	.byte 0x15,0x00,0x00,0x6a,0x8c,0x15,0x00,0x00
	.byte 0x6a,0x96,0x15,0x00,0x00,0x6a,0xa0,0x15
	.byte 0x00,0x00,0x6a,0xaa,0x00,0x09,0x00,0x00
	.byte 0x6a,0xaf,0x13,0x00,0x00,0x03,0x29,0x09
	.byte 0x00,0x00,0x6a,0xe9,0x13,0x00,0x00,0x03
	.byte 0x29,0x09,0x00,0x00,0x6a,0xf3,0x13,0x00
	.byte 0x00,0x33,0x3f,0x09,0x00,0x00,0x6a,0xfd
	.byte 0x14,0x01,0x01,0x00,0x00,0x6b,0x28,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x4d,0x15,0x00,0x00,0x6a,0xee,0x15,0x00
	.byte 0x00,0x6a,0xf8,0x15,0x00,0x00,0x6b,0x02
	.byte 0x00,0x09,0x00,0x00,0x6b,0x07,0x13,0x00
	.byte 0x00,0x03,0x4d,0x09,0x00,0x00,0x6b,0x2d
	.byte 0x13,0x00,0x00,0x33,0x3f,0x09,0x00,0x00
	.byte 0x6b,0x37,0x14,0x01,0x01,0x00,0x00,0x6b
	.byte 0x67,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x4d,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x6b,0x32,0x15,0x00,0x00,0x6b,0x3c,0x00
	.byte 0x09,0x00,0x00,0x6b,0x41,0x13,0x00,0x00
	.byte 0x33,0x3f,0x09,0x00,0x00,0x6b,0x6c,0x14
	.byte 0x01,0x01,0x00,0x00,0x6b,0x97,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x4d
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x6b,0x71,0x00
	.byte 0x09,0x00,0x00,0x6b,0x76,0x13,0x00,0x00
	.byte 0x03,0x29,0x09,0x00,0x00,0x6b,0x9c,0x13
	.byte 0x00,0x00,0x03,0x29,0x09,0x00,0x00,0x6b
	.byte 0xa6,0x13,0x00,0x00,0x03,0x4d,0x09,0x00
	.byte 0x00,0x6b,0xb0,0x13,0x00,0x00,0x33,0x3f
	.byte 0x09,0x00,0x00,0x6b,0xba,0x14,0x01,0x01
	.byte 0x00,0x00,0x6b,0xea,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x4d,0x15,0x00
	.byte 0x00,0x6b,0xa1,0x15,0x00,0x00,0x6b,0xab
	.byte 0x15,0x00,0x00,0x6b,0xb5,0x15,0x00,0x00
	.byte 0x6b,0xbf,0x00,0x09,0x00,0x00,0x6b,0xc4
	.byte 0x13,0x00,0x00,0x03,0x29,0x09,0x00,0x00
	.byte 0x6b,0xef,0x13,0x00,0x00,0x03,0x29,0x09
	.byte 0x00,0x00,0x6b,0xf9,0x13,0x00,0x00,0x33
	.byte 0x3f,0x09,0x00,0x00,0x6c,0x03,0x14,0x01
	.byte 0x01,0x00,0x00,0x6c,0x2e,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x4d,0x15
	.byte 0x00,0x00,0x6b,0xf4,0x15,0x00,0x00,0x6b
	.byte 0xfe,0x15,0x00,0x00,0x6c,0x08,0x00,0x09
	.byte 0x00,0x00,0x6c,0x0d,0x14,0x01,0x01,0x00
	.byte 0x00,0x6c,0x54,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x4d,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x47,0xa6,0x00,0x09,0x00,0x00
	.byte 0x6c,0x33,0x14,0x01,0x01,0x00,0x00,0x6c
	.byte 0x89,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x03,0x4d,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x36,0x73,0x15,0x00,0x00,0x36,0x73,0x15
	.byte 0x00,0x00,0x36,0x73,0x15,0x00,0x00,0x36
	.byte 0x73,0x00,0x09,0x00,0x00,0x6c,0x59,0x13
	.byte 0x00,0x00,0x03,0x29,0x09,0x00,0x00,0x6c
	.byte 0x8e,0x13,0x00,0x00,0x03,0x29,0x09,0x00
	.byte 0x00,0x6c,0x98,0x13,0x00,0x00,0x33,0x3f
	.byte 0x09,0x00,0x00,0x6c,0xa2,0x14,0x01,0x01
	.byte 0x00,0x00,0x6c,0xd2,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x4d,0x15,0x00
	.byte 0x00,0x6c,0x93,0x15,0x00,0x00,0x6c,0x9d
	.byte 0x15,0x00,0x00,0x47,0xa6,0x15,0x00,0x00
	.byte 0x6c,0xa7,0x00,0x09,0x00,0x00,0x6c,0xac
	.byte 0x13,0x00,0x00,0x03,0x29,0x09,0x00,0x00
	.byte 0x6c,0xd7,0x13,0x00,0x00,0x03,0x29,0x09
	.byte 0x00,0x00,0x6c,0xe1,0x13,0x00,0x00,0x33
	.byte 0x3f,0x09,0x00,0x00,0x6c,0xeb,0x14,0x01
	.byte 0x01,0x00,0x00,0x6d,0x2a,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x4d,0x15
	.byte 0x00,0x00,0x6c,0xdc,0x15,0x00,0x00,0x6c
	.byte 0xe6,0x15,0x00,0x00,0x36,0x73,0x15,0x00
	.byte 0x00,0x36,0x73,0x15,0x00,0x00,0x36,0x73
	.byte 0x15,0x00,0x00,0x36,0x73,0x15,0x00,0x00
	.byte 0x6c,0xf0,0x00,0x09,0x00,0x00,0x6c,0xf5
	.byte 0x14,0x01,0x01,0x00,0x00,0x6d,0x3c,0x15
	.byte 0x00,0x00,0x3e,0x42,0x00,0x09,0x00,0x00
	.byte 0x6d,0x2f,0x14,0x01,0x01,0x00,0x00,0x6d
	.byte 0x4e,0x15,0x00,0x00,0x3e,0x42,0x00,0x09
	.byte 0x00,0x00,0x6d,0x41,0x16,0x01,0x00,0x00
	.byte 0x33,0x3f,0x01,0x00,0x00,0x6d,0x69,0x15
	.byte 0x00,0x00,0x3e,0x42,0x15,0x00,0x00,0x03
	.byte 0x4d,0x00,0x09,0x00,0x00,0x6d,0x53,0x16
	.byte 0x01,0x00,0x00,0x33,0x3f,0x01,0x00,0x00
	.byte 0x6d,0x93,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x33,0x3f,0x15,0x00,0x00,0x33
	.byte 0x3f,0x15,0x00,0x00,0x33,0x3f,0x15,0x00
	.byte 0x00,0x33,0x3f,0x00,0x09,0x00,0x00,0x6d
	.byte 0x6e,0x16,0x01,0x00,0x00,0x33,0x3f,0x01
	.byte 0x00,0x00,0x6d,0xae,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x96,0x00,0x09
	.byte 0x00,0x00,0x6d,0x98,0x14,0x01,0x01,0x00
	.byte 0x00,0x6d,0xc5,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x33,0x3f,0x00,0x09,0x00
	.byte 0x00,0x6d,0xb3,0x14,0x01,0x01,0x00,0x00
	.byte 0x6d,0xd7,0x15,0x00,0x00,0x3e,0x42,0x00
	.byte 0x09,0x00,0x00,0x6d,0xca,0x14,0x01,0x01
	.byte 0x00,0x00,0x6d,0xf3,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x66,0x15,0x00
	.byte 0x00,0x03,0x66,0x00,0x09,0x00,0x00,0x6d
	.byte 0xdc,0x14,0x01,0x01,0x00,0x00,0x6e,0x05
	.byte 0x15,0x00,0x00,0x3e,0x42,0x00,0x09,0x00
	.byte 0x00,0x6d,0xf8,0x14,0x01,0x01,0x00,0x00
	.byte 0x6e,0x17,0x15,0x00,0x00,0x3e,0x42,0x00
	.byte 0x09,0x00,0x00,0x6e,0x0a,0x13,0x00,0x00
	.byte 0x49,0xfe,0x09,0x00,0x00,0x6e,0x1c,0x16
	.byte 0x01,0x00,0x00,0x03,0x4d,0x01,0x00,0x00
	.byte 0x6e,0x50,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x4d,0x15,0x00,0x00,0x03
	.byte 0x29,0x15,0x00,0x00,0x03,0x29,0x15,0x00
	.byte 0x00,0x6e,0x21,0x15,0x00,0x00,0x36,0x73
	.byte 0x00,0x09,0x00,0x00,0x6e,0x26,0x13,0x00
	.byte 0x00,0x03,0x29,0x09,0x00,0x00,0x6e,0x55
	.byte 0x13,0x00,0x00,0x03,0x29,0x09,0x00,0x00
	.byte 0x6e,0x5f,0x13,0x00,0x00,0x49,0xfe,0x09
	.byte 0x00,0x00,0x6e,0x69,0x14,0x01,0x01,0x00
	.byte 0x00,0x6e,0x99,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x4d,0x15,0x00,0x00
	.byte 0x6e,0x5a,0x15,0x00,0x00,0x6e,0x64,0x15
	.byte 0x00,0x00,0x6e,0x6e,0x15,0x00,0x00,0x36
	.byte 0x73,0x00,0x09,0x00,0x00,0x6e,0x73,0x14
	.byte 0x01,0x01,0x00,0x00,0x6e,0xbf,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x4d
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x46,0xd4,0x00
	.byte 0x09,0x00,0x00,0x6e,0x9e,0x14,0x01,0x01
	.byte 0x00,0x00,0x6e,0xe5,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x4d,0x15,0x00
	.byte 0x00,0x03,0x29,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x4a,0x10,0x00,0x09,0x00
	.byte 0x00,0x6e,0xc4,0x14,0x01,0x01,0x00,0x00
	.byte 0x6f,0x01,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x03,0x4d,0x15,0x00,0x00,0x03
	.byte 0x4d,0x00,0x09,0x00,0x00,0x6e,0xea,0x07
	.byte 0x00,0x00,0x6f,0x01
	.ascii "points_func\0"
	.byte 0x02,0x14,0x01,0x01,0x00,0x00,0x6f,0x34
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x4d,0x15,0x00,0x00,0x03,0x4d,0x15
	.byte 0x00,0x00,0x03,0x4d,0x00,0x09,0x00,0x00
	.byte 0x6f,0x18,0x07,0x00,0x00,0x6f,0x34
	.ascii "line_func\0"
	.byte 0x02,0x14,0x01,0x01
	.byte 0x00,0x00,0x6f,0x6a,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x4d,0x15,0x00
	.byte 0x00,0x03,0x4d,0x15,0x00,0x00,0x03,0x4d
	.byte 0x15,0x00,0x00,0x03,0x4d,0x00,0x09,0x00
	.byte 0x00,0x6f,0x49,0x07,0x00,0x00,0x6f,0x6a
	.ascii "triangle_func\0"
	.byte 0x02,0x14,0x01,0x01,0x00,0x00,0x6f,0xa9
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x4d,0x15,0x00,0x00,0x03,0x4d,0x15
	.byte 0x00,0x00,0x03,0x4d,0x15,0x00,0x00,0x03
	.byte 0x4d,0x15,0x00,0x00,0x03,0x4d,0x00,0x09
	.byte 0x00,0x00,0x6f,0x83,0x07,0x00,0x00,0x6f
	.byte 0xa9
	.ascii "quad_func\0"
	.byte 0x02,0x14,0x01,0x01,0x00,0x00,0x6f,0xdf
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x03
	.byte 0x29,0x00,0x09,0x00,0x00,0x6f,0xbe,0x07
	.byte 0x00,0x00,0x6f,0xdf
	.ascii "rect_func\0"
	.byte 0x02,0x13,0x00,0x00,0x33,0x63,0x09,0x00
	.byte 0x00,0x6f,0xf4,0x16,0x01,0x00,0x00,0x33
	.byte 0x3f,0x01,0x00,0x00,0x70,0x37,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x29,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x03
	.byte 0x96,0x15,0x00,0x00,0x33,0x3f,0x15,0x00
	.byte 0x00,0x6f,0xf9,0x00,0x09,0x00,0x00,0x6f
	.byte 0xfe,0x13,0x00,0x00,0x3f,0x0a,0x09,0x00
	.byte 0x00,0x70,0x3c,0x16,0x01,0x00,0x00,0x33
	.byte 0x3f,0x01,0x00,0x00,0x70,0x7a,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x29
	.byte 0x15,0x00,0x00,0x03,0x29,0x15,0x00,0x00
	.byte 0x03,0x66,0x15,0x00,0x00,0x03,0x66,0x15
	.byte 0x00,0x00,0x03,0x66,0x15,0x00,0x00,0x03
	.byte 0x66,0x15,0x00,0x00,0x70,0x41,0x00,0x09
	.byte 0x00,0x00,0x70,0x46,0x14,0x01,0x01,0x00
	.byte 0x00,0x70,0x91,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x00,0x09,0x00
	.byte 0x00,0x70,0x7f,0x14,0x01,0x01,0x00,0x00
	.byte 0x70,0xa3,0x15,0x00,0x00,0x3e,0x42,0x00
	.byte 0x09,0x00,0x00,0x70,0x96,0x14,0x01,0x01
	.byte 0x00,0x00,0x70,0xbf,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x03,0x4d,0x15,0x00
	.byte 0x00,0x03,0x4d,0x00,0x09,0x00,0x00,0x70
	.byte 0xa8,0x16,0x01,0x00,0x00,0x33,0x3f,0x01
	.byte 0x00,0x00,0x70,0xda,0x15,0x00,0x00,0x3e
	.byte 0x42,0x15,0x00,0x00,0x33,0x3f,0x00,0x09
	.byte 0x00,0x00,0x70,0xc4,0x13,0x00,0x00,0x03
	.byte 0x66,0x09,0x00,0x00,0x70,0xdf,0x14,0x01
	.byte 0x01,0x00,0x00,0x71,0x00,0x15,0x00,0x00
	.byte 0x3e,0x42,0x15,0x00,0x00,0x03,0x96,0x15
	.byte 0x00,0x00,0x70,0xe4,0x00,0x09,0x00,0x00
	.byte 0x70,0xe9,0x13,0x00,0x00,0x33,0x70,0x09
	.byte 0x00,0x00,0x71,0x05,0x14,0x01,0x01,0x00
	.byte 0x00,0x71,0x35,0x15,0x00,0x00,0x3e,0x42
	.byte 0x15,0x00,0x00,0x03,0x96,0x15,0x00,0x00
	.byte 0x36,0xcf,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x71
	.byte 0x0a,0x00,0x09,0x00,0x00,0x71,0x0f,0x13
	.byte 0x00,0x00,0x03,0x66,0x09,0x00,0x00,0x71
	.byte 0x3a,0x14,0x01,0x01,0x00,0x00,0x71,0x65
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0x36,0xcf,0x15
	.byte 0x00,0x00,0x03,0x96,0x15,0x00,0x00,0x71
	.byte 0x3f,0x00,0x09,0x00,0x00,0x71,0x44,0x14
	.byte 0x01,0x01,0x00,0x00,0x71,0x81,0x15,0x00
	.byte 0x00,0x3e,0x42,0x15,0x00,0x00,0x03,0x96
	.byte 0x15,0x00,0x00,0x36,0xcf,0x00,0x09,0x00
	.byte 0x00,0x71,0x6a,0x14,0x01,0x01,0x00,0x00
	.byte 0x71,0x98,0x15,0x00,0x00,0x3e,0x42,0x15
	.byte 0x00,0x00,0x36,0xcf,0x00,0x09,0x00,0x00
	.byte 0x71,0x86,0x14,0x01,0x01,0x00,0x00,0x71
	.byte 0xaf,0x15,0x00,0x00,0x3e,0x42,0x15,0x00
	.byte 0x00,0x36,0xcf,0x00,0x09,0x00,0x00,0x71
	.byte 0x9d,0x14,0x01,0x01,0x00,0x00,0x71,0xc6
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x33,0x3f,0x00,0x09,0x00,0x00,0x71,0xb4
	.byte 0x0e
	.ascii "dd_function_table\0"
	.byte 0xd4,0x04,0x00,0x00,0x76,0x33,0x0f
	.ascii "RendererString\0"
	.byte 0x00,0x00,0x68,0xda,0x02,0x23,0x00,0x0f
	.ascii "UpdateState\0"
	.byte 0x00,0x00,0x68,0xec,0x02,0x23,0x04,0x0f
	.ascii "ClearIndex\0"
	.byte 0x00,0x00,0x69,0x03,0x02,0x23,0x08,0x0f
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x69,0x29,0x02,0x23,0x0c,0x0f
	.ascii "Clear\0"
	.byte 0x00,0x00,0x69,0x54,0x02,0x23,0x10,0x0f
	.ascii "Index\0"
	.byte 0x00,0x00,0x69,0x6b,0x02,0x23,0x14,0x0f
	.ascii "Color\0"
	.byte 0x00,0x00,0x69,0x91,0x02,0x23,0x18,0x0f
	.ascii "SetBuffer\0"
	.byte 0x00,0x00,0x69,0xac,0x02,0x23,0x1c,0x0f
	.ascii "GetBufferSize\0"
	.byte 0x00,0x00,0x69,0xc8,0x02,0x23,0x20,0x0f
	.ascii "WriteColorSpan\0"
	.byte 0x00,0x00,0x6a,0x34,0x02,0x23,0x24,0x0f
	.ascii "WriteMonocolorSpan\0"
	.byte 0x00,0x00,0x6a,0x64,0x02,0x23,0x28,0x0f
	.ascii "WriteColorPixels\0"
	.byte 0x00,0x00,0x6a,0xe4,0x02,0x23,0x2c,0x0f
	.ascii "WriteMonocolorPixels\0"
	.byte 0x00,0x00,0x6b,0x28,0x02,0x23,0x30,0x0f
	.ascii "WriteIndexSpan\0"
	.byte 0x00,0x00,0x6b,0x67,0x02,0x23,0x34,0x0f
	.ascii "WriteMonoindexSpan\0"
	.byte 0x00,0x00,0x6b,0x97,0x02,0x23,0x38,0x0f
	.ascii "WriteIndexPixels\0"
	.byte 0x00,0x00,0x6b,0xea,0x02,0x23,0x3c,0x0f
	.ascii "WriteMonoindexPixels\0"
	.byte 0x00,0x00,0x6c,0x2e,0x02,0x23,0x40,0x0f
	.ascii "ReadIndexSpan\0"
	.byte 0x00,0x00,0x6c,0x54,0x02,0x23,0x44,0x0f
	.ascii "ReadColorSpan\0"
	.byte 0x00,0x00,0x6c,0x89,0x02,0x23,0x48,0x0f
	.ascii "ReadIndexPixels\0"
	.byte 0x00,0x00,0x6c,0xd2,0x02,0x23,0x4c,0x0f
	.ascii "ReadColorPixels\0"
	.byte 0x00,0x00,0x6d,0x2a,0x02,0x23,0x50,0x0f
	.ascii "Finish\0"
	.byte 0x00,0x00,0x6d,0x3c,0x02,0x23,0x54,0x0f
	.ascii "Flush\0"
	.byte 0x00,0x00,0x6d,0x4e,0x02,0x23,0x58,0x0f
	.ascii "IndexMask\0"
	.byte 0x00,0x00,0x6d,0x69,0x02,0x23,0x5c,0x0f
	.ascii "ColorMask\0"
	.byte 0x00,0x00,0x6d,0x93,0x02,0x23,0x60,0x0f
	.ascii "LogicOp\0"
	.byte 0x00,0x00,0x6d,0xae,0x02,0x23,0x64,0x0f
	.ascii "Dither\0"
	.byte 0x00,0x00,0x6d,0xc5,0x02,0x23,0x68,0x0f
	.ascii "Error\0"
	.byte 0x00,0x00,0x6d,0xd7,0x02,0x23,0x6c,0x0f
	.ascii "NearFar\0"
	.byte 0x00,0x00,0x6d,0xf3,0x02,0x23,0x70,0x0f
	.ascii "AllocDepthBuffer\0"
	.byte 0x00,0x00,0x6e,0x05,0x02,0x23,0x74,0x0f
	.ascii "ClearDepthBuffer\0"
	.byte 0x00,0x00,0x6e,0x17,0x02,0x23,0x78,0x0f
	.ascii "DepthTestSpan\0"
	.byte 0x00,0x00,0x6e,0x50,0x02,0x23,0x7c,0x0f
	.ascii "DepthTestPixels\0"
	.byte 0x00,0x00,0x6e,0x99,0x03,0x23,0x80,0x01
	.byte 0x0f
	.ascii "ReadDepthSpanFloat\0"
	.byte 0x00,0x00,0x6e,0xbf,0x03,0x23,0x84,0x01
	.byte 0x0f
	.ascii "ReadDepthSpanInt\0"
	.byte 0x00,0x00,0x6e,0xe5,0x03,0x23,0x88,0x01
	.byte 0x0f
	.ascii "PointsFunc\0"
	.byte 0x00,0x00,0x6f,0x06,0x03,0x23,0x8c,0x01
	.byte 0x0f
	.ascii "LineFunc\0"
	.byte 0x00,0x00,0x6f,0x39,0x03,0x23,0x90,0x01
	.byte 0x0f
	.ascii "TriangleFunc\0"
	.byte 0x00,0x00,0x6f,0x6f,0x03,0x23,0x94,0x01
	.byte 0x0f
	.ascii "QuadFunc\0"
	.byte 0x00,0x00,0x6f,0xae,0x03,0x23,0x98,0x01
	.byte 0x0f
	.ascii "RectFunc\0"
	.byte 0x00,0x00,0x6f,0xe4,0x03,0x23,0x9c,0x01
	.byte 0x0f
	.ascii "DrawPixels\0"
	.byte 0x00,0x00,0x70,0x37,0x03,0x23,0xa0,0x01
	.byte 0x0f
	.ascii "Bitmap\0"
	.byte 0x00,0x00,0x70,0x7a,0x03,0x23,0xa4,0x01
	.byte 0x0f
	.ascii "Begin\0"
	.byte 0x00,0x00,0x70,0x91,0x03,0x23,0xa8,0x01
	.byte 0x0f
	.ascii "End\0"
	.byte 0x00,0x00,0x70,0xa3,0x03,0x23,0xac,0x01
	.byte 0x0f
	.ascii "RasterSetup\0"
	.byte 0x00,0x00,0x70,0xbf,0x03,0x23,0xb0,0x01
	.byte 0x0f
	.ascii "RenderVB\0"
	.byte 0x00,0x00,0x70,0xda,0x03,0x23,0xb4,0x01
	.byte 0x0f
	.ascii "TexEnv\0"
	.byte 0x00,0x00,0x71,0x00,0x03,0x23,0xb8,0x01
	.byte 0x0f
	.ascii "TexImage\0"
	.byte 0x00,0x00,0x71,0x35,0x03,0x23,0xbc,0x01
	.byte 0x0f
	.ascii "TexParameter\0"
	.byte 0x00,0x00,0x71,0x65,0x03,0x23,0xc0,0x01
	.byte 0x0f
	.ascii "BindTexture\0"
	.byte 0x00,0x00,0x71,0x81,0x03,0x23,0xc4,0x01
	.byte 0x0f
	.ascii "DeleteTexture\0"
	.byte 0x00,0x00,0x71,0x98,0x03,0x23,0xc8,0x01
	.byte 0x0f
	.ascii "UpdateTexturePalette\0"
	.byte 0x00,0x00,0x71,0xaf,0x03,0x23,0xcc,0x01
	.byte 0x0f
	.ascii "UseGlobalTexturePalette\0"
	.byte 0x00,0x00,0x71,0xc6,0x03,0x23,0xd0,0x01
	.byte 0x00,0x0a,0x00,0x00,0x03,0x6f,0x40,0x00
	.byte 0x00,0x76,0x44,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x0f,0x00,0x0a,0x00,0x00,0x03,0x6f,0x40
	.byte 0x00,0x00,0x76,0x55,0x0b,0x00,0x00,0x03
	.byte 0x7d,0x0f,0x00,0x0a,0x00,0x00,0x03,0x66
	.byte 0x40,0x00,0x00,0x76,0x66,0x0b,0x00,0x00
	.byte 0x03,0x7d,0x0f,0x00,0x10,0x00,0x00,0x76
	.byte 0x55,0x08,0x00,0x00,0x00,0x76,0x78,0x0b
	.byte 0x00,0x00,0x03,0x7d,0x1f,0x00,0x0a,0x00
	.byte 0x00,0x03,0x6f,0x40,0x00,0x00,0x76,0x89
	.byte 0x0b,0x00,0x00,0x03,0x7d,0x0f,0x00,0x0a
	.byte 0x00,0x00,0x03,0x66,0x40,0x00,0x00,0x76
	.byte 0x9a,0x0b,0x00,0x00,0x03,0x7d,0x0f,0x00
	.byte 0x10,0x00,0x00,0x76,0x89,0x08,0x00,0x00
	.byte 0x00,0x76,0xac,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x1f,0x00,0x0a,0x00,0x00,0x03,0x66,0x08
	.byte 0x00,0x00,0x76,0xbd,0x0b,0x00,0x00,0x03
	.byte 0x7d,0x01,0x00,0x10,0x00,0x00,0x76,0xac
	.byte 0x01,0x00,0x00,0x00,0x76,0xcf,0x0b,0x00
	.byte 0x00,0x03,0x7d,0x1f,0x00,0x0a,0x00,0x00
	.byte 0x03,0x6f,0x40,0x00,0x00,0x76,0xe0,0x0b
	.byte 0x00,0x00,0x03,0x7d,0x0f,0x00,0x0a,0x00
	.byte 0x00,0x03,0x66,0x40,0x00,0x00,0x76,0xf1
	.byte 0x0b,0x00,0x00,0x03,0x7d,0x0f,0x00,0x10
	.byte 0x00,0x00,0x76,0xe0,0x02,0x80,0x00,0x00
	.byte 0x77,0x03,0x0b,0x00,0x00,0x03,0x7d,0x09
	.byte 0x00,0x07,0x00,0x00,0x03,0x4d
	.ascii "GLbitfield\0"
	.byte 0x03,0x09,0x00,0x00,0x77,0x19,0x0e
	.ascii "gl_attrib_node\0"
	.byte 0x0c,0x02,0x00,0x00,0x77,0x57,0x0f
	.ascii "kind\0"
	.byte 0x00,0x00,0x77,0x03,0x02,0x23,0x00,0x0f
	.ascii "data\0"
	.byte 0x00,0x00,0x33,0x6b,0x02,0x23,0x04,0x0f
	.ascii "next\0"
	.byte 0x00,0x00,0x77,0x14,0x02,0x23,0x08,0x00
	.byte 0x0a,0x00,0x00,0x77,0x14,0x40,0x00,0x00
	.byte 0x77,0x68,0x0b,0x00,0x00,0x03,0x7d,0x0f
	.byte 0x00,0x0a,0x00,0x00,0x03,0x6f,0x10,0x00
	.byte 0x00,0x77,0x79,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x03,0x00,0x0e
	.ascii "gl_accum_attrib\0"
	.byte 0x10,0x02,0x00,0x00,0x77,0xa4,0x0f
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x77,0x68,0x02,0x23,0x00,0x00
	.byte 0x0a,0x00,0x00,0x03,0x6f,0x10,0x00,0x00
	.byte 0x77,0xb5,0x0b,0x00,0x00,0x03,0x7d,0x03
	.byte 0x00,0x0a,0x00,0x00,0x03,0x6f,0x10,0x00
	.byte 0x00,0x77,0xc6,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x03,0x00,0x0e
	.ascii "gl_colorbuffer_attrib\0"
	.byte 0x58,0x02,0x00,0x00,0x79,0x75,0x0f
	.ascii "ClearIndex\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x00,0x0f
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x77,0xa4,0x02,0x23,0x04,0x0f
	.ascii "IndexMask\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x14,0x0f
	.ascii "ColorMask\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x18,0x0f
	.ascii "SWmasking\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x1c,0x0f
	.ascii "DrawBuffer\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x20,0x0f
	.ascii "AlphaEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x24,0x0f
	.ascii "AlphaFunc\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x28,0x0f
	.ascii "AlphaRef\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x2c,0x0f
	.ascii "AlphaRefUbyte\0"
	.byte 0x00,0x00,0x33,0x50,0x02,0x23,0x30,0x0f
	.ascii "BlendEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x31,0x0f
	.ascii "BlendSrc\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x34,0x0f
	.ascii "BlendDst\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x38,0x0f
	.ascii "BlendEquation\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x3c,0x0f
	.ascii "BlendColor\0"
	.byte 0x00,0x00,0x77,0xb5,0x02,0x23,0x40,0x0f
	.ascii "LogicOp\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x50,0x0f
	.ascii "IndexLogicOpEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x54,0x0f
	.ascii "ColorLogicOpEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x55,0x0f
	.ascii "SWLogicOpEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x56,0x0f
	.ascii "DitherFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x57,0x00
	.byte 0x0a,0x00,0x00,0x33,0x50,0x04,0x00,0x00
	.byte 0x79,0x86,0x0b,0x00,0x00,0x03,0x7d,0x03
	.byte 0x00,0x0a,0x00,0x00,0x03,0x6f,0x0c,0x00
	.byte 0x00,0x79,0x97,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x02,0x00,0x0a,0x00,0x00,0x03,0x6f,0x10
	.byte 0x00,0x00,0x79,0xa8,0x0b,0x00,0x00,0x03
	.byte 0x7d,0x03,0x00,0x0a,0x00,0x00,0x03,0x6f
	.byte 0x10,0x00,0x00,0x79,0xb9,0x0b,0x00,0x00
	.byte 0x03,0x7d,0x03,0x00,0x0a,0x00,0x00,0x03
	.byte 0x6f,0x10,0x00,0x00,0x79,0xca,0x0b,0x00
	.byte 0x00,0x03,0x7d,0x03,0x00,0x0a,0x00,0x00
	.byte 0x03,0x6f,0x10,0x00,0x00,0x79,0xdb,0x0b
	.byte 0x00,0x00,0x03,0x7d,0x03,0x00,0x0e
	.ascii "gl_current_attrib\0"
	.byte 0x60,0x02,0x00,0x00,0x7a,0xc5,0x0f
	.ascii "ByteColor\0"
	.byte 0x00,0x00,0x79,0x75,0x02,0x23,0x00,0x0f
	.ascii "Index\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x04,0x0f
	.ascii "Normal\0"
	.byte 0x00,0x00,0x79,0x86,0x02,0x23,0x08,0x0f
	.ascii "TexCoord\0"
	.byte 0x00,0x00,0x79,0x97,0x02,0x23,0x14,0x0f
	.ascii "RasterPos\0"
	.byte 0x00,0x00,0x79,0xa8,0x02,0x23,0x24,0x0f
	.ascii "RasterDistance\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x34,0x0f
	.ascii "RasterColor\0"
	.byte 0x00,0x00,0x79,0xb9,0x02,0x23,0x38,0x0f
	.ascii "RasterIndex\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x48,0x0f
	.ascii "RasterTexCoord\0"
	.byte 0x00,0x00,0x79,0xca,0x02,0x23,0x4c,0x0f
	.ascii "RasterPosValid\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x5c,0x0f
	.ascii "EdgeFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x5d,0x00
	.byte 0x0e
	.ascii "gl_depthbuffer_attrib\0"
	.byte 0x0c,0x02,0x00,0x00,0x7b,0x18,0x0f
	.ascii "Func\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x00,0x0f
	.ascii "Clear\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x04,0x0f
	.ascii "Test\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x08,0x0f
	.ascii "Mask\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x09,0x00
	.byte 0x0e
	.ascii "gl_eval_attrib\0"
	.byte 0x38,0x02,0x00,0x00,0x7d,0x7d,0x0f
	.ascii "Map1Color4\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x00,0x0f
	.ascii "Map1Index\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x01,0x0f
	.ascii "Map1Normal\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x02,0x0f
	.ascii "Map1TextureCoord1\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x03,0x0f
	.ascii "Map1TextureCoord2\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x04,0x0f
	.ascii "Map1TextureCoord3\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x05,0x0f
	.ascii "Map1TextureCoord4\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x06,0x0f
	.ascii "Map1Vertex3\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x07,0x0f
	.ascii "Map1Vertex4\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x08,0x0f
	.ascii "Map2Color4\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x09,0x0f
	.ascii "Map2Index\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x0a,0x0f
	.ascii "Map2Normal\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x0b,0x0f
	.ascii "Map2TextureCoord1\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x0c,0x0f
	.ascii "Map2TextureCoord2\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x0d,0x0f
	.ascii "Map2TextureCoord3\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x0e,0x0f
	.ascii "Map2TextureCoord4\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x0f,0x0f
	.ascii "Map2Vertex3\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x10,0x0f
	.ascii "Map2Vertex4\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x11,0x0f
	.ascii "AutoNormal\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x12,0x0f
	.ascii "MapGrid1un\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x14,0x0f
	.ascii "MapGrid1u1\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x18,0x0f
	.ascii "MapGrid1u2\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x1c,0x0f
	.ascii "MapGrid2un\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x20,0x0f
	.ascii "MapGrid2vn\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x24,0x0f
	.ascii "MapGrid2u1\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x28,0x0f
	.ascii "MapGrid2u2\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x2c,0x0f
	.ascii "MapGrid2v1\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x30,0x0f
	.ascii "MapGrid2v2\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x34,0x00
	.byte 0x0a,0x00,0x00,0x03,0x6f,0x10,0x00,0x00
	.byte 0x7d,0x8e,0x0b,0x00,0x00,0x03,0x7d,0x03
	.byte 0x00,0x0e
	.ascii "gl_fog_attrib\0"
	.byte 0x28,0x02,0x00,0x00,0x7e,0x07,0x0f
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x00,0x0f
	.ascii "Color\0"
	.byte 0x00,0x00,0x7d,0x7d,0x02,0x23,0x04,0x0f
	.ascii "Density\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x14,0x0f
	.ascii "Start\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x18,0x0f
	.ascii "End\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x1c,0x0f
	.ascii "Index\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x20,0x0f
	.ascii "Mode\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x24,0x00
	.byte 0x0e
	.ascii "gl_hint_attrib\0"
	.byte 0x14,0x02,0x00,0x00,0x7e,0x85,0x0f
	.ascii "PerspectiveCorrection\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x00,0x0f
	.ascii "PointSmooth\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x04,0x0f
	.ascii "LineSmooth\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x08,0x0f
	.ascii "PolygonSmooth\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x0c,0x0f
	.ascii "Fog\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x10,0x00
	.byte 0x0a,0x00,0x00,0x03,0x6f,0x10,0x00,0x00
	.byte 0x7e,0x96,0x0b,0x00,0x00,0x03,0x7d,0x03
	.byte 0x00,0x0a,0x00,0x00,0x03,0x6f,0x10,0x00
	.byte 0x00,0x7e,0xa7,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x03,0x00,0x0a,0x00,0x00,0x03,0x6f,0x10
	.byte 0x00,0x00,0x7e,0xb8,0x0b,0x00,0x00,0x03
	.byte 0x7d,0x03,0x00,0x0a,0x00,0x00,0x03,0x6f
	.byte 0x10,0x00,0x00,0x7e,0xc9,0x0b,0x00,0x00
	.byte 0x03,0x7d,0x03,0x00,0x0a,0x00,0x00,0x03
	.byte 0x6f,0x10,0x00,0x00,0x7e,0xda,0x0b,0x00
	.byte 0x00,0x03,0x7d,0x03,0x00,0x12
	.ascii "gl_light\0"
	.byte 0x10,0xe4,0x02,0x00,0x00,0x80,0x9c,0x0f
	.ascii "Ambient\0"
	.byte 0x00,0x00,0x7e,0x85,0x02,0x23,0x00,0x0f
	.ascii "Diffuse\0"
	.byte 0x00,0x00,0x7e,0x96,0x02,0x23,0x10,0x0f
	.ascii "Specular\0"
	.byte 0x00,0x00,0x7e,0xa7,0x02,0x23,0x20,0x0f
	.ascii "Position\0"
	.byte 0x00,0x00,0x7e,0xb8,0x02,0x23,0x30,0x0f
	.ascii "Direction\0"
	.byte 0x00,0x00,0x7e,0xc9,0x02,0x23,0x40,0x0f
	.ascii "SpotExponent\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x50,0x0f
	.ascii "SpotCutoff\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x54,0x0f
	.ascii "CosCutoff\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x58,0x0f
	.ascii "ConstantAttenuation\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x5c,0x0f
	.ascii "LinearAttenuation\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x60,0x0f
	.ascii "QuadraticAttenuation\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x64,0x0f
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x68,0x0f
	.ascii "NextEnabled\0"
	.byte 0x00,0x00,0x80,0x9c,0x02,0x23,0x6c,0x0f
	.ascii "VP_inf_norm\0"
	.byte 0x00,0x00,0x80,0xa1,0x02,0x23,0x70,0x0f
	.ascii "h_inf_norm\0"
	.byte 0x00,0x00,0x80,0xb2,0x02,0x23,0x7c,0x0f
	.ascii "NormDirection\0"
	.byte 0x00,0x00,0x80,0xc3,0x03,0x23,0x88,0x01
	.byte 0x0f
	.ascii "SpotExpTable\0"
	.byte 0x00,0x00,0x80,0xe5,0x03,0x23,0x94,0x01
	.byte 0x0f
	.ascii "MatAmbient\0"
	.byte 0x00,0x00,0x81,0x09,0x03,0x23,0x94,0x21
	.byte 0x0f
	.ascii "MatDiffuse\0"
	.byte 0x00,0x00,0x81,0x2b,0x03,0x23,0xac,0x21
	.byte 0x0f
	.ascii "MatSpecular\0"
	.byte 0x00,0x00,0x81,0x4d,0x03,0x23,0xc4,0x21
	.byte 0x0f
	.ascii "dli\0"
	.byte 0x00,0x00,0x03,0x6f,0x03,0x23,0xdc,0x21
	.byte 0x0f
	.ascii "sli\0"
	.byte 0x00,0x00,0x03,0x6f,0x03,0x23,0xe0,0x21
	.byte 0x00,0x09,0x00,0x00,0x7e,0xda,0x0a,0x00
	.byte 0x00,0x03,0x6f,0x0c,0x00,0x00,0x80,0xb2
	.byte 0x0b,0x00,0x00,0x03,0x7d,0x02,0x00,0x0a
	.byte 0x00,0x00,0x03,0x6f,0x0c,0x00,0x00,0x80
	.byte 0xc3,0x0b,0x00,0x00,0x03,0x7d,0x02,0x00
	.byte 0x0a,0x00,0x00,0x03,0x6f,0x0c,0x00,0x00
	.byte 0x80,0xd4,0x0b,0x00,0x00,0x03,0x7d,0x02
	.byte 0x00,0x0a,0x00,0x00,0x03,0x66,0x08,0x00
	.byte 0x00,0x80,0xe5,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x01,0x00,0x10,0x00,0x00,0x80,0xd4,0x10
	.byte 0x00,0x00,0x00,0x80,0xf8,0x11,0x00,0x00
	.byte 0x03,0x7d,0x01,0xff,0x00,0x0a,0x00,0x00
	.byte 0x03,0x66,0x0c,0x00,0x00,0x81,0x09,0x0b
	.byte 0x00,0x00,0x03,0x7d,0x02,0x00,0x0a,0x00
	.byte 0x00,0x80,0xf8,0x18,0x00,0x00,0x81,0x1a
	.byte 0x0b,0x00,0x00,0x03,0x7d,0x01,0x00,0x0a
	.byte 0x00,0x00,0x03,0x66,0x0c,0x00,0x00,0x81
	.byte 0x2b,0x0b,0x00,0x00,0x03,0x7d,0x02,0x00
	.byte 0x0a,0x00,0x00,0x81,0x1a,0x18,0x00,0x00
	.byte 0x81,0x3c,0x0b,0x00,0x00,0x03,0x7d,0x01
	.byte 0x00,0x0a,0x00,0x00,0x03,0x66,0x0c,0x00
	.byte 0x00,0x81,0x4d,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x02,0x00,0x0a,0x00,0x00,0x81,0x3c,0x18
	.byte 0x00,0x00,0x81,0x5e,0x0b,0x00,0x00,0x03
	.byte 0x7d,0x01,0x00,0x10,0x00,0x00,0x7e,0xda
	.byte 0x87,0x20,0x00,0x00,0x81,0x70,0x0b,0x00
	.byte 0x00,0x03,0x7d,0x07,0x00,0x0a,0x00,0x00
	.byte 0x03,0x6f,0x10,0x00,0x00,0x81,0x81,0x0b
	.byte 0x00,0x00,0x03,0x7d,0x03,0x00,0x0e
	.ascii "gl_lightmodel\0"
	.byte 0x14,0x02,0x00,0x00,0x81,0xcb,0x0f
	.ascii "Ambient\0"
	.byte 0x00,0x00,0x81,0x70,0x02,0x23,0x00,0x0f
	.ascii "LocalViewer\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x10,0x0f
	.ascii "TwoSide\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x11,0x00
	.byte 0x0a,0x00,0x00,0x03,0x6f,0x10,0x00,0x00
	.byte 0x81,0xdc,0x0b,0x00,0x00,0x03,0x7d,0x03
	.byte 0x00,0x0a,0x00,0x00,0x03,0x6f,0x10,0x00
	.byte 0x00,0x81,0xed,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x03,0x00,0x0a,0x00,0x00,0x03,0x6f,0x10
	.byte 0x00,0x00,0x81,0xfe,0x0b,0x00,0x00,0x03
	.byte 0x7d,0x03,0x00,0x0a,0x00,0x00,0x03,0x6f
	.byte 0x10,0x00,0x00,0x82,0x0f,0x0b,0x00,0x00
	.byte 0x03,0x7d,0x03,0x00,0x10,0x00,0x00,0x03
	.byte 0x6f,0x03,0x20,0x00,0x00,0x82,0x22,0x11
	.byte 0x00,0x00,0x03,0x7d,0x00,0xc7,0x00,0x12
	.ascii "gl_material\0"
	.byte 0x03,0x70,0x02,0x00,0x00,0x82,0xde,0x0f
	.ascii "Ambient\0"
	.byte 0x00,0x00,0x81,0xcb,0x02,0x23,0x00,0x0f
	.ascii "Diffuse\0"
	.byte 0x00,0x00,0x81,0xdc,0x02,0x23,0x10,0x0f
	.ascii "Specular\0"
	.byte 0x00,0x00,0x81,0xed,0x02,0x23,0x20,0x0f
	.ascii "Emission\0"
	.byte 0x00,0x00,0x81,0xfe,0x02,0x23,0x30,0x0f
	.ascii "Shininess\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x40,0x0f
	.ascii "AmbientIndex\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x44,0x0f
	.ascii "DiffuseIndex\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x48,0x0f
	.ascii "SpecularIndex\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x4c,0x0f
	.ascii "ShineTable\0"
	.byte 0x00,0x00,0x82,0x0f,0x02,0x23,0x50,0x00
	.byte 0x10,0x00,0x00,0x82,0x22,0x06,0xe0,0x00
	.byte 0x00,0x82,0xf0,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x01,0x00,0x0a,0x00,0x00,0x03,0x66,0x10
	.byte 0x00,0x00,0x83,0x01,0x0b,0x00,0x00,0x03
	.byte 0x7d,0x03,0x00,0x0a,0x00,0x00,0x82,0xf0
	.byte 0x20,0x00,0x00,0x83,0x12,0x0b,0x00,0x00
	.byte 0x03,0x7d,0x01,0x00,0x12
	.ascii "gl_light_attrib\0"
	.byte 0x8e,0x54,0x02,0x00,0x00,0x84,0x33,0x0f
	.ascii "Light\0"
	.byte 0x00,0x00,0x81,0x5e,0x02,0x23,0x00,0x0f
	.ascii "Model\0"
	.byte 0x00,0x00,0x81,0x81,0x04,0x23,0xa0,0x8e
	.byte 0x02,0x0f
	.ascii "Material\0"
	.byte 0x00,0x00,0x82,0xde,0x04,0x23,0xb4,0x8e
	.byte 0x02,0x0f
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x04,0x23,0x94,0x9c
	.byte 0x02,0x0f
	.ascii "ShadeModel\0"
	.byte 0x00,0x00,0x33,0x32,0x04,0x23,0x98,0x9c
	.byte 0x02,0x0f
	.ascii "ColorMaterialFace\0"
	.byte 0x00,0x00,0x33,0x32,0x04,0x23,0x9c,0x9c
	.byte 0x02,0x0f
	.ascii "ColorMaterialMode\0"
	.byte 0x00,0x00,0x33,0x32,0x04,0x23,0xa0,0x9c
	.byte 0x02,0x0f
	.ascii "ColorMaterialBitmask\0"
	.byte 0x00,0x00,0x03,0x59,0x04,0x23,0xa4,0x9c
	.byte 0x02,0x0f
	.ascii "ColorMaterialEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x04,0x23,0xa8,0x9c
	.byte 0x02,0x0f
	.ascii "FirstEnabled\0"
	.byte 0x00,0x00,0x80,0x9c,0x04,0x23,0xac,0x9c
	.byte 0x02,0x0f
	.ascii "Fast\0"
	.byte 0x00,0x00,0x34,0xa2,0x04,0x23,0xb0,0x9c
	.byte 0x02,0x0f
	.ascii "BaseColor\0"
	.byte 0x00,0x00,0x83,0x01,0x04,0x23,0xb4,0x9c
	.byte 0x02,0x00,0x07,0x00,0x00,0x49,0xfe
	.ascii "GLushort\0"
	.byte 0x03,0x0e
	.ascii "gl_line_attrib\0"
	.byte 0x0c,0x02,0x00,0x00,0x84,0xbb,0x0f
	.ascii "SmoothFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x00,0x0f
	.ascii "StippleFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x01,0x0f
	.ascii "StipplePattern\0"
	.byte 0x00,0x00,0x84,0x33,0x02,0x23,0x02,0x0f
	.ascii "StippleFactor\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x04,0x0f
	.ascii "Width\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x08,0x00
	.byte 0x0e
	.ascii "gl_list_attrib\0"
	.byte 0x04,0x02,0x00,0x00,0x84,0xe3,0x0f
	.ascii "ListBase\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x00,0x00
	.byte 0x10,0x00,0x00,0x03,0x30,0x04,0x00,0x00
	.byte 0x00,0x84,0xf6,0x11,0x00,0x00,0x03,0x7d
	.byte 0x00,0xff,0x00,0x10,0x00,0x00,0x03,0x30
	.byte 0x04,0x00,0x00,0x00,0x85,0x09,0x11,0x00
	.byte 0x00,0x03,0x7d,0x00,0xff,0x00,0x10,0x00
	.byte 0x00,0x03,0x6f,0x04,0x00,0x00,0x00,0x85
	.byte 0x1c,0x11,0x00,0x00,0x03,0x7d,0x00,0xff
	.byte 0x00,0x10,0x00,0x00,0x03,0x6f,0x04,0x00
	.byte 0x00,0x00,0x85,0x2f,0x11,0x00,0x00,0x03
	.byte 0x7d,0x00,0xff,0x00,0x10,0x00,0x00,0x03
	.byte 0x6f,0x04,0x00,0x00,0x00,0x85,0x42,0x11
	.byte 0x00,0x00,0x03,0x7d,0x00,0xff,0x00,0x10
	.byte 0x00,0x00,0x03,0x6f,0x04,0x00,0x00,0x00
	.byte 0x85,0x55,0x11,0x00,0x00,0x03,0x7d,0x00
	.byte 0xff,0x00,0x10,0x00,0x00,0x03,0x6f,0x04
	.byte 0x00,0x00,0x00,0x85,0x68,0x11,0x00,0x00
	.byte 0x03,0x7d,0x00,0xff,0x00,0x10,0x00,0x00
	.byte 0x03,0x6f,0x04,0x00,0x00,0x00,0x85,0x7b
	.byte 0x11,0x00,0x00,0x03,0x7d,0x00,0xff,0x00
	.byte 0x10,0x00,0x00,0x03,0x6f,0x04,0x00,0x00
	.byte 0x00,0x85,0x8e,0x11,0x00,0x00,0x03,0x7d
	.byte 0x00,0xff,0x00,0x10,0x00,0x00,0x03,0x6f
	.byte 0x04,0x00,0x00,0x00,0x85,0xa1,0x11,0x00
	.byte 0x00,0x03,0x7d,0x00,0xff,0x00,0x12
	.ascii "gl_pixel_attrib\0"
	.byte 0x28,0x68,0x02,0x00,0x00,0x88,0x60,0x0f
	.ascii "ReadBuffer\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x00,0x0f
	.ascii "RedBias\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x04,0x0f
	.ascii "RedScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x08,0x0f
	.ascii "GreenBias\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x0c,0x0f
	.ascii "GreenScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x10,0x0f
	.ascii "BlueBias\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x14,0x0f
	.ascii "BlueScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x18,0x0f
	.ascii "AlphaBias\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x1c,0x0f
	.ascii "AlphaScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x20,0x0f
	.ascii "DepthBias\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x24,0x0f
	.ascii "DepthScale\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x28,0x0f
	.ascii "IndexShift\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x2c,0x0f
	.ascii "IndexOffset\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x30,0x0f
	.ascii "MapColorFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x34,0x0f
	.ascii "MapStencilFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x35,0x0f
	.ascii "ZoomX\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x38,0x0f
	.ascii "ZoomY\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x3c,0x0f
	.ascii "MapStoSsize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x40,0x0f
	.ascii "MapItoIsize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x44,0x0f
	.ascii "MapItoRsize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x48,0x0f
	.ascii "MapItoGsize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x4c,0x0f
	.ascii "MapItoBsize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x50,0x0f
	.ascii "MapItoAsize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x54,0x0f
	.ascii "MapRtoRsize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x58,0x0f
	.ascii "MapGtoGsize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x5c,0x0f
	.ascii "MapBtoBsize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x60,0x0f
	.ascii "MapAtoAsize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x64,0x0f
	.ascii "MapStoS\0"
	.byte 0x00,0x00,0x84,0xe3,0x02,0x23,0x68,0x0f
	.ascii "MapItoI\0"
	.byte 0x00,0x00,0x84,0xf6,0x03,0x23,0xe8,0x08
	.byte 0x0f
	.ascii "MapItoR\0"
	.byte 0x00,0x00,0x85,0x09,0x03,0x23,0xe8,0x10
	.byte 0x0f
	.ascii "MapItoG\0"
	.byte 0x00,0x00,0x85,0x1c,0x03,0x23,0xe8,0x18
	.byte 0x0f
	.ascii "MapItoB\0"
	.byte 0x00,0x00,0x85,0x2f,0x03,0x23,0xe8,0x20
	.byte 0x0f
	.ascii "MapItoA\0"
	.byte 0x00,0x00,0x85,0x42,0x03,0x23,0xe8,0x28
	.byte 0x0f
	.ascii "MapRtoR\0"
	.byte 0x00,0x00,0x85,0x55,0x03,0x23,0xe8,0x30
	.byte 0x0f
	.ascii "MapGtoG\0"
	.byte 0x00,0x00,0x85,0x68,0x03,0x23,0xe8,0x38
	.byte 0x0f
	.ascii "MapBtoB\0"
	.byte 0x00,0x00,0x85,0x7b,0x03,0x23,0xe8,0x40
	.byte 0x0f
	.ascii "MapAtoA\0"
	.byte 0x00,0x00,0x85,0x8e,0x03,0x23,0xe8,0x48
	.byte 0x00,0x0a,0x00,0x00,0x03,0x6f,0x0c,0x00
	.byte 0x00,0x88,0x71,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x02,0x00,0x0e
	.ascii "gl_point_attrib\0"
	.byte 0x20,0x02,0x00,0x00,0x88,0xea,0x0f
	.ascii "SmoothFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x00,0x0f
	.ascii "Size\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x04,0x0f
	.ascii "Params\0"
	.byte 0x00,0x00,0x88,0x60,0x02,0x23,0x08,0x0f
	.ascii "MinSize\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x14,0x0f
	.ascii "MaxSize\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x18,0x0f
	.ascii "Threshold\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x1c,0x00
	.byte 0x0e
	.ascii "gl_polygon_attrib\0"
	.byte 0x28,0x02,0x00,0x00,0x8a,0x1d,0x0f
	.ascii "FrontFace\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x00,0x0f
	.ascii "FrontMode\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x04,0x0f
	.ascii "BackMode\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x08,0x0f
	.ascii "Unfilled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x0c,0x0f
	.ascii "CullFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x0d,0x0f
	.ascii "CullFaceMode\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x10,0x0f
	.ascii "CullBits\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x14,0x0f
	.ascii "SmoothFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x18,0x0f
	.ascii "StippleFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x19,0x0f
	.ascii "OffsetFactor\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x1c,0x0f
	.ascii "OffsetUnits\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x20,0x0f
	.ascii "OffsetPoint\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x24,0x0f
	.ascii "OffsetLine\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x25,0x0f
	.ascii "OffsetFill\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x26,0x0f
	.ascii "OffsetAny\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x27,0x00
	.byte 0x0a,0x00,0x00,0x03,0x59,0x80,0x00,0x00
	.byte 0x8a,0x2e,0x0b,0x00,0x00,0x03,0x7d,0x1f
	.byte 0x00,0x07,0x00,0x00,0x03,0x29
	.ascii "GLsizei\0"
	.byte 0x03,0x0e
	.ascii "gl_scissor_attrib\0"
	.byte 0x14,0x02,0x00,0x00,0x8a,0x97,0x0f
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x00,0x0f
	.ascii "X\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x04,0x0f
	.ascii "Y\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x08,0x0f
	.ascii "Width\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x0c,0x0f
	.ascii "Height\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x10,0x00
	.byte 0x0e
	.ascii "gl_stencil_attrib\0"
	.byte 0x18,0x02,0x00,0x00,0x8b,0x45,0x0f
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x00,0x0f
	.ascii "Function\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x04,0x0f
	.ascii "FailFunc\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x08,0x0f
	.ascii "ZPassFunc\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x0c,0x0f
	.ascii "ZFailFunc\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x10,0x0f
	.ascii "Ref\0"
	.byte 0x00,0x00,0x67,0xa0,0x02,0x23,0x14,0x0f
	.ascii "ValueMask\0"
	.byte 0x00,0x00,0x67,0xa0,0x02,0x23,0x15,0x0f
	.ascii "Clear\0"
	.byte 0x00,0x00,0x67,0xa0,0x02,0x23,0x16,0x0f
	.ascii "WriteMask\0"
	.byte 0x00,0x00,0x67,0xa0,0x02,0x23,0x17,0x00
	.byte 0x0a,0x00,0x00,0x03,0x6f,0x10,0x00,0x00
	.byte 0x8b,0x56,0x0b,0x00,0x00,0x03,0x7d,0x03
	.byte 0x00,0x0a,0x00,0x00,0x03,0x6f,0x10,0x00
	.byte 0x00,0x8b,0x67,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x03,0x00,0x0a,0x00,0x00,0x03,0x6f,0x10
	.byte 0x00,0x00,0x8b,0x78,0x0b,0x00,0x00,0x03
	.byte 0x7d,0x03,0x00,0x0a,0x00,0x00,0x03,0x6f
	.byte 0x10,0x00,0x00,0x8b,0x89,0x0b,0x00,0x00
	.byte 0x03,0x7d,0x03,0x00,0x0a,0x00,0x00,0x03
	.byte 0x6f,0x10,0x00,0x00,0x8b,0x9a,0x0b,0x00
	.byte 0x00,0x03,0x7d,0x03,0x00,0x0a,0x00,0x00
	.byte 0x03,0x6f,0x10,0x00,0x00,0x8b,0xab,0x0b
	.byte 0x00,0x00,0x03,0x7d,0x03,0x00,0x0a,0x00
	.byte 0x00,0x03,0x6f,0x10,0x00,0x00,0x8b,0xbc
	.byte 0x0b,0x00,0x00,0x03,0x7d,0x03,0x00,0x0a
	.byte 0x00,0x00,0x03,0x6f,0x10,0x00,0x00,0x8b
	.byte 0xcd,0x0b,0x00,0x00,0x03,0x7d,0x03,0x00
	.byte 0x0a,0x00,0x00,0x03,0x6f,0x10,0x00,0x00
	.byte 0x8b,0xde,0x0b,0x00,0x00,0x03,0x7d,0x03
	.byte 0x00,0x10,0x00,0x00,0x33,0x50,0x04,0x00
	.byte 0x00,0x00,0x8b,0xf1,0x11,0x00,0x00,0x03
	.byte 0x7d,0x03,0xff,0x00,0x12
	.ascii "gl_texture_attrib\0"
	.byte 0x04,0xd8,0x02,0x00,0x00,0x8e,0x20,0x0f
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x00,0x0f
	.ascii "EnvMode\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x04,0x0f
	.ascii "EnvColor\0"
	.byte 0x00,0x00,0x8b,0x45,0x02,0x23,0x08,0x0f
	.ascii "TexGenEnabled\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x18,0x0f
	.ascii "GenModeS\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x1c,0x0f
	.ascii "GenModeT\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x20,0x0f
	.ascii "GenModeR\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x24,0x0f
	.ascii "GenModeQ\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x28,0x0f
	.ascii "ObjectPlaneS\0"
	.byte 0x00,0x00,0x8b,0x56,0x02,0x23,0x2c,0x0f
	.ascii "ObjectPlaneT\0"
	.byte 0x00,0x00,0x8b,0x67,0x02,0x23,0x3c,0x0f
	.ascii "ObjectPlaneR\0"
	.byte 0x00,0x00,0x8b,0x78,0x02,0x23,0x4c,0x0f
	.ascii "ObjectPlaneQ\0"
	.byte 0x00,0x00,0x8b,0x89,0x02,0x23,0x5c,0x0f
	.ascii "EyePlaneS\0"
	.byte 0x00,0x00,0x8b,0x9a,0x02,0x23,0x6c,0x0f
	.ascii "EyePlaneT\0"
	.byte 0x00,0x00,0x8b,0xab,0x02,0x23,0x7c,0x0f
	.ascii "EyePlaneR\0"
	.byte 0x00,0x00,0x8b,0xbc,0x03,0x23,0x8c,0x01
	.byte 0x0f
	.ascii "EyePlaneQ\0"
	.byte 0x00,0x00,0x8b,0xcd,0x03,0x23,0x9c,0x01
	.byte 0x0f
	.ascii "Current1D\0"
	.byte 0x00,0x00,0x36,0xcf,0x03,0x23,0xac,0x01
	.byte 0x0f
	.ascii "Current2D\0"
	.byte 0x00,0x00,0x36,0xcf,0x03,0x23,0xb0,0x01
	.byte 0x0f
	.ascii "Current3D\0"
	.byte 0x00,0x00,0x36,0xcf,0x03,0x23,0xb4,0x01
	.byte 0x0f
	.ascii "Current\0"
	.byte 0x00,0x00,0x36,0xcf,0x03,0x23,0xb8,0x01
	.byte 0x0f
	.ascii "Proxy1D\0"
	.byte 0x00,0x00,0x36,0xcf,0x03,0x23,0xbc,0x01
	.byte 0x0f
	.ascii "Proxy2D\0"
	.byte 0x00,0x00,0x36,0xcf,0x03,0x23,0xc0,0x01
	.byte 0x0f
	.ascii "Proxy3D\0"
	.byte 0x00,0x00,0x36,0xcf,0x03,0x23,0xc4,0x01
	.byte 0x0f
	.ascii "SharedPalette\0"
	.byte 0x00,0x00,0x34,0xa2,0x03,0x23,0xc8,0x01
	.byte 0x0f
	.ascii "Palette\0"
	.byte 0x00,0x00,0x8b,0xde,0x03,0x23,0xc9,0x01
	.byte 0x0f
	.ascii "PaletteSize\0"
	.byte 0x00,0x00,0x03,0x59,0x03,0x23,0xcc,0x09
	.byte 0x0f
	.ascii "PaletteIntFormat\0"
	.byte 0x00,0x00,0x33,0x32,0x03,0x23,0xd0,0x09
	.byte 0x0f
	.ascii "PaletteFormat\0"
	.byte 0x00,0x00,0x33,0x32,0x03,0x23,0xd4,0x09
	.byte 0x00,0x0a,0x00,0x00,0x03,0x66,0x10,0x00
	.byte 0x00,0x8e,0x31,0x0b,0x00,0x00,0x03,0x7d
	.byte 0x03,0x00,0x0a,0x00,0x00,0x8e,0x20,0x60
	.byte 0x00,0x00,0x8e,0x42,0x0b,0x00,0x00,0x03
	.byte 0x7d,0x05,0x00,0x0a,0x00,0x00,0x34,0xa2
	.byte 0x06,0x00,0x00,0x8e,0x53,0x0b,0x00,0x00
	.byte 0x03,0x7d,0x05,0x00,0x0e
	.ascii "gl_transform_attrib\0"
	.byte 0x6c,0x02,0x00,0x00,0x8e,0xcd,0x0f
	.ascii "MatrixMode\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x00,0x0f
	.ascii "ClipEquation\0"
	.byte 0x00,0x00,0x8e,0x31,0x02,0x23,0x04,0x0f
	.ascii "ClipEnabled\0"
	.byte 0x00,0x00,0x8e,0x42,0x02,0x23,0x64,0x0f
	.ascii "AnyClip\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x6a,0x0f
	.ascii "Normalize\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x6b,0x00
	.byte 0x0e
	.ascii "gl_viewport_attrib\0"
	.byte 0x30,0x02,0x00,0x00,0x8f,0x74,0x0f
	.ascii "X\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x00,0x0f
	.ascii "Y\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x04,0x0f
	.ascii "Width\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x08,0x0f
	.ascii "Height\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x0c,0x0f
	.ascii "Near\0"
	.byte 0x00,0x00,0x03,0x6f
	.byte 0x02,0x23,0x10,0x0f
	.ascii "Far\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x14,0x0f
	.ascii "Sx\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x18,0x0f
	.ascii "Sy\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x1c,0x0f
	.ascii "Sz\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x20,0x0f
	.ascii "Tx\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x24,0x0f
	.ascii "Ty\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x28,0x0f
	.ascii "Tz\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x2c,0x00
	.byte 0x0a,0x00,0x00,0x77,0x14,0x40,0x00,0x00
	.byte 0x8f,0x85,0x0b,0x00,0x00,0x03,0x7d,0x0f
	.byte 0x00,0x09,0x00,0x00,0x34,0xa2,0x0e
	.ascii "gl_array_attrib\0"
	.byte 0x80,0x02,0x00,0x00,0x92,0x35,0x0f
	.ascii "VertexSize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x00,0x0f
	.ascii "VertexType\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x04,0x0f
	.ascii "VertexStride\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x08,0x0f
	.ascii "VertexStrideB\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x0c,0x0f
	.ascii "VertexPtr\0"
	.byte 0x00,0x00,0x33,0x6b,0x02,0x23,0x10,0x0f
	.ascii "VertexEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x14,0x0f
	.ascii "NormalType\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x18,0x0f
	.ascii "NormalStride\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x1c,0x0f
	.ascii "NormalStrideB\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x20,0x0f
	.ascii "NormalPtr\0"
	.byte 0x00,0x00,0x33,0x6b,0x02,0x23,0x24,0x0f
	.ascii "NormalEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x28,0x0f
	.ascii "ColorSize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x2c,0x0f
	.ascii "ColorType\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x30,0x0f
	.ascii "ColorStride\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x34,0x0f
	.ascii "ColorStrideB\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x38,0x0f
	.ascii "ColorPtr\0"
	.byte 0x00,0x00,0x33,0x6b,0x02,0x23,0x3c,0x0f
	.ascii "ColorEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x40,0x0f
	.ascii "IndexType\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x44,0x0f
	.ascii "IndexStride\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x48,0x0f
	.ascii "IndexStrideB\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x4c,0x0f
	.ascii "IndexPtr\0"
	.byte 0x00,0x00,0x33,0x6b,0x02,0x23,0x50,0x0f
	.ascii "IndexEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x54,0x0f
	.ascii "TexCoordSize\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x58,0x0f
	.ascii "TexCoordType\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x5c,0x0f
	.ascii "TexCoordStride\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x60,0x0f
	.ascii "TexCoordStrideB\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x64,0x0f
	.ascii "TexCoordPtr\0"
	.byte 0x00,0x00,0x33,0x6b,0x02,0x23,0x68,0x0f
	.ascii "TexCoordEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x6c,0x0f
	.ascii "EdgeFlagStride\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x70,0x0f
	.ascii "EdgeFlagStrideB\0"
	.byte 0x00,0x00,0x8a,0x2e,0x02,0x23,0x74,0x0f
	.ascii "EdgeFlagPtr\0"
	.byte 0x00,0x00,0x8f,0x85,0x02,0x23,0x78,0x0f
	.ascii "EdgeFlagEnabled\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x7c,0x00
	.byte 0x0e
	.ascii "gl_pixelstore_attrib\0"
	.byte 0x1c,0x02,0x00,0x00,0x92,0xe4,0x0f
	.ascii "Alignment\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x00,0x0f
	.ascii "RowLength\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x04,0x0f
	.ascii "SkipPixels\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x08,0x0f
	.ascii "SkipRows\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x0c,0x0f
	.ascii "ImageHeight\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x10,0x0f
	.ascii "SkipImages\0"
	.byte 0x00,0x00,0x03,0x30,0x02,0x23,0x14,0x0f
	.ascii "SwapBytes\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x18,0x0f
	.ascii "LsbFirst\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x19,0x00
	.byte 0x09,0x00,0x00,0x03,0x6f,0x0e
	.ascii "gl_1d_map\0"
	.byte 0x14,0x02,0x00,0x00,0x93,0x3d,0x0f
	.ascii "Order\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x00,0x0f
	.ascii "u1\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x04,0x0f
	.ascii "u2\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x08,0x0f
	.ascii "Points\0"
	.byte 0x00,0x00,0x92,0xe4,0x02,0x23,0x0c,0x0f
	.ascii "Retain\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x10,0x00
	.byte 0x0e
	.ascii "gl_2d_map\0"
	.byte 0x20,0x02,0x00,0x00,0x93,0xb7,0x0f
	.ascii "Uorder\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x00,0x0f
	.ascii "Vorder\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x04,0x0f
	.ascii "u1\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x08,0x0f
	.ascii "u2\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x0c,0x0f
	.ascii "v1\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x10,0x0f
	.ascii "v2\0"
	.byte 0x00,0x00,0x03,0x6f,0x02,0x23,0x14,0x0f
	.ascii "Points\0"
	.byte 0x00,0x00,0x92,0xe4,0x02,0x23,0x18,0x0f
	.ascii "Retain\0"
	.byte 0x00,0x00,0x34,0xa2,0x02,0x23,0x1c,0x00
	.byte 0x12
	.ascii "gl_evaluators\0"
	.byte 0x01,0xd4,0x02,0x00,0x00,0x95,0x41,0x0f
	.ascii "Map1Vertex3\0"
	.byte 0x00,0x00,0x92,0xe9,0x02,0x23,0x00,0x0f
	.ascii "Map1Vertex4\0"
	.byte 0x00,0x00,0x92,0xe9,0x02,0x23,0x14,0x0f
	.ascii "Map1Index\0"
	.byte 0x00,0x00,0x92,0xe9,0x02,0x23,0x28,0x0f
	.ascii "Map1Color4\0"
	.byte 0x00,0x00,0x92,0xe9,0x02,0x23,0x3c,0x0f
	.ascii "Map1Normal\0"
	.byte 0x00,0x00,0x92,0xe9,0x02,0x23,0x50,0x0f
	.ascii "Map1Texture1\0"
	.byte 0x00,0x00,0x92,0xe9,0x02,0x23,0x64,0x0f
	.ascii "Map1Texture2\0"
	.byte 0x00,0x00,0x92,0xe9,0x02,0x23,0x78,0x0f
	.ascii "Map1Texture3\0"
	.byte 0x00,0x00,0x92,0xe9,0x03,0x23,0x8c,0x01
	.byte 0x0f
	.ascii "Map1Texture4\0"
	.byte 0x00,0x00,0x92,0xe9,0x03,0x23,0xa0,0x01
	.byte 0x0f
	.ascii "Map2Vertex3\0"
	.byte 0x00,0x00,0x93,0x3d,0x03,0x23,0xb4,0x01
	.byte 0x0f
	.ascii "Map2Vertex4\0"
	.byte 0x00,0x00,0x93,0x3d,0x03,0x23,0xd4,0x01
	.byte 0x0f
	.ascii "Map2Index\0"
	.byte 0x00,0x00,0x93,0x3d,0x03,0x23,0xf4,0x01
	.byte 0x0f
	.ascii "Map2Color4\0"
	.byte 0x00,0x00,0x93,0x3d,0x03,0x23,0x94,0x02
	.byte 0x0f
	.ascii "Map2Normal\0"
	.byte 0x00,0x00,0x93,0x3d,0x03,0x23,0xb4,0x02
	.byte 0x0f
	.ascii "Map2Texture1\0"
	.byte 0x00,0x00,0x93,0x3d,0x03,0x23,0xd4,0x02
	.byte 0x0f
	.ascii "Map2Texture2\0"
	.byte 0x00,0x00,0x93,0x3d,0x03,0x23,0xf4,0x02
	.byte 0x0f
	.ascii "Map2Texture3\0"
	.byte 0x00,0x00,0x93,0x3d,0x03,0x23,0x94,0x03
	.byte 0x0f
	.ascii "Map2Texture4\0"
	.byte 0x00,0x00,0x93,0x3d,0x03,0x23,0xb4,0x03
	.byte 0x00,0x0e
	.ascii "gl_feedback\0"
	.byte 0x14,0x02,0x00,0x00,0x95,0x9f,0x0f
	.ascii "Type\0"
	.byte 0x00,0x00,0x33,0x32,0x02,0x23,0x00,0x0f
	.ascii "Mask\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x04,0x0f
	.ascii "Buffer\0"
	.byte 0x00,0x00,0x92,0xe4,0x02,0x23,0x08,0x0f
	.ascii "BufferSize\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x0c,0x0f
	.ascii "Count\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x10,0x00
	.byte 0x09,0x00,0x00,0x03,0x59,0x10,0x00,0x00
	.byte 0x03,0x59,0x01,0x00,0x00,0x00,0x95,0xb6
	.byte 0x0b,0x00,0x00,0x03,0x7d,0x3f,0x00,0x12
	.ascii "gl_selection\0"
	.byte 0x01,0x20,0x02,0x00,0x00,0x96,0x6b,0x0f
	.ascii "Buffer\0"
	.byte 0x00,0x00,0x95,0x9f,0x02,0x23,0x00,0x0f
	.ascii "BufferSize\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x04,0x0f
	.ascii "BufferCount\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x08,0x0f
	.ascii "Hits\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x0c,0x0f
	.ascii "NameStackDepth\0"
	.byte 0x00,0x00,0x03,0x59,0x02,0x23,0x10,0x0f
	.ascii "NameStack\0"
	.byte 0x00,0x00,0x95,0xa4,0x02,0x23,0x14,0x0f
	.ascii "HitFlag\0"
	.byte 0x00,0x00,0x34,0xa2,0x03,0x23,0x94,0x02
	.byte 0x0f
	.ascii "HitMinZ\0"
	.byte 0x00,0x00,0x03,0x6f,0x03,0x23,0x98,0x02
	.byte 0x0f
	.ascii "HitMaxZ\0"
	.byte 0x00,0x00,0x03,0x6f,0x03,0x23,0x9c,0x02
	.byte 0x00,0x08
	.ascii "vertex_buffer\0"
	.byte 0x01,0x09,0x00,0x00,0x96,0x6b,0x08
	.ascii "pixel_buffer\0"
	.byte 0x01,0x09,0x00,0x00,0x96,0x80,0x07,0x00
	.byte 0x00,0x37,0x75
	.ascii "GLcontext\0"
	.byte 0x02,0x09,0x00,0x00,0x96,0x94,0x10,0x00
	.byte 0x00,0x03,0x59,0x19,0x00,0x00,0x00,0x96
	.byte 0xbc,0x11,0x00,0x00,0x03,0x7d,0x06,0x3f
	.byte 0x00,0x06
	.ascii "signed char\0"
	.byte 0x06,0x01,0x07,0x00,0x00,0x96,0xbc
	.ascii "GLbyte\0"
	.byte 0x03,0x09,0x00,0x00,0x96,0xcb,0x09,0x00
	.byte 0x00,0x84,0x33,0x07,0x00,0x00,0x67,0xb5
	.ascii "GLshort\0"
	.byte 0x03,0x09,0x00,0x00,0x96,0xe2,0x09,0x00
	.byte 0x00,0x03,0x30,0x02
	.ascii "read_depth_pixels\0"
	.byte 0x03,0x01,0xed
	.uaword read_depth_pixels
	.uaword .L775
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9a,0x36
	.byte 0x03,0x00,0x00,0x96,0xa4
	.ascii "ctx\0"
	.byte 0x01,0xe9,0x03,0x91,0xc4,0x00,0x03,0x00
	.byte 0x00,0x03,0x30
	.ascii "x\0"
	.byte 0x01,0xea,0x03,0x91,0xc8,0x00,0x03,0x00
	.byte 0x00,0x03,0x30
	.ascii "y\0"
	.byte 0x01,0xea,0x03,0x91,0xcc,0x00,0x03,0x00
	.byte 0x00,0x8a,0x2e
	.ascii "width\0"
	.byte 0x01,0xeb,0x03,0x91,0xd0,0x00,0x03,0x00
	.byte 0x00,0x8a,0x2e
	.ascii "height\0"
	.byte 0x01,0xeb,0x03,0x91,0xd4,0x00,0x03,0x00
	.byte 0x00,0x33,0x32
	.ascii "type\0"
	.byte 0x01,0xec,0x03,0x91,0xd8,0x00,0x03,0x00
	.byte 0x00,0x3f,0x05
	.ascii "pixels\0"
	.byte 0x01,0xec,0x03,0x91,0xdc,0x00,0x04
	.ascii "i\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0xee,0x02
	.byte 0x91,0x7c,0x04
	.ascii "j\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0xee,0x02
	.byte 0x91,0x78,0x04
	.ascii "a\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0xef,0x02
	.byte 0x91,0x74,0x04
	.ascii "s\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0xef,0x02
	.byte 0x91,0x70,0x04
	.ascii "k\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0xef,0x02
	.byte 0x91,0x6c,0x04
	.ascii "l\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0xef,0x02
	.byte 0x91,0x68,0x04
	.ascii "start\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0xef,0x02
	.byte 0x91,0x64,0x04
	.ascii "bias_or_scale\0"
	.byte 0x00,0x00,0x34,0xa2,0x01,0x01,0xf0,0x02
	.byte 0x91,0x63,0x05
	.uaword .L442
	.uaword .L773
	.byte 0x05
	.uaword .L448
	.uaword .L466
	.byte 0x05
	.uaword .L449
	.uaword .L465
	.byte 0x05
	.uaword .L450
	.uaword .L464
	.byte 0x05
	.uaword .L456
	.uaword .L461
	.byte 0x05
	.uaword .L457
	.uaword .L460
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xdd,0x01,0x01,0x01,0x19
	.byte 0x02,0x91,0x58,0x00,0x00,0x00,0x00,0x00
	.byte 0x05
	.uaword .L468
	.uaword .L772
	.byte 0x05
	.uaword .L469
	.uaword .L771
	.byte 0x05
	.uaword .L475
	.uaword .L524
	.byte 0x05
	.uaword .L476
	.uaword .L523
	.byte 0x18
	.ascii "shift\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x01,0x21
	.byte 0x02,0x91,0x58,0x18
	.ascii "max\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x01,0x22
	.byte 0x02,0x91,0x54,0x05
	.uaword .L494
	.uaword .L522
	.byte 0x05
	.uaword .L500
	.uaword .L519
	.byte 0x05
	.uaword .L501
	.uaword .L518
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x95,0x9f,0x01,0x01,0x01,0x28
	.byte 0x02,0x91,0x50,0x00,0x00,0x00,0x00,0x00
	.byte 0x05
	.uaword .L526
	.uaword .L770
	.byte 0x05
	.uaword .L527
	.uaword .L769
	.byte 0x05
	.uaword .L528
	.uaword .L768
	.byte 0x05
	.uaword .L534
	.uaword .L765
	.byte 0x05
	.uaword .L535
	.uaword .L764
	.byte 0x18
	.ascii "depth\0"
	.byte 0x00,0x00,0x9a,0x36,0x01,0x01,0x01,0x32
	.byte 0x03,0x91,0xdc,0x4d,0x05
	.uaword .L537
	.uaword .L566
	.byte 0x05
	.uaword .L541
	.uaword .L565
	.byte 0x05
	.uaword .L542
	.uaword .L564
	.byte 0x05
	.uaword .L543
	.uaword .L563
	.byte 0x05
	.uaword .L549
	.uaword .L560
	.byte 0x05
	.uaword .L550
	.uaword .L559
	.byte 0x18
	.ascii "d\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x01,0x38
	.byte 0x03,0x91,0xd8,0x4d,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x05
	.uaword .L567
	.uaword .L763
	.byte 0x05
	.uaword .L571
	.uaword .L760
	.byte 0x05
	.uaword .L572
	.uaword .L759
	.byte 0x05
	.uaword .L574
	.uaword .L590
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x33,0x5e,0x01,0x01,0x01,0x41
	.byte 0x03,0x91,0xd8,0x4d,0x00,0x05
	.uaword .L593
	.uaword .L609
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xd8,0x01,0x01,0x01,0x49
	.byte 0x03,0x91,0xd8,0x4d,0x00,0x05
	.uaword .L612
	.uaword .L638
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xdd,0x01,0x01,0x01,0x51
	.byte 0x03,0x91,0xd8,0x4d,0x00,0x05
	.uaword .L641
	.uaword .L667
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xf0,0x01,0x01,0x01,0x5c
	.byte 0x03,0x91,0xd8,0x4d,0x00,0x05
	.uaword .L670
	.uaword .L696
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x95,0x9f,0x01,0x01,0x01,0x67
	.byte 0x03,0x91,0xd8,0x4d,0x00,0x05
	.uaword .L699
	.uaword .L725
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xf5,0x01,0x01,0x01,0x72
	.byte 0x03,0x91,0xd8,0x4d,0x00,0x05
	.uaword .L728
	.uaword .L754
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x92,0xe4,0x01,0x01,0x01,0x7d
	.byte 0x03,0x91,0xd8,0x4d,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte 0x00,0x10,0x00,0x00,0x03,0x6f,0x19,0x00
	.byte 0x00,0x00,0x9a,0x49,0x11,0x00,0x00,0x03
	.byte 0x7d,0x06,0x3f,0x00,0x19
	.ascii "read_stencil_pixels\0"
	.byte 0x03,0x01,0x01,0x94
	.uaword read_stencil_pixels
	.uaword .L1111
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9c,0xa5
	.byte 0x1a,0x00,0x00,0x96,0xa4
	.ascii "ctx\0"
	.byte 0x01,0x01,0x90,0x03,0x91,0xc4,0x00,0x1a
	.byte 0x00,0x00,0x03,0x30
	.ascii "x\0"
	.byte 0x01,0x01,0x91,0x03,0x91,0xc8,0x00,0x1a
	.byte 0x00,0x00,0x03,0x30
	.ascii "y\0"
	.byte 0x01,0x01,0x91,0x03,0x91,0xcc,0x00,0x1a
	.byte 0x00,0x00,0x8a,0x2e
	.ascii "width\0"
	.byte 0x01,0x01,0x92,0x03,0x91,0xd0,0x00,0x1a
	.byte 0x00,0x00,0x8a,0x2e
	.ascii "height\0"
	.byte 0x01,0x01,0x92,0x03,0x91,0xd4,0x00,0x1a
	.byte 0x00,0x00,0x33,0x32
	.ascii "type\0"
	.byte 0x01,0x01,0x93,0x03,0x91,0xd8,0x00,0x1a
	.byte 0x00,0x00,0x3f,0x05
	.ascii "pixels\0"
	.byte 0x01,0x01,0x93,0x03,0x91,0xdc,0x00,0x18
	.ascii "i\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x01,0x95
	.byte 0x02,0x91,0x7c,0x18
	.ascii "j\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x01,0x95
	.byte 0x02,0x91,0x78,0x18
	.ascii "a\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x01,0x96
	.byte 0x02,0x91,0x74,0x18
	.ascii "s\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x01,0x96
	.byte 0x02,0x91,0x70,0x18
	.ascii "k\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x01,0x96
	.byte 0x02,0x91,0x6c,0x18
	.ascii "l\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x01,0x96
	.byte 0x02,0x91,0x68,0x18
	.ascii "start\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x01,0x96
	.byte 0x02,0x91,0x64,0x18
	.ascii "shift_or_offset\0"
	.byte 0x00,0x00,0x34,0xa2,0x01,0x01,0x01,0x97
	.byte 0x02,0x91,0x63,0x05
	.uaword .L849
	.uaword .L1109
	.byte 0x05
	.uaword .L855
	.uaword .L1106
	.byte 0x05
	.uaword .L856
	.uaword .L1105
	.byte 0x18
	.ascii "stencil\0"
	.byte 0x00,0x00,0x9c,0xa5,0x01,0x01,0x01,0xbd
	.byte 0x03,0x91,0x9c,0x73,0x05
	.uaword .L858
	.uaword .L910
	.byte 0x05
	.uaword .L862
	.uaword .L909
	.byte 0x05
	.uaword .L863
	.uaword .L908
	.byte 0x18
	.ascii "s\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x01,0xc2
	.byte 0x03,0x91,0x98,0x73,0x00,0x00,0x00,0x05
	.uaword .L934
	.uaword .L1104
	.byte 0x05
	.uaword .L938
	.uaword .L1101
	.byte 0x05
	.uaword .L939
	.uaword .L1100
	.byte 0x05
	.uaword .L941
	.uaword .L944
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x33,0x5e,0x01,0x01,0x01,0xdc
	.byte 0x03,0x91,0x98,0x73,0x00,0x05
	.uaword .L947
	.uaword .L950
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xd8,0x01,0x01,0x01,0xe2
	.byte 0x03,0x91,0x98,0x73,0x00,0x05
	.uaword .L953
	.uaword .L979
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xdd,0x01,0x01,0x01,0xe8
	.byte 0x03,0x91,0x98,0x73,0x00,0x05
	.uaword .L982
	.uaword .L1008
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xf0,0x01,0x01,0x01,0xf3
	.byte 0x03,0x91,0x98,0x73,0x00,0x05
	.uaword .L1011
	.uaword .L1037
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x95,0x9f,0x01,0x01,0x01,0xfe
	.byte 0x03,0x91,0x98,0x73,0x00,0x05
	.uaword .L1040
	.uaword .L1066
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xf5,0x01,0x01,0x02,0x09
	.byte 0x03,0x91,0x98,0x73,0x00,0x05
	.uaword .L1069
	.uaword .L1095
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x92,0xe4,0x01,0x01,0x02,0x14
	.byte 0x03,0x91,0x98,0x73,0x00,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x33
	.byte 0x50,0x06,0x40,0x00,0x00,0x9c,0xb8,0x11
	.byte 0x00,0x00,0x03,0x7d,0x06,0x3f,0x00,0x1b
	.ascii "scale_or_bias_rgba\0"
	.byte 0x03,0x01,0x02,0x29
	.uaword scale_or_bias_rgba
	.uaword .L1141
	.byte 0x01,0x6e,0x01,0x00,0x00,0x34,0xa2,0x01
	.byte 0x00,0x00,0x9c,0xf5,0x1a,0x00,0x00,0x96
	.byte 0xa4
	.ascii "ctx\0"
	.byte 0x01,0x02,0x28,0x03,0x91,0xc4,0x00,0x00
	.byte 0x19
	.ascii "scale_and_bias_rgba\0"
	.byte 0x03,0x01,0x02,0x3e
	.uaword scale_and_bias_rgba
	.uaword .L1193
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9d,0xc8
	.byte 0x1a,0x00,0x00,0x96,0xa4
	.ascii "ctx\0"
	.byte 0x01,0x02,0x3a,0x03,0x91,0xc4,0x00,0x1a
	.byte 0x00,0x00,0x03,0x30
	.ascii "n\0"
	.byte 0x01,0x02,0x3b,0x03,0x91,0xc8,0x00,0x1a
	.byte 0x00,0x00,0x92,0xe4
	.ascii "red\0"
	.byte 0x01,0x02,0x3c,0x03,0x91,0xcc,0x00,0x1a
	.byte 0x00,0x00,0x92,0xe4
	.ascii "green\0"
	.byte 0x01,0x02,0x3c,0x03,0x91,0xd0,0x00,0x1a
	.byte 0x00,0x00,0x92,0xe4
	.ascii "blue\0"
	.byte 0x01,0x02,0x3d,0x03,0x91,0xd4,0x00,0x1a
	.byte 0x00,0x00,0x92,0xe4
	.ascii "alpha\0"
	.byte 0x01,0x02,0x3d,0x03,0x91,0xd8,0x00,0x18
	.ascii "i\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x02,0x3f
	.byte 0x02,0x91,0x7c,0x18
	.ascii "r\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0x40
	.byte 0x02,0x91,0x78,0x18
	.ascii "g\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0x40
	.byte 0x02,0x91,0x74,0x18
	.ascii "b\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0x40
	.byte 0x02,0x91,0x70,0x18
	.ascii "a\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0x40
	.byte 0x02,0x91,0x6c,0x00,0x19
	.ascii "map_rgba\0"
	.byte 0x03,0x01,0x02,0x57
	.uaword map_rgba
	.uaword .L1221
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9e,0xa4
	.byte 0x1a,0x00,0x00,0x96,0xa4
	.ascii "ctx\0"
	.byte 0x01,0x02,0x53,0x03,0x91,0xc4,0x00,0x1a
	.byte 0x00,0x00,0x03,0x30
	.ascii "n\0"
	.byte 0x01,0x02,0x54,0x03,0x91,0xc8,0x00,0x1a
	.byte 0x00,0x00,0x92,0xe4
	.ascii "red\0"
	.byte 0x01,0x02,0x55,0x03,0x91,0xcc,0x00,0x1a
	.byte 0x00,0x00,0x92,0xe4
	.ascii "green\0"
	.byte 0x01,0x02,0x55,0x03,0x91,0xd0,0x00,0x1a
	.byte 0x00,0x00,0x92,0xe4
	.ascii "blue\0"
	.byte 0x01,0x02,0x56,0x03,0x91,0xd4,0x00,0x1a
	.byte 0x00,0x00,0x92,0xe4
	.ascii "alpha\0"
	.byte 0x01,0x02,0x56,0x03,0x91,0xd8,0x00,0x18
	.ascii "rscale\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0x58
	.byte 0x02,0x91,0x7c,0x18
	.ascii "gscale\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0x59
	.byte 0x02,0x91,0x78,0x18
	.ascii "bscale\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0x5a
	.byte 0x02,0x91,0x74,0x18
	.ascii "ascale\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0x5b
	.byte 0x02,0x91,0x70,0x18
	.ascii "i\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x02,0x5c
	.byte 0x02,0x91,0x6c,0x00,0x19
	.ascii "read_color_pixels\0"
	.byte 0x03,0x01,0x02,0x70
	.uaword read_color_pixels
	.uaword .L1928
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xa3,0x07
	.byte 0x1a,0x00,0x00,0x96,0xa4
	.ascii "ctx\0"
	.byte 0x01,0x02,0x6c,0x03,0x91,0xc4,0x00,0x1a
	.byte 0x00,0x00,0x03,0x30
	.ascii "x\0"
	.byte 0x01,0x02,0x6d,0x03,0x91,0xc8,0x00,0x1a
	.byte 0x00,0x00,0x03,0x30
	.ascii "y\0"
	.byte 0x01,0x02,0x6d,0x03,0x91,0xcc,0x00,0x1a
	.byte 0x00,0x00,0x8a,0x2e
	.ascii "width\0"
	.byte 0x01,0x02,0x6e,0x03,0x91,0xd0,0x00,0x1a
	.byte 0x00,0x00,0x8a,0x2e
	.ascii "height\0"
	.byte 0x01,0x02,0x6e,0x03,0x91,0xd4,0x00,0x1a
	.byte 0x00,0x00,0x33,0x32
	.ascii "format\0"
	.byte 0x01,0x02,0x6f,0x03,0x91,0xd8,0x00,0x1a
	.byte 0x00,0x00,0x33,0x32
	.ascii "type\0"
	.byte 0x01,0x02,0x6f,0x03,0x91,0xdc,0x00,0x1a
	.byte 0x00,0x00,0x3f,0x05
	.ascii "pixels\0"
	.byte 0x01,0x02,0x6f,0x03,0x91,0xe0,0x00,0x18
	.ascii "i\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x02,0x71
	.byte 0x02,0x91,0x7c,0x18
	.ascii "j\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x02,0x71
	.byte 0x02,0x91,0x78,0x18
	.ascii "n\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x02,0x71
	.byte 0x02,0x91,0x74,0x18
	.ascii "a\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x02,0x71
	.byte 0x02,0x91,0x70,0x18
	.ascii "s\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x02,0x71
	.byte 0x02,0x91,0x6c,0x18
	.ascii "l\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x02,0x71
	.byte 0x02,0x91,0x68,0x18
	.ascii "k\0"
	.byte 0x00,0x00,0x03,0x30,0x01,0x01,0x02,0x71
	.byte 0x02,0x91,0x64,0x18
	.ascii "scale_or_bias\0"
	.byte 0x00,0x00,0x34,0xa2,0x01,0x01,0x02,0x72
	.byte 0x02,0x91,0x63,0x18
	.ascii "red\0"
	.byte 0x00,0x00,0xa3,0x07,0x01,0x01,0x02,0x73
	.byte 0x03,0x91,0xe0,0x4d,0x18
	.ascii "green\0"
	.byte 0x00,0x00,0xa3,0x1a,0x01,0x01,0x02,0x74
	.byte 0x04,0x91,0xe0,0x9b,0x7f,0x18
	.ascii "blue\0"
	.byte 0x00,0x00,0xa3,0x2d,0x01,0x01,0x02,0x75
	.byte 0x04,0x91,0xe0,0xe9,0x7e,0x18
	.ascii "alpha\0"
	.byte 0x00,0x00,0xa3,0x40,0x01,0x01,0x02,0x76
	.byte 0x04,0x91,0xe0,0xb7,0x7e,0x18
	.ascii "luminance\0"
	.byte 0x00,0x00,0xa3,0x53,0x01,0x01,0x02,0x77
	.byte 0x04,0x91,0xe0,0x85,0x7e,0x18
	.ascii "r_flag\0"
	.byte 0x00,0x00,0x34,0xa2,0x01,0x01,0x02,0x78
	.byte 0x04,0x91,0xdf,0x85,0x7e,0x18
	.ascii "g_flag\0"
	.byte 0x00,0x00,0x34,0xa2,0x01,0x01,0x02,0x78
	.byte 0x04,0x91,0xde,0x85,0x7e,0x18
	.ascii "b_flag\0"
	.byte 0x00,0x00,0x34,0xa2,0x01,0x01,0x02,0x78
	.byte 0x04,0x91,0xdd,0x85,0x7e,0x18
	.ascii "a_flag\0"
	.byte 0x00,0x00,0x34,0xa2,0x01,0x01,0x02,0x78
	.byte 0x04,0x91,0xdc,0x85,0x7e,0x18
	.ascii "l_flag\0"
	.byte 0x00,0x00,0x34,0xa2,0x01,0x01,0x02,0x78
	.byte 0x04,0x91,0xdb,0x85,0x7e,0x18
	.ascii "start\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x02,0x79
	.byte 0x04,0x91,0xd4,0x85,0x7e,0x05
	.uaword .L1310
	.uaword .L1926
	.byte 0x05
	.uaword .L1316
	.uaword .L1923
	.byte 0x05
	.uaword .L1317
	.uaword .L1922
	.byte 0x05
	.uaword .L1318
	.uaword .L1456
	.byte 0x05
	.uaword .L1322
	.uaword .L1377
	.byte 0x05
	.uaword .L1323
	.uaword .L1376
	.byte 0x18
	.ascii "r\0"
	.byte 0x00,0x00,0xa3,0x66,0x01,0x01,0x02,0xb8
	.byte 0x04,0x91,0x94,0xf9,0x7d,0x18
	.ascii "g\0"
	.byte 0x00,0x00,0xa3,0x79,0x01,0x01,0x02,0xb9
	.byte 0x04,0x91,0xd4,0xec,0x7d,0x18
	.ascii "b\0"
	.byte 0x00,0x00,0xa3,0x8c,0x01,0x01,0x02,0xba
	.byte 0x04,0x91,0x94,0xe0,0x7d,0x18
	.ascii "a\0"
	.byte 0x00,0x00,0xa3,0x9f,0x01,0x01,0x02,0xbb
	.byte 0x04,0x91,0xd4,0xd3,0x7d,0x18
	.ascii "rscale\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0xbc
	.byte 0x04,0x91,0xd0,0xd3,0x7d,0x18
	.ascii "gscale\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0xbd
	.byte 0x04,0x91,0xcc,0xd3,0x7d,0x18
	.ascii "bscale\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0xbe
	.byte 0x04,0x91,0xc8,0xd3,0x7d,0x18
	.ascii "ascale\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0xbf
	.byte 0x04,0x91,0xc4,0xd3,0x7d,0x00,0x00,0x05
	.uaword .L1379
	.uaword .L1455
	.byte 0x05
	.uaword .L1380
	.uaword .L1454
	.byte 0x18
	.ascii "index\0"
	.byte 0x00,0x00,0xa3,0xb2,0x01,0x01,0x02,0xda
	.byte 0x04,0x91,0xd4,0xd3,0x7d,0x05
	.uaword .L1382
	.uaword .L1436
	.byte 0x05
	.uaword .L1388
	.uaword .L1435
	.byte 0x05
	.uaword .L1389
	.uaword .L1434
	.byte 0x18
	.ascii "s\0"
	.byte 0x00,0x00,0x03,0x59,0x01,0x01,0x02,0xde
	.byte 0x04,0x91,0xd0,0xd3,0x7d,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x05
	.uaword .L1457
	.uaword .L1486
	.byte 0x05
	.uaword .L1461
	.uaword .L1485
	.byte 0x05
	.uaword .L1462
	.uaword .L1484
	.byte 0x05
	.uaword .L1463
	.uaword .L1483
	.byte 0x05
	.uaword .L1469
	.uaword .L1480
	.byte 0x05
	.uaword .L1470
	.uaword .L1479
	.byte 0x18
	.ascii "sum\0"
	.byte 0x00,0x00,0x03,0x6f,0x01,0x01,0x02,0xf9
	.byte 0x04,0x91,0xd0,0x85,0x7e,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x05
	.uaword .L1487
	.uaword .L1921
	.byte 0x05
	.uaword .L1491
	.uaword .L1918
	.byte 0x05
	.uaword .L1492
	.uaword .L1917
	.byte 0x05
	.uaword .L1494
	.uaword .L1544
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x33,0x5e,0x01,0x01,0x03,0x05
	.byte 0x04,0x91,0xd0,0x85,0x7e,0x00,0x05
	.uaword .L1547
	.uaword .L1597
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xd8,0x01,0x01,0x03,0x11
	.byte 0x04,0x91,0xd0,0x85,0x7e,0x00,0x05
	.uaword .L1600
	.uaword .L1650
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xdd,0x01,0x01,0x03,0x1d
	.byte 0x04,0x91,0xd0,0x85,0x7e,0x00,0x05
	.uaword .L1663
	.uaword .L1723
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xf0,0x01,0x01,0x03,0x2c
	.byte 0x04,0x91,0xd0,0x85,0x7e,0x00,0x05
	.uaword .L1726
	.uaword .L1786
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x95,0x9f,0x01,0x01,0x03,0x3b
	.byte 0x04,0x91,0xd0,0x85,0x7e,0x00,0x05
	.uaword .L1789
	.uaword .L1849
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x96,0xf5,0x01,0x01,0x03,0x4a
	.byte 0x04,0x91,0xd0,0x85,0x7e,0x00,0x05
	.uaword .L1852
	.uaword .L1912
	.byte 0x18
	.ascii "dst\0"
	.byte 0x00,0x00,0x92,0xe4,0x01,0x01,0x03,0x59
	.byte 0x04,0x91,0xd0,0x85,0x7e,0x00,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00
	.byte 0x03,0x6f,0x19,0x00,0x00,0x00,0xa3,0x1a
	.byte 0x11,0x00,0x00,0x03,0x7d,0x06,0x3f,0x00
	.byte 0x10,0x00,0x00,0x03,0x6f,0x19,0x00,0x00
	.byte 0x00,0xa3,0x2d,0x11,0x00,0x00,0x03,0x7d
	.byte 0x06,0x3f,0x00,0x10,0x00,0x00,0x03,0x6f
	.byte 0x19,0x00,0x00,0x00,0xa3,0x40,0x11,0x00
	.byte 0x00,0x03,0x7d,0x06,0x3f,0x00,0x10,0x00
	.byte 0x00,0x03,0x6f,0x19,0x00,0x00,0x00,0xa3
	.byte 0x53,0x11,0x00,0x00,0x03,0x7d,0x06,0x3f
	.byte 0x00,0x10,0x00,0x00,0x03,0x6f,0x19,0x00
	.byte 0x00,0x00,0xa3,0x66,0x11,0x00,0x00,0x03
	.byte 0x7d,0x06,0x3f,0x00,0x10,0x00,0x00,0x33
	.byte 0x50,0x06,0x40,0x00,0x00,0xa3,0x79,0x11
	.byte 0x00,0x00,0x03,0x7d,0x06,0x3f,0x00,0x10
	.byte 0x00,0x00,0x33,0x50,0x06,0x40,0x00,0x00
	.byte 0xa3,0x8c,0x11,0x00,0x00,0x03,0x7d,0x06
	.byte 0x3f,0x00,0x10,0x00,0x00,0x33,0x50,0x06
	.byte 0x40,0x00,0x00,0xa3,0x9f,0x11,0x00,0x00
	.byte 0x03,0x7d,0x06,0x3f,0x00,0x10,0x00,0x00
	.byte 0x33,0x50,0x06,0x40,0x00,0x00,0xa3,0xb2
	.byte 0x11,0x00,0x00,0x03,0x7d,0x06,0x3f,0x00
	.byte 0x10,0x00,0x00,0x03,0x59,0x19,0x00,0x00
	.byte 0x00,0xa3,0xc5,0x11,0x00,0x00,0x03,0x7d
	.byte 0x06,0x3f,0x00,0x1c
	.ascii "gl_ReadPixels\0"
	.byte 0x01,0x02,0x01,0x03,0x76
	.uaword gl_ReadPixels
	.uaword .L1982
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0xa4,0x72
	.byte 0x1a,0x00,0x00,0x96,0xa4
	.ascii "ctx\0"
	.byte 0x01,0x03,0x73,0x03,0x91,0xc4,0x00,0x1a
	.byte 0x00,0x00,0x03,0x30
	.ascii "x\0"
	.byte 0x01,0x03,0x74,0x03,0x91,0xc8,0x00,0x1a
	.byte 0x00,0x00,0x03,0x30
	.ascii "y\0"
	.byte 0x01,0x03,0x74,0x03,0x91,0xcc,0x00,0x1a
	.byte 0x00,0x00,0x8a,0x2e
	.ascii "width\0"
	.byte 0x01,0x03,0x74,0x03,0x91,0xd0,0x00,0x1a
	.byte 0x00,0x00,0x8a,0x2e
	.ascii "height\0"
	.byte 0x01,0x03,0x74,0x03,0x91,0xd4,0x00,0x1a
	.byte 0x00,0x00,0x33,0x32
	.ascii "format\0"
	.byte 0x01,0x03,0x75,0x03,0x91,0xd8,0x00,0x1a
	.byte 0x00,0x00,0x33,0x32
	.ascii "type\0"
	.byte 0x01,0x03,0x75,0x03,0x91,0xdc,0x00,0x1a
	.byte 0x00,0x00,0x3f,0x05
	.ascii "pixels\0"
	.byte 0x01,0x03,0x75,0x03,0x91,0xe0,0x00,0x00
	.byte 0x1d
	.ascii "gl_read_stencil_span\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa4,0xaa
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x4d,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x36
	.byte 0x73,0x00,0x1e
	.ascii "gl_sizeof_type\0"
	.byte 0x01,0x01,0x01,0x00,0x00,0x03,0x30,0x01
	.byte 0x00,0x00,0xa4,0xcc,0x15,0x00,0x00,0x03
	.byte 0x96,0x00,0x1d
	.ascii "gl_swap4\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa4,0xe9
	.byte 0x15,0x00,0x00,0x47,0xa6,0x15,0x00,0x00
	.byte 0x03,0x4d,0x00,0x1d
	.ascii "gl_swap2\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa5,0x06
	.byte 0x15,0x00,0x00,0x4a,0x10,0x15,0x00,0x00
	.byte 0x03,0x4d,0x00,0x13,0x00,0x00,0x68,0xc1
	.byte 0x09,0x00,0x00,0xa5,0x06,0x1d
	.ascii "gl_error\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa5,0x32
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x96,0x15,0x00,0x00,0xa5,0x0b,0x00
	.byte 0x1d
	.ascii "gl_read_alpha_span\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0xa5,0x68
	.byte 0x15,0x00,0x00,0x3e,0x42,0x15,0x00,0x00
	.byte 0x03,0x4d,0x15,0x00,0x00,0x03,0x29,0x15
	.byte 0x00,0x00,0x03,0x29,0x15,0x00,0x00,0x36
	.byte 0x73,0x00,0x13,0x00,0x00,0x33,0x63,0x09
	.byte 0x00,0x00,0xa5,0x68,0x1f
	.ascii "memcpy\0"
	.byte 0x01,0x01,0x01,0x00,0x00,0x33,0x6b,0x01
	.byte 0x15,0x00,0x00,0x33,0x6b,0x15,0x00,0x00
	.byte 0xa5,0x6d,0x15,0x00,0x00,0x03,0x4d,0x00
	.byte 0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_line
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=0, off=127, siz=4, lab1=read_index_pixels, lab2=, loff=0
!   reloc[1]: knd=0, off=134, siz=4, lab1=.L18, lab2=, loff=0
!   reloc[2]: knd=0, off=146, siz=4, lab1=.L22, lab2=, loff=0
!   reloc[3]: knd=0, off=154, siz=4, lab1=.L24, lab2=, loff=0
!   reloc[4]: knd=0, off=162, siz=4, lab1=.L28, lab2=, loff=0
!   reloc[5]: knd=0, off=172, siz=4, lab1=.L31, lab2=, loff=0
!   reloc[6]: knd=0, off=180, siz=4, lab1=.L35, lab2=, loff=0
!   reloc[7]: knd=0, off=188, siz=4, lab1=.L37, lab2=, loff=0
!   reloc[8]: knd=0, off=196, siz=4, lab1=.L41, lab2=, loff=0
!   reloc[9]: knd=0, off=206, siz=4, lab1=.L44, lab2=, loff=0
!   reloc[10]: knd=0, off=214, siz=4, lab1=.L48, lab2=, loff=0
!   reloc[11]: knd=0, off=222, siz=4, lab1=.L54, lab2=, loff=0
!   reloc[12]: knd=0, off=232, siz=4, lab1=.L60, lab2=, loff=0
!   reloc[13]: knd=0, off=242, siz=4, lab1=.L64, lab2=, loff=0
!   reloc[14]: knd=0, off=250, siz=4, lab1=.L70, lab2=, loff=0
!   reloc[15]: knd=0, off=260, siz=4, lab1=.L77, lab2=, loff=0
!   reloc[16]: knd=0, off=270, siz=4, lab1=.L79, lab2=, loff=0
!   reloc[17]: knd=0, off=280, siz=4, lab1=.L86, lab2=, loff=0
!   reloc[18]: knd=0, off=288, siz=4, lab1=.L89, lab2=, loff=0
!   reloc[19]: knd=0, off=296, siz=4, lab1=.L97, lab2=, loff=0
!   reloc[20]: knd=0, off=304, siz=4, lab1=.L101, lab2=, loff=0
!   reloc[21]: knd=0, off=312, siz=4, lab1=.L103, lab2=, loff=0
!   reloc[22]: knd=0, off=320, siz=4, lab1=.L110, lab2=, loff=0
!   reloc[23]: knd=0, off=328, siz=4, lab1=.L113, lab2=, loff=0
!   reloc[24]: knd=0, off=336, siz=4, lab1=.L121, lab2=, loff=0
!   reloc[25]: knd=0, off=346, siz=4, lab1=.L123, lab2=, loff=0
!   reloc[26]: knd=0, off=354, siz=4, lab1=.L130, lab2=, loff=0
!   reloc[27]: knd=0, off=362, siz=4, lab1=.L133, lab2=, loff=0
!   reloc[28]: knd=0, off=370, siz=4, lab1=.L144, lab2=, loff=0
!   reloc[29]: knd=0, off=380, siz=4, lab1=.L149, lab2=, loff=0
!   reloc[30]: knd=0, off=388, siz=4, lab1=.L156, lab2=, loff=0
!   reloc[31]: knd=0, off=396, siz=4, lab1=.L159, lab2=, loff=0
!   reloc[32]: knd=0, off=404, siz=4, lab1=.L168, lab2=, loff=0
!   reloc[33]: knd=0, off=414, siz=4, lab1=.L173, lab2=, loff=0
!   reloc[34]: knd=0, off=424, siz=4, lab1=.L175, lab2=, loff=0
!   reloc[35]: knd=0, off=432, siz=4, lab1=.L182, lab2=, loff=0
!   reloc[36]: knd=0, off=440, siz=4, lab1=.L185, lab2=, loff=0
!   reloc[37]: knd=0, off=448, siz=4, lab1=.L189, lab2=, loff=0
!   reloc[38]: knd=0, off=458, siz=4, lab1=.L192, lab2=, loff=0
!   reloc[39]: knd=0, off=468, siz=4, lab1=.L194, lab2=, loff=0
!   reloc[40]: knd=0, off=476, siz=4, lab1=.L201, lab2=, loff=0
!   reloc[41]: knd=0, off=484, siz=4, lab1=.L204, lab2=, loff=0
!   reloc[42]: knd=0, off=492, siz=4, lab1=.L208, lab2=, loff=0
!   reloc[43]: knd=0, off=502, siz=4, lab1=.L211, lab2=, loff=0
!   reloc[44]: knd=0, off=512, siz=4, lab1=.L213, lab2=, loff=0
!   reloc[45]: knd=0, off=520, siz=4, lab1=.L220, lab2=, loff=0
!   reloc[46]: knd=0, off=528, siz=4, lab1=.L223, lab2=, loff=0
!   reloc[47]: knd=0, off=536, siz=4, lab1=.L228, lab2=, loff=0
!   reloc[48]: knd=0, off=546, siz=4, lab1=.L232, lab2=, loff=0
!   reloc[49]: knd=0, off=554, siz=4, lab1=.L237, lab2=, loff=0
!   reloc[50]: knd=0, off=564, siz=4, lab1=.L240, lab2=, loff=0
!   reloc[51]: knd=0, off=574, siz=4, lab1=.L242, lab2=, loff=0
!   reloc[52]: knd=0, off=582, siz=4, lab1=.L249, lab2=, loff=0
!   reloc[53]: knd=0, off=590, siz=4, lab1=.L252, lab2=, loff=0
!   reloc[54]: knd=0, off=598, siz=4, lab1=.L257, lab2=, loff=0
!   reloc[55]: knd=0, off=608, siz=4, lab1=.L261, lab2=, loff=0
!   reloc[56]: knd=0, off=616, siz=4, lab1=.L266, lab2=, loff=0
!   reloc[57]: knd=0, off=626, siz=4, lab1=.L269, lab2=, loff=0
!   reloc[58]: knd=0, off=636, siz=4, lab1=.L271, lab2=, loff=0
!   reloc[59]: knd=0, off=644, siz=4, lab1=.L278, lab2=, loff=0
!   reloc[60]: knd=0, off=652, siz=4, lab1=.L281, lab2=, loff=0
!   reloc[61]: knd=0, off=660, siz=4, lab1=.L286, lab2=, loff=0
!   reloc[62]: knd=0, off=670, siz=4, lab1=.L290, lab2=, loff=0
!   reloc[63]: knd=0, off=678, siz=4, lab1=.L295, lab2=, loff=0
!   reloc[64]: knd=0, off=688, siz=4, lab1=.L298, lab2=, loff=0
!   reloc[65]: knd=0, off=698, siz=4, lab1=.L300, lab2=, loff=0
!   reloc[66]: knd=0, off=706, siz=4, lab1=.L307, lab2=, loff=0
!   reloc[67]: knd=0, off=714, siz=4, lab1=.L310, lab2=, loff=0
!   reloc[68]: knd=0, off=722, siz=4, lab1=.L315, lab2=, loff=0
!   reloc[69]: knd=0, off=732, siz=4, lab1=.L319, lab2=, loff=0
!   reloc[70]: knd=0, off=740, siz=4, lab1=.L324, lab2=, loff=0
!   reloc[71]: knd=0, off=750, siz=4, lab1=.L327, lab2=, loff=0
!   reloc[72]: knd=0, off=760, siz=4, lab1=.L329, lab2=, loff=0
!   reloc[73]: knd=0, off=768, siz=4, lab1=.L336, lab2=, loff=0
!   reloc[74]: knd=0, off=776, siz=4, lab1=.L339, lab2=, loff=0
!   reloc[75]: knd=0, off=784, siz=4, lab1=.L344, lab2=, loff=0
!   reloc[76]: knd=0, off=794, siz=4, lab1=.L348, lab2=, loff=0
!   reloc[77]: knd=0, off=802, siz=4, lab1=.L353, lab2=, loff=0
!   reloc[78]: knd=0, off=812, siz=4, lab1=.L355, lab2=, loff=0
!   reloc[79]: knd=0, off=820, siz=4, lab1=.L359, lab2=, loff=0
!   reloc[80]: knd=0, off=831, siz=4, lab1=.L364, lab2=, loff=0
!   reloc[81]: knd=0, off=841, siz=4, lab1=.L367, lab2=, loff=0
!   reloc[82]: knd=0, off=857, siz=4, lab1=read_depth_pixels, lab2=, loff=0
!   reloc[83]: knd=0, off=864, siz=4, lab1=.L376, lab2=, loff=0
!   reloc[84]: knd=0, off=876, siz=4, lab1=.L380, lab2=, loff=0
!   reloc[85]: knd=0, off=884, siz=4, lab1=.L382, lab2=, loff=0
!   reloc[86]: knd=0, off=892, siz=4, lab1=.L386, lab2=, loff=0
!   reloc[87]: knd=0, off=902, siz=4, lab1=.L392, lab2=, loff=0
!   reloc[88]: knd=0, off=912, siz=4, lab1=.L395, lab2=, loff=0
!   reloc[89]: knd=0, off=920, siz=4, lab1=.L399, lab2=, loff=0
!   reloc[90]: knd=0, off=928, siz=4, lab1=.L401, lab2=, loff=0
!   reloc[91]: knd=0, off=936, siz=4, lab1=.L405, lab2=, loff=0
!   reloc[92]: knd=0, off=946, siz=4, lab1=.L408, lab2=, loff=0
!   reloc[93]: knd=0, off=954, siz=4, lab1=.L412, lab2=, loff=0
!   reloc[94]: knd=0, off=962, siz=4, lab1=.L418, lab2=, loff=0
!   reloc[95]: knd=0, off=972, siz=4, lab1=.L424, lab2=, loff=0
!   reloc[96]: knd=0, off=982, siz=4, lab1=.L428, lab2=, loff=0
!   reloc[97]: knd=0, off=990, siz=4, lab1=.L434, lab2=, loff=0
!   reloc[98]: knd=0, off=1000, siz=4, lab1=.L441, lab2=, loff=0
!   reloc[99]: knd=0, off=1010, siz=4, lab1=.L444, lab2=, loff=0
!   reloc[100]: knd=0, off=1020, siz=4, lab1=.L451, lab2=, loff=0
!   reloc[101]: knd=0, off=1028, siz=4, lab1=.L458, lab2=, loff=0
!   reloc[102]: knd=0, off=1036, siz=4, lab1=.L459, lab2=, loff=0
!   reloc[103]: knd=0, off=1044, siz=4, lab1=.L462, lab2=, loff=0
!   reloc[104]: knd=0, off=1054, siz=4, lab1=.L471, lab2=, loff=0
!   reloc[105]: knd=0, off=1064, siz=4, lab1=.L477, lab2=, loff=0
!   reloc[106]: knd=0, off=1074, siz=4, lab1=.L478, lab2=, loff=0
!   reloc[107]: knd=0, off=1082, siz=4, lab1=.L483, lab2=, loff=0
!   reloc[108]: knd=0, off=1090, siz=4, lab1=.L487, lab2=, loff=0
!   reloc[109]: knd=0, off=1098, siz=4, lab1=.L488, lab2=, loff=0
!   reloc[110]: knd=0, off=1106, siz=4, lab1=.L491, lab2=, loff=0
!   reloc[111]: knd=0, off=1116, siz=4, lab1=.L495, lab2=, loff=0
!   reloc[112]: knd=0, off=1126, siz=4, lab1=.L502, lab2=, loff=0
!   reloc[113]: knd=0, off=1134, siz=4, lab1=.L503, lab2=, loff=0
!   reloc[114]: knd=0, off=1142, siz=4, lab1=.L505, lab2=, loff=0
!   reloc[115]: knd=0, off=1150, siz=4, lab1=.L512, lab2=, loff=0
!   reloc[116]: knd=0, off=1158, siz=4, lab1=.L515, lab2=, loff=0
!   reloc[117]: knd=0, off=1166, siz=4, lab1=.L520, lab2=, loff=0
!   reloc[118]: knd=0, off=1176, siz=4, lab1=.L529, lab2=, loff=0
!   reloc[119]: knd=0, off=1186, siz=4, lab1=.L536, lab2=, loff=0
!   reloc[120]: knd=0, off=1196, siz=4, lab1=.L539, lab2=, loff=0
!   reloc[121]: knd=0, off=1204, siz=4, lab1=.L544, lab2=, loff=0
!   reloc[122]: knd=0, off=1212, siz=4, lab1=.L551, lab2=, loff=0
!   reloc[123]: knd=0, off=1220, siz=4, lab1=.L552, lab2=, loff=0
!   reloc[124]: knd=0, off=1228, siz=4, lab1=.L561, lab2=, loff=0
!   reloc[125]: knd=0, off=1238, siz=4, lab1=.L570, lab2=, loff=0
!   reloc[126]: knd=0, off=1248, siz=4, lab1=.L575, lab2=, loff=0
!   reloc[127]: knd=0, off=1258, siz=4, lab1=.L577, lab2=, loff=0
!   reloc[128]: knd=0, off=1266, siz=4, lab1=.L584, lab2=, loff=0
!   reloc[129]: knd=0, off=1274, siz=4, lab1=.L587, lab2=, loff=0
!   reloc[130]: knd=0, off=1282, siz=4, lab1=.L591, lab2=, loff=0
!   reloc[131]: knd=0, off=1292, siz=4, lab1=.L594, lab2=, loff=0
!   reloc[132]: knd=0, off=1302, siz=4, lab1=.L596, lab2=, loff=0
!   reloc[133]: knd=0, off=1310, siz=4, lab1=.L603, lab2=, loff=0
!   reloc[134]: knd=0, off=1318, siz=4, lab1=.L606, lab2=, loff=0
!   reloc[135]: knd=0, off=1326, siz=4, lab1=.L610, lab2=, loff=0
!   reloc[136]: knd=0, off=1336, siz=4, lab1=.L613, lab2=, loff=0
!   reloc[137]: knd=0, off=1346, siz=4, lab1=.L615, lab2=, loff=0
!   reloc[138]: knd=0, off=1354, siz=4, lab1=.L622, lab2=, loff=0
!   reloc[139]: knd=0, off=1362, siz=4, lab1=.L625, lab2=, loff=0
!   reloc[140]: knd=0, off=1370, siz=4, lab1=.L630, lab2=, loff=0
!   reloc[141]: knd=0, off=1380, siz=4, lab1=.L634, lab2=, loff=0
!   reloc[142]: knd=0, off=1388, siz=4, lab1=.L639, lab2=, loff=0
!   reloc[143]: knd=0, off=1398, siz=4, lab1=.L642, lab2=, loff=0
!   reloc[144]: knd=0, off=1408, siz=4, lab1=.L644, lab2=, loff=0
!   reloc[145]: knd=0, off=1416, siz=4, lab1=.L651, lab2=, loff=0
!   reloc[146]: knd=0, off=1424, siz=4, lab1=.L654, lab2=, loff=0
!   reloc[147]: knd=0, off=1432, siz=4, lab1=.L659, lab2=, loff=0
!   reloc[148]: knd=0, off=1442, siz=4, lab1=.L663, lab2=, loff=0
!   reloc[149]: knd=0, off=1450, siz=4, lab1=.L668, lab2=, loff=0
!   reloc[150]: knd=0, off=1460, siz=4, lab1=.L671, lab2=, loff=0
!   reloc[151]: knd=0, off=1470, siz=4, lab1=.L673, lab2=, loff=0
!   reloc[152]: knd=0, off=1478, siz=4, lab1=.L680, lab2=, loff=0
!   reloc[153]: knd=0, off=1486, siz=4, lab1=.L683, lab2=, loff=0
!   reloc[154]: knd=0, off=1494, siz=4, lab1=.L688, lab2=, loff=0
!   reloc[155]: knd=0, off=1504, siz=4, lab1=.L692, lab2=, loff=0
!   reloc[156]: knd=0, off=1512, siz=4, lab1=.L697, lab2=, loff=0
!   reloc[157]: knd=0, off=1522, siz=4, lab1=.L700, lab2=, loff=0
!   reloc[158]: knd=0, off=1532, siz=4, lab1=.L702, lab2=, loff=0
!   reloc[159]: knd=0, off=1540, siz=4, lab1=.L709, lab2=, loff=0
!   reloc[160]: knd=0, off=1548, siz=4, lab1=.L712, lab2=, loff=0
!   reloc[161]: knd=0, off=1556, siz=4, lab1=.L717, lab2=, loff=0
!   reloc[162]: knd=0, off=1566, siz=4, lab1=.L721, lab2=, loff=0
!   reloc[163]: knd=0, off=1574, siz=4, lab1=.L726, lab2=, loff=0
!   reloc[164]: knd=0, off=1584, siz=4, lab1=.L729, lab2=, loff=0
!   reloc[165]: knd=0, off=1594, siz=4, lab1=.L731, lab2=, loff=0
!   reloc[166]: knd=0, off=1602, siz=4, lab1=.L738, lab2=, loff=0
!   reloc[167]: knd=0, off=1610, siz=4, lab1=.L741, lab2=, loff=0
!   reloc[168]: knd=0, off=1618, siz=4, lab1=.L746, lab2=, loff=0
!   reloc[169]: knd=0, off=1628, siz=4, lab1=.L750, lab2=, loff=0
!   reloc[170]: knd=0, off=1636, siz=4, lab1=.L755, lab2=, loff=0
!   reloc[171]: knd=0, off=1646, siz=4, lab1=.L757, lab2=, loff=0
!   reloc[172]: knd=0, off=1654, siz=4, lab1=.L761, lab2=, loff=0
!   reloc[173]: knd=0, off=1665, siz=4, lab1=.L766, lab2=, loff=0
!   reloc[174]: knd=0, off=1675, siz=4, lab1=.L774, lab2=, loff=0
!   reloc[175]: knd=0, off=1691, siz=4, lab1=read_stencil_pixels, lab2=, loff=0
!   reloc[176]: knd=0, off=1698, siz=4, lab1=.L783, lab2=, loff=0
!   reloc[177]: knd=0, off=1710, siz=4, lab1=.L787, lab2=, loff=0
!   reloc[178]: knd=0, off=1718, siz=4, lab1=.L789, lab2=, loff=0
!   reloc[179]: knd=0, off=1726, siz=4, lab1=.L793, lab2=, loff=0
!   reloc[180]: knd=0, off=1736, siz=4, lab1=.L799, lab2=, loff=0
!   reloc[181]: knd=0, off=1746, siz=4, lab1=.L802, lab2=, loff=0
!   reloc[182]: knd=0, off=1754, siz=4, lab1=.L806, lab2=, loff=0
!   reloc[183]: knd=0, off=1762, siz=4, lab1=.L808, lab2=, loff=0
!   reloc[184]: knd=0, off=1770, siz=4, lab1=.L812, lab2=, loff=0
!   reloc[185]: knd=0, off=1780, siz=4, lab1=.L815, lab2=, loff=0
!   reloc[186]: knd=0, off=1788, siz=4, lab1=.L819, lab2=, loff=0
!   reloc[187]: knd=0, off=1796, siz=4, lab1=.L825, lab2=, loff=0
!   reloc[188]: knd=0, off=1806, siz=4, lab1=.L831, lab2=, loff=0
!   reloc[189]: knd=0, off=1816, siz=4, lab1=.L835, lab2=, loff=0
!   reloc[190]: knd=0, off=1824, siz=4, lab1=.L841, lab2=, loff=0
!   reloc[191]: knd=0, off=1834, siz=4, lab1=.L848, lab2=, loff=0
!   reloc[192]: knd=0, off=1844, siz=4, lab1=.L850, lab2=, loff=0
!   reloc[193]: knd=0, off=1854, siz=4, lab1=.L857, lab2=, loff=0
!   reloc[194]: knd=0, off=1864, siz=4, lab1=.L860, lab2=, loff=0
!   reloc[195]: knd=0, off=1872, siz=4, lab1=.L866, lab2=, loff=0
!   reloc[196]: knd=0, off=1880, siz=4, lab1=.L870, lab2=, loff=0
!   reloc[197]: knd=0, off=1888, siz=4, lab1=.L872, lab2=, loff=0
!   reloc[198]: knd=0, off=1896, siz=4, lab1=.L879, lab2=, loff=0
!   reloc[199]: knd=0, off=1904, siz=4, lab1=.L882, lab2=, loff=0
!   reloc[200]: knd=0, off=1912, siz=4, lab1=.L890, lab2=, loff=0
!   reloc[201]: knd=0, off=1922, siz=4, lab1=.L892, lab2=, loff=0
!   reloc[202]: knd=0, off=1930, siz=4, lab1=.L899, lab2=, loff=0
!   reloc[203]: knd=0, off=1938, siz=4, lab1=.L902, lab2=, loff=0
!   reloc[204]: knd=0, off=1946, siz=4, lab1=.L913, lab2=, loff=0
!   reloc[205]: knd=0, off=1956, siz=4, lab1=.L918, lab2=, loff=0
!   reloc[206]: knd=0, off=1964, siz=4, lab1=.L925, lab2=, loff=0
!   reloc[207]: knd=0, off=1972, siz=4, lab1=.L928, lab2=, loff=0
!   reloc[208]: knd=0, off=1980, siz=4, lab1=.L937, lab2=, loff=0
!   reloc[209]: knd=0, off=1990, siz=4, lab1=.L942, lab2=, loff=0
!   reloc[210]: knd=0, off=2000, siz=4, lab1=.L943, lab2=, loff=0
!   reloc[211]: knd=0, off=2008, siz=4, lab1=.L945, lab2=, loff=0
!   reloc[212]: knd=0, off=2016, siz=4, lab1=.L948, lab2=, loff=0
!   reloc[213]: knd=0, off=2026, siz=4, lab1=.L949, lab2=, loff=0
!   reloc[214]: knd=0, off=2034, siz=4, lab1=.L951, lab2=, loff=0
!   reloc[215]: knd=0, off=2042, siz=4, lab1=.L954, lab2=, loff=0
!   reloc[216]: knd=0, off=2052, siz=4, lab1=.L956, lab2=, loff=0
!   reloc[217]: knd=0, off=2060, siz=4, lab1=.L963, lab2=, loff=0
!   reloc[218]: knd=0, off=2068, siz=4, lab1=.L966, lab2=, loff=0
!   reloc[219]: knd=0, off=2076, siz=4, lab1=.L971, lab2=, loff=0
!   reloc[220]: knd=0, off=2086, siz=4, lab1=.L975, lab2=, loff=0
!   reloc[221]: knd=0, off=2094, siz=4, lab1=.L980, lab2=, loff=0
!   reloc[222]: knd=0, off=2104, siz=4, lab1=.L983, lab2=, loff=0
!   reloc[223]: knd=0, off=2114, siz=4, lab1=.L985, lab2=, loff=0
!   reloc[224]: knd=0, off=2122, siz=4, lab1=.L992, lab2=, loff=0
!   reloc[225]: knd=0, off=2130, siz=4, lab1=.L995, lab2=, loff=0
!   reloc[226]: knd=0, off=2138, siz=4, lab1=.L1000, lab2=, loff=0
!   reloc[227]: knd=0, off=2148, siz=4, lab1=.L1004, lab2=, loff=0
!   reloc[228]: knd=0, off=2156, siz=4, lab1=.L1009, lab2=, loff=0
!   reloc[229]: knd=0, off=2166, siz=4, lab1=.L1012, lab2=, loff=0
!   reloc[230]: knd=0, off=2176, siz=4, lab1=.L1014, lab2=, loff=0
!   reloc[231]: knd=0, off=2184, siz=4, lab1=.L1021, lab2=, loff=0
!   reloc[232]: knd=0, off=2192, siz=4, lab1=.L1024, lab2=, loff=0
!   reloc[233]: knd=0, off=2200, siz=4, lab1=.L1029, lab2=, loff=0
!   reloc[234]: knd=0, off=2210, siz=4, lab1=.L1033, lab2=, loff=0
!   reloc[235]: knd=0, off=2218, siz=4, lab1=.L1038, lab2=, loff=0
!   reloc[236]: knd=0, off=2228, siz=4, lab1=.L1041, lab2=, loff=0
!   reloc[237]: knd=0, off=2238, siz=4, lab1=.L1043, lab2=, loff=0
!   reloc[238]: knd=0, off=2246, siz=4, lab1=.L1050, lab2=, loff=0
!   reloc[239]: knd=0, off=2254, siz=4, lab1=.L1053, lab2=, loff=0
!   reloc[240]: knd=0, off=2262, siz=4, lab1=.L1058, lab2=, loff=0
!   reloc[241]: knd=0, off=2272, siz=4, lab1=.L1062, lab2=, loff=0
!   reloc[242]: knd=0, off=2280, siz=4, lab1=.L1067, lab2=, loff=0
!   reloc[243]: knd=0, off=2290, siz=4, lab1=.L1070, lab2=, loff=0
!   reloc[244]: knd=0, off=2300, siz=4, lab1=.L1072, lab2=, loff=0
!   reloc[245]: knd=0, off=2308, siz=4, lab1=.L1079, lab2=, loff=0
!   reloc[246]: knd=0, off=2316, siz=4, lab1=.L1082, lab2=, loff=0
!   reloc[247]: knd=0, off=2324, siz=4, lab1=.L1087, lab2=, loff=0
!   reloc[248]: knd=0, off=2334, siz=4, lab1=.L1091, lab2=, loff=0
!   reloc[249]: knd=0, off=2342, siz=4, lab1=.L1096, lab2=, loff=0
!   reloc[250]: knd=0, off=2352, siz=4, lab1=.L1098, lab2=, loff=0
!   reloc[251]: knd=0, off=2360, siz=4, lab1=.L1102, lab2=, loff=0
!   reloc[252]: knd=0, off=2371, siz=4, lab1=.L1107, lab2=, loff=0
!   reloc[253]: knd=0, off=2381, siz=4, lab1=.L1110, lab2=, loff=0
!   reloc[254]: knd=0, off=2397, siz=4, lab1=scale_or_bias_rgba, lab2=, loff=0
!   reloc[255]: knd=0, off=2404, siz=4, lab1=.L1119, lab2=, loff=0
!   reloc[256]: knd=0, off=2416, siz=4, lab1=.L1131, lab2=, loff=0
!   reloc[257]: knd=0, off=2424, siz=4, lab1=.L1136, lab2=, loff=0
!   reloc[258]: knd=0, off=2434, siz=4, lab1=.L1140, lab2=, loff=0
!   reloc[259]: knd=0, off=2447, siz=4, lab1=scale_and_bias_rgba, lab2=, loff=0
!   reloc[260]: knd=0, off=2454, siz=4, lab1=.L1148, lab2=, loff=0
!   reloc[261]: knd=0, off=2466, siz=4, lab1=.L1155, lab2=, loff=0
!   reloc[262]: knd=0, off=2474, siz=4, lab1=.L1156, lab2=, loff=0
!   reloc[263]: knd=0, off=2482, siz=4, lab1=.L1157, lab2=, loff=0
!   reloc[264]: knd=0, off=2490, siz=4, lab1=.L1158, lab2=, loff=0
!   reloc[265]: knd=0, off=2498, siz=4, lab1=.L1159, lab2=, loff=0
!   reloc[266]: knd=0, off=2506, siz=4, lab1=.L1166, lab2=, loff=0
!   reloc[267]: knd=0, off=2514, siz=4, lab1=.L1173, lab2=, loff=0
!   reloc[268]: knd=0, off=2522, siz=4, lab1=.L1180, lab2=, loff=0
!   reloc[269]: knd=0, off=2530, siz=4, lab1=.L1189, lab2=, loff=0
!   reloc[270]: knd=0, off=2540, siz=4, lab1=.L1192, lab2=, loff=0
!   reloc[271]: knd=0, off=2555, siz=4, lab1=map_rgba, lab2=, loff=0
!   reloc[272]: knd=0, off=2562, siz=4, lab1=.L1199, lab2=, loff=0
!   reloc[273]: knd=0, off=2574, siz=4, lab1=.L1200, lab2=, loff=0
!   reloc[274]: knd=0, off=2582, siz=4, lab1=.L1201, lab2=, loff=0
!   reloc[275]: knd=0, off=2590, siz=4, lab1=.L1202, lab2=, loff=0
!   reloc[276]: knd=0, off=2598, siz=4, lab1=.L1204, lab2=, loff=0
!   reloc[277]: knd=0, off=2608, siz=4, lab1=.L1211, lab2=, loff=0
!   reloc[278]: knd=0, off=2616, siz=4, lab1=.L1212, lab2=, loff=0
!   reloc[279]: knd=0, off=2624, siz=4, lab1=.L1213, lab2=, loff=0
!   reloc[280]: knd=0, off=2632, siz=4, lab1=.L1214, lab2=, loff=0
!   reloc[281]: knd=0, off=2640, siz=4, lab1=.L1217, lab2=, loff=0
!   reloc[282]: knd=0, off=2650, siz=4, lab1=.L1220, lab2=, loff=0
!   reloc[283]: knd=0, off=2665, siz=4, lab1=read_color_pixels, lab2=, loff=0
!   reloc[284]: knd=0, off=2672, siz=4, lab1=.L1227, lab2=, loff=0
!   reloc[285]: knd=0, off=2684, siz=4, lab1=.L1228, lab2=, loff=0
!   reloc[286]: knd=0, off=2694, siz=4, lab1=.L1232, lab2=, loff=0
!   reloc[287]: knd=0, off=2702, siz=4, lab1=.L1236, lab2=, loff=0
!   reloc[288]: knd=0, off=2710, siz=4, lab1=.L1238, lab2=, loff=0
!   reloc[289]: knd=0, off=2718, siz=4, lab1=.L1240, lab2=, loff=0
!   reloc[290]: knd=0, off=2726, siz=4, lab1=.L1242, lab2=, loff=0
!   reloc[291]: knd=0, off=2734, siz=4, lab1=.L1244, lab2=, loff=0
!   reloc[292]: knd=0, off=2742, siz=4, lab1=.L1246, lab2=, loff=0
!   reloc[293]: knd=0, off=2750, siz=4, lab1=.L1248, lab2=, loff=0
!   reloc[294]: knd=0, off=2758, siz=4, lab1=.L1250, lab2=, loff=0
!   reloc[295]: knd=0, off=2766, siz=4, lab1=.L1252, lab2=, loff=0
!   reloc[296]: knd=0, off=2774, siz=4, lab1=.L1254, lab2=, loff=0
!   reloc[297]: knd=0, off=2784, siz=4, lab1=.L1257, lab2=, loff=0
!   reloc[298]: knd=0, off=2794, siz=4, lab1=.L1260, lab2=, loff=0
!   reloc[299]: knd=0, off=2804, siz=4, lab1=.L1263, lab2=, loff=0
!   reloc[300]: knd=0, off=2812, siz=4, lab1=.L1267, lab2=, loff=0
!   reloc[301]: knd=0, off=2820, siz=4, lab1=.L1269, lab2=, loff=0
!   reloc[302]: knd=0, off=2830, siz=4, lab1=.L1273, lab2=, loff=0
!   reloc[303]: knd=0, off=2840, siz=4, lab1=.L1276, lab2=, loff=0
!   reloc[304]: knd=0, off=2848, siz=4, lab1=.L1280, lab2=, loff=0
!   reloc[305]: knd=0, off=2856, siz=4, lab1=.L1286, lab2=, loff=0
!   reloc[306]: knd=0, off=2866, siz=4, lab1=.L1292, lab2=, loff=0
!   reloc[307]: knd=0, off=2876, siz=4, lab1=.L1296, lab2=, loff=0
!   reloc[308]: knd=0, off=2884, siz=4, lab1=.L1302, lab2=, loff=0
!   reloc[309]: knd=0, off=2894, siz=4, lab1=.L1309, lab2=, loff=0
!   reloc[310]: knd=0, off=2904, siz=4, lab1=.L1311, lab2=, loff=0
!   reloc[311]: knd=0, off=2914, siz=4, lab1=.L1320, lab2=, loff=0
!   reloc[312]: knd=0, off=2924, siz=4, lab1=.L1324, lab2=, loff=0
!   reloc[313]: knd=0, off=2934, siz=4, lab1=.L1325, lab2=, loff=0
!   reloc[314]: knd=0, off=2942, siz=4, lab1=.L1326, lab2=, loff=0
!   reloc[315]: knd=0, off=2950, siz=4, lab1=.L1327, lab2=, loff=0
!   reloc[316]: knd=0, off=2958, siz=4, lab1=.L1328, lab2=, loff=0
!   reloc[317]: knd=0, off=2968, siz=4, lab1=.L1331, lab2=, loff=0
!   reloc[318]: knd=0, off=2976, siz=4, lab1=.L1335, lab2=, loff=0
!   reloc[319]: knd=0, off=2984, siz=4, lab1=.L1340, lab2=, loff=0
!   reloc[320]: knd=0, off=2992, siz=4, lab1=.L1347, lab2=, loff=0
!   reloc[321]: knd=0, off=3000, siz=4, lab1=.L1348, lab2=, loff=0
!   reloc[322]: knd=0, off=3008, siz=4, lab1=.L1349, lab2=, loff=0
!   reloc[323]: knd=0, off=3016, siz=4, lab1=.L1350, lab2=, loff=0
!   reloc[324]: knd=0, off=3024, siz=4, lab1=.L1353, lab2=, loff=0
!   reloc[325]: knd=0, off=3034, siz=4, lab1=.L1358, lab2=, loff=0
!   reloc[326]: knd=0, off=3044, siz=4, lab1=.L1362, lab2=, loff=0
!   reloc[327]: knd=0, off=3052, siz=4, lab1=.L1368, lab2=, loff=0
!   reloc[328]: knd=0, off=3060, siz=4, lab1=.L1372, lab2=, loff=0
!   reloc[329]: knd=0, off=3068, siz=4, lab1=.L1381, lab2=, loff=0
!   reloc[330]: knd=0, off=3078, siz=4, lab1=.L1384, lab2=, loff=0
!   reloc[331]: knd=0, off=3086, siz=4, lab1=.L1392, lab2=, loff=0
!   reloc[332]: knd=0, off=3094, siz=4, lab1=.L1396, lab2=, loff=0
!   reloc[333]: knd=0, off=3102, siz=4, lab1=.L1398, lab2=, loff=0
!   reloc[334]: knd=0, off=3110, siz=4, lab1=.L1405, lab2=, loff=0
!   reloc[335]: knd=0, off=3118, siz=4, lab1=.L1408, lab2=, loff=0
!   reloc[336]: knd=0, off=3126, siz=4, lab1=.L1416, lab2=, loff=0
!   reloc[337]: knd=0, off=3136, siz=4, lab1=.L1418, lab2=, loff=0
!   reloc[338]: knd=0, off=3144, siz=4, lab1=.L1425, lab2=, loff=0
!   reloc[339]: knd=0, off=3152, siz=4, lab1=.L1428, lab2=, loff=0
!   reloc[340]: knd=0, off=3160, siz=4, lab1=.L1438, lab2=, loff=0
!   reloc[341]: knd=0, off=3170, siz=4, lab1=.L1445, lab2=, loff=0
!   reloc[342]: knd=0, off=3178, siz=4, lab1=.L1446, lab2=, loff=0
!   reloc[343]: knd=0, off=3186, siz=4, lab1=.L1447, lab2=, loff=0
!   reloc[344]: knd=0, off=3194, siz=4, lab1=.L1448, lab2=, loff=0
!   reloc[345]: knd=0, off=3202, siz=4, lab1=.L1451, lab2=, loff=0
!   reloc[346]: knd=0, off=3212, siz=4, lab1=.L1459, lab2=, loff=0
!   reloc[347]: knd=0, off=3222, siz=4, lab1=.L1464, lab2=, loff=0
!   reloc[348]: knd=0, off=3230, siz=4, lab1=.L1471, lab2=, loff=0
!   reloc[349]: knd=0, off=3238, siz=4, lab1=.L1472, lab2=, loff=0
!   reloc[350]: knd=0, off=3246, siz=4, lab1=.L1481, lab2=, loff=0
!   reloc[351]: knd=0, off=3256, siz=4, lab1=.L1490, lab2=, loff=0
!   reloc[352]: knd=0, off=3266, siz=4, lab1=.L1495, lab2=, loff=0
!   reloc[353]: knd=0, off=3276, siz=4, lab1=.L1497, lab2=, loff=0
!   reloc[354]: knd=0, off=3284, siz=4, lab1=.L1506, lab2=, loff=0
!   reloc[355]: knd=0, off=3292, siz=4, lab1=.L1513, lab2=, loff=0
!   reloc[356]: knd=0, off=3300, siz=4, lab1=.L1520, lab2=, loff=0
!   reloc[357]: knd=0, off=3308, siz=4, lab1=.L1527, lab2=, loff=0
!   reloc[358]: knd=0, off=3316, siz=4, lab1=.L1534, lab2=, loff=0
!   reloc[359]: knd=0, off=3324, siz=4, lab1=.L1541, lab2=, loff=0
!   reloc[360]: knd=0, off=3334, siz=4, lab1=.L1545, lab2=, loff=0
!   reloc[361]: knd=0, off=3344, siz=4, lab1=.L1548, lab2=, loff=0
!   reloc[362]: knd=0, off=3354, siz=4, lab1=.L1550, lab2=, loff=0
!   reloc[363]: knd=0, off=3362, siz=4, lab1=.L1559, lab2=, loff=0
!   reloc[364]: knd=0, off=3370, siz=4, lab1=.L1566, lab2=, loff=0
!   reloc[365]: knd=0, off=3378, siz=4, lab1=.L1573, lab2=, loff=0
!   reloc[366]: knd=0, off=3386, siz=4, lab1=.L1580, lab2=, loff=0
!   reloc[367]: knd=0, off=3394, siz=4, lab1=.L1587, lab2=, loff=0
!   reloc[368]: knd=0, off=3402, siz=4, lab1=.L1594, lab2=, loff=0
!   reloc[369]: knd=0, off=3412, siz=4, lab1=.L1598, lab2=, loff=0
!   reloc[370]: knd=0, off=3422, siz=4, lab1=.L1601, lab2=, loff=0
!   reloc[371]: knd=0, off=3432, siz=4, lab1=.L1603, lab2=, loff=0
!   reloc[372]: knd=0, off=3440, siz=4, lab1=.L1612, lab2=, loff=0
!   reloc[373]: knd=0, off=3448, siz=4, lab1=.L1619, lab2=, loff=0
!   reloc[374]: knd=0, off=3456, siz=4, lab1=.L1626, lab2=, loff=0
!   reloc[375]: knd=0, off=3464, siz=4, lab1=.L1633, lab2=, loff=0
!   reloc[376]: knd=0, off=3472, siz=4, lab1=.L1640, lab2=, loff=0
!   reloc[377]: knd=0, off=3480, siz=4, lab1=.L1647, lab2=, loff=0
!   reloc[378]: knd=0, off=3490, siz=4, lab1=.L1653, lab2=, loff=0
!   reloc[379]: knd=0, off=3500, siz=4, lab1=.L1657, lab2=, loff=0
!   reloc[380]: knd=0, off=3508, siz=4, lab1=.L1661, lab2=, loff=0
!   reloc[381]: knd=0, off=3516, siz=4, lab1=.L1664, lab2=, loff=0
!   reloc[382]: knd=0, off=3526, siz=4, lab1=.L1666, lab2=, loff=0
!   reloc[383]: knd=0, off=3534, siz=4, lab1=.L1675, lab2=, loff=0
!   reloc[384]: knd=0, off=3542, siz=4, lab1=.L1682, lab2=, loff=0
!   reloc[385]: knd=0, off=3550, siz=4, lab1=.L1689, lab2=, loff=0
!   reloc[386]: knd=0, off=3558, siz=4, lab1=.L1696, lab2=, loff=0
!   reloc[387]: knd=0, off=3566, siz=4, lab1=.L1703, lab2=, loff=0
!   reloc[388]: knd=0, off=3574, siz=4, lab1=.L1710, lab2=, loff=0
!   reloc[389]: knd=0, off=3584, siz=4, lab1=.L1715, lab2=, loff=0
!   reloc[390]: knd=0, off=3594, siz=4, lab1=.L1719, lab2=, loff=0
!   reloc[391]: knd=0, off=3602, siz=4, lab1=.L1724, lab2=, loff=0
!   reloc[392]: knd=0, off=3612, siz=4, lab1=.L1727, lab2=, loff=0
!   reloc[393]: knd=0, off=3622, siz=4, lab1=.L1729, lab2=, loff=0
!   reloc[394]: knd=0, off=3630, siz=4, lab1=.L1738, lab2=, loff=0
!   reloc[395]: knd=0, off=3638, siz=4, lab1=.L1745, lab2=, loff=0
!   reloc[396]: knd=0, off=3646, siz=4, lab1=.L1752, lab2=, loff=0
!   reloc[397]: knd=0, off=3654, siz=4, lab1=.L1759, lab2=, loff=0
!   reloc[398]: knd=0, off=3662, siz=4, lab1=.L1766, lab2=, loff=0
!   reloc[399]: knd=0, off=3670, siz=4, lab1=.L1773, lab2=, loff=0
!   reloc[400]: knd=0, off=3680, siz=4, lab1=.L1778, lab2=, loff=0
!   reloc[401]: knd=0, off=3690, siz=4, lab1=.L1782, lab2=, loff=0
!   reloc[402]: knd=0, off=3698, siz=4, lab1=.L1787, lab2=, loff=0
!   reloc[403]: knd=0, off=3708, siz=4, lab1=.L1790, lab2=, loff=0
!   reloc[404]: knd=0, off=3718, siz=4, lab1=.L1792, lab2=, loff=0
!   reloc[405]: knd=0, off=3726, siz=4, lab1=.L1801, lab2=, loff=0
!   reloc[406]: knd=0, off=3734, siz=4, lab1=.L1808, lab2=, loff=0
!   reloc[407]: knd=0, off=3742, siz=4, lab1=.L1815, lab2=, loff=0
!   reloc[408]: knd=0, off=3750, siz=4, lab1=.L1822, lab2=, loff=0
!   reloc[409]: knd=0, off=3758, siz=4, lab1=.L1829, lab2=, loff=0
!   reloc[410]: knd=0, off=3766, siz=4, lab1=.L1836, lab2=, loff=0
!   reloc[411]: knd=0, off=3776, siz=4, lab1=.L1841, lab2=, loff=0
!   reloc[412]: knd=0, off=3786, siz=4, lab1=.L1845, lab2=, loff=0
!   reloc[413]: knd=0, off=3794, siz=4, lab1=.L1850, lab2=, loff=0
!   reloc[414]: knd=0, off=3804, siz=4, lab1=.L1853, lab2=, loff=0
!   reloc[415]: knd=0, off=3814, siz=4, lab1=.L1855, lab2=, loff=0
!   reloc[416]: knd=0, off=3822, siz=4, lab1=.L1864, lab2=, loff=0
!   reloc[417]: knd=0, off=3830, siz=4, lab1=.L1871, lab2=, loff=0
!   reloc[418]: knd=0, off=3838, siz=4, lab1=.L1878, lab2=, loff=0
!   reloc[419]: knd=0, off=3846, siz=4, lab1=.L1885, lab2=, loff=0
!   reloc[420]: knd=0, off=3854, siz=4, lab1=.L1892, lab2=, loff=0
!   reloc[421]: knd=0, off=3862, siz=4, lab1=.L1899, lab2=, loff=0
!   reloc[422]: knd=0, off=3872, siz=4, lab1=.L1904, lab2=, loff=0
!   reloc[423]: knd=0, off=3882, siz=4, lab1=.L1908, lab2=, loff=0
!   reloc[424]: knd=0, off=3890, siz=4, lab1=.L1913, lab2=, loff=0
!   reloc[425]: knd=0, off=3900, siz=4, lab1=.L1915, lab2=, loff=0
!   reloc[426]: knd=0, off=3908, siz=4, lab1=.L1919, lab2=, loff=0
!   reloc[427]: knd=0, off=3919, siz=4, lab1=.L1924, lab2=, loff=0
!   reloc[428]: knd=0, off=3930, siz=4, lab1=.L1927, lab2=, loff=0
!   reloc[429]: knd=0, off=3946, siz=4, lab1=gl_ReadPixels, lab2=, loff=0
!   reloc[430]: knd=0, off=3953, siz=4, lab1=.L1936, lab2=, loff=0
!   reloc[431]: knd=0, off=3965, siz=4, lab1=.L1940, lab2=, loff=0
!   reloc[432]: knd=0, off=3973, siz=4, lab1=.L1942, lab2=, loff=0
!   reloc[433]: knd=0, off=3981, siz=4, lab1=.L1946, lab2=, loff=0
!   reloc[434]: knd=0, off=3991, siz=4, lab1=.L1950, lab2=, loff=0
!   reloc[435]: knd=0, off=3999, siz=4, lab1=.L1954, lab2=, loff=0
!   reloc[436]: knd=0, off=4007, siz=4, lab1=.L1955, lab2=, loff=0
!   reloc[437]: knd=0, off=4015, siz=4, lab1=.L1957, lab2=, loff=0
!   reloc[438]: knd=0, off=4023, siz=4, lab1=.L1958, lab2=, loff=0
!   reloc[439]: knd=0, off=4031, siz=4, lab1=.L1960, lab2=, loff=0
!   reloc[440]: knd=0, off=4039, siz=4, lab1=.L1961, lab2=, loff=0
!   reloc[441]: knd=0, off=4047, siz=4, lab1=.L1970, lab2=, loff=0
!   reloc[442]: knd=0, off=4057, siz=4, lab1=.L1971, lab2=, loff=0
!   reloc[443]: knd=0, off=4065, siz=4, lab1=.L1973, lab2=, loff=0
!   reloc[444]: knd=0, off=4073, siz=4, lab1=.L1977, lab2=, loff=0
!   reloc[445]: knd=0, off=4083, siz=4, lab1=.L1980, lab2=, loff=0
!   reloc[446]: knd=0, off=4093, siz=4, lab1=.L1981, lab2=, loff=0
	.section ".debug_line"
	.byte 0x00,0x00,0x10,0x03,0x00,0x02,0x00,0x00
	.byte 0x00,0x72,0x04,0x00,0xff,0x04,0x0a,0x00
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x01
	.byte 0x2f,0x68,0x6f,0x6d,0x65,0x2f,0x66,0x61
	.byte 0x63,0x75,0x6c,0x74,0x79,0x2f,0x6b,0x6f
	.byte 0x70,0x70,0x65,0x6c,0x2f,0x74,0x65,0x61
	.byte 0x63,0x68,0x2f,0x67,0x70,0x63,0x6f,0x6d
	.byte 0x2f,0x67,0x70,0x75,0x70,0x2f,0x72,0x73
	.byte 0x69,0x6d,0x2f,0x6d,0x65,0x73,0x61,0x2f
	.byte 0x6e,0x6f,0x2d,0x6f,0x70,0x74,0x00,0x47
	.byte 0x4c,0x00,0x00,0x72,0x65,0x61,0x64,0x70
	.byte 0x69,0x78,0x2e,0x63,0x00,0x01,0x00,0x00
	.byte 0x74,0x79,0x70,0x65,0x73,0x2e,0x68,0x00
	.byte 0x01,0x00,0x00,0x67,0x6c,0x2e,0x68,0x00
	.byte 0x02,0x00,0x00,0x64,0x64,0x2e,0x68,0x00
	.byte 0x01,0x00,0x00,0x00,0x00,0x05,0x02
	.uaword read_index_pixels
	.byte 0x00,0x05,0x02
	.uaword .L18
	.byte 0x06,0x03,0xdc,0x00,0x01,0x00,0x05,0x02
	.uaword .L22
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L24
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L28
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L31
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L35
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L37
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L41
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L44
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L48
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L54
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L60
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L64
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L70
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L77
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L79
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L86
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L89
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L97
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L101
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L103
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L110
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L113
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L121
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L123
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L130
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L133
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L144
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L149
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L156
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L159
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L168
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L173
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L175
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L182
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L185
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L189
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L192
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L194
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L201
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L204
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L208
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L211
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L213
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L220
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L223
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L228
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L232
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L237
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L240
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L242
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L249
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L252
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L257
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L261
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L266
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L269
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L271
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L278
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L281
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L286
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L290
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L295
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L298
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L300
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L307
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L310
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L315
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L319
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L324
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L327
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L329
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L336
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L339
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L344
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L348
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L353
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L355
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L359
	.byte 0x03,0xb7,0x7f,0x01,0x00,0x05,0x02
	.uaword .L364
	.byte 0x03,0x64,0x01,0x00,0x05,0x02
	.uaword .L367
	.byte 0x03,0xe8,0x00,0x01,0x02,0x01,0x00,0x01
	.byte 0x01,0x00,0x05,0x02
	.uaword read_depth_pixels
	.byte 0x00,0x05,0x02
	.uaword .L376
	.byte 0x06,0x03,0xf2,0x01,0x01,0x00,0x05,0x02
	.uaword .L380
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L382
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L386
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L392
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L395
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L399
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L401
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L405
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L408
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L412
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L418
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L424
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L428
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L434
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L441
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L444
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L451
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L458
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L459
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L462
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L471
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L477
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L478
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L483
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L487
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L488
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L491
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L495
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L502
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L503
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L505
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L512
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L515
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L520
	.byte 0x03,0x7d,0x01,0x00,0x05,0x02
	.uaword .L529
	.byte 0x03,0x0a,0x01,0x00,0x05,0x02
	.uaword .L536
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L539
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L544
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L551
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L552
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L561
	.byte 0x03,0x7d,0x01,0x00,0x05,0x02
	.uaword .L570
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L575
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L577
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L584
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L587
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L591
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L594
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L596
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L603
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L606
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L610
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L613
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L615
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L622
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L625
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L630
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L634
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L639
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L642
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L644
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L651
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L654
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L659
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L663
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L668
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L671
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L673
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L680
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L683
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L688
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L692
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L697
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L700
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L702
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L709
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L712
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L717
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L721
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L726
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L729
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L731
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L738
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L741
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L746
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L750
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L755
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L757
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L761
	.byte 0x03,0xb7,0x7f,0x01,0x00,0x05,0x02
	.uaword .L766
	.byte 0x03,0x73,0x01,0x00,0x05,0x02
	.uaword .L774
	.byte 0x03,0xda,0x00,0x01,0x02,0x01,0x00,0x01
	.byte 0x01,0x00,0x05,0x02
	.uaword read_stencil_pixels
	.byte 0x00,0x05,0x02
	.uaword .L783
	.byte 0x06,0x03,0x98,0x03,0x01,0x00,0x05,0x02
	.uaword .L787
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L789
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L793
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L799
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L802
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L806
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L808
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L812
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L815
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L819
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L825
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L831
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L835
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L841
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L848
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L850
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L857
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L860
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L866
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L870
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L872
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L879
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L882
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L890
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L892
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L899
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L902
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L913
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L918
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L925
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L928
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L937
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L942
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L943
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L945
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L948
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L949
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L951
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L954
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L956
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L963
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L966
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L971
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L975
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L980
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L983
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L985
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L992
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L995
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L1000
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1004
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1009
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1012
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1014
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1021
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1024
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L1029
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1033
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1038
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1041
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1043
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1050
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1053
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L1058
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1062
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1067
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1070
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1072
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1079
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1082
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L1087
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1091
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1096
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1098
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1102
	.byte 0x03,0xbb,0x7f,0x01,0x00,0x05,0x02
	.uaword .L1107
	.byte 0x03,0x63,0x01,0x00,0x05,0x02
	.uaword .L1110
	.byte 0x03,0xe5,0x00,0x01,0x02,0x01,0x00,0x01
	.byte 0x01,0x00,0x05,0x02
	.uaword scale_or_bias_rgba
	.byte 0x00,0x05,0x02
	.uaword .L1119
	.byte 0x06,0x03,0xac,0x04,0x01,0x00,0x05,0x02
	.uaword .L1131
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1136
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1140
	.byte 0x0d,0x02,0x01,0x00,0x01,0x01,0x00,0x05
	.byte 0x02
	.uaword scale_and_bias_rgba
	.byte 0x00,0x05,0x02
	.uaword .L1148
	.byte 0x06,0x03,0xc1,0x04,0x01,0x00,0x05,0x02
	.uaword .L1155
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1156
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1157
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1158
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1159
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1166
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1173
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1180
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1189
	.byte 0x03,0x78,0x01,0x00,0x05,0x02
	.uaword .L1192
	.byte 0x03,0x0a,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword map_rgba
	.byte 0x00,0x05,0x02
	.uaword .L1199
	.byte 0x06,0x03,0xd7,0x04,0x01,0x00,0x05,0x02
	.uaword .L1200
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1201
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1202
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1204
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1211
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1212
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1213
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1214
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1217
	.byte 0x03,0x7c,0x01,0x00,0x05,0x02
	.uaword .L1220
	.byte 0x03,0x06,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword read_color_pixels
	.byte 0x00,0x05,0x02
	.uaword .L1227
	.byte 0x06,0x03,0xfa,0x04,0x01,0x00,0x05,0x02
	.uaword .L1228
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1232
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1236
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1238
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1240
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1242
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1244
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1246
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1248
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1250
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1252
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1254
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L1257
	.byte 0x03,0x70,0x01,0x00,0x05,0x02
	.uaword .L1260
	.byte 0x03,0x14,0x01,0x00,0x05,0x02
	.uaword .L1263
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1267
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1269
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L1273
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1276
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1280
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1286
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1292
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1296
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1302
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1309
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1311
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1320
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1324
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1325
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1326
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1327
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1328
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1331
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1335
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1340
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1347
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1348
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1349
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1350
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1353
	.byte 0x03,0x7c,0x01,0x00,0x05,0x02
	.uaword .L1358
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L1362
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1368
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1372
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1381
	.byte 0x03,0x0a,0x01,0x00,0x05,0x02
	.uaword .L1384
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1392
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1396
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1398
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1405
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1408
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L1416
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L1418
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1425
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1428
	.byte 0x0a,0x00,0x05,0x02
	.uaword .L1438
	.byte 0x03,0x06,0x01,0x00,0x05,0x02
	.uaword .L1445
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1446
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1447
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1448
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1451
	.byte 0x03,0x7c,0x01,0x00,0x05,0x02
	.uaword .L1459
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1464
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1471
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1472
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1481
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L1490
	.byte 0x03,0x0a,0x01,0x00,0x05,0x02
	.uaword .L1495
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1497
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1506
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1513
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1520
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1527
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1534
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1541
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1545
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1548
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1550
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1559
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1566
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1573
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1580
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1587
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1594
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1598
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1601
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1603
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1612
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1619
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1626
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1633
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1640
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1647
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1653
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1657
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1661
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1664
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1666
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1675
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1682
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1689
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1696
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1703
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1710
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1715
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L1719
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1724
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1727
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1729
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1738
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1745
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1752
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1759
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1766
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1773
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1778
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L1782
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1787
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1790
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1792
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1801
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1808
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1815
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1822
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1829
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1836
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1841
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L1845
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1850
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1853
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1855
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1864
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1871
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1878
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1885
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1892
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1899
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1904
	.byte 0x03,0x07,0x01,0x00,0x05,0x02
	.uaword .L1908
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1913
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1915
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1919
	.byte 0x03,0x9b,0x7f,0x01,0x00,0x05,0x02
	.uaword .L1924
	.byte 0x03,0xb0,0x7f,0x01,0x00,0x05,0x02
	.uaword .L1927
	.byte 0x03,0xbd,0x01,0x01,0x02,0x01,0x00,0x01
	.byte 0x01,0x00,0x05,0x02
	.uaword gl_ReadPixels
	.byte 0x00,0x05,0x02
	.uaword .L1936
	.byte 0x06,0x03,0xf6,0x06,0x01,0x00,0x05,0x02
	.uaword .L1940
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1942
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1946
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1950
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1954
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1955
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1957
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1958
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1960
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1961
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1970
	.byte 0x03,0x09,0x01,0x00,0x05,0x02
	.uaword .L1971
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1973
	.byte 0x0d,0x00,0x05
	.byte 0x02
	.uaword .L1977
	.byte 0x03,0x6b,0x01,0x00,0x05,0x02
	.uaword .L1980
	.byte 0x03,0x18,0x01,0x00,0x05,0x02
	.uaword .L1981
	.byte 0x0c,0x02,0x01,0x00,0x01,0x01
!  End sdCreateSection
!  Begin sdCreateSection : .debug_abbrev
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
	.section ".debug_abbrev"
	.byte 0x01,0x11,0x01,0x03,0x08,0x13,0x0b,0x1b
	.byte 0x08,0x85,0x44,0x08,0x87,0x44,0x08,0x25
	.byte 0x08,0x10,0x06,0x00,0x00,0x02,0x2e,0x01
	.byte 0x03,0x08,0x17,0x0b,0x3a,0x0b,0x3b,0x0b
	.byte 0x11,0x01,0x12,0x01,0x40,0x0a,0x27,0x0c
	.byte 0x88,0x44,0x0b,0x01,0x13,0x00,0x00,0x03
	.byte 0x05,0x00,0x49,0x13,0x03,0x08,0x3a,0x0b
	.byte 0x3b,0x0b,0x02,0x0a,0x00,0x00,0x04,0x34
	.byte 0x00,0x03,0x08,0x49,0x13,0x17,0x0b,0x3a
	.byte 0x0b,0x3b,0x0b,0x02,0x0a,0x00,0x00,0x05
	.byte 0x0b,0x01,0x11,0x01,0x12,0x01,0x00,0x00
	.byte 0x06,0x24,0x00,0x03,0x08,0x3e,0x0b,0x0b
	.byte 0x0b,0x00,0x00,0x07,0x16,0x00,0x49,0x13
	.byte 0x03,0x08,0x3a,0x0b,0x00,0x00,0x08,0x13
	.byte 0x00,0x03,0x08,0x3c,0x0c,0x00,0x00,0x09
	.byte 0x0f,0x00,0x49,0x13,0x00,0x00,0x0a,0x01
	.byte 0x01,0x49,0x13,0x0b,0x0b,0x01,0x13,0x00
	.byte 0x00,0x0b,0x21,0x00,0x49,0x13,0x2f,0x0b
	.byte 0x00,0x00,0x0c,0x04,0x01,0x0b,0x0b,0x3a
	.byte 0x0b,0x01,0x13,0x00,0x00,0x0d,0x28,0x00
	.byte 0x03,0x08,0x1c,0x0d,0x00,0x00,0x0e,0x13
	.byte 0x01,0x03,0x08,0x0b,0x0b,0x3a,0x0b,0x01
	.byte 0x13,0x00,0x00,0x0f,0x0d,0x00,0x03,0x08
	.byte 0x49,0x13,0x38,0x0a,0x00,0x00,0x10,0x01
	.byte 0x01,0x49,0x13,0x0b,0x05,0x01,0x13,0x00
	.byte 0x00,0x11,0x21,0x00,0x49,0x13,0x2f,0x05
	.byte 0x00,0x00,0x12,0x13,0x01,0x03,0x08,0x0b
	.byte 0x05,0x3a,0x0b,0x01,0x13,0x00,0x00,0x13
	.byte 0x26,0x00,0x49,0x13,0x00,0x00,0x14,0x15
	.byte 0x01,0x27,0x0c,0x88,0x44,0x0b,0x01,0x13
	.byte 0x00,0x00,0x15,0x05,0x00,0x49,0x13,0x00
	.byte 0x00,0x16,0x15,0x01,0x27,0x0c,0x49,0x13
	.byte 0x88,0x44,0x0b,0x01,0x13,0x00,0x00,0x17
	.byte 0x15,0x00,0x27,0x0c,0x49,0x13,0x88,0x44
	.byte 0x0b,0x00,0x00,0x18,0x34,0x00,0x03,0x08
	.byte 0x49,0x13,0x17,0x0b,0x3a,0x0b,0x3b,0x05
	.byte 0x02,0x0a,0x00,0x00,0x19,0x2e,0x01,0x03
	.byte 0x08,0x17,0x0b,0x3a,0x0b,0x3b,0x05,0x11
	.byte 0x01,0x12,0x01,0x40,0x0a,0x27,0x0c,0x88
	.byte 0x44,0x0b,0x01,0x13,0x00,0x00,0x1a,0x05
	.byte 0x00,0x49,0x13,0x03,0x08,0x3a,0x0b,0x3b
	.byte 0x05,0x02,0x0a,0x00,0x00,0x1b,0x2e,0x01
	.byte 0x03,0x08,0x17,0x0b,0x3a,0x0b,0x3b,0x05
	.byte 0x11,0x01,0x12,0x01,0x40,0x0a,0x27,0x0c
	.byte 0x49,0x13,0x88,0x44,0x0b,0x01,0x13,0x00
	.byte 0x00,0x1c,0x2e,0x01,0x03,0x08,0x3f,0x0c
	.byte 0x17,0x0b,0x3a,0x0b,0x3b,0x05,0x11,0x01
	.byte 0x12,0x01,0x40,0x0a,0x27,0x0c,0x88,0x44
	.byte 0x0b,0x01,0x13,0x00,0x00,0x1d,0x2e,0x01
	.byte 0x03,0x08,0x3f,0x0c,0x3c,0x0c,0x27,0x0c
	.byte 0x88,0x44,0x0b,0x01,0x13,0x00,0x00,0x1e
	.byte 0x2e,0x01,0x03,0x08,0x3f,0x0c,0x3c,0x0c
	.byte 0x27,0x0c,0x49,0x13,0x88,0x44,0x0b,0x01
	.byte 0x13,0x00,0x00,0x1f,0x2e,0x01,0x03,0x08
	.byte 0x3f,0x0c,0x3c,0x0c,0x27,0x0c,0x49,0x13
	.byte 0x88,0x44,0x0b,0x00,0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_pubnames
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_info, lab2=, loff=0
	.section ".debug_pubnames"
	.byte 0x00,0x00,0x00,0x20,0x00,0x02
	.uaword %section_symbol(".debug_info")
	.byte 0x00,0x00,0xa5,0x94,0x00,0x00,0xa3,0xc5
	.byte 0x67,0x6c,0x5f,0x52,0x65,0x61,0x64,0x50
	.byte 0x69,0x78,0x65,0x6c,0x73,0x00,0x00,0x00
	.byte 0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_funcnames
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_info, lab2=, loff=0
	.section ".debug_funcnames"
	.byte 0x00,0x00,0x00,0xa4,0x00,0x02
	.uaword %section_symbol(".debug_info")
	.byte 0x00,0x00,0xa5,0x94,0x00,0x00,0x01,0x05
	.byte 0x72,0x65,0x61,0x64,0x5f,0x69,0x6e,0x64
	.byte 0x65,0x78,0x5f,0x70,0x69,0x78,0x65,0x6c
	.byte 0x73,0x00,0x00,0x00,0x96,0xfa,0x72,0x65
	.byte 0x61,0x64,0x5f,0x64,0x65,0x70,0x74,0x68
	.byte 0x5f,0x70,0x69,0x78,0x65,0x6c,0x73,0x00
	.byte 0x00,0x00,0x9a,0x49,0x72,0x65,0x61,0x64
	.byte 0x5f,0x73,0x74,0x65,0x6e,0x63,0x69,0x6c
	.byte 0x5f,0x70,0x69,0x78,0x65,0x6c,0x73,0x00
	.byte 0x00,0x00,0x9c,0xb8,0x73,0x63,0x61,0x6c
	.byte 0x65,0x5f,0x6f,0x72,0x5f,0x62,0x69,0x61
	.byte 0x73,0x5f,0x72,0x67,0x62,0x61,0x00,0x00
	.byte 0x00,0x9c,0xf5,0x73,0x63,0x61,0x6c,0x65
	.byte 0x5f,0x61,0x6e,0x64,0x5f,0x62,0x69,0x61
	.byte 0x73,0x5f,0x72,0x67,0x62,0x61,0x00,0x00
	.byte 0x00,0x9d,0xc8,0x6d,0x61,0x70,0x5f,0x72
	.byte 0x67,0x62,0x61,0x00,0x00,0x00,0x9e,0xa4
	.byte 0x72,0x65,0x61,0x64,0x5f,0x63,0x6f,0x6c
	.byte 0x6f,0x72,0x5f,0x70,0x69,0x78,0x65,0x6c
	.byte 0x73,0x00,0x00,0x00,0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_typenames
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_info, lab2=, loff=0
	.section ".debug_typenames"
	.byte 0x00,0x00,0x04,0x3c,0x00,0x02
	.uaword %section_symbol(".debug_info")
	.byte 0x00,0x00,0xa5,0x94,0x00,0x00,0x03,0x30
	.byte 0x47,0x4c,0x69,0x6e,0x74,0x00,0x00,0x00
	.byte 0x03,0x59,0x47,0x4c,0x75,0x69,0x6e,0x74
	.byte 0x00,0x00,0x00,0x03,0x6f,0x47,0x4c,0x66
	.byte 0x6c,0x6f,0x61,0x74,0x00,0x00,0x00,0x03
	.byte 0x96,0x00,0x00,0x00,0x33,0x32,0x47,0x4c
	.byte 0x65,0x6e,0x75,0x6d,0x00,0x00,0x00,0x33
	.byte 0x50,0x47,0x4c,0x75,0x62,0x79,0x74,0x65
	.byte 0x00,0x00,0x00,0x33,0x70,0x67,0x6c,0x5f
	.byte 0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f
	.byte 0x69,0x6d,0x61,0x67,0x65,0x00,0x00,0x00
	.byte 0x34,0xa2,0x47,0x4c,0x62,0x6f,0x6f,0x6c
	.byte 0x65,0x61,0x6e,0x00,0x00,0x00,0x36,0xb7
	.byte 0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x53
	.byte 0x61,0x6d,0x70,0x6c,0x65,0x46,0x75,0x6e
	.byte 0x63,0x00,0x00,0x00,0x34,0xb2,0x67,0x6c
	.byte 0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65
	.byte 0x5f,0x6f,0x62,0x6a,0x65,0x63,0x74,0x00
	.byte 0x00,0x00,0x36,0xd4,0x67,0x6c,0x5f,0x73
	.byte 0x68,0x61,0x72,0x65,0x64,0x5f,0x73,0x74
	.byte 0x61,0x74,0x65,0x00,0x00,0x00,0x3e,0xf8
	.byte 0x47,0x4c,0x76,0x6f,0x69,0x64,0x00,0x00
	.byte 0x00,0x3f,0x0a,0x67,0x6c,0x5f,0x69,0x6d
	.byte 0x61,0x67,0x65,0x00,0x00,0x00,0x57,0x2d
	.byte 0x67,0x6c,0x5f,0x61,0x70,0x69,0x5f,0x74
	.byte 0x61,0x62,0x6c,0x65,0x00,0x00,0x00,0x65
	.byte 0xd1,0x67,0x6c,0x5f,0x76,0x69,0x73,0x75
	.byte 0x61,0x6c,0x00,0x00,0x00,0x67,0x79,0x47
	.byte 0x4c,0x76,0x69,0x73,0x75,0x61,0x6c,0x00
	.byte 0x00,0x00,0x67,0x8d,0x47,0x4c,0x64,0x65
	.byte 0x70,0x74,0x68,0x00,0x00,0x00,0x67,0xa0
	.byte 0x47,0x4c,0x73,0x74,0x65,0x6e,0x63,0x69
	.byte 0x6c,0x00,0x00,0x00,0x67,0xbe,0x47,0x4c
	.byte 0x61,0x63,0x63,0x75,0x6d,0x00,0x00,0x00
	.byte 0x67,0xd1,0x67,0x6c,0x5f,0x66,0x72,0x61
	.byte 0x6d,0x65,0x5f,0x62,0x75,0x66,0x66,0x65
	.byte 0x72,0x00,0x00,0x00,0x68,0xa8,0x47,0x4c
	.byte 0x66,0x72,0x61,0x6d,0x65,0x62,0x75,0x66
	.byte 0x66,0x65,0x72,0x00,0x00,0x00,0x6f,0x06
	.byte 0x70,0x6f,0x69,0x6e,0x74,0x73,0x5f,0x66
	.byte 0x75,0x6e,0x63,0x00,0x00,0x00,0x6f,0x39
	.byte 0x6c,0x69,0x6e,0x65,0x5f,0x66,0x75,0x6e
	.byte 0x63,0x00,0x00,0x00,0x6f,0x6f,0x74,0x72
	.byte 0x69,0x61,0x6e,0x67,0x6c,0x65,0x5f,0x66
	.byte 0x75,0x6e,0x63,0x00,0x00,0x00,0x6f,0xae
	.byte 0x71,0x75,0x61,0x64,0x5f,0x66,0x75,0x6e
	.byte 0x63,0x00,0x00,0x00,0x6f,0xe4,0x72,0x65
	.byte 0x63,0x74,0x5f,0x66,0x75,0x6e,0x63,0x00
	.byte 0x00,0x00,0x71,0xcb,0x64,0x64,0x5f,0x66
	.byte 0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x5f
	.byte 0x74,0x61,0x62,0x6c,0x65,0x00,0x00,0x00
	.byte 0x77,0x03,0x47,0x4c,0x62,0x69,0x74,0x66
	.byte 0x69,0x65,0x6c,0x64,0x00,0x00,0x00,0x77
	.byte 0x19,0x67,0x6c,0x5f,0x61,0x74,0x74,0x72
	.byte 0x69,0x62,0x5f,0x6e,0x6f,0x64,0x65,0x00
	.byte 0x00,0x00,0x77,0x79,0x67,0x6c,0x5f,0x61
	.byte 0x63,0x63,0x75,0x6d,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x77,0xc6
	.byte 0x67,0x6c,0x5f,0x63,0x6f,0x6c,0x6f,0x72
	.byte 0x62,0x75,0x66,0x66,0x65,0x72,0x5f,0x61
	.byte 0x74,0x74,0x72,0x69,0x62,0x00,0x00,0x00
	.byte 0x79,0xdb,0x67,0x6c,0x5f,0x63,0x75,0x72
	.byte 0x72,0x65,0x6e,0x74,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x7a,0xc5
	.byte 0x67,0x6c,0x5f,0x64,0x65,0x70,0x74,0x68
	.byte 0x62,0x75,0x66,0x66,0x65,0x72,0x5f,0x61
	.byte 0x74,0x74,0x72,0x69,0x62,0x00,0x00,0x00
	.byte 0x7b,0x18,0x67,0x6c,0x5f,0x65,0x76,0x61
	.byte 0x6c,0x5f,0x61,0x74,0x74,0x72,0x69,0x62
	.byte 0x00,0x00,0x00,0x7d,0x8e,0x67,0x6c,0x5f
	.byte 0x66,0x6f,0x67,0x5f,0x61,0x74,0x74,0x72
	.byte 0x69,0x62,0x00,0x00,0x00,0x7e,0x07,0x67
	.byte 0x6c,0x5f,0x68,0x69,0x6e,0x74,0x5f,0x61
	.byte 0x74,0x74,0x72,0x69,0x62,0x00,0x00,0x00
	.byte 0x7e,0xda,0x67,0x6c,0x5f,0x6c,0x69,0x67
	.byte 0x68,0x74,0x00,0x00,0x00,0x81,0x81,0x67
	.byte 0x6c,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d
	.byte 0x6f,0x64,0x65,0x6c,0x00,0x00,0x00,0x82
	.byte 0x22,0x67,0x6c,0x5f,0x6d,0x61,0x74,0x65
	.byte 0x72,0x69,0x61,0x6c,0x00,0x00,0x00,0x83
	.byte 0x12,0x67,0x6c,0x5f,0x6c,0x69,0x67,0x68
	.byte 0x74,0x5f,0x61,0x74,0x74,0x72,0x69,0x62
	.byte 0x00,0x00,0x00,0x84,0x33,0x47,0x4c,0x75
	.byte 0x73,0x68,0x6f,0x72,0x74,0x00,0x00,0x00
	.byte 0x84,0x42,0x67,0x6c,0x5f,0x6c,0x69,0x6e
	.byte 0x65,0x5f,0x61,0x74,0x74,0x72,0x69,0x62
	.byte 0x00,0x00,0x00,0x84,0xbb,0x67,0x6c,0x5f
	.byte 0x6c,0x69,0x73,0x74,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x85,0xa1
	.byte 0x67,0x6c,0x5f,0x70,0x69,0x78,0x65,0x6c
	.byte 0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x00
	.byte 0x00,0x00,0x88,0x71,0x67,0x6c,0x5f,0x70
	.byte 0x6f,0x69,0x6e,0x74,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x88,0xea
	.byte 0x67,0x6c,0x5f,0x70,0x6f,0x6c,0x79,0x67
	.byte 0x6f,0x6e,0x5f,0x61,0x74,0x74,0x72,0x69
	.byte 0x62,0x00,0x00,0x00,0x8a,0x2e,0x47,0x4c
	.byte 0x73,0x69,0x7a,0x65,0x69,0x00,0x00,0x00
	.byte 0x8a,0x3c,0x67,0x6c,0x5f,0x73,0x63,0x69
	.byte 0x73,0x73,0x6f,0x72,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x8a,0x97
	.byte 0x67,0x6c,0x5f,0x73,0x74,0x65,0x6e,0x63
	.byte 0x69,0x6c,0x5f,0x61,0x74,0x74,0x72,0x69
	.byte 0x62,0x00,0x00,0x00,0x8b,0xf1,0x67,0x6c
	.byte 0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65
	.byte 0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x00
	.byte 0x00,0x00,0x8e,0x53,0x67,0x6c,0x5f,0x74
	.byte 0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d
	.byte 0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x00
	.byte 0x00,0x00,0x8e,0xcd,0x67,0x6c,0x5f,0x76
	.byte 0x69,0x65,0x77,0x70,0x6f,0x72,0x74,0x5f
	.byte 0x61,0x74,0x74,0x72,0x69,0x62,0x00,0x00
	.byte 0x00,0x8f,0x8a,0x67,0x6c,0x5f,0x61,0x72
	.byte 0x72,0x61,0x79,0x5f,0x61,0x74,0x74,0x72
	.byte 0x69,0x62,0x00,0x00,0x00,0x92,0x35,0x67
	.byte 0x6c,0x5f,0x70,0x69,0x78,0x65,0x6c,0x73
	.byte 0x74,0x6f,0x72,0x65,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x92,0xe9
	.byte 0x67,0x6c,0x5f,0x31,0x64,0x5f,0x6d,0x61
	.byte 0x70,0x00,0x00,0x00,0x93,0x3d,0x67,0x6c
	.byte 0x5f,0x32,0x64,0x5f,0x6d,0x61,0x70,0x00
	.byte 0x00,0x00,0x93,0xb7,0x67,0x6c,0x5f,0x65
	.byte 0x76,0x61,0x6c,0x75,0x61,0x74,0x6f,0x72
	.byte 0x73,0x00,0x00,0x00,0x95,0x41,0x67,0x6c
	.byte 0x5f,0x66,0x65,0x65,0x64,0x62,0x61,0x63
	.byte 0x6b,0x00,0x00,0x00,0x95,0xb6,0x67,0x6c
	.byte 0x5f,0x73,0x65,0x6c,0x65,0x63,0x74,0x69
	.byte 0x6f,0x6e,0x00,0x00,0x00,0x37,0x75,0x67
	.byte 0x6c,0x5f,0x63,0x6f,0x6e,0x74,0x65,0x78
	.byte 0x74,0x00,0x00,0x00,0x96,0x94,0x47,0x4c
	.byte 0x63,0x6f,0x6e,0x74,0x65,0x78,0x74,0x00
	.byte 0x00,0x00,0x96,0xcb,0x47,0x4c,0x62,0x79
	.byte 0x74,0x65,0x00,0x00,0x00,0x96,0xe2,0x47
	.byte 0x4c,0x73,0x68,0x6f,0x72,0x74,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x00
!  End sdCreateSection
