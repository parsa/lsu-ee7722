
	.section	".text",#alloc,#execinstr
	.align	8
	.skip	16

	! block 0

	.global	gl_LogicOp
	.type	gl_LogicOp,#function
gl_LogicOp:
	save	%sp,-96,%sp

	! block 1
.L13:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]

	! block 2
.L14:
.L16:
.L18:

! File logic.c:
!    1	/* $Id: logic.c,v 1.7 1997/07/24 01:24:11 brianp Exp $ */
!    2	
!    3	/*
!    4	 * Mesa 3-D graphics library
!    5	 * Version:  2.4
!    6	 * Copyright (C) 1995-1997  Brian Paul
!    7	 *
!    8	 * This library is free software; you can redistribute it and/or
!    9	 * modify it under the terms of the GNU Library General Public
!   10	 * License as published by the Free Software Foundation; either
!   11	 * version 2 of the License, or (at your option) any later version.
!   12	 *
!   13	 * This library is distributed in the hope that it will be useful,
!   14	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
!   15	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
!   16	 * Library General Public License for more details.
!   17	 *
!   18	 * You should have received a copy of the GNU Library General Public
!   19	 * License along with this library; if not, write to the Free
!   20	 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
!   21	 */
!   22	
!   24	/*
!   25	 * $Log: logic.c,v $
!   26	 * Revision 1.7  1997/07/24 01:24:11  brianp
!   27	 * changed precompiled header symbol from PCH to PC_HEADER
!   28	 *
!   29	 * Revision 1.6  1997/05/28 03:25:26  brianp
!   30	 * added precompiled header (PCH) support
!   31	 *
!   32	 * Revision 1.5  1997/04/20 20:28:49  brianp
!   33	 * replaced abort() with gl_problem()
!   34	 *
!   35	 * Revision 1.4  1997/03/04 18:56:57  brianp
!   36	 * added #include <stdlib.h> for abort()
!   37	 *
!   38	 * Revision 1.3  1997/01/28 22:16:31  brianp
!   39	 * added gl_logicop_rgba_span() and gl_logicop_rgba_pixels()
!   40	 *
!   41	 * Revision 1.2  1997/01/04 00:13:11  brianp
!   42	 * was using ! instead of ~ to invert pixel bits (ugh!)
!   43	 *
!   44	 * Revision 1.1  1996/09/13 01:38:16  brianp
!   45	 * Initial revision
!   46	 *
!   47	 */
!   48	
!   50	#ifdef PC_HEADER
!   51	#include "all.h"
!   52	#else
!   53	#include <stdlib.h>
!   54	#include "alphabuf.h"
!   55	#include "context.h"
!   56	#include "dlist.h"
!   57	#include "logic.h"
!   58	#include "macros.h"
!   59	#include "pb.h"
!   60	#include "span.h"
!   61	#include "types.h"
!   62	#endif
!   63	
!   66	void gl_LogicOp( GLcontext *ctx, GLenum opcode )
!   67	{
!   68	   if (INSIDE_BEGIN_END(ctx)) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe0fc),%l1
	or	%l1,%lo(0xe0fc),%l1
	ld	[%l0+%l1],%l1
	sethi	%hi(0x1a00),%l0
	or	%l0,%lo(0x1a00),%l0
	cmp	%l1,%l0
	be	.L17
	nop

	! block 3
.L19:
.L20:
.L21:
.L22:

!   69	      gl_error( ctx, GL_INVALID_OPERATION, "glLogicOp" );

	ld	[%fp+68],%l0
	sethi	%hi(.L23),%l1
	or	%l1,%lo(.L23),%l1
	mov	%l0,%o0
	mov	1282,%o1
	call	gl_error
	mov	%l1,%o2

	! block 4
.L24:

!   70	      return;

	ba	.L12
	nop

	! block 5
.L25:
.L26:
.L17:
.L27:
.L28:
.L31:

!   71	   }
!   72	   switch (opcode) {

	ba	.L30
	nop

	! block 6
.L32:
.L33:
.L34:
.L35:
.L36:
.L37:
.L38:
.L39:
.L40:
.L41:
.L42:
.L43:
.L44:
.L45:
.L46:
.L47:
.L48:
.L49:
.L50:

!   73	      case GL_CLEAR:
!   74	      case GL_SET:
!   75	      case GL_COPY:
!   76	      case GL_COPY_INVERTED:
!   77	      case GL_NOOP:
!   78	      case GL_INVERT:
!   79	      case GL_AND:
!   80	      case GL_NAND:
!   81	      case GL_OR:
!   82	      case GL_NOR:
!   83	      case GL_XOR:
!   84	      case GL_EQUIV:
!   85	      case GL_AND_REVERSE:
!   86	      case GL_AND_INVERTED:
!   87	      case GL_OR_REVERSE:
!   88	      case GL_OR_INVERTED:
!   89	         ctx->Color.LogicOp = opcode;

	ld	[%fp+72],%l2
	ld	[%fp+68],%l0
	sethi	%hi(0x1ecc),%l1
	or	%l1,%lo(0x1ecc),%l1
	st	%l2,[%l0+%l1]

	! block 7
.L51:

!   90	         ctx->NewState |= NEW_RASTER_OPS;

	ld	[%fp+68],%l0
	sethi	%hi(0xe0f4),%l1
	or	%l1,%lo(0xe0f4),%l1
	add	%l0,%l1,%l1
	ld	[%l1+0],%l0
	or	%l0,2,%l0
	st	%l0,[%l1+0]

	! block 8
.L52:

!   91		 return;

	ba	.L12
	nop

	! block 9
.L53:
.L54:

!   92	      default:
!   93	         gl_error( ctx, GL_INVALID_ENUM, "glLogicOp" );

	ld	[%fp+68],%l0
	sethi	%hi(.L55),%l1
	or	%l1,%lo(.L55),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 10
.L56:

!   94		 return;

	ba	.L12
	nop

	! block 11
.L57:
.L58:
.L30:
.L59:
	ld	[%fp+72],%l0
	sethi	%hi(0x1500),%l1
	or	%l1,%lo(0x1500),%l1
	sub	%l0,%l1,%l0
	cmp	%l0,15
	bgu	.L53
	nop

	! block 12
	sll	%l0,2,%l1
	sethi	%hi(.L_y0-64),%l0
	or	%l0,%lo(.L_y0-64),%l0
	ld	[%l0+%l1],%l0
	jmp	%l0
	nop

	! block 13
.L60:
.L61:

	! block 14
.L62:
.L63:
.L12:
	jmp	%i7+8
	restore
	.size	gl_LogicOp,(.-gl_LogicOp)

	.word	.L34
	.word	.L40
	.word	.L46
	.word	.L36
	.word	.L47
	.word	.L38
	.word	.L44
	.word	.L42
	.word	.L43
	.word	.L45
	.word	.L39
	.word	.L48
	.word	.L37
	.word	.L49
	.word	.L41
	.word	.L35
.L_y0:
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	gl_logicop_ci_span
	.type	gl_logicop_ci_span,#function
gl_logicop_ci_span:
	sethi	%hi(-6504),%g1
	or	%g1,%lo(-6504),%g1
	save	%sp,%g1,%sp

	! block 1
.L66:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]

	! block 2
.L67:
.L69:

! File logic.c:
!   95	   }
!   96	}
!   97	
!  101	/*
!  102	 * Apply the current logic operator to a span of CI pixels.  This is only
!  103	 * used if the device driver can't do logic ops.
!  104	 */
!  105	void gl_logicop_ci_span( GLcontext *ctx, GLuint n, GLint x, GLint y,
!  106	                         GLuint index[], GLubyte mask[] )
!  107	{
!  108	   GLuint dest[MAX_WIDTH];
!  109	   GLuint i;
!  110	
!  111	   /* Read dest values from frame buffer */
!  112	   (*ctx->Driver.ReadIndexSpan)( ctx, n, x, y, dest );

	ld	[%fp+68],%l1
	ld	[%l1+2276],%l4
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l0,%o4
	jmpl	%l4,%o7
	nop

	! block 3
.L70:
.L73:

!  114	   switch (ctx->Color.LogicOp) {

	ba	.L72
	nop

	! block 4
.L74:
.L75:
.L76:
.L77:
.L78:

!  115	      case GL_CLEAR:
!  116	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L81
	nop

	! block 5
.L82:
.L79:
.L83:
.L84:
.L85:
.L87:

!  117		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L86
	nop

	! block 6
.L88:
.L89:
.L90:
.L91:

!  118		       index[i] = 0;

	ld	[%fp+84],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l1
	st	%g0,[%l2+%l1]

	! block 7
.L92:
.L93:
.L86:
.L94:
.L95:
.L96:
.L97:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L79
	nop

	! block 8
.L98:
.L81:
.L99:
.L100:

!  119		    }
!  120		 }
!  121		 break;

	ba	.L71
	nop

	! block 9
.L101:
.L102:
.L103:

!  122	      case GL_SET:
!  123	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L106
	nop

	! block 10
.L107:
.L104:
.L108:
.L109:
.L110:
.L112:

!  124		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L111
	nop

	! block 11
.L113:
.L114:
.L115:
.L116:

!  125		       index[i] = 1;

	mov	1,%l3
	ld	[%fp+84],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l1
	st	%l3,[%l2+%l1]

	! block 12
.L117:
.L118:
.L111:
.L119:
.L120:
.L121:
.L122:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L104
	nop

	! block 13
.L123:
.L106:
.L124:
.L125:

!  126		    }
!  127		 }
!  128		 break;

	ba	.L71
	nop

	! block 14
.L126:
.L127:

!  129	      case GL_COPY:
!  130		 /* do nothing */
!  131		 break;

	ba	.L71
	nop

	! block 15
.L128:
.L129:
.L130:

!  132	      case GL_COPY_INVERTED:
!  133	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L133
	nop

	! block 16
.L134:
.L131:
.L135:
.L136:
.L137:
.L139:

!  134		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L138
	nop

	! block 17
.L140:
.L141:
.L142:
.L143:

!  135		       index[i] = ~index[i];

	ld	[%fp+84],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l1
	ld	[%l1+0],%l0
	not	%l0,%l0
	st	%l0,[%l1+0]

	! block 18
.L144:
.L145:
.L138:
.L146:
.L147:
.L148:
.L149:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L131
	nop

	! block 19
.L150:
.L133:
.L151:
.L152:

!  136		    }
!  137		 }
!  138		 break;

	ba	.L71
	nop

	! block 20
.L153:
.L154:
.L155:

!  139	      case GL_NOOP:
!  140	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L158
	nop

	! block 21
.L159:
.L156:
.L160:
.L161:
.L162:
.L164:

!  141		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L163
	nop

	! block 22
.L165:
.L166:
.L167:
.L168:

!  142		       index[i] = dest[i];

	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l1
	ld	[%fp+84],%l0
	st	%l1,[%l0+%l2]

	! block 23
.L169:
.L170:
.L163:
.L171:
.L172:
.L173:
.L174:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L156
	nop

	! block 24
.L175:
.L158:
.L176:
.L177:

!  143		    }
!  144		 }
!  145		 break;

	ba	.L71
	nop

	! block 25
.L178:
.L179:
.L180:

!  146	      case GL_INVERT:
!  147	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L183
	nop

	! block 26
.L184:
.L181:
.L185:
.L186:
.L187:
.L189:

!  148		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L188
	nop

	! block 27
.L190:
.L191:
.L192:
.L193:

!  149		       index[i] = ~dest[i];

	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	not	%l0,%l1
	ld	[%fp+84],%l0
	st	%l1,[%l0+%l2]

	! block 28
.L194:
.L195:
.L188:
.L196:
.L197:
.L198:
.L199:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L181
	nop

	! block 29
.L200:
.L183:
.L201:
.L202:

!  150		    }
!  151		 }
!  152		 break;

	ba	.L71
	nop

	! block 30
.L203:
.L204:
.L205:

!  153	      case GL_AND:
!  154	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L208
	nop

	! block 31
.L209:
.L206:
.L210:
.L211:
.L212:
.L214:

!  155		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L213
	nop

	! block 32
.L215:
.L216:
.L217:
.L218:

!  156		       index[i] &= dest[i];

	ld	[%fp+84],%l3
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-264,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ld	[%l5+0],%l4
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l3
	ld	[%fp+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l1
	and	%l4,%l1,%l0
	st	%l0,[%l5+0]

	! block 33
.L219:
.L220:
.L213:
.L221:
.L222:
.L223:
.L224:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L206
	nop

	! block 34
.L225:
.L208:
.L226:
.L227:

!  157		    }
!  158		 }
!  159		 break;

	ba	.L71
	nop

	! block 35
.L228:
.L229:
.L230:

!  160	      case GL_NAND:
!  161	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L233
	nop

	! block 36
.L234:
.L231:
.L235:
.L236:
.L237:
.L239:

!  162		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L238
	nop

	! block 37
.L240:
.L241:
.L242:
.L243:

!  163		       index[i] = ~(index[i] & dest[i]);

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	not	%l0,%l0
	st	%l0,[%l5+0]

	! block 38
.L244:
.L245:
.L238:
.L246:
.L247:
.L248:
.L249:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L231
	nop

	! block 39
.L250:
.L233:
.L251:
.L252:

!  164		    }
!  165		 }
!  166		 break;

	ba	.L71
	nop

	! block 40
.L253:
.L254:
.L255:

!  167	      case GL_OR:
!  168	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L258
	nop

	! block 41
.L259:
.L256:
.L260:
.L261:
.L262:
.L264:

!  169		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L263
	nop

	! block 42
.L265:
.L266:
.L267:
.L268:

!  170		       index[i] |= dest[i];

	ld	[%fp+84],%l3
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-264,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ld	[%l5+0],%l4
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l3
	ld	[%fp+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l1
	or	%l4,%l1,%l0
	st	%l0,[%l5+0]

	! block 43
.L269:
.L270:
.L263:
.L271:
.L272:
.L273:
.L274:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L256
	nop

	! block 44
.L275:
.L258:
.L276:
.L277:

!  171		    }
!  172		 }
!  173		 break;

	ba	.L71
	nop

	! block 45
.L278:
.L279:
.L280:

!  174	      case GL_NOR:
!  175	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L283
	nop

	! block 46
.L284:
.L281:
.L285:
.L286:
.L287:
.L289:

!  176		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L288
	nop

	! block 47
.L290:
.L291:
.L292:
.L293:

!  177		       index[i] = ~(index[i] | dest[i]);

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	not	%l0,%l0
	st	%l0,[%l5+0]

	! block 48
.L294:
.L295:
.L288:
.L296:
.L297:
.L298:
.L299:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L281
	nop

	! block 49
.L300:
.L283:
.L301:
.L302:

!  178		    }
!  179		 }
!  180		 break;

	ba	.L71
	nop

	! block 50
.L303:
.L304:
.L305:

!  181	      case GL_XOR:
!  182	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L308
	nop

	! block 51
.L309:
.L306:
.L310:
.L311:
.L312:
.L314:

!  183		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L313
	nop

	! block 52
.L315:
.L316:
.L317:
.L318:

!  184		       index[i] ^= dest[i];

	ld	[%fp+84],%l3
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-264,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ld	[%l5+0],%l4
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l3
	ld	[%fp+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l1
	xor	%l4,%l1,%l0
	st	%l0,[%l5+0]

	! block 53
.L319:
.L320:
.L313:
.L321:
.L322:
.L323:
.L324:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L306
	nop

	! block 54
.L325:
.L308:
.L326:
.L327:

!  185		    }
!  186		 }
!  187		 break;

	ba	.L71
	nop

	! block 55
.L328:
.L329:
.L330:

!  188	      case GL_EQUIV:
!  189	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L333
	nop

	! block 56
.L334:
.L331:
.L335:
.L336:
.L337:
.L339:

!  190		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L338
	nop

	! block 57
.L340:
.L341:
.L342:
.L343:

!  191		       index[i] = ~(index[i] ^ dest[i]);

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l1
	xor	%l3,%l1,%l0
	not	%l0,%l0
	st	%l0,[%l5+0]

	! block 58
.L344:
.L345:
.L338:
.L346:
.L347:
.L348:
.L349:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L331
	nop

	! block 59
.L350:
.L333:
.L351:
.L352:

!  192		    }
!  193		 }
!  194		 break;

	ba	.L71
	nop

	! block 60
.L353:
.L354:
.L355:

!  195	      case GL_AND_REVERSE:
!  196	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L358
	nop

	! block 61
.L359:
.L356:
.L360:
.L361:
.L362:
.L364:

!  197		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L363
	nop

	! block 62
.L365:
.L366:
.L367:
.L368:

!  198		       index[i] = index[i] & ~dest[i];

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l0
	not	%l0,%l1
	and	%l3,%l1,%l0
	st	%l0,[%l5+0]

	! block 63
.L369:
.L370:
.L363:
.L371:
.L372:
.L373:
.L374:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L356
	nop

	! block 64
.L375:
.L358:
.L376:
.L377:

!  199		    }
!  200		 }
!  201		 break;

	ba	.L71
	nop

	! block 65
.L378:
.L379:
.L380:

!  202	      case GL_AND_INVERTED:
!  203	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L383
	nop

	! block 66
.L384:
.L381:
.L385:
.L386:
.L387:
.L389:

!  204		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L388
	nop

	! block 67
.L390:
.L391:
.L392:
.L393:

!  205		       index[i] = ~index[i] & dest[i];

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	st	%l0,[%l5+0]

	! block 68
.L394:
.L395:
.L388:
.L396:
.L397:
.L398:
.L399:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L381
	nop

	! block 69
.L400:
.L383:
.L401:
.L402:

!  206		    }
!  207		 }
!  208		 break;

	ba	.L71
	nop

	! block 70
.L403:
.L404:
.L405:

!  209	      case GL_OR_REVERSE:
!  210	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L408
	nop

	! block 71
.L409:
.L406:
.L410:
.L411:
.L412:
.L414:

!  211		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L413
	nop

	! block 72
.L415:
.L416:
.L417:
.L418:

!  212		       index[i] = index[i] | ~dest[i];

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l0
	not	%l0,%l1
	or	%l3,%l1,%l0
	st	%l0,[%l5+0]

	! block 73
.L419:
.L420:
.L413:
.L421:
.L422:
.L423:
.L424:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L406
	nop

	! block 74
.L425:
.L408:
.L426:
.L427:

!  213		    }
!  214		 }
!  215		 break;

	ba	.L71
	nop

	! block 75
.L428:
.L429:
.L430:

!  216	      case GL_OR_INVERTED:
!  217	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L433
	nop

	! block 76
.L434:
.L431:
.L435:
.L436:
.L437:
.L439:

!  218		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L438
	nop

	! block 77
.L440:
.L441:
.L442:
.L443:

!  219		       index[i] = ~index[i] | dest[i];

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	st	%l0,[%l5+0]

	! block 78
.L444:
.L445:
.L438:
.L446:
.L447:
.L448:
.L449:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L431
	nop

	! block 79
.L450:
.L433:
.L451:
.L452:

!  220		    }
!  221		 }
!  222		 break;

	ba	.L71
	nop

	! block 80
.L453:
.L454:

!  223	      default:
!  224		 gl_error( ctx, GL_INVALID_ENUM, "gl_logic error" );

	ld	[%fp+68],%l0
	sethi	%hi(.L455),%l1
	or	%l1,%lo(.L455),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 81
.L456:
.L457:
	ba	.L71
	nop

	! block 82
.L72:
.L458:
	ld	[%fp+68],%l0
	sethi	%hi(0x1ecc),%l1
	or	%l1,%lo(0x1ecc),%l1
	ld	[%l0+%l1],%l0
	sethi	%hi(0x1500),%l1
	or	%l1,%lo(0x1500),%l1
	sub	%l0,%l1,%l0
	cmp	%l0,15
	bgu	.L453
	nop

	! block 83
	sll	%l0,2,%l1
	sethi	%hi(.L_y1-64),%l0
	or	%l0,%lo(.L_y1-64),%l0
	ld	[%l0+%l1],%l0
	jmp	%l0
	nop

	! block 84
.L459:
.L71:
.L460:

	! block 85
.L461:
.L462:
.L65:
	jmp	%i7+8
	restore
	.size	gl_logicop_ci_span,(.-gl_logicop_ci_span)

	.word	.L76
	.word	.L203
	.word	.L353
	.word	.L126
	.word	.L378
	.word	.L153
	.word	.L303
	.word	.L253
	.word	.L278
	.word	.L328
	.word	.L178
	.word	.L403
	.word	.L128
	.word	.L428
	.word	.L228
	.word	.L101
.L_y1:
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	gl_logicop_ci_pixels
	.type	gl_logicop_ci_pixels,#function
gl_logicop_ci_pixels:
	sethi	%hi(-19304),%g1
	or	%g1,%lo(-19304),%g1
	save	%sp,%g1,%sp

	! block 1
.L465:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]

	! block 2
.L466:
.L468:

! File logic.c:
!  225	   }
!  226	}
!  227	
!  230	/*
!  231	 * Apply the current logic operator to an array of CI pixels.  This is only
!  232	 * used if the device driver can't do logic ops.
!  233	 */
!  234	void gl_logicop_ci_pixels( GLcontext *ctx,
!  235	                           GLuint n, const GLint x[], const GLint y[],
!  236	                           GLuint index[], GLubyte mask[] )
!  237	{
!  238	   GLuint dest[PB_SIZE];
!  239	   GLuint i;
!  240	
!  241	   /* Read dest values from frame buffer */
!  242	   (*ctx->Driver.ReadIndexPixels)( ctx, n, x, y, dest, mask );

	ld	[%fp+68],%l1
	ld	[%l1+2284],%l6
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%fp+88],%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l0,%o4
	mov	%l4,%o5
	jmpl	%l6,%o7
	nop

	! block 3
.L469:
.L472:

!  244	   switch (ctx->Color.LogicOp) {

	ba	.L471
	nop

	! block 4
.L473:
.L474:
.L475:
.L476:
.L477:

!  245	      case GL_CLEAR:
!  246	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L480
	nop

	! block 5
.L481:
.L478:
.L482:
.L483:
.L484:
.L486:

!  247		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L485
	nop

	! block 6
.L487:
.L488:
.L489:
.L490:

!  248		       index[i] = 0;

	ld	[%fp+84],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l1
	st	%g0,[%l2+%l1]

	! block 7
.L491:
.L492:
.L485:
.L493:
.L494:
.L495:
.L496:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L478
	nop

	! block 8
.L497:
.L480:
.L498:
.L499:

!  249		    }
!  250		 }
!  251		 break;

	ba	.L470
	nop

	! block 9
.L500:
.L501:
.L502:

!  252	      case GL_SET:
!  253	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L505
	nop

	! block 10
.L506:
.L503:
.L507:
.L508:
.L509:
.L511:

!  254		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L510
	nop

	! block 11
.L512:
.L513:
.L514:
.L515:

!  255		       index[i] = 1;

	mov	1,%l3
	ld	[%fp+84],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l1
	st	%l3,[%l2+%l1]

	! block 12
.L516:
.L517:
.L510:
.L518:
.L519:
.L520:
.L521:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L503
	nop

	! block 13
.L522:
.L505:
.L523:
.L524:

!  256		    }
!  257		 }
!  258		 break;

	ba	.L470
	nop

	! block 14
.L525:
.L526:

!  259	      case GL_COPY:
!  260		 /* do nothing */
!  261		 break;

	ba	.L470
	nop

	! block 15
.L527:
.L528:
.L529:

!  262	      case GL_COPY_INVERTED:
!  263	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L532
	nop

	! block 16
.L533:
.L530:
.L534:
.L535:
.L536:
.L538:

!  264		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L537
	nop

	! block 17
.L539:
.L540:
.L541:
.L542:

!  265		       index[i] = ~index[i];

	ld	[%fp+84],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l1
	add	%l2,%l1,%l1
	ld	[%l1+0],%l0
	not	%l0,%l0
	st	%l0,[%l1+0]

	! block 18
.L543:
.L544:
.L537:
.L545:
.L546:
.L547:
.L548:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L530
	nop

	! block 19
.L549:
.L532:
.L550:
.L551:

!  266		    }
!  267		 }
!  268		 break;

	ba	.L470
	nop

	! block 20
.L552:
.L553:
.L554:

!  269	      case GL_NOOP:
!  270	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L557
	nop

	! block 21
.L558:
.L555:
.L559:
.L560:
.L561:
.L563:

!  271		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L562
	nop

	! block 22
.L564:
.L565:
.L566:
.L567:

!  272		       index[i] = dest[i];

	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l1
	ld	[%fp+84],%l0
	st	%l1,[%l0+%l2]

	! block 23
.L568:
.L569:
.L562:
.L570:
.L571:
.L572:
.L573:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L555
	nop

	! block 24
.L574:
.L557:
.L575:
.L576:

!  273		    }
!  274		 }
!  275		 break;

	ba	.L470
	nop

	! block 25
.L577:
.L578:
.L579:

!  276	      case GL_INVERT:
!  277	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L582
	nop

	! block 26
.L583:
.L580:
.L584:
.L585:
.L586:
.L588:

!  278		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L587
	nop

	! block 27
.L589:
.L590:
.L591:
.L592:

!  279		       index[i] = ~dest[i];

	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	ld	[%l1+%l2],%l0
	not	%l0,%l1
	ld	[%fp+84],%l0
	st	%l1,[%l0+%l2]

	! block 28
.L593:
.L594:
.L587:
.L595:
.L596:
.L597:
.L598:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L580
	nop

	! block 29
.L599:
.L582:
.L600:
.L601:

!  280		    }
!  281		 }
!  282		 break;

	ba	.L470
	nop

	! block 30
.L602:
.L603:
.L604:

!  283	      case GL_AND:
!  284	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L607
	nop

	! block 31
.L608:
.L605:
.L609:
.L610:
.L611:
.L613:

!  285		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L612
	nop

	! block 32
.L614:
.L615:
.L616:
.L617:

!  286		       index[i] &= dest[i];

	ld	[%fp+84],%l3
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-776,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ld	[%l5+0],%l4
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l3
	ld	[%fp+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l1
	and	%l4,%l1,%l0
	st	%l0,[%l5+0]

	! block 33
.L618:
.L619:
.L612:
.L620:
.L621:
.L622:
.L623:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L605
	nop

	! block 34
.L624:
.L607:
.L625:
.L626:

!  287		    }
!  288		 }
!  289		 break;

	ba	.L470
	nop

	! block 35
.L627:
.L628:
.L629:

!  290	      case GL_NAND:
!  291	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L632
	nop

	! block 36
.L633:
.L630:
.L634:
.L635:
.L636:
.L638:

!  292		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L637
	nop

	! block 37
.L639:
.L640:
.L641:
.L642:

!  293		       index[i] = ~(index[i] & dest[i]);

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	not	%l0,%l0
	st	%l0,[%l5+0]

	! block 38
.L643:
.L644:
.L637:
.L645:
.L646:
.L647:
.L648:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L630
	nop

	! block 39
.L649:
.L632:
.L650:
.L651:

!  294		    }
!  295		 }
!  296		 break;

	ba	.L470
	nop

	! block 40
.L652:
.L653:
.L654:

!  297	      case GL_OR:
!  298	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L657
	nop

	! block 41
.L658:
.L655:
.L659:
.L660:
.L661:
.L663:

!  299		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L662
	nop

	! block 42
.L664:
.L665:
.L666:
.L667:

!  300		       index[i] |= dest[i];

	ld	[%fp+84],%l3
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-776,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ld	[%l5+0],%l4
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l3
	ld	[%fp+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l1
	or	%l4,%l1,%l0
	st	%l0,[%l5+0]

	! block 43
.L668:
.L669:
.L662:
.L670:
.L671:
.L672:
.L673:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L655
	nop

	! block 44
.L674:
.L657:
.L675:
.L676:

!  301		    }
!  302		 }
!  303		 break;

	ba	.L470
	nop

	! block 45
.L677:
.L678:
.L679:

!  304	      case GL_NOR:
!  305	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L682
	nop

	! block 46
.L683:
.L680:
.L684:
.L685:
.L686:
.L688:

!  306		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L687
	nop

	! block 47
.L689:
.L690:
.L691:
.L692:

!  307		       index[i] = ~(index[i] | dest[i]);

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	not	%l0,%l0
	st	%l0,[%l5+0]

	! block 48
.L693:
.L694:
.L687:
.L695:
.L696:
.L697:
.L698:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L680
	nop

	! block 49
.L699:
.L682:
.L700:
.L701:

!  308		    }
!  309		 }
!  310		 break;

	ba	.L470
	nop

	! block 50
.L702:
.L703:
.L704:

!  311	      case GL_XOR:
!  312	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L707
	nop

	! block 51
.L708:
.L705:
.L709:
.L710:
.L711:
.L713:

!  313		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L712
	nop

	! block 52
.L714:
.L715:
.L716:
.L717:

!  314		       index[i] ^= dest[i];

	ld	[%fp+84],%l3
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l0
	sll	%l0,2,%l1
	add	%l3,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-776,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ld	[%l5+0],%l4
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l3
	ld	[%fp+%l2],%l0
	sll	%l0,2,%l1
	ld	[%l3+%l1],%l1
	xor	%l4,%l1,%l0
	st	%l0,[%l5+0]

	! block 53
.L718:
.L719:
.L712:
.L720:
.L721:
.L722:
.L723:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L705
	nop

	! block 54
.L724:
.L707:
.L725:
.L726:

!  315		    }
!  316		 }
!  317		 break;

	ba	.L470
	nop

	! block 55
.L727:
.L728:
.L729:

!  318	      case GL_EQUIV:
!  319	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L732
	nop

	! block 56
.L733:
.L730:
.L734:
.L735:
.L736:
.L738:

!  320		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L737
	nop

	! block 57
.L739:
.L740:
.L741:
.L742:

!  321		       index[i] = ~(index[i] ^ dest[i]);

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l1
	xor	%l3,%l1,%l0
	not	%l0,%l0
	st	%l0,[%l5+0]

	! block 58
.L743:
.L744:
.L737:
.L745:
.L746:
.L747:
.L748:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L730
	nop

	! block 59
.L749:
.L732:
.L750:
.L751:

!  322		    }
!  323		 }
!  324		 break;

	ba	.L470
	nop

	! block 60
.L752:
.L753:
.L754:

!  325	      case GL_AND_REVERSE:
!  326	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L757
	nop

	! block 61
.L758:
.L755:
.L759:
.L760:
.L761:
.L763:

!  327		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L762
	nop

	! block 62
.L764:
.L765:
.L766:
.L767:

!  328		       index[i] = index[i] & ~dest[i];

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l0
	not	%l0,%l1
	and	%l3,%l1,%l0
	st	%l0,[%l5+0]

	! block 63
.L768:
.L769:
.L762:
.L770:
.L771:
.L772:
.L773:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L755
	nop

	! block 64
.L774:
.L757:
.L775:
.L776:

!  329		    }
!  330		 }
!  331		 break;

	ba	.L470
	nop

	! block 65
.L777:
.L778:
.L779:

!  332	      case GL_AND_INVERTED:
!  333	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L782
	nop

	! block 66
.L783:
.L780:
.L784:
.L785:
.L786:
.L788:

!  334		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L787
	nop

	! block 67
.L789:
.L790:
.L791:
.L792:

!  335		       index[i] = ~index[i] & dest[i];

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	st	%l0,[%l5+0]

	! block 68
.L793:
.L794:
.L787:
.L795:
.L796:
.L797:
.L798:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L780
	nop

	! block 69
.L799:
.L782:
.L800:
.L801:

!  336		    }
!  337		 }
!  338		 break;

	ba	.L470
	nop

	! block 70
.L802:
.L803:
.L804:

!  339	      case GL_OR_REVERSE:
!  340	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L807
	nop

	! block 71
.L808:
.L805:
.L809:
.L810:
.L811:
.L813:

!  341		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L812
	nop

	! block 72
.L814:
.L815:
.L816:
.L817:

!  342		       index[i] = index[i] | ~dest[i];

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l0
	not	%l0,%l1
	or	%l3,%l1,%l0
	st	%l0,[%l5+0]

	! block 73
.L818:
.L819:
.L812:
.L820:
.L821:
.L822:
.L823:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L805
	nop

	! block 74
.L824:
.L807:
.L825:
.L826:

!  343		    }
!  344		 }
!  345		 break;

	ba	.L470
	nop

	! block 75
.L827:
.L828:
.L829:

!  346	      case GL_OR_INVERTED:
!  347	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L832
	nop

	! block 76
.L833:
.L830:
.L834:
.L835:
.L836:
.L838:

!  348		    if (mask[i]) {

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L837
	nop

	! block 77
.L839:
.L840:
.L841:
.L842:

!  349		       index[i] = ~index[i] | dest[i];

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l0
	sll	%l0,2,%l2
	add	%l1,%l2,%l5
	ld	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	st	%l0,[%l5+0]

	! block 78
.L843:
.L844:
.L837:
.L845:
.L846:
.L847:
.L848:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L830
	nop

	! block 79
.L849:
.L832:
.L850:
.L851:

!  350		    }
!  351		 }
!  352		 break;

	ba	.L470
	nop

	! block 80
.L852:
.L853:

!  353	      default:
!  354		 gl_error( ctx, GL_INVALID_ENUM, "gl_logic_pixels error" );

	ld	[%fp+68],%l0
	sethi	%hi(.L854),%l1
	or	%l1,%lo(.L854),%l1
	mov	%l0,%o0
	mov	1280,%o1
	call	gl_error
	mov	%l1,%o2

	! block 81
.L855:
.L856:
	ba	.L470
	nop

	! block 82
.L471:
.L857:
	ld	[%fp+68],%l0
	sethi	%hi(0x1ecc),%l1
	or	%l1,%lo(0x1ecc),%l1
	ld	[%l0+%l1],%l0
	sethi	%hi(0x1500),%l1
	or	%l1,%lo(0x1500),%l1
	sub	%l0,%l1,%l0
	cmp	%l0,15
	bgu	.L852
	nop

	! block 83
	sll	%l0,2,%l1
	sethi	%hi(.L_y2-64),%l0
	or	%l0,%lo(.L_y2-64),%l0
	ld	[%l0+%l1],%l0
	jmp	%l0
	nop

	! block 84
.L858:
.L470:
.L859:

	! block 85
.L860:
.L861:
.L464:
	jmp	%i7+8
	restore
	.size	gl_logicop_ci_pixels,(.-gl_logicop_ci_pixels)

	.word	.L475
	.word	.L602
	.word	.L752
	.word	.L525
	.word	.L777
	.word	.L552
	.word	.L702
	.word	.L652
	.word	.L677
	.word	.L727
	.word	.L577
	.word	.L802
	.word	.L527
	.word	.L827
	.word	.L627
	.word	.L500
.L_y2:
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	gl_logicop_rgba_span
	.type	gl_logicop_rgba_span,#function
gl_logicop_rgba_span:
	sethi	%hi(-6528),%g1
	or	%g1,%lo(-6528),%g1
	save	%sp,%g1,%sp

	! block 1
.L864:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]
	ld	[%fp+100],%l0
	st	%l0,[%fp+100]

	! block 2
.L865:
.L867:

! File logic.c:
!  355	   }
!  356	}
!  357	
!  360	/*
!  361	 * Apply the current logic operator to a span of RGBA pixels.  This is only
!  362	 * used if the device driver can't do logic ops.
!  363	 */
!  364	void gl_logicop_rgba_span( GLcontext *ctx,
!  365	                           GLuint n, GLint x, GLint y,
!  366	                           GLubyte red[], GLubyte green[],
!  367	                           GLubyte blue[], GLubyte alpha[],
!  368	                           GLubyte mask[] )
!  369	{
!  370	   GLubyte rdest[MAX_WIDTH], gdest[MAX_WIDTH];
!  371	   GLubyte bdest[MAX_WIDTH], adest[MAX_WIDTH];
!  372	   GLuint i;
!  373	
!  374	   /* Read span of current frame buffer pixels */
!  375	   gl_read_color_span( ctx, n, x, y, rdest, gdest, bdest, adest );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	add	%fp,-1600,%l6
	add	%fp,-3200,%l7
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%i0
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	call	gl_read_color_span
	st	%l0,[%sp+96]

	! block 3
.L868:
.L871:

!  377	   /* apply logic op */
!  378	   switch (ctx->Color.LogicOp) {

	ba	.L870
	nop

	! block 4
.L872:
.L873:
.L874:
.L875:
.L876:

!  379	      case GL_CLEAR:
!  380	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L879
	nop

	! block 5
.L880:
.L877:
.L881:
.L882:
.L883:
.L885:

!  381	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L884
	nop

	! block 6
.L886:
.L887:
.L888:
.L889:

!  382	               red[i] = green[i] = blue[i] = alpha[i] = 0;

	ld	[%fp+96],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	stb	%g0,[%l0+%l1]
	ld	[%fp+92],%l0
	ld	[%fp+%l2],%l1
	stb	%g0,[%l0+%l1]
	ld	[%fp+88],%l0
	ld	[%fp+%l2],%l1
	stb	%g0,[%l0+%l1]
	ld	[%fp+84],%l0
	ld	[%fp+%l2],%l1
	stb	%g0,[%l0+%l1]

	! block 7
.L890:
.L891:
.L884:
.L892:
.L893:
.L894:
.L895:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L877
	nop

	! block 8
.L896:
.L879:
.L897:
.L898:

!  383	            }
!  384	         }
!  385	         break;

	ba	.L869
	nop

	! block 9
.L899:
.L900:
.L901:

!  386	      case GL_SET:
!  387	         {
!  388	            GLubyte r = (GLint) ctx->Visual->RedScale;

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+4],%f4
	fstoi	%f4,%f4
	sethi	0x6,%l0
	xor	%l0,-280,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x6,%l0
	xor	%l0,-261,%l0
	stb	%l1,[%fp+%l0]

	! block 10
.L902:

!  389	            GLubyte g = (GLint) ctx->Visual->GreenScale;

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+8],%f4
	fstoi	%f4,%f4
	sethi	0x6,%l0
	xor	%l0,-280,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x6,%l0
	xor	%l0,-262,%l0
	stb	%l1,[%fp+%l0]

	! block 11
.L903:

!  390	            GLubyte b = (GLint) ctx->Visual->BlueScale;

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+12],%f4
	fstoi	%f4,%f4
	sethi	0x6,%l0
	xor	%l0,-280,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x6,%l0
	xor	%l0,-263,%l0
	stb	%l1,[%fp+%l0]

	! block 12
.L904:

!  391	            GLubyte a = (GLint) ctx->Visual->AlphaScale;

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+16],%f4
	fstoi	%f4,%f4
	sethi	0x6,%l0
	xor	%l0,-280,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x6,%l0
	xor	%l0,-264,%l0
	stb	%l1,[%fp+%l0]

	! block 13
.L905:
.L906:

!  392	            for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L909
	nop

	! block 14
.L910:
.L907:
.L911:
.L912:
.L913:
.L915:

!  393	               if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L914
	nop

	! block 15
.L916:
.L917:
.L918:
.L919:

!  394	                  red[i]   = r;

	sethi	0x6,%l0
	xor	%l0,-261,%l0
	ldub	[%fp+%l0],%l3
	ld	[%fp+84],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	stb	%l3,[%l2+%l1]

	! block 16
.L920:

!  395	                  green[i] = g;

	sethi	0x6,%l0
	xor	%l0,-262,%l0
	ldub	[%fp+%l0],%l3
	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	stb	%l3,[%l2+%l1]

	! block 17
.L921:

!  396	                  blue[i]  = b;

	sethi	0x6,%l0
	xor	%l0,-263,%l0
	ldub	[%fp+%l0],%l3
	ld	[%fp+92],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	stb	%l3,[%l2+%l1]

	! block 18
.L922:

!  397	                  alpha[i] = a;

	sethi	0x6,%l0
	xor	%l0,-264,%l0
	ldub	[%fp+%l0],%l3
	ld	[%fp+96],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	stb	%l3,[%l2+%l1]

	! block 19
.L923:
.L924:
.L914:
.L925:
.L926:
.L927:
.L928:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L907
	nop

	! block 20
.L929:
.L909:
.L930:
.L931:
.L932:

!  398	               }
!  399	            }
!  400	         }
!  401	         break;

	ba	.L869
	nop

	! block 21
.L933:
.L934:

!  402	      case GL_COPY:
!  403	         /* do nothing */
!  404	         break;

	ba	.L869
	nop

	! block 22
.L935:
.L936:
.L937:

!  405	      case GL_COPY_INVERTED:
!  406	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L940
	nop

	! block 23
.L941:
.L938:
.L942:
.L943:
.L944:
.L946:

!  407	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L945
	nop

	! block 24
.L947:
.L948:
.L949:
.L950:

!  408	               red[i]   = ~red[i];

	ld	[%fp+84],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	add	%l2,%l1,%l1
	ldub	[%l1+0],%l0
	not	%l0,%l0
	stb	%l0,[%l1+0]

	! block 25
.L951:

!  409	               green[i] = ~green[i];

	ld	[%fp+88],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	add	%l2,%l1,%l1
	ldub	[%l1+0],%l0
	not	%l0,%l0
	stb	%l0,[%l1+0]

	! block 26
.L952:

!  410	               blue[i]  = ~blue[i];

	ld	[%fp+92],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	add	%l2,%l1,%l1
	ldub	[%l1+0],%l0
	not	%l0,%l0
	stb	%l0,[%l1+0]

	! block 27
.L953:

!  411	               alpha[i] = ~alpha[i];

	ld	[%fp+96],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	add	%l2,%l1,%l1
	ldub	[%l1+0],%l0
	not	%l0,%l0
	stb	%l0,[%l1+0]

	! block 28
.L954:
.L955:
.L945:
.L956:
.L957:
.L958:
.L959:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L938
	nop

	! block 29
.L960:
.L940:
.L961:
.L962:

!  412	            }
!  413	         }
!  414	         break;

	ba	.L869
	nop

	! block 30
.L963:
.L964:
.L965:

!  415	      case GL_NOOP:
!  416	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L968
	nop

	! block 31
.L969:
.L966:
.L970:
.L971:
.L972:
.L974:

!  417	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L973
	nop

	! block 32
.L975:
.L976:
.L977:
.L978:

!  418	               red[i]   = rdest[i];

	add	%fp,-1600,%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l1
	ld	[%fp+84],%l0
	stb	%l1,[%l0+%l2]

	! block 33
.L979:

!  419	               green[i] = gdest[i];

	add	%fp,-3200,%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l1
	ld	[%fp+88],%l0
	stb	%l1,[%l0+%l2]

	! block 34
.L980:

!  420	               blue[i]  = bdest[i];

	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l1
	ld	[%fp+92],%l0
	stb	%l1,[%l0+%l2]

	! block 35
.L981:

!  421	               alpha[i] = adest[i];

	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l1
	ld	[%fp+96],%l0
	stb	%l1,[%l0+%l2]

	! block 36
.L982:
.L983:
.L973:
.L984:
.L985:
.L986:
.L987:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L966
	nop

	! block 37
.L988:
.L968:
.L989:
.L990:

!  422	            }
!  423	         }
!  424	         break;

	ba	.L869
	nop

	! block 38
.L991:
.L992:
.L993:

!  425	      case GL_INVERT:
!  426	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L996
	nop

	! block 39
.L997:
.L994:
.L998:
.L999:
.L1000:
.L1002:

!  427	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1001
	nop

	! block 40
.L1003:
.L1004:
.L1005:
.L1006:

!  428	               red[i]   = ~rdest[i];

	add	%fp,-1600,%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l0
	not	%l0,%l1
	ld	[%fp+84],%l0
	stb	%l1,[%l0+%l2]

	! block 41
.L1007:

!  429	               green[i] = ~gdest[i];

	add	%fp,-3200,%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l0
	not	%l0,%l1
	ld	[%fp+88],%l0
	stb	%l1,[%l0+%l2]

	! block 42
.L1008:

!  430	               blue[i]  = ~bdest[i];

	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l0
	not	%l0,%l1
	ld	[%fp+92],%l0
	stb	%l1,[%l0+%l2]

	! block 43
.L1009:

!  431	               alpha[i] = ~adest[i];

	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l0
	not	%l0,%l1
	ld	[%fp+96],%l0
	stb	%l1,[%l0+%l2]

	! block 44
.L1010:
.L1011:
.L1001:
.L1012:
.L1013:
.L1014:
.L1015:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L994
	nop

	! block 45
.L1016:
.L996:
.L1017:
.L1018:

!  432	            }
!  433	         }
!  434	         break;

	ba	.L869
	nop

	! block 46
.L1019:
.L1020:
.L1021:

!  435	      case GL_AND:
!  436	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1024
	nop

	! block 47
.L1025:
.L1022:
.L1026:
.L1027:
.L1028:
.L1030:

!  437	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1029
	nop

	! block 48
.L1031:
.L1032:
.L1033:
.L1034:

!  438	               red[i]   &= rdest[i];

	ld	[%fp+84],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-264,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	add	%fp,-1600,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 49
.L1035:

!  439	               green[i] &= gdest[i];

	ld	[%fp+88],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-268,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	add	%fp,-3200,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 50
.L1036:

!  440	               blue[i]  &= bdest[i];

	ld	[%fp+92],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-272,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 51
.L1037:

!  441	               alpha[i] &= adest[i];

	ld	[%fp+96],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-276,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 52
.L1038:
.L1039:
.L1029:
.L1040:
.L1041:
.L1042:
.L1043:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1022
	nop

	! block 53
.L1044:
.L1024:
.L1045:
.L1046:

!  442	            }
!  443	         }
!  444	         break;

	ba	.L869
	nop

	! block 54
.L1047:
.L1048:
.L1049:

!  445	      case GL_NAND:
!  446	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1052
	nop

	! block 55
.L1053:
.L1050:
.L1054:
.L1055:
.L1056:
.L1058:

!  447	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1057
	nop

	! block 56
.L1059:
.L1060:
.L1061:
.L1062:

!  448	               red[i]   = ~(red[i]   & rdest[i]);

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	add	%fp,-1600,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 57
.L1063:

!  449	               green[i] = ~(green[i] & gdest[i]);

	ld	[%fp+88],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	add	%fp,-3200,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 58
.L1064:

!  450	               blue[i]  = ~(blue[i]  & bdest[i]);

	ld	[%fp+92],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 59
.L1065:

!  451	               alpha[i] = ~(alpha[i] & adest[i]);

	ld	[%fp+96],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 60
.L1066:
.L1067:
.L1057:
.L1068:
.L1069:
.L1070:
.L1071:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1050
	nop

	! block 61
.L1072:
.L1052:
.L1073:
.L1074:

!  452	            }
!  453	         }
!  454	         break;

	ba	.L869
	nop

	! block 62
.L1075:
.L1076:
.L1077:

!  455	      case GL_OR:
!  456	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1080
	nop

	! block 63
.L1081:
.L1078:
.L1082:
.L1083:
.L1084:
.L1086:

!  457	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1085
	nop

	! block 64
.L1087:
.L1088:
.L1089:
.L1090:

!  458	               red[i]   |= rdest[i];

	ld	[%fp+84],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-264,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	add	%fp,-1600,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 65
.L1091:

!  459	               green[i] |= gdest[i];

	ld	[%fp+88],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-268,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	add	%fp,-3200,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 66
.L1092:

!  460	               blue[i]  |= bdest[i];

	ld	[%fp+92],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-272,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 67
.L1093:

!  461	               alpha[i] |= adest[i];

	ld	[%fp+96],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-276,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 68
.L1094:
.L1095:
.L1085:
.L1096:
.L1097:
.L1098:
.L1099:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1078
	nop

	! block 69
.L1100:
.L1080:
.L1101:
.L1102:

!  462	            }
!  463	         }
!  464	         break;

	ba	.L869
	nop

	! block 70
.L1103:
.L1104:
.L1105:

!  465	      case GL_NOR:
!  466	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1108
	nop

	! block 71
.L1109:
.L1106:
.L1110:
.L1111:
.L1112:
.L1114:

!  467	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1113
	nop

	! block 72
.L1115:
.L1116:
.L1117:
.L1118:

!  468	               red[i]   = ~(red[i]   | rdest[i]);

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	add	%fp,-1600,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 73
.L1119:

!  469	               green[i] = ~(green[i] | gdest[i]);

	ld	[%fp+88],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	add	%fp,-3200,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 74
.L1120:

!  470	               blue[i]  = ~(blue[i]  | bdest[i]);

	ld	[%fp+92],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 75
.L1121:

!  471	               alpha[i] = ~(alpha[i] | adest[i]);

	ld	[%fp+96],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 76
.L1122:
.L1123:
.L1113:
.L1124:
.L1125:
.L1126:
.L1127:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1106
	nop

	! block 77
.L1128:
.L1108:
.L1129:
.L1130:

!  472	            }
!  473	         }
!  474	         break;

	ba	.L869
	nop

	! block 78
.L1131:
.L1132:
.L1133:

!  475	      case GL_XOR:
!  476	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1136
	nop

	! block 79
.L1137:
.L1134:
.L1138:
.L1139:
.L1140:
.L1142:

!  477	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1141
	nop

	! block 80
.L1143:
.L1144:
.L1145:
.L1146:

!  478	               red[i]   ^= rdest[i];

	ld	[%fp+84],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-264,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	add	%fp,-1600,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	xor	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 81
.L1147:

!  479	               green[i] ^= gdest[i];

	ld	[%fp+88],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-268,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	add	%fp,-3200,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	xor	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 82
.L1148:

!  480	               blue[i]  ^= bdest[i];

	ld	[%fp+92],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-272,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	xor	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 83
.L1149:

!  481	               alpha[i] ^= adest[i];

	ld	[%fp+96],%l0
	sethi	0x6,%l2
	xor	%l2,-260,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x6,%l1
	xor	%l1,-276,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	xor	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 84
.L1150:
.L1151:
.L1141:
.L1152:
.L1153:
.L1154:
.L1155:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1134
	nop

	! block 85
.L1156:
.L1136:
.L1157:
.L1158:

!  482	            }
!  483	         }
!  484	         break;

	ba	.L869
	nop

	! block 86
.L1159:
.L1160:
.L1161:

!  485	      case GL_EQUIV:
!  486	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1164
	nop

	! block 87
.L1165:
.L1162:
.L1166:
.L1167:
.L1168:
.L1170:

!  487	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1169
	nop

	! block 88
.L1171:
.L1172:
.L1173:
.L1174:

!  488	               red[i]   = ~(red[i]   ^ rdest[i]);

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	add	%fp,-1600,%l0
	ldub	[%l0+%l2],%l1
	xor	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 89
.L1175:

!  489	               green[i] = ~(green[i] ^ gdest[i]);

	ld	[%fp+88],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	add	%fp,-3200,%l0
	ldub	[%l0+%l2],%l1
	xor	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 90
.L1176:

!  490	               blue[i]  = ~(blue[i]  ^ bdest[i]);

	ld	[%fp+92],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	xor	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 91
.L1177:

!  491	               alpha[i] = ~(alpha[i] ^ adest[i]);

	ld	[%fp+96],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	xor	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 92
.L1178:
.L1179:
.L1169:
.L1180:
.L1181:
.L1182:
.L1183:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1162
	nop

	! block 93
.L1184:
.L1164:
.L1185:
.L1186:

!  492	            }
!  493	         }
!  494	         break;

	ba	.L869
	nop

	! block 94
.L1187:
.L1188:
.L1189:

!  495	      case GL_AND_REVERSE:
!  496	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1192
	nop

	! block 95
.L1193:
.L1190:
.L1194:
.L1195:
.L1196:
.L1198:

!  497	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1197
	nop

	! block 96
.L1199:
.L1200:
.L1201:
.L1202:

!  498	               red[i]   = red[i]   & ~rdest[i];

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	add	%fp,-1600,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 97
.L1203:

!  499	               green[i] = green[i] & ~gdest[i];

	ld	[%fp+88],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	add	%fp,-3200,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 98
.L1204:

!  500	               blue[i]  = blue[i]  & ~bdest[i];

	ld	[%fp+92],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 99
.L1205:

!  501	               alpha[i] = alpha[i] & ~adest[i];

	ld	[%fp+96],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 100
.L1206:
.L1207:
.L1197:
.L1208:
.L1209:
.L1210:
.L1211:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1190
	nop

	! block 101
.L1212:
.L1192:
.L1213:
.L1214:

!  502	            }
!  503	         }
!  504	         break;

	ba	.L869
	nop

	! block 102
.L1215:
.L1216:
.L1217:

!  505	      case GL_AND_INVERTED:
!  506	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1220
	nop

	! block 103
.L1221:
.L1218:
.L1222:
.L1223:
.L1224:
.L1226:

!  507	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1225
	nop

	! block 104
.L1227:
.L1228:
.L1229:
.L1230:

!  508	               red[i]   = ~red[i]   & rdest[i];

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	add	%fp,-1600,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 105
.L1231:

!  509	               green[i] = ~green[i] & gdest[i];

	ld	[%fp+88],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	add	%fp,-3200,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 106
.L1232:

!  510	               blue[i]  = ~blue[i]  & bdest[i];

	ld	[%fp+92],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 107
.L1233:

!  511	               alpha[i] = ~alpha[i] & adest[i];

	ld	[%fp+96],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 108
.L1234:
.L1235:
.L1225:
.L1236:
.L1237:
.L1238:
.L1239:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1218
	nop

	! block 109
.L1240:
.L1220:
.L1241:
.L1242:

!  512	            }
!  513	         }
!  514	         break;

	ba	.L869
	nop

	! block 110
.L1243:
.L1244:
.L1245:

!  515	      case GL_OR_REVERSE:
!  516	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1248
	nop

	! block 111
.L1249:
.L1246:
.L1250:
.L1251:
.L1252:
.L1254:

!  517	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1253
	nop

	! block 112
.L1255:
.L1256:
.L1257:
.L1258:

!  518	               red[i]   = red[i]   | ~rdest[i];

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	add	%fp,-1600,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 113
.L1259:

!  519	               green[i] = green[i] | ~gdest[i];

	ld	[%fp+88],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	add	%fp,-3200,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 114
.L1260:

!  520	               blue[i]  = blue[i]  | ~bdest[i];

	ld	[%fp+92],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 115
.L1261:

!  521	               alpha[i] = alpha[i] | ~adest[i];

	ld	[%fp+96],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 116
.L1262:
.L1263:
.L1253:
.L1264:
.L1265:
.L1266:
.L1267:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1246
	nop

	! block 117
.L1268:
.L1248:
.L1269:
.L1270:

!  522	            }
!  523	         }
!  524	         break;

	ba	.L869
	nop

	! block 118
.L1271:
.L1272:
.L1273:

!  525	      case GL_OR_INVERTED:
!  526	         for (i=0;i<n;i++) {

	sethi	0x6,%l0
	xor	%l0,-260,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1276
	nop

	! block 119
.L1277:
.L1274:
.L1278:
.L1279:
.L1280:
.L1282:

!  527	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1281
	nop

	! block 120
.L1283:
.L1284:
.L1285:
.L1286:

!  528	               red[i]   = ~red[i]   | rdest[i];

	ld	[%fp+84],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	add	%fp,-1600,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 121
.L1287:

!  529	               green[i] = ~green[i] | gdest[i];

	ld	[%fp+88],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	add	%fp,-3200,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 122
.L1288:

!  530	               blue[i]  = ~blue[i]  | bdest[i];

	ld	[%fp+92],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 123
.L1289:

!  531	               alpha[i] = ~alpha[i] | adest[i];

	ld	[%fp+96],%l1
	sethi	0x6,%l0
	xor	%l0,-260,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x6,%l0
	xor	%l0,-256,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 124
.L1290:
.L1291:
.L1281:
.L1292:
.L1293:
.L1294:
.L1295:
	sethi	0x6,%l1
	xor	%l1,-260,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1274
	nop

	! block 125
.L1296:
.L1276:
.L1297:
.L1298:

!  532	            }
!  533	         }
!  534	         break;

	ba	.L869
	nop

	! block 126
.L1299:
.L1300:

!  535	      default:
!  536	         /* should never happen */
!  537	         gl_problem(ctx, "Bad function in gl_logicop_rgba_span");

	ld	[%fp+68],%l0
	sethi	%hi(.L1301),%l1
	or	%l1,%lo(.L1301),%l1
	mov	%l0,%o0
	call	gl_problem
	mov	%l1,%o1

	! block 127
.L1302:

!  538	         return;

	ba	.L863
	nop

	! block 128
.L1303:
.L1304:
.L870:
.L1305:
	ld	[%fp+68],%l0
	sethi	%hi(0x1ecc),%l1
	or	%l1,%lo(0x1ecc),%l1
	ld	[%l0+%l1],%l0
	sethi	%hi(0x1500),%l1
	or	%l1,%lo(0x1500),%l1
	sub	%l0,%l1,%l0
	cmp	%l0,15
	bgu	.L1299
	nop

	! block 129
	sll	%l0,2,%l1
	sethi	%hi(.L_y3-64),%l0
	or	%l0,%lo(.L_y3-64),%l0
	ld	[%l0+%l1],%l0
	jmp	%l0
	nop

	! block 130
.L1306:
.L869:
.L1307:

	! block 131
.L1308:
.L1309:
.L863:
	jmp	%i7+8
	restore
	.size	gl_logicop_rgba_span,(.-gl_logicop_rgba_span)

	.word	.L874
	.word	.L1019
	.word	.L1187
	.word	.L933
	.word	.L1215
	.word	.L963
	.word	.L1131
	.word	.L1075
	.word	.L1103
	.word	.L1159
	.word	.L991
	.word	.L1243
	.word	.L935
	.word	.L1271
	.word	.L1047
	.word	.L899
.L_y3:
	.align	8
	.align	8
	.skip	16

	! block 0

	.global	gl_logicop_rgba_pixels
	.type	gl_logicop_rgba_pixels,#function
gl_logicop_rgba_pixels:
	sethi	%hi(-19328),%g1
	or	%g1,%lo(-19328),%g1
	save	%sp,%g1,%sp

	! block 1
.L1312:
	st	%i0,[%fp+68]
	st	%i1,[%fp+72]
	st	%i2,[%fp+76]
	st	%i3,[%fp+80]
	st	%i4,[%fp+84]
	st	%i5,[%fp+88]
	ld	[%fp+92],%l0
	st	%l0,[%fp+92]
	ld	[%fp+96],%l0
	st	%l0,[%fp+96]
	ld	[%fp+100],%l0
	st	%l0,[%fp+100]

	! block 2
.L1313:
.L1315:

! File logic.c:
!  539	   }
!  540	}
!  541	
!  544	/*
!  545	 * Apply the current logic operator to an array of RGBA pixels.  This is only
!  546	 * used if the device driver can't do logic ops.
!  547	 */
!  548	void gl_logicop_rgba_pixels( GLcontext *ctx,
!  549	                             GLuint n, const GLint x[], const GLint y[],
!  550	                             GLubyte red[], GLubyte green[],
!  551	                             GLubyte blue[], GLubyte alpha[],
!  552	                             GLubyte mask[] )
!  553	{
!  554	   GLubyte rdest[PB_SIZE], gdest[PB_SIZE], bdest[PB_SIZE], adest[PB_SIZE];
!  555	   GLuint i;
!  556	
!  557	   /* Read pixels from current color buffer */
!  558	   (*ctx->Driver.ReadColorPixels)( ctx, n, x, y, rdest, gdest, bdest, adest, mask );

	ld	[%fp+68],%l1
	ld	[%l1+2288],%i1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l6
	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l7
	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%i0
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%fp+100],%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l6,%o4
	mov	%l7,%o5
	st	%i0,[%sp+92]
	st	%l0,[%sp+96]
	st	%l4,[%sp+100]
	jmpl	%i1,%o7
	nop

	! block 3
.L1316:
.L1318:

!  559	   if (ctx->RasterMask & ALPHABUF_BIT) {

	ld	[%fp+68],%l0
	sethi	%hi(0xe108),%l1
	or	%l1,%lo(0xe108),%l1
	ld	[%l0+%l1],%l0
	andcc	%l0,256,%l0
	be	.L1317
	nop

	! block 4
.L1319:
.L1320:
.L1321:
.L1322:

!  560	      gl_read_alpha_pixels( ctx, n, x, y, adest, mask );

	ld	[%fp+68],%l1
	ld	[%fp+72],%l2
	ld	[%fp+76],%l3
	ld	[%fp+80],%l5
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%fp+100],%l4
	mov	%l1,%o0
	mov	%l2,%o1
	mov	%l3,%o2
	mov	%l5,%o3
	mov	%l0,%o4
	call	gl_read_alpha_pixels
	mov	%l4,%o5

	! block 5
.L1323:
.L1324:
.L1317:
.L1325:
.L1326:
.L1329:

!  561	   }
!  562	
!  563	   /* apply logic op */
!  564	   switch (ctx->Color.LogicOp) {

	ba	.L1328
	nop

	! block 6
.L1330:
.L1331:
.L1332:
.L1333:
.L1334:

!  565	      case GL_CLEAR:
!  566	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1337
	nop

	! block 7
.L1338:
.L1335:
.L1339:
.L1340:
.L1341:
.L1343:

!  567	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1342
	nop

	! block 8
.L1344:
.L1345:
.L1346:
.L1347:

!  568	               red[i] = green[i] = blue[i] = alpha[i] = 0;

	ld	[%fp+96],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	stb	%g0,[%l0+%l1]
	ld	[%fp+92],%l0
	ld	[%fp+%l2],%l1
	stb	%g0,[%l0+%l1]
	ld	[%fp+88],%l0
	ld	[%fp+%l2],%l1
	stb	%g0,[%l0+%l1]
	ld	[%fp+84],%l0
	ld	[%fp+%l2],%l1
	stb	%g0,[%l0+%l1]

	! block 9
.L1348:
.L1349:
.L1342:
.L1350:
.L1351:
.L1352:
.L1353:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1335
	nop

	! block 10
.L1354:
.L1337:
.L1355:
.L1356:

!  569	            }
!  570	         }
!  571	         break;

	ba	.L1327
	nop

	! block 11
.L1357:
.L1358:
.L1359:

!  572	      case GL_SET:
!  573	         {
!  574	            GLubyte r = (GLint) ctx->Visual->RedScale;

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+4],%f4
	fstoi	%f4,%f4
	sethi	0x12,%l0
	xor	%l0,-792,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x12,%l0
	xor	%l0,-773,%l0
	stb	%l1,[%fp+%l0]

	! block 12
.L1360:

!  575	            GLubyte g = (GLint) ctx->Visual->GreenScale;

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+8],%f4
	fstoi	%f4,%f4
	sethi	0x12,%l0
	xor	%l0,-792,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x12,%l0
	xor	%l0,-774,%l0
	stb	%l1,[%fp+%l0]

	! block 13
.L1361:

!  576	            GLubyte b = (GLint) ctx->Visual->BlueScale;

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+12],%f4
	fstoi	%f4,%f4
	sethi	0x12,%l0
	xor	%l0,-792,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x12,%l0
	xor	%l0,-775,%l0
	stb	%l1,[%fp+%l0]

	! block 14
.L1362:

!  577	            GLubyte a = (GLint) ctx->Visual->AlphaScale;

	ld	[%fp+68],%l0
	ld	[%l0+2200],%l0
	ld	[%l0+16],%f4
	fstoi	%f4,%f4
	sethi	0x12,%l0
	xor	%l0,-792,%l0
	st	%f4,[%fp+%l0]
	ld	[%fp+%l0],%l1
	sethi	0x12,%l0
	xor	%l0,-776,%l0
	stb	%l1,[%fp+%l0]

	! block 15
.L1363:
.L1364:

!  578	            for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1367
	nop

	! block 16
.L1368:
.L1365:
.L1369:
.L1370:
.L1371:
.L1373:

!  579	               if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1372
	nop

	! block 17
.L1374:
.L1375:
.L1376:
.L1377:

!  580	                  red[i]   = r;

	sethi	0x12,%l0
	xor	%l0,-773,%l0
	ldub	[%fp+%l0],%l3
	ld	[%fp+84],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	stb	%l3,[%l2+%l1]

	! block 18
.L1378:

!  581	                  green[i] = g;

	sethi	0x12,%l0
	xor	%l0,-774,%l0
	ldub	[%fp+%l0],%l3
	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	stb	%l3,[%l2+%l1]

	! block 19
.L1379:

!  582	                  blue[i]  = b;

	sethi	0x12,%l0
	xor	%l0,-775,%l0
	ldub	[%fp+%l0],%l3
	ld	[%fp+92],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	stb	%l3,[%l2+%l1]

	! block 20
.L1380:

!  583	                  alpha[i] = a;

	sethi	0x12,%l0
	xor	%l0,-776,%l0
	ldub	[%fp+%l0],%l3
	ld	[%fp+96],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	stb	%l3,[%l2+%l1]

	! block 21
.L1381:
.L1382:
.L1372:
.L1383:
.L1384:
.L1385:
.L1386:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1365
	nop

	! block 22
.L1387:
.L1367:
.L1388:
.L1389:
.L1390:

!  584	               }
!  585	            }
!  586	         }
!  587	         break;

	ba	.L1327
	nop

	! block 23
.L1391:
.L1392:

!  588	      case GL_COPY:
!  589	         /* do nothing */
!  590	         break;

	ba	.L1327
	nop

	! block 24
.L1393:
.L1394:
.L1395:

!  591	      case GL_COPY_INVERTED:
!  592	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1398
	nop

	! block 25
.L1399:
.L1396:
.L1400:
.L1401:
.L1402:
.L1404:

!  593	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1403
	nop

	! block 26
.L1405:
.L1406:
.L1407:
.L1408:

!  594	               red[i]   = ~red[i];

	ld	[%fp+84],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	add	%l2,%l1,%l1
	ldub	[%l1+0],%l0
	not	%l0,%l0
	stb	%l0,[%l1+0]

	! block 27
.L1409:

!  595	               green[i] = ~green[i];

	ld	[%fp+88],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	add	%l2,%l1,%l1
	ldub	[%l1+0],%l0
	not	%l0,%l0
	stb	%l0,[%l1+0]

	! block 28
.L1410:

!  596	               blue[i]  = ~blue[i];

	ld	[%fp+92],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	add	%l2,%l1,%l1
	ldub	[%l1+0],%l0
	not	%l0,%l0
	stb	%l0,[%l1+0]

	! block 29
.L1411:

!  597	               alpha[i] = ~alpha[i];

	ld	[%fp+96],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	add	%l2,%l1,%l1
	ldub	[%l1+0],%l0
	not	%l0,%l0
	stb	%l0,[%l1+0]

	! block 30
.L1412:
.L1413:
.L1403:
.L1414:
.L1415:
.L1416:
.L1417:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1396
	nop

	! block 31
.L1418:
.L1398:
.L1419:
.L1420:

!  598	            }
!  599	         }
!  600	         break;

	ba	.L1327
	nop

	! block 32
.L1421:
.L1422:
.L1423:

!  601	      case GL_NOOP:
!  602	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1426
	nop

	! block 33
.L1427:
.L1424:
.L1428:
.L1429:
.L1430:
.L1432:

!  603	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1431
	nop

	! block 34
.L1433:
.L1434:
.L1435:
.L1436:

!  604	               red[i]   = rdest[i];

	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l1
	ld	[%fp+84],%l0
	stb	%l1,[%l0+%l2]

	! block 35
.L1437:

!  605	               green[i] = gdest[i];

	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l1
	ld	[%fp+88],%l0
	stb	%l1,[%l0+%l2]

	! block 36
.L1438:

!  606	               blue[i]  = bdest[i];

	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l1
	ld	[%fp+92],%l0
	stb	%l1,[%l0+%l2]

	! block 37
.L1439:

!  607	               alpha[i] = adest[i];

	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l1
	ld	[%fp+96],%l0
	stb	%l1,[%l0+%l2]

	! block 38
.L1440:
.L1441:
.L1431:
.L1442:
.L1443:
.L1444:
.L1445:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1424
	nop

	! block 39
.L1446:
.L1426:
.L1447:
.L1448:

!  608	            }
!  609	         }
!  610	         break;

	ba	.L1327
	nop

	! block 40
.L1449:
.L1450:
.L1451:

!  611	      case GL_INVERT:
!  612	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1454
	nop

	! block 41
.L1455:
.L1452:
.L1456:
.L1457:
.L1458:
.L1460:

!  613	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1459
	nop

	! block 42
.L1461:
.L1462:
.L1463:
.L1464:

!  614	               red[i]   = ~rdest[i];

	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l0
	not	%l0,%l1
	ld	[%fp+84],%l0
	stb	%l1,[%l0+%l2]

	! block 43
.L1465:

!  615	               green[i] = ~gdest[i];

	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l0
	not	%l0,%l1
	ld	[%fp+88],%l0
	stb	%l1,[%l0+%l2]

	! block 44
.L1466:

!  616	               blue[i]  = ~bdest[i];

	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l0
	not	%l0,%l1
	ld	[%fp+92],%l0
	stb	%l1,[%l0+%l2]

	! block 45
.L1467:

!  617	               alpha[i] = ~adest[i];

	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	ldub	[%l1+%l2],%l0
	not	%l0,%l1
	ld	[%fp+96],%l0
	stb	%l1,[%l0+%l2]

	! block 46
.L1468:
.L1469:
.L1459:
.L1470:
.L1471:
.L1472:
.L1473:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1452
	nop

	! block 47
.L1474:
.L1454:
.L1475:
.L1476:

!  618	            }
!  619	         }
!  620	         break;

	ba	.L1327
	nop

	! block 48
.L1477:
.L1478:
.L1479:

!  621	      case GL_AND:
!  622	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1482
	nop

	! block 49
.L1483:
.L1480:
.L1484:
.L1485:
.L1486:
.L1488:

!  623	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1487
	nop

	! block 50
.L1489:
.L1490:
.L1491:
.L1492:

!  624	               red[i]   &= rdest[i];

	ld	[%fp+84],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-776,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 51
.L1493:

!  625	               green[i] &= gdest[i];

	ld	[%fp+88],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-780,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 52
.L1494:

!  626	               blue[i]  &= bdest[i];

	ld	[%fp+92],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-784,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 53
.L1495:

!  627	               alpha[i] &= adest[i];

	ld	[%fp+96],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-788,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 54
.L1496:
.L1497:
.L1487:
.L1498:
.L1499:
.L1500:
.L1501:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1480
	nop

	! block 55
.L1502:
.L1482:
.L1503:
.L1504:

!  628	            }
!  629	         }
!  630	         break;

	ba	.L1327
	nop

	! block 56
.L1505:
.L1506:
.L1507:

!  631	      case GL_NAND:
!  632	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1510
	nop

	! block 57
.L1511:
.L1508:
.L1512:
.L1513:
.L1514:
.L1516:

!  633	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1515
	nop

	! block 58
.L1517:
.L1518:
.L1519:
.L1520:

!  634	               red[i]   = ~(red[i]   & rdest[i]);

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 59
.L1521:

!  635	               green[i] = ~(green[i] & gdest[i]);

	ld	[%fp+88],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 60
.L1522:

!  636	               blue[i]  = ~(blue[i]  & bdest[i]);

	ld	[%fp+92],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 61
.L1523:

!  637	               alpha[i] = ~(alpha[i] & adest[i]);

	ld	[%fp+96],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 62
.L1524:
.L1525:
.L1515:
.L1526:
.L1527:
.L1528:
.L1529:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1508
	nop

	! block 63
.L1530:
.L1510:
.L1531:
.L1532:

!  638	            }
!  639	         }
!  640	         break;

	ba	.L1327
	nop

	! block 64
.L1533:
.L1534:
.L1535:

!  641	      case GL_OR:
!  642	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1538
	nop

	! block 65
.L1539:
.L1536:
.L1540:
.L1541:
.L1542:
.L1544:

!  643	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1543
	nop

	! block 66
.L1545:
.L1546:
.L1547:
.L1548:

!  644	               red[i]   |= rdest[i];

	ld	[%fp+84],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-776,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 67
.L1549:

!  645	               green[i] |= gdest[i];

	ld	[%fp+88],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-780,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 68
.L1550:

!  646	               blue[i]  |= bdest[i];

	ld	[%fp+92],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-784,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 69
.L1551:

!  647	               alpha[i] |= adest[i];

	ld	[%fp+96],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-788,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 70
.L1552:
.L1553:
.L1543:
.L1554:
.L1555:
.L1556:
.L1557:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1536
	nop

	! block 71
.L1558:
.L1538:
.L1559:
.L1560:

!  648	            }
!  649	         }
!  650	         break;

	ba	.L1327
	nop

	! block 72
.L1561:
.L1562:
.L1563:

!  651	      case GL_NOR:
!  652	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1566
	nop

	! block 73
.L1567:
.L1564:
.L1568:
.L1569:
.L1570:
.L1572:

!  653	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1571
	nop

	! block 74
.L1573:
.L1574:
.L1575:
.L1576:

!  654	               red[i]   = ~(red[i]   | rdest[i]);

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 75
.L1577:

!  655	               green[i] = ~(green[i] | gdest[i]);

	ld	[%fp+88],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 76
.L1578:

!  656	               blue[i]  = ~(blue[i]  | bdest[i]);

	ld	[%fp+92],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 77
.L1579:

!  657	               alpha[i] = ~(alpha[i] | adest[i]);

	ld	[%fp+96],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 78
.L1580:
.L1581:
.L1571:
.L1582:
.L1583:
.L1584:
.L1585:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1564
	nop

	! block 79
.L1586:
.L1566:
.L1587:
.L1588:

!  658	            }
!  659	         }
!  660	         break;

	ba	.L1327
	nop

	! block 80
.L1589:
.L1590:
.L1591:

!  661	      case GL_XOR:
!  662	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1594
	nop

	! block 81
.L1595:
.L1592:
.L1596:
.L1597:
.L1598:
.L1600:

!  663	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1599
	nop

	! block 82
.L1601:
.L1602:
.L1603:
.L1604:

!  664	               red[i]   ^= rdest[i];

	ld	[%fp+84],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-776,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	xor	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 83
.L1605:

!  665	               green[i] ^= gdest[i];

	ld	[%fp+88],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-780,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	xor	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 84
.L1606:

!  666	               blue[i]  ^= bdest[i];

	ld	[%fp+92],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-784,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	xor	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 85
.L1607:

!  667	               alpha[i] ^= adest[i];

	ld	[%fp+96],%l0
	sethi	0x12,%l2
	xor	%l2,-772,%l2
	ld	[%fp+%l2],%l1
	add	%l0,%l1,%l0
	sethi	0x12,%l1
	xor	%l1,-788,%l1
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l5
	ldub	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ld	[%fp+%l2],%l1
	ldub	[%l0+%l1],%l1
	xor	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 86
.L1608:
.L1609:
.L1599:
.L1610:
.L1611:
.L1612:
.L1613:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1592
	nop

	! block 87
.L1614:
.L1594:
.L1615:
.L1616:

!  668	            }
!  669	         }
!  670	         break;

	ba	.L1327
	nop

	! block 88
.L1617:
.L1618:
.L1619:

!  671	      case GL_EQUIV:
!  672	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1622
	nop

	! block 89
.L1623:
.L1620:
.L1624:
.L1625:
.L1626:
.L1628:

!  673	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1627
	nop

	! block 90
.L1629:
.L1630:
.L1631:
.L1632:

!  674	               red[i]   = ~(red[i]   ^ rdest[i]);

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	xor	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 91
.L1633:

!  675	               green[i] = ~(green[i] ^ gdest[i]);

	ld	[%fp+88],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	xor	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 92
.L1634:

!  676	               blue[i]  = ~(blue[i]  ^ bdest[i]);

	ld	[%fp+92],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	xor	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 93
.L1635:

!  677	               alpha[i] = ~(alpha[i] ^ adest[i]);

	ld	[%fp+96],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	xor	%l3,%l1,%l0
	not	%l0,%l0
	stb	%l0,[%l5+0]

	! block 94
.L1636:
.L1637:
.L1627:
.L1638:
.L1639:
.L1640:
.L1641:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1620
	nop

	! block 95
.L1642:
.L1622:
.L1643:
.L1644:

!  678	            }
!  679	         }
!  680	         break;

	ba	.L1327
	nop

	! block 96
.L1645:
.L1646:
.L1647:

!  681	      case GL_AND_REVERSE:
!  682	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1650
	nop

	! block 97
.L1651:
.L1648:
.L1652:
.L1653:
.L1654:
.L1656:

!  683	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1655
	nop

	! block 98
.L1657:
.L1658:
.L1659:
.L1660:

!  684	               red[i]   = red[i]   & ~rdest[i];

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 99
.L1661:

!  685	               green[i] = green[i] & ~gdest[i];

	ld	[%fp+88],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 100
.L1662:

!  686	               blue[i]  = blue[i]  & ~bdest[i];

	ld	[%fp+92],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 101
.L1663:

!  687	               alpha[i] = alpha[i] & ~adest[i];

	ld	[%fp+96],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 102
.L1664:
.L1665:
.L1655:
.L1666:
.L1667:
.L1668:
.L1669:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1648
	nop

	! block 103
.L1670:
.L1650:
.L1671:
.L1672:

!  688	            }
!  689	         }
!  690	         break;

	ba	.L1327
	nop

	! block 104
.L1673:
.L1674:
.L1675:

!  691	      case GL_AND_INVERTED:
!  692	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1678
	nop

	! block 105
.L1679:
.L1676:
.L1680:
.L1681:
.L1682:
.L1684:

!  693	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1683
	nop

	! block 106
.L1685:
.L1686:
.L1687:
.L1688:

!  694	               red[i]   = ~red[i]   & rdest[i];

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 107
.L1689:

!  695	               green[i] = ~green[i] & gdest[i];

	ld	[%fp+88],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 108
.L1690:

!  696	               blue[i]  = ~blue[i]  & bdest[i];

	ld	[%fp+92],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 109
.L1691:

!  697	               alpha[i] = ~alpha[i] & adest[i];

	ld	[%fp+96],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	and	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 110
.L1692:
.L1693:
.L1683:
.L1694:
.L1695:
.L1696:
.L1697:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1676
	nop

	! block 111
.L1698:
.L1678:
.L1699:
.L1700:

!  698	            }
!  699	         }
!  700	         break;

	ba	.L1327
	nop

	! block 112
.L1701:
.L1702:
.L1703:

!  701	      case GL_OR_REVERSE:
!  702	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1706
	nop

	! block 113
.L1707:
.L1704:
.L1708:
.L1709:
.L1710:
.L1712:

!  703	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1711
	nop

	! block 114
.L1713:
.L1714:
.L1715:
.L1716:

!  704	               red[i]   = red[i]   | ~rdest[i];

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 115
.L1717:

!  705	               green[i] = green[i] | ~gdest[i];

	ld	[%fp+88],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 116
.L1718:

!  706	               blue[i]  = blue[i]  | ~bdest[i];

	ld	[%fp+92],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 117
.L1719:

!  707	               alpha[i] = alpha[i] | ~adest[i];

	ld	[%fp+96],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l0
	not	%l0,%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 118
.L1720:
.L1721:
.L1711:
.L1722:
.L1723:
.L1724:
.L1725:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1704
	nop

	! block 119
.L1726:
.L1706:
.L1727:
.L1728:

!  708	            }
!  709	         }
!  710	         break;

	ba	.L1327
	nop

	! block 120
.L1729:
.L1730:
.L1731:

!  711	      case GL_OR_INVERTED:
!  712	         for (i=0;i<n;i++) {

	sethi	0x12,%l0
	xor	%l0,-772,%l0
	st	%g0,[%fp+%l0]
	ld	[%fp+72],%l0
	cmp	%g0,%l0
	bgeu	.L1734
	nop

	! block 121
.L1735:
.L1732:
.L1736:
.L1737:
.L1738:
.L1740:

!  713	            if (mask[i]) {

	ld	[%fp+100],%l2
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l1
	ldub	[%l2+%l1],%l0
	cmp	%l0,%g0
	be	.L1739
	nop

	! block 122
.L1741:
.L1742:
.L1743:
.L1744:

!  714	               red[i]   = ~red[i]   | rdest[i];

	ld	[%fp+84],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x4,%l0
	xor	%l0,-704,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 123
.L1745:

!  715	               green[i] = ~green[i] | gdest[i];

	ld	[%fp+88],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x9,%l0
	xor	%l0,-384,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 124
.L1746:

!  716	               blue[i]  = ~blue[i]  | bdest[i];

	ld	[%fp+92],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	sethi	0xe,%l0
	xor	%l0,-64,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 125
.L1747:

!  717	               alpha[i] = ~alpha[i] | adest[i];

	ld	[%fp+96],%l1
	sethi	0x12,%l0
	xor	%l0,-772,%l0
	ld	[%fp+%l0],%l2
	add	%l1,%l2,%l5
	ldub	[%l5+0],%l0
	not	%l0,%l3
	sethi	0x12,%l0
	xor	%l0,-768,%l0
	add	%fp,%l0,%l0
	ldub	[%l0+%l2],%l1
	or	%l3,%l1,%l0
	stb	%l0,[%l5+0]

	! block 126
.L1748:
.L1749:
.L1739:
.L1750:
.L1751:
.L1752:
.L1753:
	sethi	0x12,%l1
	xor	%l1,-772,%l1
	ld	[%fp+%l1],%l0
	add	%l0,1,%l0
	st	%l0,[%fp+%l1]
	ld	[%fp+%l1],%l1
	ld	[%fp+72],%l0
	cmp	%l1,%l0
	blu	.L1732
	nop

	! block 127
.L1754:
.L1734:
.L1755:
.L1756:

!  718	            }
!  719	         }
!  720	         break;

	ba	.L1327
	nop

	! block 128
.L1757:
.L1758:

!  721	      default:
!  722	         /* should never happen */
!  723	         gl_problem(ctx, "Bad function in gl_logicop_rgba_pixels");

	ld	[%fp+68],%l0
	sethi	%hi(.L1759),%l1
	or	%l1,%lo(.L1759),%l1
	mov	%l0,%o0
	call	gl_problem
	mov	%l1,%o1

	! block 129
.L1760:

!  724	         return;

	ba	.L1311
	nop

	! block 130
.L1761:
.L1762:
.L1328:
.L1763:
	ld	[%fp+68],%l0
	sethi	%hi(0x1ecc),%l1
	or	%l1,%lo(0x1ecc),%l1
	ld	[%l0+%l1],%l0
	sethi	%hi(0x1500),%l1
	or	%l1,%lo(0x1500),%l1
	sub	%l0,%l1,%l0
	cmp	%l0,15
	bgu	.L1757
	nop

	! block 131
	sll	%l0,2,%l1
	sethi	%hi(.L_y4-64),%l0
	or	%l0,%lo(.L_y4-64),%l0
	ld	[%l0+%l1],%l0
	jmp	%l0
	nop

	! block 132
.L1764:
.L1327:
.L1765:

	! block 133
.L1766:
.L1767:
.L1311:
	jmp	%i7+8
	restore
	.size	gl_logicop_rgba_pixels,(.-gl_logicop_rgba_pixels)

	.word	.L1332
	.word	.L1477
	.word	.L1645
	.word	.L1391
	.word	.L1673
	.word	.L1421
	.word	.L1589
	.word	.L1533
	.word	.L1561
	.word	.L1617
	.word	.L1449
	.word	.L1701
	.word	.L1393
	.word	.L1729
	.word	.L1505
	.word	.L1357
.L_y4:
	.align	8

	.section	".rodata1",#alloc
	.align	4
.L23:
	.ascii	"glLogicOp\000"
	.skip	2
	.type	.L23,#object
	.size	.L23,12
	.align	4
.L55:
	.ascii	"glLogicOp\000"
	.skip	2
	.type	.L55,#object
	.size	.L55,12
	.align	4
.L455:
	.ascii	"gl_logic error\000"
	.skip	1
	.type	.L455,#object
	.size	.L455,16
	.align	4
.L854:
	.ascii	"gl_logic_pixels error\000"
	.skip	2
	.type	.L854,#object
	.size	.L854,24
	.align	4
.L1301:
	.ascii	"Bad function in gl_logicop_rgba_span\000"
	.skip	3
	.type	.L1301,#object
	.size	.L1301,40
	.align	4
.L1759:
	.ascii	"Bad function in gl_logicop_rgba_pixels\000"
	.type	.L1759,#object
	.size	.L1759,39
	.section	".bss",#alloc,#write
Bbss.bss:
	.section	".data",#alloc,#write
Ddata.data:
	.section	".rodata",#alloc
Drodata.rodata:

	.file	"logic.c"
	.ident	"@(#)stdlib.h	1.51	04/06/30 SMI"
	.ident	"@(#)stdlib_iso.h	1.9	04/09/28 SMI"
	.ident	"@(#)feature_tests.h	1.25	07/02/02 SMI"
	.ident	"@(#)ccompile.h	1.2	04/11/08 SMI"
	.ident	"@(#)isa_defs.h	1.28	07/02/01 SMI"
	.ident	"@(#)stdlib_c99.h	1.2	04/03/29 SMI"
	.ident	"@(#)math.h	2.24	04/10/23 SMI"
	.ident	"@(#)math_iso.h	1.9	04/10/23 SMI"
	.ident	"@(#)math_c99.h	1.9	04/11/01 SMI"
	.ident	"@(#)floatingpoint.h	2.9	04/10/23 SMI"
	.ident	"@(#)stdio_tag.h	1.4	04/09/28 SMI"
	.ident	"@(#)ieeefp.h	2.12	04/10/23 SMI"
	.ident	"@(#)string.h	1.27	07/01/14 SMI"
	.ident	"@(#)string_iso.h	1.5	04/06/18 SMI"
	.ident	"acomp: Sun C 5.9 SunOS_sparc 2007/05/03"
!  Begin sdCreateSection : .debug_loc
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
	.section ".debug_loc"
!  End sdCreateSection
!  Begin sdCreateSection : .debug_info
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_abbrev, lab2=, loff=0
!   reloc[1]: knd=2, off=253, siz=4, lab1=.debug_line, lab2=, loff=0
!   reloc[2]: knd=0, off=273, siz=4, lab1=gl_LogicOp, lab2=, loff=0
!   reloc[3]: knd=0, off=277, siz=4, lab1=.L63, lab2=, loff=0
!   reloc[4]: knd=0, off=38591, siz=4, lab1=gl_logicop_ci_span, lab2=, loff=0
!   reloc[5]: knd=0, off=38595, siz=4, lab1=.L462, lab2=, loff=0
!   reloc[6]: knd=0, off=38771, siz=4, lab1=gl_logicop_ci_pixels, lab2=, loff=0
!   reloc[7]: knd=0, off=38775, siz=4, lab1=.L861, lab2=, loff=0
!   reloc[8]: knd=0, off=38974, siz=4, lab1=gl_logicop_rgba_span, lab2=, loff=0
!   reloc[9]: knd=0, off=38978, siz=4, lab1=.L1309, lab2=, loff=0
!   reloc[10]: knd=0, off=39226, siz=4, lab1=.L868, lab2=, loff=0
!   reloc[11]: knd=0, off=39230, siz=4, lab1=.L1307, lab2=, loff=0
!   reloc[12]: knd=0, off=39235, siz=4, lab1=.L872, lab2=, loff=0
!   reloc[13]: knd=0, off=39239, siz=4, lab1=.L1304, lab2=, loff=0
!   reloc[14]: knd=0, off=39244, siz=4, lab1=.L873, lab2=, loff=0
!   reloc[15]: knd=0, off=39248, siz=4, lab1=.L1303, lab2=, loff=0
!   reloc[16]: knd=0, off=39253, siz=4, lab1=.L900, lab2=, loff=0
!   reloc[17]: knd=0, off=39257, siz=4, lab1=.L931, lab2=, loff=0
!   reloc[18]: knd=0, off=39431, siz=4, lab1=gl_logicop_rgba_pixels, lab2=, loff=0
!   reloc[19]: knd=0, off=39435, siz=4, lab1=.L1767, lab2=, loff=0
!   reloc[20]: knd=0, off=39687, siz=4, lab1=.L1326, lab2=, loff=0
!   reloc[21]: knd=0, off=39691, siz=4, lab1=.L1765, lab2=, loff=0
!   reloc[22]: knd=0, off=39696, siz=4, lab1=.L1330, lab2=, loff=0
!   reloc[23]: knd=0, off=39700, siz=4, lab1=.L1762, lab2=, loff=0
!   reloc[24]: knd=0, off=39705, siz=4, lab1=.L1331, lab2=, loff=0
!   reloc[25]: knd=0, off=39709, siz=4, lab1=.L1761, lab2=, loff=0
!   reloc[26]: knd=0, off=39714, siz=4, lab1=.L1358, lab2=, loff=0
!   reloc[27]: knd=0, off=39718, siz=4, lab1=.L1389, lab2=, loff=0
	.section ".debug_info"
	.byte 0x00,0x00,0x9c,0xc8,0x00,0x02
	.uaword %section_symbol(".debug_abbrev")
	.byte 0x04,0x01
	.ascii "logic.c\0"
	.byte 0x0c
	.ascii "/home/faculty/koppel/teach/gpcom/gpup/rsim/mesa/no-opt\0"
	.ascii " /local/SUNWspro/prod/bin/cc -g -xtarget=ultraT2 -S  logic.c -W0,-xp\\$XAa59JCRsd3LW3K.\0"
	.ascii "Xa;g;R=Sun C 5.9 SunOS_sparc 2007/05/03;G=$XAa59JCRsd3LW3K.;backend;raw;cd;\0"
	.ascii "DBG_GEN 5.2.1\0"
	.uaword %section_symbol(".debug_line")
	.byte 0x02
	.ascii "gl_LogicOp\0"
	.byte 0x01,0x02,0x01,0x43
	.uaword gl_LogicOp
	.uaword .L63
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x01,0x43
	.byte 0x03,0x00,0x00,0x96,0xa2
	.ascii "ctx\0"
	.byte 0x01,0x42,0x03,0x91,0xc4,0x00,0x03,0x00
	.byte 0x00,0x31,0x4c
	.ascii "opcode\0"
	.byte 0x01,0x42,0x03,0x91,0xc8,0x00,0x00,0x04
	.ascii "int\0"
	.byte 0x05,0x04,0x05,0x00,0x00,0x01,0x43
	.ascii "GLint\0"
	.byte 0x03,0x06
	.ascii "HashTable\0"
	.byte 0x01,0x07,0x00,0x00,0x01,0x56,0x04
	.ascii "unsigned\0"
	.byte 0x07,0x04,0x05,0x00,0x00,0x01,0x67
	.ascii "GLuint\0"
	.byte 0x03,0x04
	.ascii "float\0"
	.byte 0x04,0x04,0x05,0x00,0x00,0x01,0x80
	.ascii "GLfloat\0"
	.byte 0x03,0x04
	.ascii "long\0"
	.byte 0x05,0x04,0x08,0x00,0x00,0x01,0x4a,0x10
	.byte 0x00,0x00,0x01,0xb0,0x09,0x00,0x00,0x01
	.byte 0x97,0x03,0x00,0x0a,0x04,0x03,0x00,0x00
	.byte 0x31,0x4c,0x0b
	.ascii "GL_FALSE\0"
	.byte 0x00,0x0b
	.ascii "GL_TRUE\0"
	.byte 0x01,0x0b
	.ascii "GL_BYTE\0"
	.byte 0x80,0x28,0x0b
	.ascii "GL_UNSIGNED_BYTE\0"
	.byte 0x81,0x28,0x0b
	.ascii "GL_SHORT\0"
	.byte 0x82,0x28,0x0b
	.ascii "GL_UNSIGNED_SHORT\0"
	.byte 0x83,0x28,0x0b
	.ascii "GL_INT\0"
	.byte 0x84,0x28,0x0b
	.ascii "GL_UNSIGNED_INT\0"
	.byte 0x85,0x28,0x0b
	.ascii "GL_FLOAT\0"
	.byte 0x86,0x28,0x0b
	.ascii "GL_DOUBLE\0"
	.byte 0x8a,0x28,0x0b
	.ascii "GL_2_BYTES\0"
	.byte 0x87,0x28,0x0b
	.ascii "GL_3_BYTES\0"
	.byte 0x88,0x28,0x0b
	.ascii "GL_4_BYTES\0"
	.byte 0x89,0x28,0x0b
	.ascii "GL_LINES\0"
	.byte 0x01,0x0b
	.ascii "GL_POINTS\0"
	.byte 0x00,0x0b
	.ascii "GL_LINE_STRIP\0"
	.byte 0x03,0x0b
	.ascii "GL_LINE_LOOP\0"
	.byte 0x02,0x0b
	.ascii "GL_TRIANGLES\0"
	.byte 0x04,0x0b
	.ascii "GL_TRIANGLE_STRIP\0"
	.byte 0x05,0x0b
	.ascii "GL_TRIANGLE_FAN\0"
	.byte 0x06,0x0b
	.ascii "GL_QUADS\0"
	.byte 0x07,0x0b
	.ascii "GL_QUAD_STRIP\0"
	.byte 0x08,0x0b
	.ascii "GL_POLYGON\0"
	.byte 0x09,0x0b
	.ascii "GL_EDGE_FLAG\0"
	.byte 0xc3,0x16,0x0b
	.ascii "GL_VERTEX_ARRAY\0"
	.byte 0xf4,0x80,0x02,0x0b
	.ascii "GL_NORMAL_ARRAY\0"
	.byte 0xf5,0x80,0x02,0x0b
	.ascii "GL_COLOR_ARRAY\0"
	.byte 0xf6,0x80,0x02,0x0b
	.ascii "GL_INDEX_ARRAY\0"
	.byte 0xf7,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_COORD_ARRAY\0"
	.byte 0xf8,0x80,0x02,0x0b
	.ascii "GL_EDGE_FLAG_ARRAY\0"
	.byte 0xf9,0x80,0x02,0x0b
	.ascii "GL_VERTEX_ARRAY_SIZE\0"
	.byte 0xfa,0x80,0x02,0x0b
	.ascii "GL_VERTEX_ARRAY_TYPE\0"
	.byte 0xfb,0x80,0x02,0x0b
	.ascii "GL_VERTEX_ARRAY_STRIDE\0"
	.byte 0xfc,0x80,0x02,0x0b
	.ascii "GL_NORMAL_ARRAY_TYPE\0"
	.byte 0xfe,0x80,0x02,0x0b
	.ascii "GL_NORMAL_ARRAY_STRIDE\0"
	.byte 0xff,0x80,0x02,0x0b
	.ascii "GL_COLOR_ARRAY_SIZE\0"
	.byte 0x81,0x81,0x02,0x0b
	.ascii "GL_COLOR_ARRAY_TYPE\0"
	.byte 0x82,0x81,0x02,0x0b
	.ascii "GL_COLOR_ARRAY_STRIDE\0"
	.byte 0x83,0x81,0x02,0x0b
	.ascii "GL_INDEX_ARRAY_TYPE\0"
	.byte 0x85,0x81,0x02,0x0b
	.ascii "GL_INDEX_ARRAY_STRIDE\0"
	.byte 0x86,0x81,0x02,0x0b
	.ascii "GL_TEXTURE_COORD_ARRAY_SIZE\0"
	.byte 0x88,0x81,0x02,0x0b
	.ascii "GL_TEXTURE_COORD_ARRAY_TYPE\0"
	.byte 0x89,0x81,0x02,0x0b
	.ascii "GL_TEXTURE_COORD_ARRAY_STRIDE\0"
	.byte 0x8a,0x81,0x02,0x0b
	.ascii "GL_EDGE_FLAG_ARRAY_STRIDE\0"
	.byte 0x8c,0x81,0x02,0x0b
	.ascii "GL_VERTEX_ARRAY_POINTER\0"
	.byte 0x8e,0x81,0x02,0x0b
	.ascii "GL_NORMAL_ARRAY_POINTER\0"
	.byte 0x8f,0x81,0x02,0x0b
	.ascii "GL_COLOR_ARRAY_POINTER\0"
	.byte 0x90,0x81,0x02,0x0b
	.ascii "GL_INDEX_ARRAY_POINTER\0"
	.byte 0x91,0x81,0x02,0x0b
	.ascii "GL_TEXTURE_COORD_ARRAY_POINTER\0"
	.byte 0x92,0x81,0x02,0x0b
	.ascii "GL_EDGE_FLAG_ARRAY_POINTER\0"
	.byte 0x93,0x81,0x02,0x0b
	.ascii "GL_V2F\0"
	.byte 0xa0,0xd4,0x00,0x0b
	.ascii "GL_V3F\0"
	.byte 0xa1,0xd4,0x00,0x0b
	.ascii "GL_C4UB_V2F\0"
	.byte 0xa2,0xd4,0x00,0x0b
	.ascii "GL_C4UB_V3F\0"
	.byte 0xa3,0xd4,0x00,0x0b
	.ascii "GL_C3F_V3F\0"
	.byte 0xa4,0xd4,0x00,0x0b
	.ascii "GL_N3F_V3F\0"
	.byte 0xa5,0xd4,0x00,0x0b
	.ascii "GL_C4F_N3F_V3F\0"
	.byte 0xa6,0xd4,0x00,0x0b
	.ascii "GL_T2F_V3F\0"
	.byte 0xa7,0xd4,0x00,0x0b
	.ascii "GL_T4F_V4F\0"
	.byte 0xa8,0xd4,0x00,0x0b
	.ascii "GL_T2F_C4UB_V3F\0"
	.byte 0xa9,0xd4,0x00,0x0b
	.ascii "GL_T2F_C3F_V3F\0"
	.byte 0xaa,0xd4,0x00,0x0b
	.ascii "GL_T2F_N3F_V3F\0"
	.byte 0xab,0xd4,0x00,0x0b
	.ascii "GL_T2F_C4F_N3F_V3F\0"
	.byte 0xac,0xd4,0x00,0x0b
	.ascii "GL_T4F_C4F_N3F_V4F\0"
	.byte 0xad,0xd4,0x00,0x0b
	.ascii "GL_MATRIX_MODE\0"
	.byte 0xa0,0x17,0x0b
	.ascii "GL_MODELVIEW\0"
	.byte 0x80,0x2e,0x0b
	.ascii "GL_PROJECTION\0"
	.byte 0x81,0x2e,0x0b
	.ascii "GL_TEXTURE\0"
	.byte 0x82,0x2e,0x0b
	.ascii "GL_POINT_SMOOTH\0"
	.byte 0x90,0x16,0x0b
	.ascii "GL_POINT_SIZE\0"
	.byte 0x91,0x16,0x0b
	.ascii "GL_POINT_SIZE_GRANULARITY\0"
	.byte 0x93,0x16,0x0b
	.ascii "GL_POINT_SIZE_RANGE\0"
	.byte 0x92,0x16,0x0b
	.ascii "GL_LINE_SMOOTH\0"
	.byte 0xa0,0x16,0x0b
	.ascii "GL_LINE_STIPPLE\0"
	.byte 0xa4,0x16,0x0b
	.ascii "GL_LINE_STIPPLE_PATTERN\0"
	.byte 0xa5,0x16,0x0b
	.ascii "GL_LINE_STIPPLE_REPEAT\0"
	.byte 0xa6,0x16,0x0b
	.ascii "GL_LINE_WIDTH\0"
	.byte 0xa1,0x16,0x0b
	.ascii "GL_LINE_WIDTH_GRANULARITY\0"
	.byte 0xa3,0x16,0x0b
	.ascii "GL_LINE_WIDTH_RANGE\0"
	.byte 0xa2,0x16,0x0b
	.ascii "GL_POINT\0"
	.byte 0x80,0x36,0x0b
	.ascii "GL_LINE\0"
	.byte 0x81,0x36,0x0b
	.ascii "GL_FILL\0"
	.byte 0x82,0x36,0x0b
	.ascii "GL_CCW\0"
	.byte 0x81,0x12,0x0b
	.ascii "GL_CW\0"
	.byte 0x80,0x12,0x0b
	.ascii "GL_FRONT\0"
	.byte 0x84,0x08,0x0b
	.ascii "GL_BACK\0"
	.byte 0x85,0x08,0x0b
	.ascii "GL_CULL_FACE\0"
	.byte 0xc4,0x16,0x0b
	.ascii "GL_CULL_FACE_MODE\0"
	.byte 0xc5,0x16,0x0b
	.ascii "GL_POLYGON_SMOOTH\0"
	.byte 0xc1,0x16,0x0b
	.ascii "GL_POLYGON_STIPPLE\0"
	.byte 0xc2,0x16,0x0b
	.ascii "GL_FRONT_FACE\0"
	.byte 0xc6,0x16,0x0b
	.ascii "GL_POLYGON_MODE\0"
	.byte 0xc0,0x16,0x0b
	.ascii "GL_POLYGON_OFFSET_FACTOR\0"
	.byte 0xb8,0x80,0x02,0x0b
	.ascii "GL_POLYGON_OFFSET_UNITS\0"
	.byte 0x80,0xd4,0x00,0x0b
	.ascii "GL_POLYGON_OFFSET_POINT\0"
	.byte 0x81,0xd4,0x00,0x0b
	.ascii "GL_POLYGON_OFFSET_LINE\0"
	.byte 0x82,0xd4,0x00,0x0b
	.ascii "GL_POLYGON_OFFSET_FILL\0"
	.byte 0xb7,0x80,0x02,0x0b
	.ascii "GL_COMPILE\0"
	.byte 0x80,0x26,0x0b
	.ascii "GL_COMPILE_AND_EXECUTE\0"
	.byte 0x81,0x26,0x0b
	.ascii "GL_LIST_BASE\0"
	.byte 0xb2,0x16,0x0b
	.ascii "GL_LIST_INDEX\0"
	.byte 0xb3,0x16,0x0b
	.ascii "GL_LIST_MODE\0"
	.byte 0xb0,0x16,0x0b
	.ascii "GL_NEVER\0"
	.byte 0x80,0x04,0x0b
	.ascii "GL_LESS\0"
	.byte 0x81,0x04,0x0b
	.ascii "GL_GEQUAL\0"
	.byte 0x86,0x04,0x0b
	.ascii "GL_LEQUAL\0"
	.byte 0x83,0x04,0x0b
	.ascii "GL_GREATER\0"
	.byte 0x84,0x04,0x0b
	.ascii "GL_NOTEQUAL\0"
	.byte 0x85,0x04,0x0b
	.ascii "GL_EQUAL\0"
	.byte 0x82,0x04,0x0b
	.ascii "GL_ALWAYS\0"
	.byte 0x87,0x04,0x0b
	.ascii "GL_DEPTH_TEST\0"
	.byte 0xf1,0x16,0x0b
	.ascii "GL_DEPTH_BITS\0"
	.byte 0xd6,0x1a,0x0b
	.ascii "GL_DEPTH_CLEAR_VALUE\0"
	.byte 0xf3,0x16,0x0b
	.ascii "GL_DEPTH_FUNC\0"
	.byte 0xf4,0x16,0x0b
	.ascii "GL_DEPTH_RANGE\0"
	.byte 0xf0,0x16,0x0b
	.ascii "GL_DEPTH_WRITEMASK\0"
	.byte 0xf2,0x16,0x0b
	.ascii "GL_DEPTH_COMPONENT\0"
	.byte 0x82,0x32,0x0b
	.ascii "GL_LIGHTING\0"
	.byte 0xd0,0x16,0x0b
	.ascii "GL_LIGHT0\0"
	.byte 0x80,0x80,0x01,0x0b
	.ascii "GL_LIGHT1\0"
	.byte 0x81,0x80,0x01,0x0b
	.ascii "GL_LIGHT2\0"
	.byte 0x82,0x80,0x01,0x0b
	.ascii "GL_LIGHT3\0"
	.byte 0x83,0x80,0x01,0x0b
	.ascii "GL_LIGHT4\0"
	.byte 0x84,0x80,0x01,0x0b
	.ascii "GL_LIGHT5\0"
	.byte 0x85,0x80,0x01,0x0b
	.ascii "GL_LIGHT6\0"
	.byte 0x86,0x80,0x01,0x0b
	.ascii "GL_LIGHT7\0"
	.byte 0x87,0x80,0x01,0x0b
	.ascii "GL_SPOT_EXPONENT\0"
	.byte 0x85,0x24,0x0b
	.ascii "GL_SPOT_CUTOFF\0"
	.byte 0x86,0x24,0x0b
	.ascii "GL_CONSTANT_ATTENUATION\0"
	.byte 0x87,0x24,0x0b
	.ascii "GL_LINEAR_ATTENUATION\0"
	.byte 0x88,0x24,0x0b
	.ascii "GL_QUADRATIC_ATTENUATION\0"
	.byte 0x89,0x24,0x0b
	.ascii "GL_AMBIENT\0"
	.byte 0x80,0x24,0x0b
	.ascii "GL_DIFFUSE\0"
	.byte 0x81,0x24,0x0b
	.ascii "GL_SPECULAR\0"
	.byte 0x82,0x24,0x0b
	.ascii "GL_SHININESS\0"
	.byte 0x81,0x2c,0x0b
	.ascii "GL_EMISSION\0"
	.byte 0x80,0x2c,0x0b
	.ascii "GL_POSITION\0"
	.byte 0x83,0x24,0x0b
	.ascii "GL_SPOT_DIRECTION\0"
	.byte 0x84,0x24,0x0b
	.ascii "GL_AMBIENT_AND_DIFFUSE\0"
	.byte 0x82,0x2c,0x0b
	.ascii "GL_COLOR_INDEXES\0"
	.byte 0x83,0x2c,0x0b
	.ascii "GL_LIGHT_MODEL_TWO_SIDE\0"
	.byte 0xd2,0x16,0x0b
	.ascii "GL_LIGHT_MODEL_LOCAL_VIEWER\0"
	.byte 0xd1,0x16,0x0b
	.ascii "GL_LIGHT_MODEL_AMBIENT\0"
	.byte 0xd3,0x16,0x0b
	.ascii "GL_FRONT_AND_BACK\0"
	.byte 0x88,0x08,0x0b
	.ascii "GL_SHADE_MODEL\0"
	.byte 0xd4,0x16,0x0b
	.ascii "GL_FLAT\0"
	.byte 0x80,0x3a,0x0b
	.ascii "GL_SMOOTH\0"
	.byte 0x81,0x3a,0x0b
	.ascii "GL_COLOR_MATERIAL\0"
	.byte 0xd7,0x16,0x0b
	.ascii "GL_COLOR_MATERIAL_FACE\0"
	.byte 0xd5,0x16,0x0b
	.ascii "GL_COLOR_MATERIAL_PARAMETER\0"
	.byte 0xd6,0x16,0x0b
	.ascii "GL_NORMALIZE\0"
	.byte 0xa1,0x17,0x0b
	.ascii "GL_CLIP_PLANE0\0"
	.byte 0x80,0xe0,0x00,0x0b
	.ascii "GL_CLIP_PLANE1\0"
	.byte 0x81,0xe0,0x00,0x0b
	.ascii "GL_CLIP_PLANE2\0"
	.byte 0x82,0xe0,0x00,0x0b
	.ascii "GL_CLIP_PLANE3\0"
	.byte 0x83,0xe0,0x00,0x0b
	.ascii "GL_CLIP_PLANE4\0"
	.byte 0x84,0xe0,0x00,0x0b
	.ascii "GL_CLIP_PLANE5\0"
	.byte 0x85,0xe0,0x00,0x0b
	.ascii "GL_ACCUM_RED_BITS\0"
	.byte 0xd8,0x1a,0x0b
	.ascii "GL_ACCUM_GREEN_BITS\0"
	.byte 0xd9,0x1a,0x0b
	.ascii "GL_ACCUM_BLUE_BITS\0"
	.byte 0xda,0x1a,0x0b
	.ascii "GL_ACCUM_ALPHA_BITS\0"
	.byte 0xdb,0x1a,0x0b
	.ascii "GL_ACCUM_CLEAR_VALUE\0"
	.byte 0x80,0x17,0x0b
	.ascii "GL_ACCUM\0"
	.byte 0x80,0x02,0x0b
	.ascii "GL_ADD\0"
	.byte 0x84,0x02,0x0b
	.ascii "GL_LOAD\0"
	.byte 0x81,0x02,0x0b
	.ascii "GL_MULT\0"
	.byte 0x83,0x02,0x0b
	.ascii "GL_RETURN\0"
	.byte 0x82,0x02,0x0b
	.ascii "GL_ALPHA_TEST\0"
	.byte 0xc0,0x17,0x0b
	.ascii "GL_ALPHA_TEST_REF\0"
	.byte 0xc2,0x17,0x0b
	.ascii "GL_ALPHA_TEST_FUNC\0"
	.byte 0xc1,0x17,0x0b
	.ascii "GL_BLEND\0"
	.byte 0xe2,0x17,0x0b
	.ascii "GL_BLEND_SRC\0"
	.byte 0xe1,0x17,0x0b
	.ascii "GL_BLEND_DST\0"
	.byte 0xe0,0x17,0x0b
	.ascii "GL_ZERO\0"
	.byte 0x00,0x0b
	.ascii "GL_ONE\0"
	.byte 0x01,0x0b
	.ascii "GL_SRC_COLOR\0"
	.byte 0x80,0x06,0x0b
	.ascii "GL_ONE_MINUS_SRC_COLOR\0"
	.byte 0x81,0x06,0x0b
	.ascii "GL_DST_COLOR\0"
	.byte 0x86,0x06,0x0b
	.ascii "GL_ONE_MINUS_DST_COLOR\0"
	.byte 0x87,0x06,0x0b
	.ascii "GL_SRC_ALPHA\0"
	.byte 0x82,0x06,0x0b
	.ascii "GL_ONE_MINUS_SRC_ALPHA\0"
	.byte 0x83,0x06,0x0b
	.ascii "GL_DST_ALPHA\0"
	.byte 0x84,0x06,0x0b
	.ascii "GL_ONE_MINUS_DST_ALPHA\0"
	.byte 0x85,0x06,0x0b
	.ascii "GL_SRC_ALPHA_SATURATE\0"
	.byte 0x88,0x06,0x0b
	.ascii "GL_CONSTANT_COLOR\0"
	.byte 0x81,0x80,0x02,0x0b
	.ascii "GL_ONE_MINUS_CONSTANT_COLOR\0"
	.byte 0x82,0x80,0x02,0x0b
	.ascii "GL_CONSTANT_ALPHA\0"
	.byte 0x83,0x80,0x02,0x0b
	.ascii "GL_ONE_MINUS_CONSTANT_ALPHA\0"
	.byte 0x84,0x80,0x02,0x0b
	.ascii "GL_FEEDBACK\0"
	.byte 0x81,0x38,0x0b
	.ascii "GL_RENDER\0"
	.byte 0x80,0x38,0x0b
	.ascii "GL_SELECT\0"
	.byte 0x82,0x38,0x0b
	.ascii "GL_2D\0"
	.byte 0x80,0x0c,0x0b
	.ascii "GL_3D\0"
	.byte 0x81,0x0c,0x0b
	.ascii "GL_3D_COLOR\0"
	.byte 0x82,0x0c,0x0b
	.ascii "GL_3D_COLOR_TEXTURE\0"
	.byte 0x83,0x0c,0x0b
	.ascii "GL_4D_COLOR_TEXTURE\0"
	.byte 0x84,0x0c,0x0b
	.ascii "GL_POINT_TOKEN\0"
	.byte 0x81,0x0e,0x0b
	.ascii "GL_LINE_TOKEN\0"
	.byte 0x82,0x0e,0x0b
	.ascii "GL_LINE_RESET_TOKEN\0"
	.byte 0x87,0x0e,0x0b
	.ascii "GL_POLYGON_TOKEN\0"
	.byte 0x83,0x0e,0x0b
	.ascii "GL_BITMAP_TOKEN\0"
	.byte 0x84,0x0e,0x0b
	.ascii "GL_DRAW_PIXEL_TOKEN\0"
	.byte 0x85,0x0e,0x0b
	.ascii "GL_COPY_PIXEL_TOKEN\0"
	.byte 0x86,0x0e,0x0b
	.ascii "GL_PASS_THROUGH_TOKEN\0"
	.byte 0x80,0x0e,0x0b
	.ascii "GL_FEEDBACK_BUFFER_POINTER\0"
	.byte 0xf0,0x1b,0x0b
	.ascii "GL_FEEDBACK_BUFFER_SIZE\0"
	.byte 0xf1,0x1b,0x0b
	.ascii "GL_FEEDBACK_BUFFER_TYPE\0"
	.byte 0xf2,0x1b,0x0b
	.ascii "GL_FOG\0"
	.byte 0xe0,0x16,0x0b
	.ascii "GL_FOG_MODE\0"
	.byte 0xe5,0x16,0x0b
	.ascii "GL_FOG_DENSITY\0"
	.byte 0xe2,0x16,0x0b
	.ascii "GL_FOG_COLOR\0"
	.byte 0xe6,0x16,0x0b
	.ascii "GL_FOG_INDEX\0"
	.byte 0xe1,0x16,0x0b
	.ascii "GL_FOG_START\0"
	.byte 0xe3,0x16,0x0b
	.ascii "GL_FOG_END\0"
	.byte 0xe4,0x16,0x0b
	.ascii "GL_LINEAR\0"
	.byte 0x81,0xcc,0x00,0x0b
	.ascii "GL_EXP\0"
	.byte 0x80,0x10,0x0b
	.ascii "GL_EXP2\0"
	.byte 0x81,0x10,0x0b
	.ascii "GL_LOGIC_OP\0"
	.byte 0xf1,0x17,0x0b
	.ascii "GL_INDEX_LOGIC_OP\0"
	.byte 0xf1,0x17,0x0b
	.ascii "GL_COLOR_LOGIC_OP\0"
	.byte 0xf2,0x17,0x0b
	.ascii "GL_LOGIC_OP_MODE\0"
	.byte 0xf0,0x17,0x0b
	.ascii "GL_CLEAR\0"
	.byte 0x80,0x2a,0x0b
	.ascii "GL_SET\0"
	.byte 0x8f,0x2a,0x0b
	.ascii "GL_COPY\0"
	.byte 0x83,0x2a,0x0b
	.ascii "GL_COPY_INVERTED\0"
	.byte 0x8c,0x2a,0x0b
	.ascii "GL_NOOP\0"
	.byte 0x85,0x2a,0x0b
	.ascii "GL_INVERT\0"
	.byte 0x8a,0x2a,0x0b
	.ascii "GL_AND\0"
	.byte 0x81,0x2a,0x0b
	.ascii "GL_NAND\0"
	.byte 0x8e,0x2a,0x0b
	.ascii "GL_OR\0"
	.byte 0x87,0x2a,0x0b
	.ascii "GL_NOR\0"
	.byte 0x88,0x2a,0x0b
	.ascii "GL_XOR\0"
	.byte 0x86,0x2a,0x0b
	.ascii "GL_EQUIV\0"
	.byte 0x89,0x2a,0x0b
	.ascii "GL_AND_REVERSE\0"
	.byte 0x82,0x2a,0x0b
	.ascii "GL_AND_INVERTED\0"
	.byte 0x84,0x2a,0x0b
	.ascii "GL_OR_REVERSE\0"
	.byte 0x8b,0x2a,0x0b
	.ascii "GL_OR_INVERTED\0"
	.byte 0x8d,0x2a,0x0b
	.ascii "GL_STENCIL_TEST\0"
	.byte 0x90,0x17,0x0b
	.ascii "GL_STENCIL_WRITEMASK\0"
	.byte 0x98,0x17,0x0b
	.ascii "GL_STENCIL_BITS\0"
	.byte 0xd7,0x1a,0x0b
	.ascii "GL_STENCIL_FUNC\0"
	.byte 0x92,0x17,0x0b
	.ascii "GL_STENCIL_VALUE_MASK\0"
	.byte 0x93,0x17,0x0b
	.ascii "GL_STENCIL_REF\0"
	.byte 0x97,0x17,0x0b
	.ascii "GL_STENCIL_FAIL\0"
	.byte 0x94,0x17,0x0b
	.ascii "GL_STENCIL_PASS_DEPTH_PASS\0"
	.byte 0x96,0x17,0x0b
	.ascii "GL_STENCIL_PASS_DEPTH_FAIL\0"
	.byte 0x95,0x17,0x0b
	.ascii "GL_STENCIL_CLEAR_VALUE\0"
	.byte 0x91,0x17,0x0b
	.ascii "GL_STENCIL_INDEX\0"
	.byte 0x81,0x32,0x0b
	.ascii "GL_KEEP\0"
	.byte 0x80,0x3c,0x0b
	.ascii "GL_REPLACE\0"
	.byte 0x81,0x3c,0x0b
	.ascii "GL_INCR\0"
	.byte 0x82,0x3c,0x0b
	.ascii "GL_DECR\0"
	.byte 0x83,0x3c,0x0b
	.ascii "GL_NONE\0"
	.byte 0x00,0x0b
	.ascii "GL_LEFT\0"
	.byte 0x86,0x08,0x0b
	.ascii "GL_RIGHT\0"
	.byte 0x87,0x08,0x0b
	.ascii "GL_FRONT_LEFT\0"
	.byte 0x80,0x08,0x0b
	.ascii "GL_FRONT_RIGHT\0"
	.byte 0x81,0x08,0x0b
	.ascii "GL_BACK_LEFT\0"
	.byte 0x82,0x08,0x0b
	.ascii "GL_BACK_RIGHT\0"
	.byte 0x83,0x08,0x0b
	.ascii "GL_AUX0\0"
	.byte 0x89,0x08,0x0b
	.ascii "GL_AUX1\0"
	.byte 0x8a,0x08,0x0b
	.ascii "GL_AUX2\0"
	.byte 0x8b,0x08,0x0b
	.ascii "GL_AUX3\0"
	.byte 0x8c,0x08,0x0b
	.ascii "GL_COLOR_INDEX\0"
	.byte 0x80,0x32,0x0b
	.ascii "GL_RED\0"
	.byte 0x83,0x32,0x0b
	.ascii "GL_GREEN\0"
	.byte 0x84,0x32,0x0b
	.ascii "GL_BLUE\0"
	.byte 0x85,0x32,0x0b
	.ascii "GL_ALPHA\0"
	.byte 0x86,0x32,0x0b
	.ascii "GL_LUMINANCE\0"
	.byte 0x89,0x32,0x0b
	.ascii "GL_LUMINANCE_ALPHA\0"
	.byte 0x8a,0x32,0x0b
	.ascii "GL_ALPHA_BITS\0"
	.byte 0xd5,0x1a,0x0b
	.ascii "GL_RED_BITS\0"
	.byte 0xd2,0x1a,0x0b
	.ascii "GL_GREEN_BITS\0"
	.byte 0xd3,0x1a,0x0b
	.ascii "GL_BLUE_BITS\0"
	.byte 0xd4,0x1a,0x0b
	.ascii "GL_INDEX_BITS\0"
	.byte 0xd1,0x1a,0x0b
	.ascii "GL_SUBPIXEL_BITS\0"
	.byte 0xd0,0x1a,0x0b
	.ascii "GL_AUX_BUFFERS\0"
	.byte 0x80,0x18,0x0b
	.ascii "GL_READ_BUFFER\0"
	.byte 0x82,0x18,0x0b
	.ascii "GL_DRAW_BUFFER\0"
	.byte 0x81,0x18,0x0b
	.ascii "GL_DOUBLEBUFFER\0"
	.byte 0xb2,0x18,0x0b
	.ascii "GL_STEREO\0"
	.byte 0xb3,0x18,0x0b
	.ascii "GL_BITMAP\0"
	.byte 0x80,0x34,0x0b
	.ascii "GL_COLOR\0"
	.byte 0x80,0x30,0x0b
	.ascii "GL_DEPTH\0"
	.byte 0x81,0x30,0x0b
	.ascii "GL_STENCIL\0"
	.byte 0x82,0x30,0x0b
	.ascii "GL_DITHER\0"
	.byte 0xd0,0x17,0x0b
	.ascii "GL_RGB\0"
	.byte 0x87,0x32,0x0b
	.ascii "GL_RGBA\0"
	.byte 0x88,0x32,0x0b
	.ascii "GL_MAX_LIST_NESTING\0"
	.byte 0xb1,0x16,0x0b
	.ascii "GL_MAX_ATTRIB_STACK_DEPTH\0"
	.byte 0xb5,0x1a,0x0b
	.ascii "GL_MAX_MODELVIEW_STACK_DEPTH\0"
	.byte 0xb6,0x1a,0x0b
	.ascii "GL_MAX_NAME_STACK_DEPTH\0"
	.byte 0xb7,0x1a,0x0b
	.ascii "GL_MAX_PROJECTION_STACK_DEPTH\0"
	.byte 0xb8,0x1a,0x0b
	.ascii "GL_MAX_TEXTURE_STACK_DEPTH\0"
	.byte 0xb9,0x1a,0x0b
	.ascii "GL_MAX_EVAL_ORDER\0"
	.byte 0xb0,0x1a,0x0b
	.ascii "GL_MAX_LIGHTS\0"
	.byte 0xb1,0x1a,0x0b
	.ascii "GL_MAX_CLIP_PLANES\0"
	.byte 0xb2,0x1a,0x0b
	.ascii "GL_MAX_TEXTURE_SIZE\0"
	.byte 0xb3,0x1a,0x0b
	.ascii "GL_MAX_PIXEL_MAP_TABLE\0"
	.byte 0xb4,0x1a,0x0b
	.ascii "GL_MAX_VIEWPORT_DIMS\0"
	.byte 0xba,0x1a,0x0b
	.ascii "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH\0"
	.byte 0xbb,0x1a,0x0b
	.ascii "GL_ATTRIB_STACK_DEPTH\0"
	.byte 0xb0,0x17,0x0b
	.ascii "GL_CLIENT_ATTRIB_STACK_DEPTH\0"
	.byte 0xb1,0x17,0x0b
	.ascii "GL_COLOR_CLEAR_VALUE\0"
	.byte 0xa2,0x18,0x0b
	.ascii "GL_COLOR_WRITEMASK\0"
	.byte 0xa3,0x18,0x0b
	.ascii "GL_CURRENT_INDEX\0"
	.byte 0x81,0x16,0x0b
	.ascii "GL_CURRENT_COLOR\0"
	.byte 0x80,0x16,0x0b
	.ascii "GL_CURRENT_NORMAL\0"
	.byte 0x82,0x16,0x0b
	.ascii "GL_CURRENT_RASTER_COLOR\0"
	.byte 0x84,0x16,0x0b
	.ascii "GL_CURRENT_RASTER_DISTANCE\0"
	.byte 0x89,0x16,0x0b
	.ascii "GL_CURRENT_RASTER_INDEX\0"
	.byte 0x85,0x16,0x0b
	.ascii "GL_CURRENT_RASTER_POSITION\0"
	.byte 0x87,0x16,0x0b
	.ascii "GL_CURRENT_RASTER_TEXTURE_COORDS\0"
	.byte 0x86,0x16,0x0b
	.ascii "GL_CURRENT_RASTER_POSITION_VALID\0"
	.byte 0x88,0x16,0x0b
	.ascii "GL_CURRENT_TEXTURE_COORDS\0"
	.byte 0x83,0x16,0x0b
	.ascii "GL_INDEX_CLEAR_VALUE\0"
	.byte 0xa0,0x18,0x0b
	.ascii "GL_INDEX_MODE\0"
	.byte 0xb0,0x18,0x0b
	.ascii "GL_INDEX_WRITEMASK\0"
	.byte 0xa1,0x18,0x0b
	.ascii "GL_MODELVIEW_MATRIX\0"
	.byte 0xa6,0x17,0x0b
	.ascii "GL_MODELVIEW_STACK_DEPTH\0"
	.byte 0xa3,0x17,0x0b
	.ascii "GL_NAME_STACK_DEPTH\0"
	.byte 0xf0,0x1a,0x0b
	.ascii "GL_PROJECTION_MATRIX\0"
	.byte 0xa7,0x17,0x0b
	.ascii "GL_PROJECTION_STACK_DEPTH\0"
	.byte 0xa4,0x17,0x0b
	.ascii "GL_RENDER_MODE\0"
	.byte 0xc0,0x18,0x0b
	.ascii "GL_RGBA_MODE\0"
	.byte 0xb1,0x18,0x0b
	.ascii "GL_TEXTURE_MATRIX\0"
	.byte 0xa8,0x17,0x0b
	.ascii "GL_TEXTURE_STACK_DEPTH\0"
	.byte 0xa5,0x17,0x0b
	.ascii "GL_VIEWPORT\0"
	.byte 0xa2,0x17,0x0b
	.ascii "GL_AUTO_NORMAL\0"
	.byte 0x80,0x1b,0x0b
	.ascii "GL_MAP1_COLOR_4\0"
	.byte 0x90,0x1b,0x0b
	.ascii "GL_MAP1_GRID_DOMAIN\0"
	.byte 0xd0,0x1b,0x0b
	.ascii "GL_MAP1_GRID_SEGMENTS\0"
	.byte 0xd1,0x1b,0x0b
	.ascii "GL_MAP1_INDEX\0"
	.byte 0x91,0x1b,0x0b
	.ascii "GL_MAP1_NORMAL\0"
	.byte 0x92,0x1b,0x0b
	.ascii "GL_MAP1_TEXTURE_COORD_1\0"
	.byte 0x93,0x1b,0x0b
	.ascii "GL_MAP1_TEXTURE_COORD_2\0"
	.byte 0x94,0x1b,0x0b
	.ascii "GL_MAP1_TEXTURE_COORD_3\0"
	.byte 0x95,0x1b,0x0b
	.ascii "GL_MAP1_TEXTURE_COORD_4\0"
	.byte 0x96,0x1b,0x0b
	.ascii "GL_MAP1_VERTEX_3\0"
	.byte 0x97,0x1b,0x0b
	.ascii "GL_MAP1_VERTEX_4\0"
	.byte 0x98,0x1b,0x0b
	.ascii "GL_MAP2_COLOR_4\0"
	.byte 0xb0,0x1b,0x0b
	.ascii "GL_MAP2_GRID_DOMAIN\0"
	.byte 0xd2,0x1b,0x0b
	.ascii "GL_MAP2_GRID_SEGMENTS\0"
	.byte 0xd3,0x1b,0x0b
	.ascii "GL_MAP2_INDEX\0"
	.byte 0xb1,0x1b,0x0b
	.ascii "GL_MAP2_NORMAL\0"
	.byte 0xb2,0x1b,0x0b
	.ascii "GL_MAP2_TEXTURE_COORD_1\0"
	.byte 0xb3,0x1b,0x0b
	.ascii "GL_MAP2_TEXTURE_COORD_2\0"
	.byte 0xb4,0x1b,0x0b
	.ascii "GL_MAP2_TEXTURE_COORD_3\0"
	.byte 0xb5,0x1b,0x0b
	.ascii "GL_MAP2_TEXTURE_COORD_4\0"
	.byte 0xb6,0x1b,0x0b
	.ascii "GL_MAP2_VERTEX_3\0"
	.byte 0xb7,0x1b,0x0b
	.ascii "GL_MAP2_VERTEX_4\0"
	.byte 0xb8,0x1b,0x0b
	.ascii "GL_COEFF\0"
	.byte 0x80,0x14,0x0b
	.ascii "GL_DOMAIN\0"
	.byte 0x82,0x14,0x0b
	.ascii "GL_ORDER\0"
	.byte 0x81,0x14,0x0b
	.ascii "GL_FOG_HINT\0"
	.byte 0xd4,0x18,0x0b
	.ascii "GL_LINE_SMOOTH_HINT\0"
	.byte 0xd2,0x18,0x0b
	.ascii "GL_PERSPECTIVE_CORRECTION_HINT\0"
	.byte 0xd0,0x18,0x0b
	.ascii "GL_POINT_SMOOTH_HINT\0"
	.byte 0xd1,0x18,0x0b
	.ascii "GL_POLYGON_SMOOTH_HINT\0"
	.byte 0xd3,0x18,0x0b
	.ascii "GL_DONT_CARE\0"
	.byte 0x80,0x22,0x0b
	.ascii "GL_FASTEST\0"
	.byte 0x81,0x22,0x0b
	.ascii "GL_NICEST\0"
	.byte 0x82,0x22,0x0b
	.ascii "GL_SCISSOR_TEST\0"
	.byte 0x91,0x18,0x0b
	.ascii "GL_SCISSOR_BOX\0"
	.byte 0x90,0x18,0x0b
	.ascii "GL_MAP_COLOR\0"
	.byte 0x90,0x1a,0x0b
	.ascii "GL_MAP_STENCIL\0"
	.byte 0x91,0x1a,0x0b
	.ascii "GL_INDEX_SHIFT\0"
	.byte 0x92,0x1a,0x0b
	.ascii "GL_INDEX_OFFSET\0"
	.byte 0x93,0x1a,0x0b
	.ascii "GL_RED_SCALE\0"
	.byte 0x94,0x1a,0x0b
	.ascii "GL_RED_BIAS\0"
	.byte 0x95,0x1a,0x0b
	.ascii "GL_GREEN_SCALE\0"
	.byte 0x98,0x1a,0x0b
	.ascii "GL_GREEN_BIAS\0"
	.byte 0x99,0x1a,0x0b
	.ascii "GL_BLUE_SCALE\0"
	.byte 0x9a,0x1a,0x0b
	.ascii "GL_BLUE_BIAS\0"
	.byte 0x9b,0x1a,0x0b
	.ascii "GL_ALPHA_SCALE\0"
	.byte 0x9c,0x1a,0x0b
	.ascii "GL_ALPHA_BIAS\0"
	.byte 0x9d,0x1a,0x0b
	.ascii "GL_DEPTH_SCALE\0"
	.byte 0x9e,0x1a,0x0b
	.ascii "GL_DEPTH_BIAS\0"
	.byte 0x9f,0x1a,0x0b
	.ascii "GL_PIXEL_MAP_S_TO_S_SIZE\0"
	.byte 0xb1,0x19,0x0b
	.ascii "GL_PIXEL_MAP_I_TO_I_SIZE\0"
	.byte 0xb0,0x19,0x0b
	.ascii "GL_PIXEL_MAP_I_TO_R_SIZE\0"
	.byte 0xb2,0x19,0x0b
	.ascii "GL_PIXEL_MAP_I_TO_G_SIZE\0"
	.byte 0xb3,0x19,0x0b
	.ascii "GL_PIXEL_MAP_I_TO_B_SIZE\0"
	.byte 0xb4,0x19,0x0b
	.ascii "GL_PIXEL_MAP_I_TO_A_SIZE\0"
	.byte 0xb5,0x19,0x0b
	.ascii "GL_PIXEL_MAP_R_TO_R_SIZE\0"
	.byte 0xb6,0x19,0x0b
	.ascii "GL_PIXEL_MAP_G_TO_G_SIZE\0"
	.byte 0xb7,0x19,0x0b
	.ascii "GL_PIXEL_MAP_B_TO_B_SIZE\0"
	.byte 0xb8,0x19,0x0b
	.ascii "GL_PIXEL_MAP_A_TO_A_SIZE\0"
	.byte 0xb9,0x19,0x0b
	.ascii "GL_PIXEL_MAP_S_TO_S\0"
	.byte 0xf1,0x18,0x0b
	.ascii "GL_PIXEL_MAP_I_TO_I\0"
	.byte 0xf0,0x18,0x0b
	.ascii "GL_PIXEL_MAP_I_TO_R\0"
	.byte 0xf2,0x18,0x0b
	.ascii "GL_PIXEL_MAP_I_TO_G\0"
	.byte 0xf3,0x18,0x0b
	.ascii "GL_PIXEL_MAP_I_TO_B\0"
	.byte 0xf4,0x18,0x0b
	.ascii "GL_PIXEL_MAP_I_TO_A\0"
	.byte 0xf5,0x18,0x0b
	.ascii "GL_PIXEL_MAP_R_TO_R\0"
	.byte 0xf6,0x18,0x0b
	.ascii "GL_PIXEL_MAP_G_TO_G\0"
	.byte 0xf7,0x18,0x0b
	.ascii "GL_PIXEL_MAP_B_TO_B\0"
	.byte 0xf8,0x18,0x0b
	.ascii "GL_PIXEL_MAP_A_TO_A\0"
	.byte 0xf9,0x18,0x0b
	.ascii "GL_PACK_ALIGNMENT\0"
	.byte 0x85,0x1a,0x0b
	.ascii "GL_PACK_LSB_FIRST\0"
	.byte 0x81,0x1a,0x0b
	.ascii "GL_PACK_ROW_LENGTH\0"
	.byte 0x82,0x1a,0x0b
	.ascii "GL_PACK_SKIP_PIXELS\0"
	.byte 0x84,0x1a,0x0b
	.ascii "GL_PACK_SKIP_ROWS\0"
	.byte 0x83,0x1a,0x0b
	.ascii "GL_PACK_SWAP_BYTES\0"
	.byte 0x80,0x1a,0x0b
	.ascii "GL_UNPACK_ALIGNMENT\0"
	.byte 0xf5,0x19,0x0b
	.ascii "GL_UNPACK_LSB_FIRST\0"
	.byte 0xf1,0x19,0x0b
	.ascii "GL_UNPACK_ROW_LENGTH\0"
	.byte 0xf2,0x19,0x0b
	.ascii "GL_UNPACK_SKIP_PIXELS\0"
	.byte 0xf4,0x19,0x0b
	.ascii "GL_UNPACK_SKIP_ROWS\0"
	.byte 0xf3,0x19,0x0b
	.ascii "GL_UNPACK_SWAP_BYTES\0"
	.byte 0xf0,0x19,0x0b
	.ascii "GL_ZOOM_X\0"
	.byte 0x96,0x1a,0x0b
	.ascii "GL_ZOOM_Y\0"
	.byte 0x97,0x1a,0x0b
	.ascii "GL_TEXTURE_ENV\0"
	.byte 0x80,0xc6,0x00,0x0b
	.ascii "GL_TEXTURE_ENV_MODE\0"
	.byte 0x80,0xc4,0x00,0x0b
	.ascii "GL_TEXTURE_1D\0"
	.byte 0xe0,0x1b,0x0b
	.ascii "GL_TEXTURE_2D\0"
	.byte 0xe1,0x1b,0x0b
	.ascii "GL_TEXTURE_WRAP_S\0"
	.byte 0x82,0xd0,0x00,0x0b
	.ascii "GL_TEXTURE_WRAP_T\0"
	.byte 0x83,0xd0,0x00,0x0b
	.ascii "GL_TEXTURE_MAG_FILTER\0"
	.byte 0x80,0xd0,0x00,0x0b
	.ascii "GL_TEXTURE_MIN_FILTER\0"
	.byte 0x81,0xd0,0x00,0x0b
	.ascii "GL_TEXTURE_ENV_COLOR\0"
	.byte 0x81,0xc4,0x00,0x0b
	.ascii "GL_TEXTURE_GEN_S\0"
	.byte 0xe0,0x18,0x0b
	.ascii "GL_TEXTURE_GEN_T\0"
	.byte 0xe1,0x18,0x0b
	.ascii "GL_TEXTURE_GEN_MODE\0"
	.byte 0x80,0xca,0x00,0x0b
	.ascii "GL_TEXTURE_BORDER_COLOR\0"
	.byte 0x84,0x20,0x0b
	.ascii "GL_TEXTURE_WIDTH\0"
	.byte 0x80,0x20,0x0b
	.ascii "GL_TEXTURE_HEIGHT\0"
	.byte 0x81,0x20,0x0b
	.ascii "GL_TEXTURE_BORDER\0"
	.byte 0x85,0x20,0x0b
	.ascii "GL_TEXTURE_COMPONENTS\0"
	.byte 0x83,0x20,0x0b
	.ascii "GL_TEXTURE_RED_SIZE\0"
	.byte 0xdc,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_GREEN_SIZE\0"
	.byte 0xdd,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_BLUE_SIZE\0"
	.byte 0xde,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_ALPHA_SIZE\0"
	.byte 0xdf,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_LUMINANCE_SIZE\0"
	.byte 0xe0,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_INTENSITY_SIZE\0"
	.byte 0xe1,0x80,0x02,0x0b
	.ascii "GL_NEAREST_MIPMAP_NEAREST\0"
	.byte 0x80,0xce,0x00,0x0b
	.ascii "GL_NEAREST_MIPMAP_LINEAR\0"
	.byte 0x82,0xce,0x00,0x0b
	.ascii "GL_LINEAR_MIPMAP_NEAREST\0"
	.byte 0x81,0xce,0x00,0x0b
	.ascii "GL_LINEAR_MIPMAP_LINEAR\0"
	.byte 0x83,0xce,0x00,0x0b
	.ascii "GL_OBJECT_LINEAR\0"
	.byte 0x81,0xc8,0x00,0x0b
	.ascii "GL_OBJECT_PLANE\0"
	.byte 0x81,0xca,0x00,0x0b
	.ascii "GL_EYE_LINEAR\0"
	.byte 0x80,0xc8,0x00,0x0b
	.ascii "GL_EYE_PLANE\0"
	.byte 0x82,0xca,0x00,0x0b
	.ascii "GL_SPHERE_MAP\0"
	.byte 0x82,0xc8,0x00,0x0b
	.ascii "GL_DECAL\0"
	.byte 0x81,0xc2,0x00,0x0b
	.ascii "GL_MODULATE\0"
	.byte 0x80,0xc2,0x00,0x0b
	.ascii "GL_NEAREST\0"
	.byte 0x80,0xcc,0x00,0x0b
	.ascii "GL_REPEAT\0"
	.byte 0x81,0xd2,0x00,0x0b
	.ascii "GL_CLAMP\0"
	.byte 0x80,0xd2,0x00,0x0b
	.ascii "GL_S\0"
	.byte 0x80,0xc0,0x00,0x0b
	.ascii "GL_T\0"
	.byte 0x81,0xc0,0x00,0x0b
	.ascii "GL_R\0"
	.byte 0x82,0xc0,0x00,0x0b
	.ascii "GL_Q\0"
	.byte 0x83,0xc0,0x00,0x0b
	.ascii "GL_TEXTURE_GEN_R\0"
	.byte 0xe2,0x18,0x0b
	.ascii "GL_TEXTURE_GEN_Q\0"
	.byte 0xe3,0x18,0x0b
	.ascii "GL_PROXY_TEXTURE_1D\0"
	.byte 0xe3,0x80,0x02,0x0b
	.ascii "GL_PROXY_TEXTURE_2D\0"
	.byte 0xe4,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_PRIORITY\0"
	.byte 0xe6,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_RESIDENT\0"
	.byte 0xe7,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_BINDING_1D\0"
	.byte 0xe8,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_BINDING_2D\0"
	.byte 0xe9,0x80,0x02,0x0b
	.ascii "GL_ALPHA4\0"
	.byte 0xbb,0x80,0x02,0x0b
	.ascii "GL_ALPHA8\0"
	.byte 0xbc,0x80,0x02,0x0b
	.ascii "GL_ALPHA12\0"
	.byte 0xbd,0x80,0x02,0x0b
	.ascii "GL_ALPHA16\0"
	.byte 0xbe,0x80,0x02,0x0b
	.ascii "GL_LUMINANCE4\0"
	.byte 0xbf,0x80,0x02,0x0b
	.ascii "GL_LUMINANCE8\0"
	.byte 0xc0,0x80,0x02,0x0b
	.ascii "GL_LUMINANCE12\0"
	.byte 0xc1,0x80,0x02,0x0b
	.ascii "GL_LUMINANCE16\0"
	.byte 0xc2,0x80,0x02,0x0b
	.ascii "GL_LUMINANCE4_ALPHA4\0"
	.byte 0xc3,0x80,0x02,0x0b
	.ascii "GL_LUMINANCE6_ALPHA2\0"
	.byte 0xc4,0x80,0x02,0x0b
	.ascii "GL_LUMINANCE8_ALPHA8\0"
	.byte 0xc5,0x80,0x02,0x0b
	.ascii "GL_LUMINANCE12_ALPHA4\0"
	.byte 0xc6,0x80,0x02,0x0b
	.ascii "GL_LUMINANCE12_ALPHA12\0"
	.byte 0xc7,0x80,0x02,0x0b
	.ascii "GL_LUMINANCE16_ALPHA16\0"
	.byte 0xc8,0x80,0x02,0x0b
	.ascii "GL_INTENSITY\0"
	.byte 0xc9,0x80,0x02,0x0b
	.ascii "GL_INTENSITY4\0"
	.byte 0xca,0x80,0x02,0x0b
	.ascii "GL_INTENSITY8\0"
	.byte 0xcb,0x80,0x02,0x0b
	.ascii "GL_INTENSITY12\0"
	.byte 0xcc,0x80,0x02,0x0b
	.ascii "GL_INTENSITY16\0"
	.byte 0xcd,0x80,0x02,0x0b
	.ascii "GL_R3_G3_B2\0"
	.byte 0x90,0xd4,0x00,0x0b
	.ascii "GL_RGB4\0"
	.byte 0xcf,0x80,0x02,0x0b
	.ascii "GL_RGB5\0"
	.byte 0xd0,0x80,0x02,0x0b
	.ascii "GL_RGB8\0"
	.byte 0xd1,0x80,0x02,0x0b
	.ascii "GL_RGB10\0"
	.byte 0xd2,0x80,0x02,0x0b
	.ascii "GL_RGB12\0"
	.byte 0xd3,0x80,0x02,0x0b
	.ascii "GL_RGB16\0"
	.byte 0xd4,0x80,0x02,0x0b
	.ascii "GL_RGBA2\0"
	.byte 0xd5,0x80,0x02,0x0b
	.ascii "GL_RGBA4\0"
	.byte 0xd6,0x80,0x02,0x0b
	.ascii "GL_RGB5_A1\0"
	.byte 0xd7,0x80,0x02,0x0b
	.ascii "GL_RGBA8\0"
	.byte 0xd8,0x80,0x02,0x0b
	.ascii "GL_RGB10_A2\0"
	.byte 0xd9,0x80,0x02,0x0b
	.ascii "GL_RGBA12\0"
	.byte 0xda,0x80,0x02,0x0b
	.ascii "GL_RGBA16\0"
	.byte 0xdb,0x80,0x02,0x0b
	.ascii "GL_VENDOR\0"
	.byte 0x80,0x3e,0x0b
	.ascii "GL_RENDERER\0"
	.byte 0x81,0x3e,0x0b
	.ascii "GL_VERSION\0"
	.byte 0x82,0x3e,0x0b
	.ascii "GL_EXTENSIONS\0"
	.byte 0x83,0x3e,0x0b
	.ascii "GL_INVALID_VALUE\0"
	.byte 0x81,0x0a,0x0b
	.ascii "GL_INVALID_ENUM\0"
	.byte 0x80,0x0a,0x0b
	.ascii "GL_INVALID_OPERATION\0"
	.byte 0x82,0x0a,0x0b
	.ascii "GL_STACK_OVERFLOW\0"
	.byte 0x83,0x0a,0x0b
	.ascii "GL_STACK_UNDERFLOW\0"
	.byte 0x84,0x0a,0x0b
	.ascii "GL_OUT_OF_MEMORY\0"
	.byte 0x85,0x0a,0x0b
	.ascii "GL_CONSTANT_COLOR_EXT\0"
	.byte 0x81,0x80,0x02,0x0b
	.ascii "GL_ONE_MINUS_CONSTANT_COLOR_EXT\0"
	.byte 0x82,0x80,0x02,0x0b
	.ascii "GL_CONSTANT_ALPHA_EXT\0"
	.byte 0x83,0x80,0x02,0x0b
	.ascii "GL_ONE_MINUS_CONSTANT_ALPHA_EXT\0"
	.byte 0x84,0x80,0x02,0x0b
	.ascii "GL_BLEND_EQUATION_EXT\0"
	.byte 0x89,0x80,0x02,0x0b
	.ascii "GL_MIN_EXT\0"
	.byte 0x87,0x80,0x02,0x0b
	.ascii "GL_MAX_EXT\0"
	.byte 0x88,0x80,0x02,0x0b
	.ascii "GL_FUNC_ADD_EXT\0"
	.byte 0x86,0x80,0x02,0x0b
	.ascii "GL_FUNC_SUBTRACT_EXT\0"
	.byte 0x8a,0x80,0x02,0x0b
	.ascii "GL_FUNC_REVERSE_SUBTRACT_EXT\0"
	.byte 0x8b,0x80,0x02,0x0b
	.ascii "GL_BLEND_COLOR_EXT\0"
	.byte 0x85,0x80,0x02,0x0b
	.ascii "GL_POLYGON_OFFSET_EXT\0"
	.byte 0xb7,0x80,0x02,0x0b
	.ascii "GL_POLYGON_OFFSET_FACTOR_EXT\0"
	.byte 0xb8,0x80,0x02,0x0b
	.ascii "GL_POLYGON_OFFSET_BIAS_EXT\0"
	.byte 0xb9,0x80,0x02,0x0b
	.ascii "GL_VERTEX_ARRAY_EXT\0"
	.byte 0xf4,0x80,0x02,0x0b
	.ascii "GL_NORMAL_ARRAY_EXT\0"
	.byte 0xf5,0x80,0x02,0x0b
	.ascii "GL_COLOR_ARRAY_EXT\0"
	.byte 0xf6,0x80,0x02,0x0b
	.ascii "GL_INDEX_ARRAY_EXT\0"
	.byte 0xf7,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_COORD_ARRAY_EXT\0"
	.byte 0xf8,0x80,0x02,0x0b
	.ascii "GL_EDGE_FLAG_ARRAY_EXT\0"
	.byte 0xf9,0x80,0x02,0x0b
	.ascii "GL_VERTEX_ARRAY_SIZE_EXT\0"
	.byte 0xfa,0x80,0x02,0x0b
	.ascii "GL_VERTEX_ARRAY_TYPE_EXT\0"
	.byte 0xfb,0x80,0x02,0x0b
	.ascii "GL_VERTEX_ARRAY_STRIDE_EXT\0"
	.byte 0xfc,0x80,0x02,0x0b
	.ascii "GL_VERTEX_ARRAY_COUNT_EXT\0"
	.byte 0xfd,0x80,0x02,0x0b
	.ascii "GL_NORMAL_ARRAY_TYPE_EXT\0"
	.byte 0xfe,0x80,0x02,0x0b
	.ascii "GL_NORMAL_ARRAY_STRIDE_EXT\0"
	.byte 0xff,0x80,0x02,0x0b
	.ascii "GL_NORMAL_ARRAY_COUNT_EXT\0"
	.byte 0x80,0x81,0x02,0x0b
	.ascii "GL_COLOR_ARRAY_SIZE_EXT\0"
	.byte 0x81,0x81,0x02,0x0b
	.ascii "GL_COLOR_ARRAY_TYPE_EXT\0"
	.byte 0x82,0x81,0x02,0x0b
	.ascii "GL_COLOR_ARRAY_STRIDE_EXT\0"
	.byte 0x83,0x81,0x02,0x0b
	.ascii "GL_COLOR_ARRAY_COUNT_EXT\0"
	.byte 0x84,0x81,0x02,0x0b
	.ascii "GL_INDEX_ARRAY_TYPE_EXT\0"
	.byte 0x85,0x81,0x02,0x0b
	.ascii "GL_INDEX_ARRAY_STRIDE_EXT\0"
	.byte 0x86,0x81,0x02,0x0b
	.ascii "GL_INDEX_ARRAY_COUNT_EXT\0"
	.byte 0x87,0x81,0x02,0x0b
	.ascii "GL_TEXTURE_COORD_ARRAY_SIZE_EXT\0"
	.byte 0x88,0x81,0x02,0x0b
	.ascii "GL_TEXTURE_COORD_ARRAY_TYPE_EXT\0"
	.byte 0x89,0x81,0x02,0x0b
	.ascii "GL_TEXTURE_COORD_ARRAY_STRIDE_EXT\0"
	.byte 0x8a,0x81,0x02,0x0b
	.ascii "GL_TEXTURE_COORD_ARRAY_COUNT_EXT\0"
	.byte 0x8b,0x81,0x02,0x0b
	.ascii "GL_EDGE_FLAG_ARRAY_STRIDE_EXT\0"
	.byte 0x8c,0x81,0x02,0x0b
	.ascii "GL_EDGE_FLAG_ARRAY_COUNT_EXT\0"
	.byte 0x8d,0x81,0x02,0x0b
	.ascii "GL_VERTEX_ARRAY_POINTER_EXT\0"
	.byte 0x8e,0x81,0x02,0x0b
	.ascii "GL_NORMAL_ARRAY_POINTER_EXT\0"
	.byte 0x8f,0x81,0x02,0x0b
	.ascii "GL_COLOR_ARRAY_POINTER_EXT\0"
	.byte 0x90,0x81,0x02,0x0b
	.ascii "GL_INDEX_ARRAY_POINTER_EXT\0"
	.byte 0x91,0x81,0x02,0x0b
	.ascii "GL_TEXTURE_COORD_ARRAY_POINTER_EXT\0"
	.byte 0x92,0x81,0x02,0x0b
	.ascii "GL_EDGE_FLAG_ARRAY_POINTER_EXT\0"
	.byte 0x93,0x81,0x02,0x0b
	.ascii "GL_TEXTURE_PRIORITY_EXT\0"
	.byte 0xe6,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_RESIDENT_EXT\0"
	.byte 0xe7,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_1D_BINDING_EXT\0"
	.byte 0xe8,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_2D_BINDING_EXT\0"
	.byte 0xe9,0x80,0x02,0x0b
	.ascii "GL_PACK_SKIP_IMAGES_EXT\0"
	.byte 0xeb,0x80,0x02,0x0b
	.ascii "GL_PACK_IMAGE_HEIGHT_EXT\0"
	.byte 0xec,0x80,0x02,0x0b
	.ascii "GL_UNPACK_SKIP_IMAGES_EXT\0"
	.byte 0xed,0x80,0x02,0x0b
	.ascii "GL_UNPACK_IMAGE_HEIGHT_EXT\0"
	.byte 0xee,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_3D_EXT\0"
	.byte 0xef,0x80,0x02,0x0b
	.ascii "GL_PROXY_TEXTURE_3D_EXT\0"
	.byte 0xf0,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_DEPTH_EXT\0"
	.byte 0xf1,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_WRAP_R_EXT\0"
	.byte 0xf2,0x80,0x02,0x0b
	.ascii "GL_MAX_3D_TEXTURE_SIZE_EXT\0"
	.byte 0xf3,0x80,0x02,0x0b
	.ascii "GL_TEXTURE_3D_BINDING_EXT\0"
	.byte 0xea,0x80,0x02,0x0b
	.ascii "GL_TABLE_TOO_LARGE_EXT\0"
	.byte 0xb1,0x80,0x02,0x0b
	.ascii "GL_COLOR_TABLE_FORMAT_EXT\0"
	.byte 0xd8,0x81,0x02,0x0b
	.ascii "GL_COLOR_TABLE_WIDTH_EXT\0"
	.byte 0xd9,0x81,0x02,0x0b
	.ascii "GL_COLOR_TABLE_RED_SIZE_EXT\0"
	.byte 0xda,0x81,0x02,0x0b
	.ascii "GL_COLOR_TABLE_GREEN_SIZE_EXT\0"
	.byte 0xdb,0x81,0x02,0x0b
	.ascii "GL_COLOR_TABLE_BLUE_SIZE_EXT\0"
	.byte 0xdc,0x81,0x02,0x0b
	.ascii "GL_COLOR_TABLE_ALPHA_SIZE_EXT\0"
	.byte 0xdd,0x81,0x02,0x0b
	.ascii "GL_COLOR_TABLE_LUMINANCE_SIZE_EXT\0"
	.byte 0xde,0x81,0x02,0x0b
	.ascii "GL_COLOR_TABLE_INTENSITY_SIZE_EXT\0"
	.byte 0xdf,0x81,0x02,0x0b
	.ascii "GL_TEXTURE_INDEX_SIZE_EXT\0"
	.byte 0xe1,0x81,0x02,0x0b
	.ascii "GL_COLOR_INDEX1_EXT\0"
	.byte 0xe2,0x81,0x02,0x0b
	.ascii "GL_COLOR_INDEX2_EXT\0"
	.byte 0xe3,0x81,0x02,0x0b
	.ascii "GL_COLOR_INDEX4_EXT\0"
	.byte 0xe4,0x81,0x02,0x0b
	.ascii "GL_COLOR_INDEX8_EXT\0"
	.byte 0xe5,0x81,0x02,0x0b
	.ascii "GL_COLOR_INDEX12_EXT\0"
	.byte 0xe6,0x81,0x02,0x0b
	.ascii "GL_COLOR_INDEX16_EXT\0"
	.byte 0xe7,0x81,0x02,0x0b
	.ascii "GL_SHARED_TEXTURE_PALETTE_EXT\0"
	.byte 0xfb,0x83,0x02,0x0b
	.ascii "GL_POINT_SIZE_MIN_EXT\0"
	.byte 0xa6,0x82,0x02,0x0b
	.ascii "GL_POINT_SIZE_MAX_EXT\0"
	.byte 0xa7,0x82,0x02,0x0b
	.ascii "GL_POINT_FADE_THRESHOLD_SIZE_EXT\0"
	.byte 0xa8,0x82,0x02,0x0b
	.ascii "GL_DISTANCE_ATTENUATION_EXT\0"
	.byte 0xa9,0x82,0x02,0x00,0x05,0x00,0x00,0x01
	.byte 0xb0
	.ascii "GLenum\0"
	.byte 0x03,0x04
	.ascii "unsigned char\0"
	.byte 0x08,0x01,0x05,0x00,0x00,0x31,0x59
	.ascii "GLubyte\0"
	.byte 0x03,0x07,0x00,0x00,0x31,0x6a,0x04
	.ascii "void\0"
	.byte 0x05,0x00,0x07,0x00,0x00,0x31,0x7d,0x0c
	.ascii "gl_texture_image\0"
	.byte 0x3c,0x02,0x00,0x00,0x32,0x93,0x0d
	.ascii "Format\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x00,0x0d
	.ascii "IntFormat\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x04,0x0d
	.ascii "Border\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x08,0x0d
	.ascii "Width\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x0c,0x0d
	.ascii "Height\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x10,0x0d
	.ascii "Depth\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x14,0x0d
	.ascii "Width2\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x18,0x0d
	.ascii "Height2\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x1c,0x0d
	.ascii "Depth2\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x20,0x0d
	.ascii "WidthLog2\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x24,0x0d
	.ascii "HeightLog2\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x28,0x0d
	.ascii "DepthLog2\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x2c,0x0d
	.ascii "MaxLog2\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x30,0x0d
	.ascii "Data\0"
	.byte 0x00,0x00,0x31,0x78,0x02,0x23,0x34,0x0d
	.ascii "DriverData\0"
	.byte 0x00,0x00,0x31,0x85,0x02,0x23,0x38,0x00
	.byte 0x07,0x00,0x00,0x31,0x8a,0x08,0x00,0x00
	.byte 0x32,0x93,0x2c,0x00,0x00,0x32,0xa9,0x09
	.byte 0x00,0x00,0x01,0x97,0x0a,0x00,0x0e,0x00
	.byte 0x00,0x31,0x6a,0x04,0x00,0x00,0x00,0x32
	.byte 0xbc,0x0f,0x00,0x00,0x01,0x97,0x03,0xff
	.byte 0x00,0x05,0x00,0x00,0x31,0x59
	.ascii "GLboolean\0"
	.byte 0x03,0x10
	.ascii "gl_texture_object\0"
	.byte 0x04,0x84,0x02,0x00,0x00,0x34,0x5b,0x0d
	.ascii "RefCount\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x00,0x0d
	.ascii "Name\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x04,0x0d
	.ascii "Dimensions\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x08,0x0d
	.ascii "Priority\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x0c,0x0d
	.ascii "BorderColor\0"
	.byte 0x00,0x00,0x01,0x9f,0x02,0x23,0x10,0x0d
	.ascii "WrapS\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x20,0x0d
	.ascii "WrapT\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x24,0x0d
	.ascii "WrapR\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x28,0x0d
	.ascii "MinFilter\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x2c,0x0d
	.ascii "MagFilter\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x30,0x0d
	.ascii "MinMagThresh\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x34,0x0d
	.ascii "Image\0"
	.byte 0x00,0x00,0x32,0x98,0x02,0x23,0x38,0x0d
	.ascii "Palette\0"
	.byte 0x00,0x00,0x32,0xa9,0x02,0x23,0x64,0x0d
	.ascii "PaletteSize\0"
	.byte 0x00,0x00,0x01,0x73,0x03,0x23,0xe4,0x08
	.byte 0x0d
	.ascii "PaletteIntFormat\0"
	.byte 0x00,0x00,0x31,0x4c,0x03,0x23,0xe8,0x08
	.byte 0x0d
	.ascii "PaletteFormat\0"
	.byte 0x00,0x00,0x31,0x4c,0x03,0x23,0xec,0x08
	.byte 0x0d
	.ascii "Dirty\0"
	.byte 0x00,0x00,0x32,0xbc,0x03,0x23,0xf0,0x08
	.byte 0x0d
	.ascii "DriverData\0"
	.byte 0x00,0x00,0x31,0x85,0x03,0x23,0xf4,0x08
	.byte 0x0d
	.ascii "Complete\0"
	.byte 0x00,0x00,0x32,0xbc,0x03,0x23,0xf8,0x08
	.byte 0x0d
	.ascii "SampleFunc\0"
	.byte 0x00,0x00,0x34,0xd1,0x03,0x23,0xfc,0x08
	.byte 0x0d
	.ascii "Next\0"
	.byte 0x00,0x00,0x34,0xe9,0x03,0x23,0x80,0x09
	.byte 0x00,0x11,0x00,0x00,0x32,0xcc,0x07,0x00
	.byte 0x00,0x34,0x5b,0x11,0x00,0x00,0x01,0x80
	.byte 0x07,0x00,0x00,0x34,0x65,0x11,0x00,0x00
	.byte 0x01,0x80,0x07,0x00,0x00,0x34,0x6f,0x11
	.byte 0x00,0x00,0x01,0x80,0x07,0x00,0x00,0x34
	.byte 0x79,0x11,0x00,0x00,0x01,0x80,0x07,0x00
	.byte 0x00,0x34,0x83,0x07,0x00,0x00,0x31,0x59
	.byte 0x12,0x01,0x01,0x00,0x00,0x34,0xcc,0x13
	.byte 0x00,0x00,0x34,0x60,0x13,0x00,0x00,0x01
	.byte 0x67,0x13,0x00,0x00,0x34,0x6a,0x13,0x00
	.byte 0x00,0x34,0x74,0x13,0x00,0x00,0x34,0x7e
	.byte 0x13,0x00,0x00,0x34,0x88,0x13,0x00,0x00
	.byte 0x34,0x8d,0x13,0x00,0x00,0x34,0x8d,0x13
	.byte 0x00,0x00,0x34,0x8d,0x13,0x00,0x00,0x34
	.byte 0x8d,0x00,0x07,0x00,0x00,0x34,0x92,0x05
	.byte 0x00,0x00,0x34,0xcc
	.ascii "TextureSampleFunc\0"
	.byte 0x02,0x07,0x00,0x00,0x32,0xcc,0x0c
	.ascii "gl_shared_state\0"
	.byte 0x1c,0x02,0x00,0x00,0x35,0x8a,0x0d
	.ascii "RefCount\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x00,0x0d
	.ascii "DisplayList\0"
	.byte 0x00,0x00,0x01,0x62,0x02,0x23,0x04,0x0d
	.ascii "TexObjects\0"
	.byte 0x00,0x00,0x01,0x62,0x02,0x23,0x08,0x0d
	.ascii "TexObjectList\0"
	.byte 0x00,0x00,0x34,0xe9,0x02,0x23,0x0c,0x0d
	.ascii "Default1D\0"
	.byte 0x00,0x00,0x34,0xe9,0x02,0x23,0x10,0x0d
	.ascii "Default2D\0"
	.byte 0x00,0x00,0x34,0xe9,0x02,0x23,0x14,0x0d
	.ascii "Default3D\0"
	.byte 0x00,0x00,0x34,0xe9,0x02,0x23,0x18,0x00
	.byte 0x07,0x00,0x00,0x34,0xee,0x10
	.ascii "gl_context\0"
	.byte 0xe1,0x40,0x02,0x00,0x00,0x3c,0x5c,0x0d
	.ascii "Shared\0"
	.byte 0x00,0x00,0x35,0x8a,0x02,0x23,0x00,0x0d
	.ascii "API\0"
	.byte 0x00,0x00,0x55,0x47,0x02,0x23,0x04,0x0d
	.ascii "Save\0"
	.byte 0x00,0x00,0x55,0x47,0x03,0x23,0xe0,0x05
	.byte 0x0d
	.ascii "Exec\0"
	.byte 0x00,0x00,0x55,0x47,0x03,0x23,0xbc,0x0b
	.byte 0x0d
	.ascii "Visual\0"
	.byte 0x00,0x00,0x65,0xa2,0x03,0x23,0x98,0x11
	.byte 0x0d
	.ascii "Buffer\0"
	.byte 0x00,0x00,0x66,0xd6,0x03,0x23,0x9c,0x11
	.byte 0x0d
	.ascii "Driver\0"
	.byte 0x00,0x00,0x6f,0xe5,0x03,0x23,0xa0,0x11
	.byte 0x0d
	.ascii "DriverCtx\0"
	.byte 0x00,0x00,0x31,0x85,0x03,0x23,0xf4,0x12
	.byte 0x0d
	.ascii "DriverMgrCtx\0"
	.byte 0x00,0x00,0x31,0x85,0x03,0x23,0xf8,0x12
	.byte 0x0d
	.ascii "NewModelViewMatrix\0"
	.byte 0x00,0x00,0x32,0xbc,0x03,0x23,0xfc,0x12
	.byte 0x0d
	.ascii "ModelViewMatrixType\0"
	.byte 0x00,0x00,0x01,0x73,0x03,0x23,0x80,0x13
	.byte 0x0d
	.ascii "ModelViewMatrix\0"
	.byte 0x00,0x00,0x74,0x4d,0x03,0x23,0x84,0x13
	.byte 0x0d
	.ascii "ModelViewInv\0"
	.byte 0x00,0x00,0x74,0x5e,0x03,0x23,0xc4,0x13
	.byte 0x0d
	.ascii "ModelViewStackDepth\0"
	.byte 0x00,0x00,0x01,0x73,0x03,0x23,0x84,0x14
	.byte 0x0d
	.ascii "ModelViewStack\0"
	.byte 0x00,0x00,0x74,0x80,0x03,0x23,0x88,0x14
	.byte 0x0d
	.ascii "NewProjectionMatrix\0"
	.byte 0x00,0x00,0x32,0xbc,0x03,0x23,0x88,0x24
	.byte 0x0d
	.ascii "ProjectionMatrixType\0"
	.byte 0x00,0x00,0x01,0x73,0x03,0x23,0x8c,0x24
	.byte 0x0d
	.ascii "ProjectionMatrix\0"
	.byte 0x00,0x00,0x74,0x92,0x03,0x23,0x90,0x24
	.byte 0x0d
	.ascii "ProjectionStackDepth\0"
	.byte 0x00,0x00,0x01,0x73,0x03,0x23,0xd0,0x24
	.byte 0x0d
	.ascii "ProjectionStack\0"
	.byte 0x00,0x00,0x74,0xb4,0x03,0x23,0xd4,0x24
	.byte 0x0d
	.ascii "NearFarStack\0"
	.byte 0x00,0x00,0x74,0xd7,0x03,0x23,0xd4,0x34
	.byte 0x0d
	.ascii "NewTextureMatrix\0"
	.byte 0x00,0x00,0x32,0xbc,0x03,0x23,0xd4,0x36
	.byte 0x0d
	.ascii "TextureMatrixType\0"
	.byte 0x00,0x00,0x01,0x73,0x03,0x23,0xd8,0x36
	.byte 0x0d
	.ascii "TextureMatrix\0"
	.byte 0x00,0x00,0x74,0xe9,0x03,0x23,0xdc,0x36
	.byte 0x0d
	.ascii "TextureStackDepth\0"
	.byte 0x00,0x00,0x01,0x73,0x03,0x23,0x9c,0x37
	.byte 0x0d
	.ascii "TextureStack\0"
	.byte 0x00,0x00,0x75,0x0b,0x03,0x23,0xa0,0x37
	.byte 0x0d
	.ascii "CallDepth\0"
	.byte 0x00,0x00,0x01,0x73,0x03,0x23,0xa0,0x3c
	.byte 0x0d
	.ascii "ExecuteFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x03,0x23,0xa4,0x3c
	.byte 0x0d
	.ascii "CompileFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x03,0x23,0xa5,0x3c
	.byte 0x0d
	.ascii "AttribStackDepth\0"
	.byte 0x00,0x00,0x01,0x73,0x03,0x23,0xa8,0x3c
	.byte 0x0d
	.ascii "AttribStack\0"
	.byte 0x00,0x00,0x75,0x71,0x03,0x23,0xac,0x3c
	.byte 0x0d
	.ascii "Accum\0"
	.byte 0x00,0x00,0x75,0x93,0x03,0x23,0xec,0x3c
	.byte 0x0d
	.ascii "Color\0"
	.byte 0x00,0x00,0x75,0xe0,0x03,0x23,0xfc,0x3c
	.byte 0x0d
	.ascii "Current\0"
	.byte 0x00,0x00,0x77,0xf5,0x03,0x23,0xd4,0x3d
	.byte 0x0d
	.ascii "Depth\0"
	.byte 0x00,0x00,0x78,0xdf,0x03,0x23,0xb4,0x3e
	.byte 0x0d
	.ascii "Eval\0"
	.byte 0x00,0x00,0x79,0x32,0x03,0x23,0xc0,0x3e
	.byte 0x0d
	.ascii "Fog\0"
	.byte 0x00,0x00,0x7b,0xa8,0x03,0x23,0xf8,0x3e
	.byte 0x0d
	.ascii "Hint\0"
	.byte 0x00,0x00,0x7c,0x21,0x03,0x23,0xa0,0x3f
	.byte 0x0d
	.ascii "Light\0"
	.byte 0x00,0x00,0x81,0x2c,0x03,0x23,0xb4,0x3f
	.byte 0x0d
	.ascii "Line\0"
	.byte 0x00,0x00,0x82,0x5c,0x04,0x23,0x88,0xdc
	.byte 0x02,0x0d
	.ascii "List\0"
	.byte 0x00,0x00,0x82,0xd5,0x04,0x23,0x94,0xdc
	.byte 0x02,0x0d
	.ascii "Pixel\0"
	.byte 0x00,0x00,0x83,0xbb,0x04,0x23,0x98,0xdc
	.byte 0x02,0x0d
	.ascii "Point\0"
	.byte 0x00,0x00,0x86,0x8b,0x04,0x23,0x80,0xad
	.byte 0x03,0x0d
	.ascii "Polygon\0"
	.byte 0x00,0x00,0x87,0x04,0x04,0x23,0xa0,0xad
	.byte 0x03,0x0d
	.ascii "PolygonStipple\0"
	.byte 0x00,0x00,0x88,0x37,0x04,0x23,0xc8,0xad
	.byte 0x03,0x0d
	.ascii "Scissor\0"
	.byte 0x00,0x00,0x88,0x56,0x04,0x23,0xc8,0xae
	.byte 0x03,0x0d
	.ascii "Stencil\0"
	.byte 0x00,0x00,0x88,0xb1,0x04,0x23,0xdc,0xae
	.byte 0x03,0x0d
	.ascii "Texture\0"
	.byte 0x00,0x00,0x8a,0x0b,0x04,0x23,0xf4,0xae
	.byte 0x03,0x0d
	.ascii "Transform\0"
	.byte 0x00,0x00,0x8c,0x6d,0x04,0x23,0xcc,0xb8
	.byte 0x03,0x0d
	.ascii "Viewport\0"
	.byte 0x00,0x00,0x8c,0xe7,0x04,0x23,0xb8,0xb9
	.byte 0x03,0x0d
	.ascii "ClientAttribStackDepth\0"
	.byte 0x00,0x00,0x01,0x73,0x04,0x23,0xe8,0xb9
	.byte 0x03,0x0d
	.ascii "ClientAttribStack\0"
	.byte 0x00,0x00,0x8d,0x8e,0x04,0x23,0xec,0xb9
	.byte 0x03,0x0d
	.ascii "Array\0"
	.byte 0x00,0x00,0x8d,0xa4,0x04,0x23,0xac,0xba
	.byte 0x03,0x0d
	.ascii "Pack\0"
	.byte 0x00,0x00,0x90,0x4f,0x04,0x23,0xac,0xbb
	.byte 0x03,0x0d
	.ascii "Unpack\0"
	.byte 0x00,0x00,0x90,0x4f,0x04,0x23,0xc8,0xbb
	.byte 0x03,0x0d
	.ascii "EvalMap\0"
	.byte 0x00,0x00,0x91,0xd1,0x04,0x23,0xe4,0xbb
	.byte 0x03,0x0d
	.ascii "Feedback\0"
	.byte 0x00,0x00,0x93,0x5b,0x04,0x23,0xb8,0xbf
	.byte 0x03,0x0d
	.ascii "Select\0"
	.byte 0x00,0x00,0x93,0xd0,0x04,0x23,0xcc,0xbf
	.byte 0x03,0x0d
	.ascii "ErrorValue\0"
	.byte 0x00,0x00,0x31,0x4c,0x04,0x23,0xec,0xc1
	.byte 0x03,0x0d
	.ascii "DirectContext\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0xf0,0xc1
	.byte 0x03,0x0d
	.ascii "NewState\0"
	.byte 0x00,0x00,0x01,0x73,0x04,0x23,0xf4,0xc1
	.byte 0x03,0x0d
	.ascii "RenderMode\0"
	.byte 0x00,0x00,0x31,0x4c,0x04,0x23,0xf8,0xc1
	.byte 0x03,0x0d
	.ascii "Primitive\0"
	.byte 0x00,0x00,0x31,0x4c,0x04,0x23,0xfc,0xc1
	.byte 0x03,0x0d
	.ascii "StippleCounter\0"
	.byte 0x00,0x00,0x01,0x73,0x04,0x23,0x80,0xc2
	.byte 0x03,0x0d
	.ascii "ClipMask\0"
	.byte 0x00,0x00,0x01,0x73,0x04,0x23,0x84,0xc2
	.byte 0x03,0x0d
	.ascii "RasterMask\0"
	.byte 0x00,0x00,0x01,0x73,0x04,0x23,0x88,0xc2
	.byte 0x03,0x0d
	.ascii "LightTwoSide\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0x8c,0xc2
	.byte 0x03,0x0d
	.ascii "DirectTriangles\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0x8d,0xc2
	.byte 0x03,0x0d
	.ascii "PolygonZoffset\0"
	.byte 0x00,0x00,0x01,0x89,0x04,0x23,0x90,0xc2
	.byte 0x03,0x0d
	.ascii "LineZoffset\0"
	.byte 0x00,0x00,0x01,0x89,0x04,0x23,0x94,0xc2
	.byte 0x03,0x0d
	.ascii "PointZoffset\0"
	.byte 0x00,0x00,0x01,0x89,0x04,0x23,0x98,0xc2
	.byte 0x03,0x0d
	.ascii "NeedNormals\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0x9c,0xc2
	.byte 0x03,0x0d
	.ascii "FastDrawPixels\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0x9d,0xc2
	.byte 0x03,0x0d
	.ascii "MutablePixels\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0x9e,0xc2
	.byte 0x03,0x0d
	.ascii "MonoPixels\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0x9f,0xc2
	.byte 0x03,0x0d
	.ascii "PointsFunc\0"
	.byte 0x00,0x00,0x6d,0x20,0x04,0x23,0xa0,0xc2
	.byte 0x03,0x0d
	.ascii "LineFunc\0"
	.byte 0x00,0x00,0x6d,0x53,0x04,0x23,0xa4,0xc2
	.byte 0x03,0x0d
	.ascii "TriangleFunc\0"
	.byte 0x00,0x00,0x6d,0x89,0x04,0x23,0xa8,0xc2
	.byte 0x03,0x0d
	.ascii "QuadFunc\0"
	.byte 0x00,0x00,0x6d,0xc8,0x04,0x23,0xac,0xc2
	.byte 0x03,0x0d
	.ascii "RectFunc\0"
	.byte 0x00,0x00,0x6d,0xfe,0x04,0x23,0xb0,0xc2
	.byte 0x03,0x0d
	.ascii "VB\0"
	.byte 0x00,0x00,0x94,0x95,0x04,0x23,0xb4,0xc2
	.byte 0x03,0x0d
	.ascii "PB\0"
	.byte 0x00,0x00,0x96,0x8d,0x04,0x23,0xb8,0xc2
	.byte 0x03,0x0d
	.ascii "NoRaster\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0xbc,0xc2
	.byte 0x03,0x0d
	.ascii "NoDither\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0xbd,0xc2
	.byte 0x03,0x00,0x07,0x00,0x00,0x35,0x8f,0x12
	.byte 0x01,0x01,0x00,0x00,0x3c,0x78,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0
	.byte 0x13,0x00,0x00,0x01,0x80,0x00,0x07,0x00
	.byte 0x00,0x3c,0x61,0x12,0x01,0x01,0x00,0x00
	.byte 0x3c,0x94,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0xb0,0x13,0x00,0x00,0x01
	.byte 0x80,0x00,0x07,0x00,0x00,0x3c,0x7d,0x11
	.byte 0x00,0x00,0x01,0x67,0x07,0x00,0x00,0x3c
	.byte 0x99,0x14,0x01,0x00,0x00,0x31,0x59,0x01
	.byte 0x00,0x00,0x3c,0xc3,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x3c,0x9e,0x13,0x00,0x00,0x34,0x8d
	.byte 0x00,0x07,0x00,0x00,0x3c,0xa3,0x12,0x01
	.byte 0x01,0x00,0x00,0x3c,0xda,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0x43,0x00
	.byte 0x07,0x00,0x00,0x3c,0xc8,0x12,0x01,0x01
	.byte 0x00,0x00,0x3c,0xf1,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0xb0,0x00,0x07
	.byte 0x00,0x00,0x3c,0xdf,0x12,0x01,0x01,0x00
	.byte 0x00,0x3d,0x0d,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x01,0x67,0x00,0x07,0x00,0x00,0x3c,0xf6
	.byte 0x05,0x00,0x00,0x31,0x7d
	.ascii "GLvoid\0"
	.byte 0x03,0x07,0x00,0x00,0x3d,0x12,0x0c
	.ascii "gl_image\0"
	.byte 0x24,0x02,0x00,0x00,0x3d,0xc1,0x0d
	.ascii "Width\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x00,0x0d
	.ascii "Height\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x04,0x0d
	.ascii "Depth\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x08,0x0d
	.ascii "Components\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x0c,0x0d
	.ascii "Format\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x10,0x0d
	.ascii "Type\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x14,0x0d
	.ascii "Data\0"
	.byte 0x00,0x00,0x3d,0x1f,0x02,0x23,0x18,0x0d
	.ascii "Interleaved\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x1c,0x0d
	.ascii "RefCount\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x20,0x00
	.byte 0x11,0x00,0x00,0x3d,0x24,0x07,0x00,0x00
	.byte 0x3d,0xc1,0x12,0x01,0x01,0x00,0x00,0x3d
	.byte 0xfb,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0x80,0x13,0x00,0x00
	.byte 0x01,0x80,0x13,0x00,0x00,0x01,0x80,0x13
	.byte 0x00,0x00,0x01,0x80,0x13,0x00,0x00,0x3d
	.byte 0xc6,0x00,0x07,0x00,0x00,0x3d,0xcb,0x12
	.byte 0x01,0x01,0x00,0x00,0x3e,0x21,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0x80
	.byte 0x13,0x00,0x00,0x01,0x80,0x13,0x00,0x00
	.byte 0x01,0x80,0x13,0x00,0x00,0x01,0x80,0x00
	.byte 0x07,0x00,0x00,0x3e,0x00,0x12,0x01,0x01
	.byte 0x00,0x00,0x3e,0x38,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0xb0,0x00,0x07
	.byte 0x00,0x00,0x3e,0x26,0x12,0x01,0x01,0x00
	.byte 0x00,0x3e,0x54,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x01,0xb0,0x00,0x07,0x00,0x00,0x3e,0x3d
	.byte 0x12,0x01,0x01,0x00,0x00,0x3e,0x6b,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x67,0x00,0x07,0x00,0x00,0x3e,0x59,0x11
	.byte 0x00,0x00,0x31,0x7d,0x07,0x00,0x00,0x3e
	.byte 0x70,0x12,0x01,0x01,0x00,0x00,0x3e,0x96
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x3e,0x75,0x00,0x07,0x00,0x00
	.byte 0x3e,0x7a,0x12,0x01,0x01,0x00,0x00,0x3e
	.byte 0xad,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x67,0x00,0x07,0x00,0x00,0x3e
	.byte 0x9b,0x12,0x01,0x01,0x00,0x00,0x3e,0xd3
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x80,0x13,0x00,0x00,0x01,0x80,0x13
	.byte 0x00,0x00,0x01,0x80,0x13,0x00,0x00,0x01
	.byte 0x80,0x00,0x07,0x00,0x00,0x3e,0xb2,0x12
	.byte 0x01,0x01,0x00,0x00,0x3e,0xf9,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0x80
	.byte 0x13,0x00,0x00,0x01,0x80,0x13,0x00,0x00
	.byte 0x01,0x80,0x13,0x00,0x00,0x01,0x80,0x00
	.byte 0x07,0x00,0x00,0x3e,0xd8,0x04
	.ascii "double\0"
	.byte 0x04,0x08,0x12,0x01,0x01,0x00,0x00,0x3f
	.byte 0x1a,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x3e,0xfe,0x00,0x07,0x00,0x00,0x3f
	.byte 0x08,0x12,0x01,0x01,0x00,0x00,0x3f,0x31
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x80,0x00,0x07,0x00,0x00,0x3f,0x1f
	.byte 0x12,0x01,0x01,0x00,0x00,0x3f,0x48,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x43,0x00,0x07,0x00,0x00,0x3f,0x36,0x11
	.byte 0x00,0x00,0x01,0x80,0x07,0x00,0x00,0x3f
	.byte 0x4d,0x12,0x01,0x01,0x00,0x00,0x3f,0x6e
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x3f,0x52,0x00
	.byte 0x07,0x00,0x00,0x3f,0x57,0x12,0x01,0x01
	.byte 0x00,0x00,0x3f,0x8f,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0x80,0x13,0x00
	.byte 0x00,0x01,0x80,0x13,0x00,0x00,0x01,0x80
	.byte 0x00,0x07,0x00,0x00,0x3f,0x73,0x11,0x00
	.byte 0x00,0x01,0x80,0x07
	.byte 0x00,0x00,0x3f,0x94,0x12,0x01,0x01,0x00
	.byte 0x00,0x3f,0xb0,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x3f,0x99,0x00,0x07,0x00
	.byte 0x00,0x3f,0x9e,0x12,0x01,0x01,0x00,0x00
	.byte 0x3f,0xd6,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0x80,0x13,0x00,0x00,0x01
	.byte 0x80,0x13,0x00,0x00,0x01,0x80,0x13,0x00
	.byte 0x00,0x01,0x80,0x00,0x07,0x00,0x00,0x3f
	.byte 0xb5,0x11,0x00,0x00,0x01,0x80,0x07,0x00
	.byte 0x00,0x3f,0xdb,0x12,0x01,0x01,0x00,0x00
	.byte 0x3f,0xf7,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x3f,0xe0,0x00,0x07,0x00,0x00
	.byte 0x3f,0xe5,0x12,0x01,0x01,0x00,0x00,0x40
	.byte 0x1d,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x31,0x59,0x13,0x00,0x00,0x31,0x59
	.byte 0x13,0x00,0x00,0x31,0x59,0x13,0x00,0x00
	.byte 0x31,0x59,0x00,0x07,0x00,0x00,0x3f,0xfc
	.byte 0x11,0x00,0x00,0x31,0x59,0x07,0x00,0x00
	.byte 0x40,0x22,0x12,0x01,0x01,0x00,0x00,0x40
	.byte 0x3e,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x40,0x27,0x00,0x07,0x00,0x00,0x40
	.byte 0x2c,0x12,0x01,0x01,0x00,0x00,0x40,0x64
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x31,0x59,0x13,0x00,0x00,0x31,0x59,0x13
	.byte 0x00,0x00,0x31,0x59,0x13,0x00,0x00,0x31
	.byte 0x59,0x00,0x07,0x00,0x00,0x40,0x43,0x12
	.byte 0x01,0x01,0x00,0x00,0x40,0x80,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0
	.byte 0x13,0x00,0x00,0x01,0xb0,0x00,0x07,0x00
	.byte 0x00,0x40,0x69,0x11,0x00,0x00,0x31,0x7d
	.byte 0x07,0x00,0x00,0x40,0x85,0x12,0x01,0x01
	.byte 0x00,0x00,0x40,0xb0,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x40,0x8a,0x00,0x07,0x00
	.byte 0x00,0x40,0x8f,0x07,0x00,0x00,0x3d,0x24
	.byte 0x12,0x01,0x01,0x00,0x00,0x40,0xd6,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x40,0xb5,0x00,0x07,0x00,0x00,0x40
	.byte 0xba,0x12,0x01,0x01,0x00,0x00,0x40,0xf7
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x40,0xb5,0x00,0x07,0x00,0x00
	.byte 0x40,0xdb,0x12,0x01,0x01,0x00,0x00,0x41
	.byte 0x22,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0xb0,0x00
	.byte 0x07,0x00,0x00,0x40,0xfc,0x12,0x01,0x01
	.byte 0x00,0x00,0x41,0x57,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0xb0
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x00,0x07,0x00,0x00
	.byte 0x41,0x27,0x12,0x01,0x01,0x00,0x00,0x41
	.byte 0x91,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0x43,0x00,0x07
	.byte 0x00,0x00,0x41,0x5c,0x12,0x01,0x01,0x00
	.byte 0x00,0x41,0xc1,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0x43,0x00,0x07
	.byte 0x00,0x00,0x41,0x96,0x12,0x01,0x01,0x00
	.byte 0x00,0x41,0xfb,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x00,0x07,0x00,0x00,0x41,0xc6,0x12,0x01
	.byte 0x01,0x00,0x00,0x42,0x3a,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x00
	.byte 0x07,0x00,0x00,0x42,0x00,0x12,0x01,0x01
	.byte 0x00,0x00,0x42,0x51,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0xb0,0x00,0x07
	.byte 0x00,0x00,0x42,0x3f,0x12,0x01,0x01,0x00
	.byte 0x00,0x42,0x6d,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0x67,0x13,0x00,0x00
	.byte 0x01,0x43,0x00,0x07,0x00,0x00,0x42,0x56
	.byte 0x11,0x00,0x00,0x01,0x67,0x07,0x00,0x00
	.byte 0x42,0x72,0x12,0x01,0x01,0x00,0x00,0x42
	.byte 0x93,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x42,0x77
	.byte 0x00,0x07,0x00,0x00,0x42,0x7c,0x12,0x01
	.byte 0x01,0x00,0x00,0x42,0xaa,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x00
	.byte 0x07,0x00,0x00,0x42,0x98,0x12,0x01,0x01
	.byte 0x00,0x00,0x42,0xc1,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x31,0x59,0x00,0x07
	.byte 0x00,0x00,0x42,0xaf,0x12,0x01,0x01,0x00
	.byte 0x00,0x42,0xdd,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x3e,0xfe,0x13,0x00,0x00
	.byte 0x3e,0xfe,0x00,0x07,0x00,0x00,0x42,0xc6
	.byte 0x12,0x01,0x01,0x00,0x00,0x42,0xf4,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x00,0x07,0x00,0x00,0x42,0xe2,0x12
	.byte 0x01,0x01,0x00,0x00,0x43,0x0b,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0
	.byte 0x00,0x07,0x00,0x00,0x42,0xf9,0x12,0x01
	.byte 0x01,0x00,0x00,0x43,0x2c,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x43,0x00,0x07,0x00,0x00,0x43,0x10,0x12
	.byte 0x01,0x01,0x00,0x00,0x43,0x43,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0
	.byte 0x00,0x07,0x00,0x00,0x43,0x31,0x11,0x00
	.byte 0x00,0x31,0x7d,0x07,0x00,0x00,0x43,0x48
	.byte 0x12,0x01,0x01,0x00,0x00,0x43,0x73,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x43,0x4d
	.byte 0x00,0x07,0x00,0x00,0x43,0x52,0x11,0x00
	.byte 0x00,0x31,0x7d,0x07,0x00,0x00,0x43,0x78
	.byte 0x12,0x01,0x01,0x00,0x00,0x43,0xa8,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x01,0xb0
	.byte 0x13,0x00,0x00,0x43,0x7d,0x00,0x07,0x00
	.byte 0x00,0x43,0x82,0x12,0x01,0x01,0x00,0x00
	.byte 0x43,0xbf,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x31,0x59,0x00,0x07,0x00,0x00
	.byte 0x43,0xad,0x11,0x00,0x00,0x31,0x59,0x07
	.byte 0x00,0x00,0x43,0xc4,0x12,0x01,0x01,0x00
	.byte 0x00,0x43,0xe5,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x43,0xc9,0x00,0x07,0x00,0x00,0x43,0xce
	.byte 0x12,0x01,0x01,0x00,0x00,0x43,0xfc,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x00,0x07,0x00,0x00,0x43,0xea,0x12
	.byte 0x01,0x01,0x00,0x00,0x44,0x13,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0
	.byte 0x00,0x07,0x00,0x00,0x44,0x01,0x12,0x01
	.byte 0x01,0x00,0x00,0x44,0x25,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x00,0x07,0x00,0x00,0x44,0x18
	.byte 0x12,0x01,0x01,0x00,0x00,0x44,0x37,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x00,0x07,0x00,0x00
	.byte 0x44,0x2a,0x12,0x01,0x01,0x00,0x00,0x44
	.byte 0x4e,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x80,0x00,0x07,0x00,0x00,0x44
	.byte 0x3c,0x12,0x01,0x01,0x00,0x00,0x44,0x6a
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x80,0x13,0x00,0x00,0x01,0x80,0x00
	.byte 0x07,0x00,0x00,0x44,0x53,0x12,0x01,0x01
	.byte 0x00,0x00,0x44,0x8b,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x00,0x07,0x00,0x00,0x44,0x6f,0x12,0x01
	.byte 0x01,0x00,0x00,0x44,0xb6,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x01,0x43,0x00,0x07,0x00,0x00,0x44
	.byte 0x90,0x12,0x01,0x01,0x00,0x00,0x44,0xcd
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x43,0x00,0x07,0x00,0x00,0x44,0xbb
	.byte 0x12,0x01,0x01,0x00,0x00,0x44,0xe9,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0x43,0x00,0x07
	.byte 0x00,0x00,0x44,0xd2,0x07,0x00,0x00,0x01
	.byte 0x80,0x12,0x01,0x01,0x00,0x00,0x45,0x0f
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x44,0xee,0x00,0x07,0x00,0x00
	.byte 0x44,0xf3,0x12,0x01,0x01,0x00,0x00,0x45
	.byte 0x21,0x13,0x00,0x00,0x3c,0x5c,0x00,0x07
	.byte 0x00,0x00,0x45,0x14,0x12,0x01,0x01,0x00
	.byte 0x00,0x45,0x33,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x00,0x07,0x00,0x00,0x45,0x26,0x11,0x00
	.byte 0x00,0x01,0x80,0x07,0x00,0x00,0x45,0x38
	.byte 0x12,0x01,0x01,0x00,0x00,0x45,0x59,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x45,0x3d,0x00,0x07
	.byte 0x00,0x00,0x45,0x42,0x12,0x01,0x01,0x00
	.byte 0x00,0x45,0x70,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x00,0x07,0x00
	.byte 0x00,0x45,0x5e,0x12,0x01,0x01,0x00,0x00
	.byte 0x45,0xa0,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x3e,0xfe,0x13,0x00,0x00,0x3e
	.byte 0xfe,0x13,0x00,0x00,0x3e,0xfe,0x13,0x00
	.byte 0x00,0x3e,0xfe,0x13,0x00,0x00,0x3e,0xfe
	.byte 0x13,0x00,0x00,0x3e,0xfe,0x00,0x07,0x00
	.byte 0x00,0x45,0x75,0x14,0x01,0x00,0x00,0x01
	.byte 0x67,0x01,0x00,0x00,0x45,0xbb,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0x43
	.byte 0x00,0x07,0x00,0x00,0x45,0xa5,0x07,0x00
	.byte 0x00,0x01,0x67,0x12,0x01,0x01,0x00,0x00
	.byte 0x45,0xdc,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x45
	.byte 0xc0,0x00,0x07,0x00,0x00,0x45,0xc5,0x12
	.byte 0x01,0x01,0x00,0x00,0x45,0xf8,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0
	.byte 0x13,0x00,0x00,0x34,0x8d,0x00,0x07,0x00
	.byte 0x00,0x45,0xe1,0x07,0x00,0x00,0x3e,0xfe
	.byte 0x12,0x01,0x01,0x00,0x00,0x46,0x19,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x45,0xfd,0x00,0x07
	.byte 0x00,0x00,0x46,0x02,0x12,0x01,0x01,0x00
	.byte 0x00,0x46,0x3f,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x31,0x85,0x00,0x07,0x00,0x00
	.byte 0x46,0x1e,0x07,0x00,0x00,0x01,0x43,0x12
	.byte 0x01,0x01,0x00,0x00,0x46,0x65,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x46,0x44,0x00,0x07,0x00,0x00,0x46,0x49
	.byte 0x12,0x01,0x01,0x00,0x00,0x46,0x81,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x45,0xfd,0x00,0x07
	.byte 0x00,0x00,0x46,0x6a,0x14,0x01,0x00,0x00
	.byte 0x01,0xb0,0x01,0x00,0x00,0x46,0x97,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x00,0x07,0x00,0x00
	.byte 0x46,0x86,0x12,0x01,0x01,0x00,0x00,0x46
	.byte 0xb3,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x44,0xee
	.byte 0x00,0x07,0x00,0x00,0x46,0x9c,0x12,0x01
	.byte 0x01,0x00,0x00,0x46,0xcf,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x46,0x44,0x00,0x07,0x00,0x00
	.byte 0x46,0xb8,0x11,0x00,0x00,0x31,0x59,0x07
	.byte 0x00,0x00,0x46,0xd4,0x14,0x01,0x00,0x00
	.byte 0x46,0xd9,0x01,0x00,0x00,0x46,0xf4,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x00,0x07,0x00,0x00,0x46,0xde,0x12
	.byte 0x01,0x01,0x00,0x00,0x47,0x15,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x44,0xee,0x00,0x07,0x00,0x00,0x46,0xf9
	.byte 0x12,0x01,0x01,0x00,0x00,0x47,0x36,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x46,0x44,0x00,0x07,0x00,0x00,0x47
	.byte 0x1a,0x12,0x01,0x01,0x00,0x00,0x47,0x57
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x45,0xfd,0x00,0x07,0x00,0x00
	.byte 0x47,0x3b,0x12,0x01,0x01,0x00,0x00,0x47
	.byte 0x78,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x01,0xb0
	.byte 0x13,0x00,0x00,0x44,0xee,0x00,0x07,0x00
	.byte 0x00,0x47,0x5c,0x12,0x01,0x01,0x00,0x00
	.byte 0x47,0x99,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0xb0,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x46,0x44,0x00,0x07
	.byte 0x00,0x00,0x47,0x7d,0x12,0x01,0x01,0x00
	.byte 0x00,0x47,0xba,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x44,0xee,0x00
	.byte 0x07,0x00,0x00,0x47,0x9e,0x12,0x01,0x01
	.byte 0x00,0x00,0x47,0xdb,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x46,0x44
	.byte 0x00,0x07,0x00,0x00,0x47,0xbf,0x12,0x01
	.byte 0x01,0x00,0x00,0x47,0xf7,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x44,0xee,0x00,0x07,0x00,0x00
	.byte 0x47,0xe0,0x12,0x01,0x01,0x00,0x00,0x48
	.byte 0x13,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x45,0xc0
	.byte 0x00,0x07,0x00,0x00,0x47,0xfc,0x04
	.ascii "unsigned short\0"
	.byte 0x07,0x02,0x07,0x00,0x00,0x48,0x18,0x12
	.byte 0x01,0x01,0x00,0x00,0x48,0x46,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0
	.byte 0x13,0x00,0x00,0x48,0x2a,0x00,0x07,0x00
	.byte 0x00,0x48,0x2f,0x07,0x00,0x00,0x31,0x85
	.byte 0x12,0x01,0x01,0x00,0x00,0x48,0x67,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x48,0x4b,0x00,0x07
	.byte 0x00,0x00,0x48,0x50,0x12,0x01,0x01,0x00
	.byte 0x00,0x48,0x7e,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x34,0x8d,0x00,0x07,0x00
	.byte 0x00,0x48,0x6c,0x11,0x00,0x00,0x01,0x67
	.byte 0x07,0x00,0x00,0x48,0x83,0x11,0x00,0x00
	.byte 0x01,0x80,0x07,0x00,0x00,0x48,0x8d,0x12
	.byte 0x01,0x01,0x00,0x00,0x48,0xb3,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x48,0x88,0x13,0x00,0x00
	.byte 0x48,0x92,0x00,0x07,0x00,0x00,0x48,0x97
	.byte 0x12,0x01,0x01,0x00,0x00,0x48,0xd4,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x44,0xee,0x00,0x07,0x00,0x00,0x48
	.byte 0xb8,0x12,0x01,0x01,0x00,0x00,0x48,0xf5
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x46,0x44,0x00,0x07,0x00,0x00
	.byte 0x48,0xd9,0x12,0x01,0x01,0x00,0x00,0x49
	.byte 0x16,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x01,0xb0
	.byte 0x13,0x00,0x00,0x45,0xfd,0x00,0x07,0x00
	.byte 0x00,0x48,0xfa,0x12,0x01,0x01,0x00,0x00
	.byte 0x49,0x37,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0xb0,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x44,0xee,0x00,0x07
	.byte 0x00,0x00,0x49,0x1b,0x12,0x01,0x01,0x00
	.byte 0x00,0x49,0x58,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x46,0x44,0x00
	.byte 0x07,0x00,0x00,0x49,0x3c,0x12,0x01,0x01
	.byte 0x00,0x00,0x49,0x83,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0xb0
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x31,0x85,0x00,0x07,0x00,0x00,0x49,0x5d
	.byte 0x12,0x01,0x01,0x00,0x00,0x49,0xa9,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x44,0xee
	.byte 0x00,0x07,0x00,0x00,0x49,0x88,0x12,0x01
	.byte 0x01,0x00,0x00,0x49,0xcf,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x46,0x44,0x00,0x07
	.byte 0x00,0x00,0x49,0xae,0x12,0x01,0x01,0x00
	.byte 0x00,0x49,0xf0,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x44,0xee,0x00
	.byte 0x07,0x00,0x00,0x49,0xd4,0x12,0x01,0x01
	.byte 0x00,0x00,0x4a,0x11,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x46,0x44
	.byte 0x00,0x07,0x00,0x00,0x49,0xf5,0x12,0x01
	.byte 0x01,0x00,0x00,0x4a,0x2d,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x01,0xb0,0x00,0x07,0x00,0x00
	.byte 0x4a,0x16,0x12,0x01,0x01,0x00,0x00,0x4a
	.byte 0x44,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x67,0x00,0x07,0x00,0x00,0x4a
	.byte 0x32,0x12,0x01,0x01,0x00,0x00,0x4a,0x5b
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x80,0x00,0x07,0x00,0x00,0x4a,0x49
	.byte 0x12,0x01,0x01,0x00,0x00,0x4a,0x72,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x43,0x00,0x07,0x00,0x00,0x4a,0x60,0x11
	.byte 0x00,0x00,0x31,0x7d,0x07,0x00,0x00,0x4a
	.byte 0x77,0x12,0x01,0x01,0x00,0x00,0x4a,0x9d
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x4a,0x7c,0x00,0x07,0x00,0x00
	.byte 0x4a,0x81,0x12,0x01,0x01,0x00,0x00,0x4a
	.byte 0xaf,0x13,0x00,0x00,0x3c,0x5c,0x00,0x07
	.byte 0x00,0x00,0x4a,0xa2,0x11,0x00,0x00,0x31
	.byte 0x7d,0x07,0x00,0x00,0x4a,0xb4,0x12,0x01
	.byte 0x01,0x00,0x00,0x4a,0xda,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x4a
	.byte 0xb9,0x00,0x07,0x00,0x00,0x4a,0xbe,0x14
	.byte 0x01,0x00,0x00,0x31,0x59,0x01,0x00,0x00
	.byte 0x4a,0xf5,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0xb0,0x00,0x07,0x00,0x00
	.byte 0x4a,0xdf,0x14,0x01,0x00,0x00,0x31,0x59
	.byte 0x01,0x00,0x00,0x4b,0x10,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0x67,0x00
	.byte 0x07,0x00,0x00,0x4a,0xfa,0x14,0x01,0x00
	.byte 0x00,0x31,0x59,0x01,0x00,0x00,0x4b,0x2b
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x67,0x00,0x07,0x00,0x00,0x4b,0x15
	.byte 0x11,0x00,0x00,0x01,0x80,0x07,0x00,0x00
	.byte 0x4b,0x30,0x12,0x01,0x01,0x00,0x00,0x4b
	.byte 0x51,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x4b,0x35
	.byte 0x00,0x07,0x00,0x00,0x4b,0x3a,0x11,0x00
	.byte 0x00,0x01,0x80,0x07,0x00,0x00,0x4b,0x56
	.byte 0x12,0x01,0x01,0x00,0x00,0x4b,0x81,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x4b,0x5b,0x13,0x00,0x00,0x01,0x43
	.byte 0x00,0x07,0x00,0x00,0x4b,0x60,0x12,0x01
	.byte 0x01,0x00,0x00,0x4b,0x9d,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x48,0x18,0x00,0x07,0x00,0x00
	.byte 0x4b,0x86,0x12,0x01,0x01,0x00,0x00,0x4b
	.byte 0xb4,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x80,0x00,0x07,0x00,0x00,0x4b
	.byte 0xa2,0x12,0x01,0x01,0x00,0x00,0x4b,0xcb
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x67,0x00,0x07,0x00,0x00,0x4b,0xb9
	.byte 0x12,0x01,0x01,0x00,0x00,0x4b,0xdd,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x00,0x07,0x00,0x00
	.byte 0x4b,0xd0,0x11,0x00,0x00,0x01,0x80,0x07
	.byte 0x00,0x00,0x4b,0xe2,0x12,0x01,0x01,0x00
	.byte 0x00,0x4b,0xfe,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x4b,0xe7,0x00,0x07,0x00
	.byte 0x00,0x4b,0xec,0x12,0x01,0x01,0x00,0x00
	.byte 0x4c,0x15,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0x67,0x00,0x07,0x00,0x00
	.byte 0x4c,0x03,0x12,0x01,0x01,0x00,0x00,0x4c
	.byte 0x2c,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0xb0,0x00,0x07,0x00,0x00,0x4c
	.byte 0x1a,0x11,0x00,0x00,0x01,0x80,0x07,0x00
	.byte 0x00,0x4c,0x31,0x12,0x01,0x01,0x00,0x00
	.byte 0x4c,0x6b,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0xb0,0x13,0x00,0x00,0x01
	.byte 0x80,0x13,0x00,0x00,0x01,0x80,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x4c,0x36,0x13,0x00,0x00
	.byte 0x31,0x59,0x00,0x07,0x00,0x00,0x4c,0x3b
	.byte 0x11,0x00,0x00,0x01,0x80,0x07,0x00,0x00
	.byte 0x4c,0x70,0x12,0x01,0x01,0x00,0x00,0x4c
	.byte 0xbe,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x01,0x80
	.byte 0x13,0x00,0x00,0x01,0x80,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x80,0x13,0x00,0x00,0x01
	.byte 0x80,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x4c,0x75
	.byte 0x13,0x00,0x00,0x31,0x59,0x00,0x07,0x00
	.byte 0x00,0x4c,0x7a,0x12,0x01,0x01,0x00,0x00
	.byte 0x4c,0xdf,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x80,0x13,0x00,0x00,0x01,0x80,0x00,0x07
	.byte 0x00,0x00,0x4c,0xc3,0x12,0x01,0x01,0x00
	.byte 0x00,0x4d,0x0f,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0x80,0x13,0x00,0x00,0x01,0x80,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x80,0x13,0x00,0x00,0x01,0x80,0x00,0x07
	.byte 0x00,0x00,0x4c,0xe4,0x11,0x00,0x00,0x01
	.byte 0x80,0x07,0x00,0x00,0x4d,0x14,0x12,0x01
	.byte 0x01,0x00,0x00,0x4d,0x3a,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x01,0xb0,0x13,0x00,0x00,0x4d
	.byte 0x19,0x00,0x07,0x00,0x00,0x4d,0x1e,0x12
	.byte 0x01,0x01,0x00,0x00,0x4d,0x51,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0
	.byte 0x00,0x07,0x00,0x00,0x4d,0x3f,0x11,0x00
	.byte 0x00,0x01,0x80,0x07,0x00,0x00,0x4d,0x56
	.byte 0x12,0x01,0x01,0x00,0x00,0x4d,0x72,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x4d
	.byte 0x5b,0x00,0x07,0x00,0x00,0x4d,0x60,0x12
	.byte 0x01,0x01,0x00,0x00,0x4d,0x8e,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0x67
	.byte 0x13,0x00,0x00,0x01,0xb0,0x00,0x07,0x00
	.byte 0x00,0x4d,0x77,0x12,0x01,0x01,0x00,0x00
	.byte 0x4d,0xaf,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0x80,0x13,0x00,0x00,0x01
	.byte 0x80,0x13,0x00,0x00,0x01,0x80,0x00,0x07
	.byte 0x00,0x00,0x4d,0x93,0x11,0x00,0x00,0x01
	.byte 0x80,0x07,0x00,0x00,0x4d,0xb4,0x12,0x01
	.byte 0x01,0x00,0x00,0x4d,0xd0,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x4d,0xb9,0x00
	.byte 0x07,0x00,0x00,0x4d,0xbe,0x11,0x00,0x00
	.byte 0x31,0x7d,0x07,0x00,0x00,0x4d,0xd5,0x12
	.byte 0x01,0x01,0x00,0x00,0x4d,0xfb,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x4d,0xda,0x00,0x07,0x00,0x00,0x4d,0xdf
	.byte 0x12,0x01,0x01,0x00,0x00,0x4e,0x2b,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x3e
	.byte 0xfe,0x13,0x00,0x00,0x3e,0xfe,0x13,0x00
	.byte 0x00,0x3e,0xfe,0x13,0x00,0x00,0x3e,0xfe
	.byte 0x13,0x00,0x00,0x3e,0xfe,0x13,0x00,0x00
	.byte 0x3e,0xfe,0x00,0x07,0x00,0x00,0x4e,0x00
	.byte 0x12,0x01,0x01,0x00,0x00,0x4e,0x42,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x80,0x00,0x07,0x00,0x00,0x4e,0x30,0x11
	.byte 0x00,0x00,0x01,0x80,0x07,0x00,0x00,0x4e
	.byte 0x47,0x12,0x01,0x01,0x00,0x00,0x4e,0x6d
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x4e,0x4c,0x00,0x07,0x00,0x00
	.byte 0x4e,0x51,0x12,0x01,0x01,0x00,0x00,0x4e
	.byte 0x89,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x01,0x43
	.byte 0x00,0x07,0x00,0x00,0x4e,0x72,0x12,0x01
	.byte 0x01,0x00,0x00,0x4e,0xa5,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x01,0x80,0x00,0x07,0x00,0x00
	.byte 0x4e,0x8e,0x12,0x01,0x01,0x00,0x00,0x4e
	.byte 0xc1,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x80,0x13,0x00,0x00,0x01,0x80
	.byte 0x00,0x07,0x00,0x00,0x4e,0xaa,0x11,0x00
	.byte 0x00,0x01,0x80,0x07,0x00,0x00,0x4e,0xc6
	.byte 0x12,0x01,0x01,0x00,0x00,0x4e,0xe7,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x4e,0xcb,0x00,0x07
	.byte 0x00,0x00,0x4e,0xd0,0x12,0x01,0x01,0x00
	.byte 0x00,0x4e,0xfe,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0x80,0x00,0x07,0x00
	.byte 0x00,0x4e,0xec,0x12,0x01,0x01,0x00,0x00
	.byte 0x4f,0x1a,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0xb0,0x13,0x00,0x00,0x01
	.byte 0xb0,0x00,0x07,0x00,0x00,0x4f,0x03,0x12
	.byte 0x01,0x01,0x00,0x00,0x4f,0x36,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0x80
	.byte 0x13,0x00,0x00,0x01,0x80,0x00,0x07,0x00
	.byte 0x00,0x4f,0x1f,0x11,0x00,0x00,0x31,0x59
	.byte 0x07,0x00,0x00,0x4f,0x3b,0x12,0x01,0x01
	.byte 0x00,0x00,0x4f,0x57,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x4f,0x40,0x00,0x07
	.byte 0x00,0x00,0x4f,0x45,0x12,0x01,0x01,0x00
	.byte 0x00,0x4f,0x69,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x00,0x07,0x00,0x00,0x4f,0x5c,0x12,0x01
	.byte 0x01,0x00,0x00,0x4f,0x7b,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x00,0x07,0x00,0x00,0x4f,0x6e
	.byte 0x12,0x01,0x01
	.byte 0x00,0x00,0x4f,0x8d,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x00,0x07,0x00,0x00,0x4f,0x80,0x12
	.byte 0x01,0x01,0x00,0x00,0x4f,0x9f,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x00,0x07,0x00,0x00,0x4f
	.byte 0x92,0x12,0x01,0x01,0x00,0x00,0x4f,0xb6
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x67,0x00,0x07,0x00,0x00,0x4f,0xa4
	.byte 0x12,0x01,0x01,0x00,0x00,0x4f,0xcd,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x67,0x00,0x07,0x00,0x00,0x4f,0xbb,0x12
	.byte 0x01,0x01,0x00,0x00,0x4f,0xdf,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x00,0x07,0x00,0x00,0x4f
	.byte 0xd2,0x12,0x01,0x01,0x00,0x00,0x4f,0xf6
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x67,0x00,0x07,0x00,0x00,0x4f,0xe4
	.byte 0x12,0x01,0x01,0x00,0x00,0x50,0x1c,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x80,0x13,0x00,0x00,0x01,0x80,0x13,0x00
	.byte 0x00,0x01,0x80,0x13,0x00,0x00,0x01,0x80
	.byte 0x00,0x07,0x00,0x00,0x4f,0xfb,0x12,0x01
	.byte 0x01,0x00,0x00,0x50,0x33,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x00
	.byte 0x07,0x00,0x00,0x50,0x21,0x12,0x01,0x01
	.byte 0x00,0x00,0x50,0x68,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x31,0x85,0x00,0x07,0x00,0x00
	.byte 0x50,0x38,0x12,0x01,0x01,0x00,0x00,0x50
	.byte 0x8e,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x80,0x13,0x00,0x00,0x01,0x80
	.byte 0x13,0x00,0x00,0x01,0x80,0x13,0x00,0x00
	.byte 0x01,0x80,0x00,0x07,0x00,0x00,0x50,0x6d
	.byte 0x14,0x01,0x00,0x00,0x01,0x43,0x01,0x00
	.byte 0x00,0x50,0xa9,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x00,0x07,0x00
	.byte 0x00,0x50,0x93,0x12,0x01,0x01,0x00,0x00
	.byte 0x50,0xcf,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0x80,0x13,0x00,0x00,0x01
	.byte 0x80,0x13,0x00,0x00,0x01,0x80,0x13,0x00
	.byte 0x00,0x01,0x80,0x00,0x07,0x00,0x00,0x50
	.byte 0xae,0x12,0x01,0x01,0x00,0x00,0x50,0xf0
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x80,0x13,0x00,0x00,0x01,0x80,0x13
	.byte 0x00,0x00,0x01,0x80,0x00,0x07,0x00,0x00
	.byte 0x50,0xd4,0x12,0x01,0x01,0x00,0x00,0x51
	.byte 0x16,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0x43,0x00,0x07,0x00,0x00,0x50,0xf5
	.byte 0x12,0x01,0x01,0x00,0x00,0x51,0x32,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x45,0xc0,0x00,0x07
	.byte 0x00,0x00,0x51,0x1b,0x12,0x01,0x01,0x00
	.byte 0x00,0x51,0x49,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x00,0x07,0x00
	.byte 0x00,0x51,0x37,0x12,0x01,0x01,0x00,0x00
	.byte 0x51,0x6a,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0xb0,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0x67,0x00,0x07
	.byte 0x00,0x00,0x51,0x4e,0x12,0x01,0x01,0x00
	.byte 0x00,0x51,0x81,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0x67,0x00,0x07,0x00
	.byte 0x00,0x51,0x6f,0x12,0x01,0x01,0x00,0x00
	.byte 0x51,0xa2,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0xb0,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x01,0xb0,0x00,0x07
	.byte 0x00,0x00,0x51,0x86,0x12,0x01,0x01,0x00
	.byte 0x00,0x51,0xbe,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0x80,0x13,0x00,0x00
	.byte 0x01,0x80,0x00,0x07,0x00,0x00,0x51,0xa7
	.byte 0x12,0x01,0x01,0x00,0x00,0x51,0xe4,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x80,0x13,0x00,0x00,0x01,0x80,0x13,0x00
	.byte 0x00,0x01,0x80,0x13,0x00,0x00,0x01,0x80
	.byte 0x00,0x07,0x00,0x00,0x51,0xc3,0x11,0x00
	.byte 0x00,0x31,0x7d,0x07,0x00,0x00,0x51,0xe9
	.byte 0x12,0x01,0x01,0x00,0x00,0x52,0x14,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x51,0xee
	.byte 0x00,0x07,0x00,0x00,0x51,0xf3,0x11,0x00
	.byte 0x00,0x01,0x80,0x07,0x00,0x00,0x52,0x19
	.byte 0x12,0x01,0x01,0x00,0x00,0x52,0x3f,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x52,0x1e,0x00,0x07,0x00,0x00,0x52
	.byte 0x23,0x11,0x00,0x00,0x01,0x80,0x07,0x00
	.byte 0x00,0x52,0x44,0x12,0x01,0x01,0x00,0x00
	.byte 0x52,0x6a,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0xb0,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x52,0x49,0x00,0x07
	.byte 0x00,0x00,0x52,0x4e,0x12,0x01,0x01,0x00
	.byte 0x00,0x52,0xa4,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x40,0xb5
	.byte 0x00,0x07,0x00,0x00,0x52,0x6f,0x12,0x01
	.byte 0x01,0x00,0x00,0x52,0xe3,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x40,0xb5,0x00
	.byte 0x07,0x00,0x00,0x52,0xa9,0x12,0x01,0x01
	.byte 0x00,0x00,0x53,0x18,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x40,0xb5,0x00,0x07,0x00,0x00
	.byte 0x52,0xe8,0x12,0x01,0x01,0x00,0x00,0x53
	.byte 0x57,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x40,0xb5,0x00,0x07,0x00,0x00,0x53
	.byte 0x1d,0x12,0x01,0x01,0x00,0x00,0x53,0x9b
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x40,0xb5,0x00
	.byte 0x07,0x00,0x00,0x53,0x5c,0x12,0x01,0x01
	.byte 0x00,0x00,0x53,0xe4,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x40,0xb5
	.byte 0x00,0x07,0x00,0x00,0x53,0xa0,0x11,0x00
	.byte 0x00,0x01,0x80,0x07,0x00,0x00,0x53,0xe9
	.byte 0x12,0x01,0x01,0x00,0x00,0x54,0x0f,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x53,0xee,0x00,0x07,0x00,0x00,0x53
	.byte 0xf3,0x12,0x01,0x01,0x00,0x00,0x54,0x30
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x80,0x13,0x00,0x00,0x01,0x80,0x13
	.byte 0x00,0x00,0x01,0x80,0x00,0x07,0x00,0x00
	.byte 0x54,0x14,0x12,0x01,0x01,0x00,0x00,0x54
	.byte 0x4c,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x80,0x13,0x00,0x00,0x01,0x80
	.byte 0x00,0x07,0x00,0x00,0x54,0x35,0x12,0x01
	.byte 0x01,0x00,0x00,0x54,0x6d,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0x80,0x13
	.byte 0x00,0x00,0x01,0x80,0x13,0x00,0x00,0x01
	.byte 0x80,0x00,0x07,0x00,0x00,0x54,0x51,0x12
	.byte 0x01,0x01,0x00,0x00,0x54,0x93,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0x80
	.byte 0x13,0x00,0x00,0x01,0x80,0x13,0x00,0x00
	.byte 0x01,0x80,0x13,0x00,0x00,0x01,0x80,0x00
	.byte 0x07,0x00,0x00,0x54,0x72,0x11,0x00,0x00
	.byte 0x01,0x80,0x07,0x00,0x00,0x54,0x98,0x12
	.byte 0x01,0x01,0x00,0x00,0x54,0xb4,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x54,0x9d
	.byte 0x00,0x07,0x00,0x00,0x54,0xa2,0x11,0x00
	.byte 0x00,0x31,0x7d,0x07,0x00,0x00,0x54,0xb9
	.byte 0x12,0x01,0x01,0x00,0x00,0x54,0xe4,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0xb0,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x54,0xbe
	.byte 0x00,0x07,0x00,0x00,0x54,0xc3,0x12,0x01
	.byte 0x01,0x00,0x00,0x55,0x0a,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0x43,0x00,0x07
	.byte 0x00,0x00,0x54,0xe9,0x12,0x01,0x01,0x00
	.byte 0x00,0x55,0x30,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0x80,0x13,0x00,0x00
	.byte 0x01,0x80,0x13,0x00,0x00,0x01,0x80,0x13
	.byte 0x00,0x00,0x01,0x80,0x00,0x07,0x00,0x00
	.byte 0x55,0x0f,0x12,0x01,0x01,0x00,0x00,0x55
	.byte 0x42,0x13,0x00,0x00,0x3c,0x5c,0x00,0x07
	.byte 0x00,0x00,0x55,0x35,0x10
	.ascii "gl_api_table\0"
	.byte 0x02,0xdc,0x02,0x00,0x00,0x63,0xeb,0x0d
	.ascii "Accum\0"
	.byte 0x00,0x00,0x3c,0x78,0x02,0x23,0x00,0x0d
	.ascii "AlphaFunc\0"
	.byte 0x00,0x00,0x3c,0x94,0x02,0x23,0x04,0x0d
	.ascii "AreTexturesResident\0"
	.byte 0x00,0x00,0x3c,0xc3,0x02,0x23,0x08,0x0d
	.ascii "ArrayElement\0"
	.byte 0x00,0x00,0x3c,0xda,0x02,0x23,0x0c,0x0d
	.ascii "Begin\0"
	.byte 0x00,0x00,0x3c,0xf1,0x02,0x23,0x10,0x0d
	.ascii "BindTexture\0"
	.byte 0x00,0x00,0x3d,0x0d,0x02,0x23,0x14,0x0d
	.ascii "Bitmap\0"
	.byte 0x00,0x00,0x3d,0xfb,0x02,0x23,0x18,0x0d
	.ascii "BlendColor\0"
	.byte 0x00,0x00,0x3e,0x21,0x02,0x23,0x1c,0x0d
	.ascii "BlendEquation\0"
	.byte 0x00,0x00,0x3e,0x38,0x02,0x23,0x20,0x0d
	.ascii "BlendFunc\0"
	.byte 0x00,0x00,0x3e,0x54,0x02,0x23,0x24,0x0d
	.ascii "CallList\0"
	.byte 0x00,0x00,0x3e,0x6b,0x02,0x23,0x28,0x0d
	.ascii "CallLists\0"
	.byte 0x00,0x00,0x3e,0x96,0x02,0x23,0x2c,0x0d
	.ascii "Clear\0"
	.byte 0x00,0x00,0x3e,0xad,0x02,0x23,0x30,0x0d
	.ascii "ClearAccum\0"
	.byte 0x00,0x00,0x3e,0xd3,0x02,0x23,0x34,0x0d
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x3e,0xf9,0x02,0x23,0x38,0x0d
	.ascii "ClearDepth\0"
	.byte 0x00,0x00,0x3f,0x1a,0x02,0x23,0x3c,0x0d
	.ascii "ClearIndex\0"
	.byte 0x00,0x00,0x3f,0x31,0x02,0x23,0x40,0x0d
	.ascii "ClearStencil\0"
	.byte 0x00,0x00,0x3f,0x48,0x02,0x23,0x44,0x0d
	.ascii "ClipPlane\0"
	.byte 0x00,0x00,0x3f,0x6e,0x02,0x23,0x48,0x0d
	.ascii "Color3f\0"
	.byte 0x00,0x00,0x3f,0x8f,0x02,0x23,0x4c,0x0d
	.ascii "Color3fv\0"
	.byte 0x00,0x00,0x3f,0xb0,0x02,0x23,0x50,0x0d
	.ascii "Color4f\0"
	.byte 0x00,0x00,0x3f,0xd6,0x02,0x23,0x54,0x0d
	.ascii "Color4fv\0"
	.byte 0x00,0x00,0x3f,0xf7,0x02,0x23,0x58,0x0d
	.ascii "Color4ub\0"
	.byte 0x00,0x00,0x40,0x1d,0x02,0x23,0x5c,0x0d
	.ascii "Color4ubv\0"
	.byte 0x00,0x00,0x40,0x3e,0x02,0x23,0x60,0x0d
	.ascii "ColorMask\0"
	.byte 0x00,0x00,0x40,0x64,0x02,0x23,0x64,0x0d
	.ascii "ColorMaterial\0"
	.byte 0x00,0x00,0x40,0x80,0x02,0x23,0x68,0x0d
	.ascii "ColorPointer\0"
	.byte 0x00,0x00,0x40,0xb0,0x02,0x23,0x6c,0x0d
	.ascii "ColorTable\0"
	.byte 0x00,0x00,0x40,0xd6,0x02,0x23,0x70,0x0d
	.ascii "ColorSubTable\0"
	.byte 0x00,0x00,0x40,0xf7,0x02,0x23,0x74,0x0d
	.ascii "CopyPixels\0"
	.byte 0x00,0x00,0x41,0x22,0x02,0x23,0x78,0x0d
	.ascii "CopyTexImage1D\0"
	.byte 0x00,0x00,0x41,0x57,0x02,0x23,0x7c,0x0d
	.ascii "CopyTexImage2D\0"
	.byte 0x00,0x00,0x41,0x91,0x03,0x23,0x80,0x01
	.byte 0x0d
	.ascii "CopyTexSubImage1D\0"
	.byte 0x00,0x00,0x41,0xc1,0x03,0x23,0x84,0x01
	.byte 0x0d
	.ascii "CopyTexSubImage2D\0"
	.byte 0x00,0x00,0x41,0xfb,0x03,0x23,0x88,0x01
	.byte 0x0d
	.ascii "CopyTexSubImage3DEXT\0"
	.byte 0x00,0x00,0x42,0x3a,0x03,0x23,0x8c,0x01
	.byte 0x0d
	.ascii "CullFace\0"
	.byte 0x00,0x00,0x42,0x51,0x03,0x23,0x90,0x01
	.byte 0x0d
	.ascii "DeleteLists\0"
	.byte 0x00,0x00,0x42,0x6d,0x03,0x23,0x94,0x01
	.byte 0x0d
	.ascii "DeleteTextures\0"
	.byte 0x00,0x00,0x42,0x93,0x03,0x23,0x98,0x01
	.byte 0x0d
	.ascii "DepthFunc\0"
	.byte 0x00,0x00,0x42,0xaa,0x03,0x23,0x9c,0x01
	.byte 0x0d
	.ascii "DepthMask\0"
	.byte 0x00,0x00,0x42,0xc1,0x03,0x23,0xa0,0x01
	.byte 0x0d
	.ascii "DepthRange\0"
	.byte 0x00,0x00,0x42,0xdd,0x03,0x23,0xa4,0x01
	.byte 0x0d
	.ascii "Disable\0"
	.byte 0x00,0x00,0x42,0xf4,0x03,0x23,0xa8,0x01
	.byte 0x0d
	.ascii "DisableClientState\0"
	.byte 0x00,0x00,0x43,0x0b,0x03,0x23,0xac,0x01
	.byte 0x0d
	.ascii "DrawArrays\0"
	.byte 0x00,0x00,0x43,0x2c,0x03,0x23,0xb0,0x01
	.byte 0x0d
	.ascii "DrawBuffer\0"
	.byte 0x00,0x00,0x43,0x43,0x03,0x23,0xb4,0x01
	.byte 0x0d
	.ascii "DrawElements\0"
	.byte 0x00,0x00,0x43,0x73,0x03,0x23,0xb8,0x01
	.byte 0x0d
	.ascii "DrawPixels\0"
	.byte 0x00,0x00,0x43,0xa8,0x03,0x23,0xbc,0x01
	.byte 0x0d
	.ascii "EdgeFlag\0"
	.byte 0x00,0x00,0x43,0xbf,0x03,0x23,0xc0,0x01
	.byte 0x0d
	.ascii "EdgeFlagPointer\0"
	.byte 0x00,0x00,0x43,0xe5,0x03,0x23,0xc4,0x01
	.byte 0x0d
	.ascii "Enable\0"
	.byte 0x00,0x00,0x43,0xfc,0x03,0x23,0xc8,0x01
	.byte 0x0d
	.ascii "EnableClientState\0"
	.byte 0x00,0x00,0x44,0x13,0x03,0x23,0xcc,0x01
	.byte 0x0d
	.ascii "End\0"
	.byte 0x00,0x00,0x44,0x25,0x03,0x23,0xd0,0x01
	.byte 0x0d
	.ascii "EndList\0"
	.byte 0x00,0x00,0x44,0x37,0x03,0x23,0xd4,0x01
	.byte 0x0d
	.ascii "EvalCoord1f\0"
	.byte 0x00,0x00,0x44,0x4e,0x03,0x23,0xd8,0x01
	.byte 0x0d
	.ascii "EvalCoord2f\0"
	.byte 0x00,0x00,0x44,0x6a,0x03,0x23,0xdc,0x01
	.byte 0x0d
	.ascii "EvalMesh1\0"
	.byte 0x00,0x00,0x44,0x8b,0x03,0x23,0xe0,0x01
	.byte 0x0d
	.ascii "EvalMesh2\0"
	.byte 0x00,0x00,0x44,0xb6,0x03,0x23,0xe4,0x01
	.byte 0x0d
	.ascii "EvalPoint1\0"
	.byte 0x00,0x00,0x44,0xcd,0x03,0x23,0xe8,0x01
	.byte 0x0d
	.ascii "EvalPoint2\0"
	.byte 0x00,0x00,0x44,0xe9,0x03,0x23,0xec,0x01
	.byte 0x0d
	.ascii "FeedbackBuffer\0"
	.byte 0x00,0x00,0x45,0x0f,0x03,0x23,0xf0,0x01
	.byte 0x0d
	.ascii "Finish\0"
	.byte 0x00,0x00,0x45,0x21,0x03,0x23,0xf4,0x01
	.byte 0x0d
	.ascii "Flush\0"
	.byte 0x00,0x00,0x45,0x33,0x03,0x23,0xf8,0x01
	.byte 0x0d
	.ascii "Fogfv\0"
	.byte 0x00,0x00,0x45,0x59,0x03,0x23,0xfc,0x01
	.byte 0x0d
	.ascii "FrontFace\0"
	.byte 0x00,0x00,0x45,0x70,0x03,0x23,0x80,0x02
	.byte 0x0d
	.ascii "Frustum\0"
	.byte 0x00,0x00,0x45,0xa0,0x03,0x23,0x84,0x02
	.byte 0x0d
	.ascii "GenLists\0"
	.byte 0x00,0x00,0x45,0xbb,0x03,0x23,0x88,0x02
	.byte 0x0d
	.ascii "GenTextures\0"
	.byte 0x00,0x00,0x45,0xdc,0x03,0x23,0x8c,0x02
	.byte 0x0d
	.ascii "GetBooleanv\0"
	.byte 0x00,0x00,0x45,0xf8,0x03,0x23,0x90,0x02
	.byte 0x0d
	.ascii "GetClipPlane\0"
	.byte 0x00,0x00,0x46,0x19,0x03,0x23,0x94,0x02
	.byte 0x0d
	.ascii "GetColorTable\0"
	.byte 0x00,0x00,0x46,0x3f,0x03,0x23,0x98,0x02
	.byte 0x0d
	.ascii "GetColorTableParameteriv\0"
	.byte 0x00,0x00,0x46,0x65,0x03,0x23,0x9c,0x02
	.byte 0x0d
	.ascii "GetDoublev\0"
	.byte 0x00,0x00,0x46,0x81,0x03,0x23,0xa0,0x02
	.byte 0x0d
	.ascii "GetError\0"
	.byte 0x00,0x00,0x46,0x97,0x03,0x23,0xa4,0x02
	.byte 0x0d
	.ascii "GetFloatv\0"
	.byte 0x00,0x00,0x46,0xb3,0x03,0x23,0xa8,0x02
	.byte 0x0d
	.ascii "GetIntegerv\0"
	.byte 0x00,0x00,0x46,0xcf,0x03,0x23,0xac,0x02
	.byte 0x0d
	.ascii "GetString\0"
	.byte 0x00,0x00,0x46,0xf4,0x03,0x23,0xb0,0x02
	.byte 0x0d
	.ascii "GetLightfv\0"
	.byte 0x00,0x00,0x47,0x15,0x03,0x23,0xb4,0x02
	.byte 0x0d
	.ascii "GetLightiv\0"
	.byte 0x00,0x00,0x47,0x36,0x03,0x23,0xb8,0x02
	.byte 0x0d
	.ascii "GetMapdv\0"
	.byte 0x00,0x00,0x47,0x57,0x03,0x23,0xbc,0x02
	.byte 0x0d
	.ascii "GetMapfv\0"
	.byte 0x00,0x00,0x47,0x78,0x03,0x23,0xc0,0x02
	.byte 0x0d
	.ascii "GetMapiv\0"
	.byte 0x00,0x00,0x47,0x99,0x03,0x23,0xc4,0x02
	.byte 0x0d
	.ascii "GetMaterialfv\0"
	.byte 0x00,0x00,0x47,0xba,0x03,0x23,0xc8,0x02
	.byte 0x0d
	.ascii "GetMaterialiv\0"
	.byte 0x00,0x00,0x47,0xdb,0x03,0x23,0xcc,0x02
	.byte 0x0d
	.ascii "GetPixelMapfv\0"
	.byte 0x00,0x00,0x47,0xf7,0x03,0x23,0xd0,0x02
	.byte 0x0d
	.ascii "GetPixelMapuiv\0"
	.byte 0x00,0x00,0x48,0x13,0x03,0x23,0xd4,0x02
	.byte 0x0d
	.ascii "GetPixelMapusv\0"
	.byte 0x00,0x00,0x48,0x46,0x03,0x23,0xd8,0x02
	.byte 0x0d
	.ascii "GetPointerv\0"
	.byte 0x00,0x00,0x48,0x67,0x03,0x23,0xdc,0x02
	.byte 0x0d
	.ascii "GetPolygonStipple\0"
	.byte 0x00,0x00,0x48,0x7e,0x03,0x23,0xe0,0x02
	.byte 0x0d
	.ascii "PrioritizeTextures\0"
	.byte 0x00,0x00,0x48,0xb3,0x03,0x23,0xe4,0x02
	.byte 0x0d
	.ascii "GetTexEnvfv\0"
	.byte 0x00,0x00,0x48,0xd4,0x03,0x23,0xe8,0x02
	.byte 0x0d
	.ascii "GetTexEnviv\0"
	.byte 0x00,0x00,0x48,0xf5,0x03,0x23,0xec,0x02
	.byte 0x0d
	.ascii "GetTexGendv\0"
	.byte 0x00,0x00,0x49,0x16,0x03,0x23,0xf0,0x02
	.byte 0x0d
	.ascii "GetTexGenfv\0"
	.byte 0x00,0x00,0x49,0x37,0x03,0x23,0xf4,0x02
	.byte 0x0d
	.ascii "GetTexGeniv\0"
	.byte 0x00,0x00,0x49,0x58,0x03,0x23,0xf8,0x02
	.byte 0x0d
	.ascii "GetTexImage\0"
	.byte 0x00,0x00,0x49,0x83,0x03,0x23,0xfc,0x02
	.byte 0x0d
	.ascii "GetTexLevelParameterfv\0"
	.byte 0x00,0x00,0x49,0xa9,0x03,0x23,0x80,0x03
	.byte 0x0d
	.ascii "GetTexLevelParameteriv\0"
	.byte 0x00,0x00,0x49,0xcf,0x03,0x23,0x84,0x03
	.byte 0x0d
	.ascii "GetTexParameterfv\0"
	.byte 0x00,0x00,0x49,0xf0,0x03,0x23,0x88,0x03
	.byte 0x0d
	.ascii "GetTexParameteriv\0"
	.byte 0x00,0x00,0x4a,0x11,0x03,0x23,0x8c,0x03
	.byte 0x0d
	.ascii "Hint\0"
	.byte 0x00,0x00,0x4a,0x2d,0x03,0x23,0x90,0x03
	.byte 0x0d
	.ascii "IndexMask\0"
	.byte 0x00,0x00,0x4a,0x44,0x03,0x23,0x94,0x03
	.byte 0x0d
	.ascii "Indexf\0"
	.byte 0x00,0x00,0x4a,0x5b,0x03,0x23,0x98,0x03
	.byte 0x0d
	.ascii "Indexi\0"
	.byte 0x00,0x00,0x4a,0x72,0x03,0x23,0x9c,0x03
	.byte 0x0d
	.ascii "IndexPointer\0"
	.byte 0x00,0x00,0x4a,0x9d,0x03,0x23,0xa0,0x03
	.byte 0x0d
	.ascii "InitNames\0"
	.byte 0x00,0x00,0x4a,0xaf,0x03,0x23,0xa4,0x03
	.byte 0x0d
	.ascii "InterleavedArrays\0"
	.byte 0x00,0x00,0x4a,0xda,0x03,0x23,0xa8,0x03
	.byte 0x0d
	.ascii "IsEnabled\0"
	.byte 0x00,0x00,0x4a,0xf5,0x03,0x23,0xac,0x03
	.byte 0x0d
	.ascii "IsList\0"
	.byte 0x00,0x00,0x4b,0x10,0x03,0x23,0xb0,0x03
	.byte 0x0d
	.ascii "IsTexture\0"
	.byte 0x00,0x00,0x4b,0x2b,0x03,0x23,0xb4,0x03
	.byte 0x0d
	.ascii "LightModelfv\0"
	.byte 0x00,0x00,0x4b,0x51,0x03,0x23,0xb8,0x03
	.byte 0x0d
	.ascii "Lightfv\0"
	.byte 0x00,0x00,0x4b,0x81,0x03,0x23,0xbc,0x03
	.byte 0x0d
	.ascii "LineStipple\0"
	.byte 0x00,0x00,0x4b,0x9d,0x03,0x23,0xc0,0x03
	.byte 0x0d
	.ascii "LineWidth\0"
	.byte 0x00,0x00,0x4b,0xb4,0x03,0x23,0xc4,0x03
	.byte 0x0d
	.ascii "ListBase\0"
	.byte 0x00,0x00,0x4b,0xcb,0x03,0x23,0xc8,0x03
	.byte 0x0d
	.ascii "LoadIdentity\0"
	.byte 0x00,0x00,0x4b,0xdd,0x03,0x23,0xcc,0x03
	.byte 0x0d
	.ascii "LoadMatrixf\0"
	.byte 0x00,0x00,0x4b,0xfe,0x03,0x23,0xd0,0x03
	.byte 0x0d
	.ascii "LoadName\0"
	.byte 0x00,0x00,0x4c,0x15,0x03,0x23,0xd4,0x03
	.byte 0x0d
	.ascii "LogicOp\0"
	.byte 0x00,0x00,0x4c,0x2c,0x03,0x23,0xd8,0x03
	.byte 0x0d
	.ascii "Map1f\0"
	.byte 0x00,0x00,0x4c,0x6b,0x03,0x23,0xdc,0x03
	.byte 0x0d
	.ascii "Map2f\0"
	.byte 0x00,0x00,0x4c,0xbe,0x03,0x23,0xe0,0x03
	.byte 0x0d
	.ascii "MapGrid1f\0"
	.byte 0x00,0x00,0x4c,0xdf,0x03,0x23,0xe4,0x03
	.byte 0x0d
	.ascii "MapGrid2f\0"
	.byte 0x00,0x00,0x4d,0x0f,0x03,0x23,0xe8,0x03
	.byte 0x0d
	.ascii "Materialfv\0"
	.byte 0x00,0x00,0x4d,0x3a,0x03,0x23,0xec,0x03
	.byte 0x0d
	.ascii "MatrixMode\0"
	.byte 0x00,0x00,0x4d,0x51,0x03,0x23,0xf0,0x03
	.byte 0x0d
	.ascii "MultMatrixf\0"
	.byte 0x00,0x00,0x4d,0x72,0x03,0x23,0xf4,0x03
	.byte 0x0d
	.ascii "NewList\0"
	.byte 0x00,0x00,0x4d,0x8e,0x03,0x23,0xf8,0x03
	.byte 0x0d
	.ascii "Normal3f\0"
	.byte 0x00,0x00,0x4d,0xaf,0x03,0x23,0xfc,0x03
	.byte 0x0d
	.ascii "Normal3fv\0"
	.byte 0x00,0x00,0x4d,0xd0,0x03,0x23,0x80,0x04
	.byte 0x0d
	.ascii "NormalPointer\0"
	.byte 0x00,0x00,0x4d,0xfb,0x03,0x23,0x84,0x04
	.byte 0x0d
	.ascii "Ortho\0"
	.byte 0x00,0x00,0x4e,0x2b,0x03,0x23,0x88,0x04
	.byte 0x0d
	.ascii "PassThrough\0"
	.byte 0x00,0x00,0x4e,0x42,0x03,0x23,0x8c,0x04
	.byte 0x0d
	.ascii "PixelMapfv\0"
	.byte 0x00,0x00,0x4e,0x6d,0x03,0x23,0x90,0x04
	.byte 0x0d
	.ascii "PixelStorei\0"
	.byte 0x00,0x00,0x4e,0x89,0x03,0x23,0x94,0x04
	.byte 0x0d
	.ascii "PixelTransferf\0"
	.byte 0x00,0x00,0x4e,0xa5,0x03,0x23,0x98,0x04
	.byte 0x0d
	.ascii "PixelZoom\0"
	.byte 0x00,0x00,0x4e,0xc1,0x03,0x23,0x9c,0x04
	.byte 0x0d
	.ascii "PointParameterfvEXT\0"
	.byte 0x00,0x00,0x4e,0xe7,0x03,0x23,0xa0,0x04
	.byte 0x0d
	.ascii "PointSize\0"
	.byte 0x00,0x00,0x4e,0xfe,0x03,0x23,0xa4,0x04
	.byte 0x0d
	.ascii "PolygonMode\0"
	.byte 0x00,0x00,0x4f,0x1a,0x03,0x23,0xa8,0x04
	.byte 0x0d
	.ascii "PolygonOffset\0"
	.byte 0x00,0x00,0x4f,0x36,0x03,0x23,0xac,0x04
	.byte 0x0d
	.ascii "PolygonStipple\0"
	.byte 0x00,0x00,0x4f,0x57,0x03,0x23,0xb0,0x04
	.byte 0x0d
	.ascii "PopAttrib\0"
	.byte 0x00,0x00,0x4f,0x69,0x03,0x23,0xb4,0x04
	.byte 0x0d
	.ascii "PopClientAttrib\0"
	.byte 0x00,0x00,0x4f,0x7b,0x03,0x23,0xb8,0x04
	.byte 0x0d
	.ascii "PopMatrix\0"
	.byte 0x00,0x00,0x4f,0x8d,0x03,0x23,0xbc,0x04
	.byte 0x0d
	.ascii "PopName\0"
	.byte 0x00,0x00,0x4f,0x9f,0x03,0x23,0xc0,0x04
	.byte 0x0d
	.ascii "PushAttrib\0"
	.byte 0x00,0x00,0x4f,0xb6,0x03,0x23,0xc4,0x04
	.byte 0x0d
	.ascii "PushClientAttrib\0"
	.byte 0x00,0x00,0x4f,0xcd,0x03,0x23,0xc8,0x04
	.byte 0x0d
	.ascii "PushMatrix\0"
	.byte 0x00,0x00,0x4f,0xdf,0x03,0x23,0xcc,0x04
	.byte 0x0d
	.ascii "PushName\0"
	.byte 0x00,0x00,0x4f,0xf6,0x03,0x23,0xd0,0x04
	.byte 0x0d
	.ascii "RasterPos4f\0"
	.byte 0x00,0x00,0x50,0x1c,0x03,0x23,0xd4,0x04
	.byte 0x0d
	.ascii "ReadBuffer\0"
	.byte 0x00,0x00,0x50,0x33,0x03,0x23,0xd8,0x04
	.byte 0x0d
	.ascii "ReadPixels\0"
	.byte 0x00,0x00,0x50,0x68,0x03,0x23,0xdc,0x04
	.byte 0x0d
	.ascii "Rectf\0"
	.byte 0x00,0x00,0x50,0x8e,0x03,0x23,0xe0,0x04
	.byte 0x0d
	.ascii "RenderMode\0"
	.byte 0x00,0x00,0x50,0xa9,0x03,0x23,0xe4,0x04
	.byte 0x0d
	.ascii "Rotatef\0"
	.byte 0x00,0x00,0x50,0xcf,0x03,0x23,0xe8,0x04
	.byte 0x0d
	.ascii "Scalef\0"
	.byte 0x00,0x00,0x50,0xf0,0x03,0x23,0xec,0x04
	.byte 0x0d
	.ascii "Scissor\0"
	.byte 0x00,0x00,0x51,0x16,0x03,0x23,0xf0,0x04
	.byte 0x0d
	.ascii "SelectBuffer\0"
	.byte 0x00,0x00,0x51,0x32,0x03,0x23,0xf4,0x04
	.byte 0x0d
	.ascii "ShadeModel\0"
	.byte 0x00,0x00,0x51,0x49,0x03,0x23,0xf8,0x04
	.byte 0x0d
	.ascii "StencilFunc\0"
	.byte 0x00,0x00,0x51,0x6a,0x03,0x23,0xfc,0x04
	.byte 0x0d
	.ascii "StencilMask\0"
	.byte 0x00,0x00,0x51,0x81,0x03,0x23,0x80,0x05
	.byte 0x0d
	.ascii "StencilOp\0"
	.byte 0x00,0x00,0x51,0xa2,0x03,0x23,0x84,0x05
	.byte 0x0d
	.ascii "TexCoord2f\0"
	.byte 0x00,0x00,0x51,0xbe,0x03,0x23,0x88,0x05
	.byte 0x0d
	.ascii "TexCoord4f\0"
	.byte 0x00,0x00,0x51,0xe4,0x03,0x23,0x8c,0x05
	.byte 0x0d
	.ascii "TexCoordPointer\0"
	.byte 0x00,0x00,0x52,0x14,0x03,0x23,0x90,0x05
	.byte 0x0d
	.ascii "TexEnvfv\0"
	.byte 0x00,0x00,0x52,0x3f,0x03,0x23,0x94,0x05
	.byte 0x0d
	.ascii "TexGenfv\0"
	.byte 0x00,0x00,0x52,0x6a,0x03,0x23,0x98,0x05
	.byte 0x0d
	.ascii "TexImage1D\0"
	.byte 0x00,0x00,0x52,0xa4,0x03,0x23,0x9c,0x05
	.byte 0x0d
	.ascii "TexImage2D\0"
	.byte 0x00,0x00,0x52,0xe3,0x03,0x23,0xa0,0x05
	.byte 0x0d
	.ascii "TexSubImage1D\0"
	.byte 0x00,0x00,0x53,0x18,0x03,0x23,0xa4,0x05
	.byte 0x0d
	.ascii "TexSubImage2D\0"
	.byte 0x00,0x00,0x53,0x57,0x03,0x23,0xa8,0x05
	.byte 0x0d
	.ascii "TexImage3DEXT\0"
	.byte 0x00,0x00,0x53,0x9b,0x03,0x23,0xac,0x05
	.byte 0x0d
	.ascii "TexSubImage3DEXT\0"
	.byte 0x00,0x00,0x53,0xe4,0x03,0x23,0xb0,0x05
	.byte 0x0d
	.ascii "TexParameterfv\0"
	.byte 0x00,0x00,0x54,0x0f,0x03,0x23,0xb4,0x05
	.byte 0x0d
	.ascii "Translatef\0"
	.byte 0x00,0x00,0x54,0x30,0x03,0x23,0xb8,0x05
	.byte 0x0d
	.ascii "Vertex2f\0"
	.byte 0x00,0x00,0x54,0x4c,0x03,0x23,0xbc,0x05
	.byte 0x0d
	.ascii "Vertex3f\0"
	.byte 0x00,0x00,0x54,0x6d,0x03,0x23,0xc0,0x05
	.byte 0x0d
	.ascii "Vertex4f\0"
	.byte 0x00,0x00,0x54,0x93,0x03,0x23,0xc4,0x05
	.byte 0x0d
	.ascii "Vertex3fv\0"
	.byte 0x00,0x00,0x54,0xb4,0x03,0x23,0xc8,0x05
	.byte 0x0d
	.ascii "VertexPointer\0"
	.byte 0x00,0x00,0x54,0xe4,0x03,0x23,0xcc,0x05
	.byte 0x0d
	.ascii "Viewport\0"
	.byte 0x00,0x00,0x55,0x0a,0x03,0x23,0xd0,0x05
	.byte 0x0d
	.ascii "WindowPos4fMESA\0"
	.byte 0x00,0x00,0x55,0x30,0x03,0x23,0xd4,0x05
	.byte 0x0d
	.ascii "ResizeBuffersMESA\0"
	.byte 0x00,0x00,0x55,0x42,0x03,0x23,0xd8,0x05
	.byte 0x00,0x0c
	.ascii "gl_visual\0"
	.byte 0x4c,0x02,0x00,0x00,0x65,0x93,0x0d
	.ascii "RGBAflag\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x00,0x0d
	.ascii "DBflag\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x01,0x0d
	.ascii "RedScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x04,0x0d
	.ascii "GreenScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x08,0x0d
	.ascii "BlueScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x0c,0x0d
	.ascii "AlphaScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x10,0x0d
	.ascii "EightBitColor\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x14,0x0d
	.ascii "InvRedScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x18,0x0d
	.ascii "InvGreenScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x1c,0x0d
	.ascii "InvBlueScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x20,0x0d
	.ascii "InvAlphaScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x24,0x0d
	.ascii "RedBits\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x28,0x0d
	.ascii "GreenBits\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x2c,0x0d
	.ascii "BlueBits\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x30,0x0d
	.ascii "AlphaBits\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x34,0x0d
	.ascii "IndexBits\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x38,0x0d
	.ascii "AccumBits\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x3c,0x0d
	.ascii "DepthBits\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x40,0x0d
	.ascii "StencilBits\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x44,0x0d
	.ascii "FrontAlphaEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x48,0x0d
	.ascii "BackAlphaEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x49,0x00
	.byte 0x05,0x00,0x00,0x63,0xeb
	.ascii "GLvisual\0"
	.byte 0x02,0x07,0x00,0x00,0x65,0x93,0x05,0x00
	.byte 0x00,0x48,0x18
	.ascii "GLdepth\0"
	.byte 0x02,0x07,0x00,0x00,0x65,0xa7,0x05,0x00
	.byte 0x00,0x31,0x59
	.ascii "GLstencil\0"
	.byte 0x02,0x07,0x00,0x00,0x65,0xba,0x04
	.ascii "short\0"
	.byte 0x05,0x02,0x05,0x00,0x00,0x65,0xcf
	.ascii "GLaccum\0"
	.byte 0x02,0x07,0x00,0x00,0x65,0xd8,0x0c
	.ascii "gl_frame_buffer\0"
	.byte 0x34,0x02,0x00,0x00,0x66,0xc2,0x0d
	.ascii "Visual\0"
	.byte 0x00,0x00,0x65,0xa2,0x02,0x23,0x00,0x0d
	.ascii "Width\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x04,0x0d
	.ascii "Height\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x08,0x0d
	.ascii "Depth\0"
	.byte 0x00,0x00,0x65,0xb5,0x02,0x23,0x0c,0x0d
	.ascii "Stencil\0"
	.byte 0x00,0x00,0x65,0xca,0x02,0x23,0x10,0x0d
	.ascii "Accum\0"
	.byte 0x00,0x00,0x65,0xe6,0x02,0x23,0x14,0x0d
	.ascii "FrontAlpha\0"
	.byte 0x00,0x00,0x31,0x78,0x02,0x23,0x18,0x0d
	.ascii "BackAlpha\0"
	.byte 0x00,0x00,0x31,0x78,0x02,0x23,0x1c,0x0d
	.ascii "Alpha\0"
	.byte 0x00,0x00,0x31,0x78,0x02,0x23,0x20,0x0d
	.ascii "Xmin\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x24,0x0d
	.ascii "Xmax\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x28,0x0d
	.ascii "Ymin\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x2c,0x0d
	.ascii "Ymax\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x30,0x00
	.byte 0x05,0x00,0x00,0x65,0xeb
	.ascii "GLframebuffer\0"
	.byte 0x02,0x07,0x00,0x00,0x66,0xc2,0x04
	.ascii "char\0"
	.byte 0x06,0x01,0x11,0x00,0x00,0x66,0xdb,0x07
	.byte 0x00,0x00,0x66,0xe3,0x15,0x01,0x00,0x00
	.byte 0x66,0xe8,0x01,0x07,0x00,0x00,0x66,0xed
	.byte 0x12,0x01,0x01,0x00,0x00,0x67,0x06,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x00,0x07,0x00,0x00
	.byte 0x66,0xf9,0x12,0x01,0x01,0x00,0x00,0x67
	.byte 0x1d,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x67,0x00,0x07,0x00,0x00,0x67
	.byte 0x0b,0x12,0x01,0x01,0x00,0x00,0x67,0x43
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x31,0x59,0x13,0x00,0x00,0x31,0x59,0x13
	.byte 0x00,0x00,0x31,0x59,0x13,0x00,0x00,0x31
	.byte 0x59,0x00,0x07,0x00,0x00,0x67,0x22,0x12
	.byte 0x01,0x01,0x00,0x00,0x67,0x6e,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x31,0x59
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x00,0x07,0x00,0x00
	.byte 0x67,0x48,0x12,0x01,0x01,0x00,0x00,0x67
	.byte 0x85,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x67,0x00,0x07,0x00,0x00,0x67
	.byte 0x73,0x12,0x01,0x01,0x00,0x00,0x67,0xab
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x31,0x59,0x13,0x00,0x00,0x31,0x59,0x13
	.byte 0x00,0x00,0x31,0x59,0x13,0x00,0x00,0x31
	.byte 0x59,0x00,0x07,0x00,0x00,0x67,0x8a,0x14
	.byte 0x01,0x00,0x00,0x31,0x59,0x01,0x00,0x00
	.byte 0x67,0xc6,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0xb0,0x00,0x07,0x00,0x00
	.byte 0x67,0xb0,0x12,0x01,0x01,0x00,0x00,0x67
	.byte 0xe2,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x45,0xc0,0x13,0x00,0x00,0x45,0xc0
	.byte 0x00,0x07,0x00,0x00,0x67,0xcb,0x11,0x00
	.byte 0x00,0x31,0x59,0x07,0x00,0x00,0x67,0xe7
	.byte 0x11,0x00,0x00,0x31,0x59,0x07,0x00,0x00
	.byte 0x67,0xf1,0x11,0x00,0x00,0x31,0x59,0x07
	.byte 0x00,0x00,0x67,0xfb,0x11,0x00,0x00,0x31
	.byte 0x59,0x07,0x00,0x00,0x68,0x05,0x11,0x00
	.byte 0x00,0x31,0x59,0x07,0x00,0x00,0x68,0x0f
	.byte 0x12,0x01,0x01,0x00,0x00,0x68,0x4e,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x67,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x67,0xec
	.byte 0x13,0x00,0x00,0x67,0xf6,0x13,0x00,0x00
	.byte 0x68,0x00,0x13,0x00,0x00,0x68,0x0a,0x13
	.byte 0x00,0x00,0x68,0x14,0x00,0x07,0x00,0x00
	.byte 0x68,0x19,0x11,0x00,0x00,0x31,0x59,0x07
	.byte 0x00,0x00,0x68,0x53,0x12,0x01,0x01,0x00
	.byte 0x00,0x68,0x7e,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0x67,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x68,0x58,0x00,0x07,0x00,0x00
	.byte 0x68,0x5d,0x11,0x00,0x00,0x01,0x43,0x07
	.byte 0x00,0x00,0x68,0x83,0x11,0x00,0x00,0x01
	.byte 0x43,0x07,0x00,0x00,0x68,0x8d,0x11,0x00
	.byte 0x00,0x31,0x59,0x07,0x00,0x00,0x68,0x97
	.byte 0x11,0x00,0x00,0x31,0x59,0x07,0x00,0x00
	.byte 0x68,0xa1,0x11,0x00,0x00,0x31,0x59,0x07
	.byte 0x00,0x00,0x68,0xab,0x11,0x00,0x00,0x31
	.byte 0x59,0x07,0x00,0x00,0x68,0xb5,0x11,0x00
	.byte 0x00,0x31,0x59,0x07,0x00,0x00,0x68,0xbf
	.byte 0x12,0x01,0x01,0x00,0x00,0x68,0xfe,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x67,0x13,0x00,0x00,0x68,0x88,0x13,0x00
	.byte 0x00,0x68,0x92,0x13,0x00,0x00,0x68,0x9c
	.byte 0x13,0x00,0x00,0x68,0xa6,0x13,0x00,0x00
	.byte 0x68,0xb0,0x13,0x00,0x00,0x68,0xba,0x13
	.byte 0x00,0x00,0x68,0xc4,0x00,0x07,0x00,0x00
	.byte 0x68,0xc9,0x11,0x00,0x00,0x01,0x43,0x07
	.byte 0x00,0x00,0x69,0x03,0x11,0x00,0x00,0x01
	.byte 0x43,0x07,0x00,0x00,0x69,0x0d,0x11,0x00
	.byte 0x00,0x31,0x59,0x07,0x00,0x00,0x69,0x17
	.byte 0x12,0x01,0x01,0x00,0x00,0x69,0x42,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x67,0x13,0x00,0x00,0x69,0x08,0x13,0x00
	.byte 0x00,0x69,0x12,0x13,0x00,0x00,0x69,0x1c
	.byte 0x00,0x07,0x00,0x00,0x69,0x21,0x11,0x00
	.byte 0x00,0x01,0x67,0x07,0x00,0x00,0x69,0x47
	.byte 0x11,0x00,0x00,0x31,0x59,0x07,0x00,0x00
	.byte 0x69,0x51,0x12,0x01,0x01,0x00,0x00,0x69
	.byte 0x81,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x67,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x69,0x4c,0x13,0x00,0x00,0x69,0x56,0x00
	.byte 0x07,0x00,0x00,0x69,0x5b,0x11,0x00,0x00
	.byte 0x31,0x59,0x07,0x00,0x00,0x69,0x86,0x12
	.byte 0x01,0x01,0x00,0x00,0x69,0xb1,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0x67
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x69,0x8b,0x00
	.byte 0x07,0x00,0x00,0x69,0x90,0x11,0x00,0x00
	.byte 0x01,0x43,0x07,0x00,0x00,0x69,0xb6,0x11
	.byte 0x00,0x00,0x01,0x43,0x07,0x00,0x00,0x69
	.byte 0xc0,0x11,0x00,0x00,0x01,0x67,0x07,0x00
	.byte 0x00,0x69,0xca,0x11,0x00,0x00,0x31,0x59
	.byte 0x07,0x00,0x00,0x69,0xd4,0x12,0x01,0x01
	.byte 0x00,0x00,0x6a,0x04,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0x67,0x13,0x00
	.byte 0x00,0x69,0xbb,0x13,0x00,0x00,0x69,0xc5
	.byte 0x13,0x00,0x00,0x69,0xcf,0x13,0x00,0x00
	.byte 0x69,0xd9,0x00,0x07,0x00,0x00,0x69,0xde
	.byte 0x11,0x00,0x00,0x01,0x43,0x07,0x00,0x00
	.byte 0x6a,0x09,0x11,0x00,0x00,0x01,0x43,0x07
	.byte 0x00,0x00,0x6a,0x13,0x11,0x00,0x00,0x31
	.byte 0x59,0x07,0x00,0x00,0x6a,0x1d,0x12,0x01
	.byte 0x01,0x00,0x00,0x6a,0x48,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0x67,0x13
	.byte 0x00,0x00,0x6a,0x0e,0x13,0x00,0x00,0x6a
	.byte 0x18,0x13,0x00,0x00,0x6a,0x22,0x00,0x07
	.byte 0x00,0x00,0x6a,0x27,0x12,0x01,0x01,0x00
	.byte 0x00,0x6a,0x6e,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0x67,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x45,0xc0,0x00,0x07,0x00,0x00
	.byte 0x6a,0x4d,0x12,0x01,0x01,0x00,0x00,0x6a
	.byte 0xa3,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0x67,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x34,0x8d,0x13,0x00,0x00,0x34,0x8d,0x13
	.byte 0x00,0x00,0x34,0x8d,0x13,0x00,0x00,0x34
	.byte 0x8d,0x00,0x07,0x00,0x00,0x6a,0x73,0x11
	.byte 0x00,0x00,0x01,0x43,0x07,0x00,0x00,0x6a
	.byte 0xa8,0x11,0x00,0x00,0x01,0x43,0x07,0x00
	.byte 0x00,0x6a,0xb2,0x11,0x00,0x00,0x31,0x59
	.byte 0x07,0x00,0x00,0x6a,0xbc,0x12,0x01,0x01
	.byte 0x00,0x00,0x6a,0xec,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0x67,0x13,0x00
	.byte 0x00,0x6a,0xad,0x13,0x00,0x00,0x6a,0xb7
	.byte 0x13,0x00,0x00,0x45,0xc0,0x13,0x00,0x00
	.byte 0x6a,0xc1,0x00,0x07,0x00,0x00,0x6a,0xc6
	.byte 0x11,0x00,0x00,0x01,0x43,0x07,0x00,0x00
	.byte 0x6a,0xf1,0x11,0x00,0x00,0x01,0x43,0x07
	.byte 0x00,0x00,0x6a,0xfb,0x11,0x00,0x00,0x31
	.byte 0x59,0x07,0x00,0x00,0x6b,0x05,0x12,0x01
	.byte 0x01,0x00,0x00,0x6b,0x44,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0x67,0x13
	.byte 0x00,0x00,0x6a,0xf6,0x13,0x00,0x00,0x6b
	.byte 0x00,0x13,0x00,0x00,0x34,0x8d,0x13,0x00
	.byte 0x00,0x34,0x8d,0x13,0x00,0x00,0x34,0x8d
	.byte 0x13,0x00,0x00,0x34,0x8d,0x13,0x00,0x00
	.byte 0x6b,0x0a,0x00,0x07,0x00,0x00,0x6b,0x0f
	.byte 0x12,0x01,0x01,0x00,0x00,0x6b,0x56,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x00,0x07,0x00,0x00
	.byte 0x6b,0x49,0x12,0x01,0x01,0x00,0x00,0x6b
	.byte 0x68,0x13,0x00,0x00,0x3c,0x5c,0x00,0x07
	.byte 0x00,0x00,0x6b,0x5b,0x14,0x01,0x00,0x00
	.byte 0x31,0x59,0x01,0x00,0x00,0x6b,0x83,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0x67,0x00,0x07,0x00,0x00,0x6b,0x6d,0x14
	.byte 0x01,0x00,0x00,0x31,0x59,0x01,0x00,0x00
	.byte 0x6b,0xad,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x31,0x59,0x13,0x00,0x00,0x31
	.byte 0x59,0x13,0x00,0x00,0x31,0x59,0x13,0x00
	.byte 0x00,0x31,0x59,0x00,0x07,0x00,0x00,0x6b
	.byte 0x88,0x14,0x01,0x00,0x00,0x31,0x59,0x01
	.byte 0x00,0x00,0x6b,0xc8,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0xb0,0x00,0x07
	.byte 0x00,0x00,0x6b,0xb2,0x12,0x01,0x01,0x00
	.byte 0x00,0x6b,0xdf,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x31,0x59,0x00,0x07,0x00
	.byte 0x00,0x6b,0xcd,0x12,0x01,0x01,0x00,0x00
	.byte 0x6b,0xf1,0x13,0x00,0x00,0x3c,0x5c,0x00
	.byte 0x07,0x00,0x00,0x6b,0xe4,0x12,0x01,0x01
	.byte 0x00,0x00,0x6c,0x0d,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0x80,0x13,0x00
	.byte 0x00,0x01,0x80,0x00,0x07,0x00,0x00,0x6b
	.byte 0xf6,0x12,0x01,0x01,0x00,0x00,0x6c,0x1f
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x00,0x07,0x00
	.byte 0x00,0x6c,0x12,0x12,0x01,0x01,0x00,0x00
	.byte 0x6c,0x31,0x13,0x00,0x00,0x3c,0x5c,0x00
	.byte 0x07,0x00,0x00,0x6c,0x24,0x11,0x00,0x00
	.byte 0x48,0x18,0x07,0x00,0x00,0x6c,0x36,0x14
	.byte 0x01,0x00,0x00,0x01,0x67,0x01,0x00,0x00
	.byte 0x6c,0x6a,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0x67,0x13,0x00,0x00,0x01
	.byte 0x43,0x13,0x00,0x00,0x01,0x43,0x13,0x00
	.byte 0x00,0x6c,0x3b,0x13,0x00,0x00,0x34,0x8d
	.byte 0x00,0x07,0x00,0x00,0x6c,0x40,0x11,0x00
	.byte 0x00,0x01,0x43,0x07,0x00,0x00,0x6c,0x6f
	.byte 0x11,0x00,0x00,0x01,0x43,0x07,0x00,0x00
	.byte 0x6c,0x79,0x11,0x00,0x00,0x48,0x18,0x07
	.byte 0x00,0x00,0x6c,0x83,0x12,0x01,0x01,0x00
	.byte 0x00,0x6c,0xb3,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0x67,0x13,0x00,0x00
	.byte 0x6c,0x74,0x13,0x00,0x00,0x6c,0x7e,0x13
	.byte 0x00,0x00,0x6c,0x88,0x13,0x00,0x00,0x34
	.byte 0x8d,0x00,0x07,0x00,0x00,0x6c,0x8d,0x12
	.byte 0x01,0x01,0x00,0x00,0x6c,0xd9,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0x67
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x44,0xee,0x00
	.byte 0x07,0x00,0x00,0x6c,0xb8,0x12,0x01,0x01
	.byte 0x00,0x00,0x6c,0xff,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0x67,0x13,0x00
	.byte 0x00,0x01,0x43,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x48,0x2a,0x00,0x07,0x00
	.byte 0x00,0x6c,0xde,0x12,0x01,0x01,0x00,0x00
	.byte 0x6d,0x1b,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x01,0x67,0x13,0x00,0x00,0x01
	.byte 0x67,0x00,0x07,0x00,0x00,0x6d,0x04,0x05
	.byte 0x00,0x00,0x6d,0x1b
	.ascii "points_func\0"
	.byte 0x02,0x12,0x01,0x01,0x00,0x00,0x6d,0x4e
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x67,0x13,0x00,0x00,0x01,0x67,0x13
	.byte 0x00,0x00,0x01,0x67,0x00,0x07,0x00,0x00
	.byte 0x6d,0x32,0x05,0x00,0x00,0x6d,0x4e
	.ascii "line_func\0"
	.byte 0x02,0x12,0x01,0x01,0x00,0x00,0x6d,0x84
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x67,0x13,0x00,0x00,0x01,0x67,0x13
	.byte 0x00,0x00,0x01,0x67,0x13,0x00,0x00,0x01
	.byte 0x67,0x00,0x07,0x00,0x00,0x6d,0x63,0x05
	.byte 0x00,0x00,0x6d,0x84
	.ascii "triangle_func\0"
	.byte 0x02,0x12,0x01,0x01,0x00,0x00,0x6d,0xc3
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x67,0x13,0x00,0x00,0x01,0x67,0x13
	.byte 0x00,0x00,0x01,0x67,0x13,0x00,0x00,0x01
	.byte 0x67,0x13,0x00,0x00,0x01,0x67,0x00,0x07
	.byte 0x00,0x00,0x6d,0x9d,0x05,0x00,0x00,0x6d
	.byte 0xc3
	.ascii "quad_func\0"
	.byte 0x02,0x12,0x01,0x01,0x00,0x00,0x6d,0xf9
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x01
	.byte 0x43,0x00,0x07,0x00,0x00,0x6d,0xd8,0x05
	.byte 0x00,0x00,0x6d,0xf9
	.ascii "rect_func\0"
	.byte 0x02,0x11,0x00,0x00,0x31,0x7d,0x07,0x00
	.byte 0x00,0x6e,0x0e,0x14,0x01,0x00,0x00,0x31
	.byte 0x59,0x01,0x00,0x00,0x6e,0x51,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0x43,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0xb0,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x31,0x59,0x13,0x00
	.byte 0x00,0x6e,0x13,0x00,0x07,0x00,0x00,0x6e
	.byte 0x18,0x11,0x00,0x00,0x3d,0x24,0x07,0x00
	.byte 0x00,0x6e,0x56,0x14,0x01,0x00,0x00,0x31
	.byte 0x59,0x01,0x00,0x00,0x6e,0x94,0x13,0x00
	.byte 0x00,0x3c,0x5c,0x13,0x00,0x00,0x01,0x43
	.byte 0x13,0x00,0x00,0x01,0x43,0x13,0x00,0x00
	.byte 0x01,0x80,0x13,0x00,0x00,0x01,0x80,0x13
	.byte 0x00,0x00,0x01,0x80,0x13,0x00,0x00,0x01
	.byte 0x80,0x13,0x00,0x00,0x6e,0x5b,0x00,0x07
	.byte 0x00,0x00,0x6e,0x60,0x12,0x01,0x01,0x00
	.byte 0x00,0x6e,0xab,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x00,0x07,0x00
	.byte 0x00,0x6e,0x99,0x12,0x01,0x01,0x00,0x00
	.byte 0x6e,0xbd,0x13,0x00,0x00,0x3c,0x5c,0x00
	.byte 0x07,0x00,0x00,0x6e,0xb0,0x12,0x01,0x01
	.byte 0x00,0x00,0x6e,0xd9,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0x67,0x13,0x00
	.byte 0x00,0x01,0x67,0x00,0x07,0x00,0x00,0x6e
	.byte 0xc2,0x14,0x01,0x00,0x00,0x31,0x59,0x01
	.byte 0x00,0x00,0x6e,0xf4,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x31,0x59,0x00,0x07
	.byte 0x00,0x00,0x6e,0xde,0x11,0x00,0x00,0x01
	.byte 0x80,0x07,0x00,0x00,0x6e,0xf9,0x12,0x01
	.byte 0x01,0x00,0x00,0x6f,0x1a,0x13,0x00,0x00
	.byte 0x3c,0x5c,0x13,0x00,0x00,0x01,0xb0,0x13
	.byte 0x00,0x00,0x6e,0xfe,0x00,0x07,0x00,0x00
	.byte 0x6f,0x03,0x11,0x00,0x00,0x31,0x8a,0x07
	.byte 0x00,0x00,0x6f,0x1f,0x12,0x01,0x01,0x00
	.byte 0x00,0x6f,0x4f,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x34,0xe9,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x6f
	.byte 0x24,0x00,0x07,0x00,0x00,0x6f,0x29
	.byte 0x11,0x00,0x00,0x01,0x80,0x07,0x00,0x00
	.byte 0x6f,0x54,0x12,0x01,0x01,0x00,0x00,0x6f
	.byte 0x7f,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x01,0xb0,0x13,0x00,0x00,0x34,0xe9
	.byte 0x13,0x00,0x00,0x01,0xb0,0x13,0x00,0x00
	.byte 0x6f,0x59,0x00,0x07,0x00,0x00,0x6f,0x5e
	.byte 0x12,0x01,0x01,0x00,0x00,0x6f,0x9b,0x13
	.byte 0x00,0x00,0x3c,0x5c,0x13,0x00,0x00,0x01
	.byte 0xb0,0x13,0x00,0x00,0x34,0xe9,0x00,0x07
	.byte 0x00,0x00,0x6f,0x84,0x12,0x01,0x01,0x00
	.byte 0x00,0x6f,0xb2,0x13,0x00,0x00,0x3c,0x5c
	.byte 0x13,0x00,0x00,0x34,0xe9,0x00,0x07,0x00
	.byte 0x00,0x6f,0xa0,0x12,0x01,0x01,0x00,0x00
	.byte 0x6f,0xc9,0x13,0x00,0x00,0x3c,0x5c,0x13
	.byte 0x00,0x00,0x34,0xe9,0x00,0x07,0x00,0x00
	.byte 0x6f,0xb7,0x12,0x01,0x01,0x00,0x00,0x6f
	.byte 0xe0,0x13,0x00,0x00,0x3c,0x5c,0x13,0x00
	.byte 0x00,0x31,0x59,0x00,0x07,0x00,0x00,0x6f
	.byte 0xce,0x0c
	.ascii "dd_function_table\0"
	.byte 0xd4,0x04,0x00,0x00,0x74,0x4d,0x0d
	.ascii "RendererString\0"
	.byte 0x00,0x00,0x66,0xf4,0x02,0x23,0x00,0x0d
	.ascii "UpdateState\0"
	.byte 0x00,0x00,0x67,0x06,0x02,0x23,0x04,0x0d
	.ascii "ClearIndex\0"
	.byte 0x00,0x00,0x67,0x1d,0x02,0x23,0x08,0x0d
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x67,0x43,0x02,0x23,0x0c,0x0d
	.ascii "Clear\0"
	.byte 0x00,0x00,0x67,0x6e,0x02,0x23,0x10,0x0d
	.ascii "Index\0"
	.byte 0x00,0x00,0x67,0x85,0x02,0x23,0x14,0x0d
	.ascii "Color\0"
	.byte 0x00,0x00,0x67,0xab,0x02,0x23,0x18,0x0d
	.ascii "SetBuffer\0"
	.byte 0x00,0x00,0x67,0xc6,0x02,0x23,0x1c,0x0d
	.ascii "GetBufferSize\0"
	.byte 0x00,0x00,0x67,0xe2,0x02,0x23,0x20,0x0d
	.ascii "WriteColorSpan\0"
	.byte 0x00,0x00,0x68,0x4e,0x02,0x23,0x24,0x0d
	.ascii "WriteMonocolorSpan\0"
	.byte 0x00,0x00,0x68,0x7e,0x02,0x23,0x28,0x0d
	.ascii "WriteColorPixels\0"
	.byte 0x00,0x00,0x68,0xfe,0x02,0x23,0x2c,0x0d
	.ascii "WriteMonocolorPixels\0"
	.byte 0x00,0x00,0x69,0x42,0x02,0x23,0x30,0x0d
	.ascii "WriteIndexSpan\0"
	.byte 0x00,0x00,0x69,0x81,0x02,0x23,0x34,0x0d
	.ascii "WriteMonoindexSpan\0"
	.byte 0x00,0x00,0x69,0xb1,0x02,0x23,0x38,0x0d
	.ascii "WriteIndexPixels\0"
	.byte 0x00,0x00,0x6a,0x04,0x02,0x23,0x3c,0x0d
	.ascii "WriteMonoindexPixels\0"
	.byte 0x00,0x00,0x6a,0x48,0x02,0x23,0x40,0x0d
	.ascii "ReadIndexSpan\0"
	.byte 0x00,0x00,0x6a,0x6e,0x02,0x23,0x44,0x0d
	.ascii "ReadColorSpan\0"
	.byte 0x00,0x00,0x6a,0xa3,0x02,0x23,0x48,0x0d
	.ascii "ReadIndexPixels\0"
	.byte 0x00,0x00,0x6a,0xec,0x02,0x23,0x4c,0x0d
	.ascii "ReadColorPixels\0"
	.byte 0x00,0x00,0x6b,0x44,0x02,0x23,0x50,0x0d
	.ascii "Finish\0"
	.byte 0x00,0x00,0x6b,0x56,0x02,0x23,0x54,0x0d
	.ascii "Flush\0"
	.byte 0x00,0x00,0x6b,0x68,0x02,0x23,0x58,0x0d
	.ascii "IndexMask\0"
	.byte 0x00,0x00,0x6b,0x83,0x02,0x23,0x5c,0x0d
	.ascii "ColorMask\0"
	.byte 0x00,0x00,0x6b,0xad,0x02,0x23,0x60,0x0d
	.ascii "LogicOp\0"
	.byte 0x00,0x00,0x6b,0xc8,0x02,0x23,0x64,0x0d
	.ascii "Dither\0"
	.byte 0x00,0x00,0x6b,0xdf,0x02,0x23,0x68,0x0d
	.ascii "Error\0"
	.byte 0x00,0x00,0x6b,0xf1,0x02,0x23,0x6c,0x0d
	.ascii "NearFar\0"
	.byte 0x00,0x00,0x6c,0x0d,0x02,0x23,0x70,0x0d
	.ascii "AllocDepthBuffer\0"
	.byte 0x00,0x00,0x6c,0x1f,0x02,0x23,0x74,0x0d
	.ascii "ClearDepthBuffer\0"
	.byte 0x00,0x00,0x6c,0x31,0x02,0x23,0x78,0x0d
	.ascii "DepthTestSpan\0"
	.byte 0x00,0x00,0x6c,0x6a,0x02,0x23,0x7c,0x0d
	.ascii "DepthTestPixels\0"
	.byte 0x00,0x00,0x6c,0xb3,0x03,0x23,0x80,0x01
	.byte 0x0d
	.ascii "ReadDepthSpanFloat\0"
	.byte 0x00,0x00,0x6c,0xd9,0x03,0x23,0x84,0x01
	.byte 0x0d
	.ascii "ReadDepthSpanInt\0"
	.byte 0x00,0x00,0x6c,0xff,0x03,0x23,0x88,0x01
	.byte 0x0d
	.ascii "PointsFunc\0"
	.byte 0x00,0x00,0x6d,0x20,0x03,0x23,0x8c,0x01
	.byte 0x0d
	.ascii "LineFunc\0"
	.byte 0x00,0x00,0x6d,0x53,0x03,0x23,0x90,0x01
	.byte 0x0d
	.ascii "TriangleFunc\0"
	.byte 0x00,0x00,0x6d,0x89,0x03,0x23,0x94,0x01
	.byte 0x0d
	.ascii "QuadFunc\0"
	.byte 0x00,0x00,0x6d,0xc8,0x03,0x23,0x98,0x01
	.byte 0x0d
	.ascii "RectFunc\0"
	.byte 0x00,0x00,0x6d,0xfe,0x03,0x23,0x9c,0x01
	.byte 0x0d
	.ascii "DrawPixels\0"
	.byte 0x00,0x00,0x6e,0x51,0x03,0x23,0xa0,0x01
	.byte 0x0d
	.ascii "Bitmap\0"
	.byte 0x00,0x00,0x6e,0x94,0x03,0x23,0xa4,0x01
	.byte 0x0d
	.ascii "Begin\0"
	.byte 0x00,0x00,0x6e,0xab,0x03,0x23,0xa8,0x01
	.byte 0x0d
	.ascii "End\0"
	.byte 0x00,0x00,0x6e,0xbd,0x03,0x23,0xac,0x01
	.byte 0x0d
	.ascii "RasterSetup\0"
	.byte 0x00,0x00,0x6e,0xd9,0x03,0x23,0xb0,0x01
	.byte 0x0d
	.ascii "RenderVB\0"
	.byte 0x00,0x00,0x6e,0xf4,0x03,0x23,0xb4,0x01
	.byte 0x0d
	.ascii "TexEnv\0"
	.byte 0x00,0x00,0x6f,0x1a,0x03,0x23,0xb8,0x01
	.byte 0x0d
	.ascii "TexImage\0"
	.byte 0x00,0x00,0x6f,0x4f,0x03,0x23,0xbc,0x01
	.byte 0x0d
	.ascii "TexParameter\0"
	.byte 0x00,0x00,0x6f,0x7f,0x03,0x23,0xc0,0x01
	.byte 0x0d
	.ascii "BindTexture\0"
	.byte 0x00,0x00,0x6f,0x9b,0x03,0x23,0xc4,0x01
	.byte 0x0d
	.ascii "DeleteTexture\0"
	.byte 0x00,0x00,0x6f,0xb2,0x03,0x23,0xc8,0x01
	.byte 0x0d
	.ascii "UpdateTexturePalette\0"
	.byte 0x00,0x00,0x6f,0xc9,0x03,0x23,0xcc,0x01
	.byte 0x0d
	.ascii "UseGlobalTexturePalette\0"
	.byte 0x00,0x00,0x6f,0xe0,0x03,0x23,0xd0,0x01
	.byte 0x00,0x08,0x00,0x00,0x01,0x89,0x40,0x00
	.byte 0x00,0x74,0x5e,0x09,0x00,0x00,0x01,0x97
	.byte 0x0f,0x00,0x08,0x00,0x00,0x01,0x89,0x40
	.byte 0x00,0x00,0x74,0x6f,0x09,0x00,0x00,0x01
	.byte 0x97,0x0f,0x00,0x08,0x00,0x00,0x01,0x80
	.byte 0x40,0x00,0x00,0x74,0x80,0x09,0x00,0x00
	.byte 0x01,0x97,0x0f,0x00,0x0e,0x00,0x00,0x74
	.byte 0x6f,0x08,0x00,0x00,0x00,0x74,0x92,0x09
	.byte 0x00,0x00,0x01,0x97,0x1f,0x00,0x08,0x00
	.byte 0x00,0x01,0x89,0x40,0x00,0x00,0x74,0xa3
	.byte 0x09,0x00,0x00,0x01,0x97,0x0f,0x00,0x08
	.byte 0x00,0x00,0x01,0x80,0x40,0x00,0x00,0x74
	.byte 0xb4,0x09,0x00,0x00,0x01,0x97,0x0f,0x00
	.byte 0x0e,0x00,0x00,0x74,0xa3,0x08,0x00,0x00
	.byte 0x00,0x74,0xc6,0x09,0x00,0x00,0x01,0x97
	.byte 0x1f,0x00,0x08,0x00,0x00,0x01,0x80,0x08
	.byte 0x00,0x00,0x74,0xd7,0x09,0x00,0x00,0x01
	.byte 0x97,0x01,0x00,0x0e,0x00,0x00,0x74,0xc6
	.byte 0x01,0x00,0x00,0x00,0x74,0xe9,0x09,0x00
	.byte 0x00,0x01,0x97,0x1f,0x00,0x08,0x00,0x00
	.byte 0x01,0x89,0x40,0x00,0x00,0x74,0xfa,0x09
	.byte 0x00,0x00,0x01,0x97,0x0f,0x00,0x08,0x00
	.byte 0x00,0x01,0x80,0x40,0x00,0x00,0x75,0x0b
	.byte 0x09,0x00,0x00,0x01,0x97,0x0f,0x00,0x0e
	.byte 0x00,0x00,0x74,0xfa,0x02,0x80,0x00,0x00
	.byte 0x75,0x1d,0x09,0x00,0x00,0x01,0x97,0x09
	.byte 0x00,0x05,0x00,0x00,0x01,0x67
	.ascii "GLbitfield\0"
	.byte 0x03,0x07,0x00,0x00,0x75,0x33,0x0c
	.ascii "gl_attrib_node\0"
	.byte 0x0c,0x02,0x00,0x00,0x75,0x71,0x0d
	.ascii "kind\0"
	.byte 0x00,0x00,0x75,0x1d,0x02,0x23,0x00,0x0d
	.ascii "data\0"
	.byte 0x00,0x00,0x31,0x85,0x02,0x23,0x04,0x0d
	.ascii "next\0"
	.byte 0x00,0x00,0x75,0x2e,0x02,0x23,0x08,0x00
	.byte 0x08,0x00,0x00,0x75,0x2e,0x40,0x00,0x00
	.byte 0x75,0x82,0x09,0x00,0x00,0x01,0x97,0x0f
	.byte 0x00,0x08,0x00,0x00,0x01,0x89,0x10,0x00
	.byte 0x00,0x75,0x93,0x09,0x00,0x00,0x01,0x97
	.byte 0x03,0x00,0x0c
	.ascii "gl_accum_attrib\0"
	.byte 0x10,0x02,0x00,0x00,0x75,0xbe,0x0d
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x75,0x82,0x02,0x23,0x00,0x00
	.byte 0x08,0x00,0x00,0x01,0x89,0x10,0x00,0x00
	.byte 0x75,0xcf,0x09,0x00,0x00,0x01,0x97,0x03
	.byte 0x00,0x08,0x00,0x00,0x01,0x89,0x10,0x00
	.byte 0x00,0x75,0xe0,0x09,0x00,0x00,0x01,0x97
	.byte 0x03,0x00,0x0c
	.ascii "gl_colorbuffer_attrib\0"
	.byte 0x58,0x02,0x00,0x00,0x77,0x8f,0x0d
	.ascii "ClearIndex\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x00,0x0d
	.ascii "ClearColor\0"
	.byte 0x00,0x00,0x75,0xbe,0x02,0x23,0x04,0x0d
	.ascii "IndexMask\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x14,0x0d
	.ascii "ColorMask\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x18,0x0d
	.ascii "SWmasking\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x1c,0x0d
	.ascii "DrawBuffer\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x20,0x0d
	.ascii "AlphaEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x24,0x0d
	.ascii "AlphaFunc\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x28,0x0d
	.ascii "AlphaRef\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x2c,0x0d
	.ascii "AlphaRefUbyte\0"
	.byte 0x00,0x00,0x31,0x6a,0x02,0x23,0x30,0x0d
	.ascii "BlendEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x31,0x0d
	.ascii "BlendSrc\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x34,0x0d
	.ascii "BlendDst\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x38,0x0d
	.ascii "BlendEquation\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x3c,0x0d
	.ascii "BlendColor\0"
	.byte 0x00,0x00,0x75,0xcf,0x02,0x23,0x40,0x0d
	.ascii "LogicOp\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x50,0x0d
	.ascii "IndexLogicOpEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x54,0x0d
	.ascii "ColorLogicOpEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x55,0x0d
	.ascii "SWLogicOpEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x56,0x0d
	.ascii "DitherFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x57,0x00
	.byte 0x08,0x00,0x00,0x31,0x6a,0x04,0x00,0x00
	.byte 0x77,0xa0,0x09,0x00,0x00,0x01,0x97,0x03
	.byte 0x00,0x08,0x00,0x00,0x01,0x89,0x0c,0x00
	.byte 0x00,0x77,0xb1,0x09,0x00,0x00,0x01,0x97
	.byte 0x02,0x00,0x08,0x00,0x00,0x01,0x89,0x10
	.byte 0x00,0x00,0x77,0xc2,0x09,0x00,0x00,0x01
	.byte 0x97,0x03,0x00,0x08,0x00,0x00,0x01,0x89
	.byte 0x10,0x00,0x00,0x77,0xd3,0x09,0x00,0x00
	.byte 0x01,0x97,0x03,0x00,0x08,0x00,0x00,0x01
	.byte 0x89,0x10,0x00,0x00,0x77,0xe4,0x09,0x00
	.byte 0x00,0x01,0x97,0x03,0x00,0x08,0x00,0x00
	.byte 0x01,0x89,0x10,0x00,0x00,0x77,0xf5,0x09
	.byte 0x00,0x00,0x01,0x97,0x03,0x00,0x0c
	.ascii "gl_current_attrib\0"
	.byte 0x60,0x02,0x00,0x00,0x78,0xdf,0x0d
	.ascii "ByteColor\0"
	.byte 0x00,0x00,0x77,0x8f,0x02,0x23,0x00,0x0d
	.ascii "Index\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x04,0x0d
	.ascii "Normal\0"
	.byte 0x00,0x00,0x77,0xa0,0x02,0x23,0x08,0x0d
	.ascii "TexCoord\0"
	.byte 0x00,0x00,0x77,0xb1,0x02,0x23,0x14,0x0d
	.ascii "RasterPos\0"
	.byte 0x00,0x00,0x77,0xc2,0x02,0x23,0x24,0x0d
	.ascii "RasterDistance\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x34,0x0d
	.ascii "RasterColor\0"
	.byte 0x00,0x00,0x77,0xd3,0x02,0x23,0x38,0x0d
	.ascii "RasterIndex\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x48,0x0d
	.ascii "RasterTexCoord\0"
	.byte 0x00,0x00,0x77,0xe4,0x02,0x23,0x4c,0x0d
	.ascii "RasterPosValid\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x5c,0x0d
	.ascii "EdgeFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x5d,0x00
	.byte 0x0c
	.ascii "gl_depthbuffer_attrib\0"
	.byte 0x0c,0x02,0x00,0x00,0x79,0x32,0x0d
	.ascii "Func\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x00,0x0d
	.ascii "Clear\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x04,0x0d
	.ascii "Test\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x08,0x0d
	.ascii "Mask\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x09,0x00
	.byte 0x0c
	.ascii "gl_eval_attrib\0"
	.byte 0x38,0x02,0x00,0x00,0x7b,0x97,0x0d
	.ascii "Map1Color4\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x00,0x0d
	.ascii "Map1Index\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x01,0x0d
	.ascii "Map1Normal\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x02,0x0d
	.ascii "Map1TextureCoord1\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x03,0x0d
	.ascii "Map1TextureCoord2\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x04,0x0d
	.ascii "Map1TextureCoord3\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x05,0x0d
	.ascii "Map1TextureCoord4\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x06,0x0d
	.ascii "Map1Vertex3\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x07,0x0d
	.ascii "Map1Vertex4\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x08,0x0d
	.ascii "Map2Color4\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x09,0x0d
	.ascii "Map2Index\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x0a,0x0d
	.ascii "Map2Normal\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x0b,0x0d
	.ascii "Map2TextureCoord1\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x0c,0x0d
	.ascii "Map2TextureCoord2\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x0d,0x0d
	.ascii "Map2TextureCoord3\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x0e,0x0d
	.ascii "Map2TextureCoord4\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x0f,0x0d
	.ascii "Map2Vertex3\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x10,0x0d
	.ascii "Map2Vertex4\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x11,0x0d
	.ascii "AutoNormal\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x12,0x0d
	.ascii "MapGrid1un\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x14,0x0d
	.ascii "MapGrid1u1\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x18,0x0d
	.ascii "MapGrid1u2\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x1c,0x0d
	.ascii "MapGrid2un\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x20,0x0d
	.ascii "MapGrid2vn\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x24,0x0d
	.ascii "MapGrid2u1\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x28,0x0d
	.ascii "MapGrid2u2\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x2c,0x0d
	.ascii "MapGrid2v1\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x30,0x0d
	.ascii "MapGrid2v2\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x34,0x00
	.byte 0x08,0x00,0x00,0x01,0x89,0x10,0x00,0x00
	.byte 0x7b,0xa8,0x09,0x00,0x00,0x01,0x97,0x03
	.byte 0x00,0x0c
	.ascii "gl_fog_attrib\0"
	.byte 0x28,0x02,0x00,0x00,0x7c,0x21,0x0d
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x00,0x0d
	.ascii "Color\0"
	.byte 0x00,0x00,0x7b,0x97,0x02,0x23,0x04,0x0d
	.ascii "Density\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x14,0x0d
	.ascii "Start\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x18,0x0d
	.ascii "End\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x1c,0x0d
	.ascii "Index\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x20,0x0d
	.ascii "Mode\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x24,0x00
	.byte 0x0c
	.ascii "gl_hint_attrib\0"
	.byte 0x14,0x02,0x00,0x00,0x7c,0x9f,0x0d
	.ascii "PerspectiveCorrection\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x00,0x0d
	.ascii "PointSmooth\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x04,0x0d
	.ascii "LineSmooth\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x08,0x0d
	.ascii "PolygonSmooth\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x0c,0x0d
	.ascii "Fog\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x10,0x00
	.byte 0x08,0x00,0x00,0x01,0x89,0x10,0x00,0x00
	.byte 0x7c,0xb0,0x09,0x00,0x00,0x01,0x97,0x03
	.byte 0x00,0x08,0x00,0x00,0x01,0x89,0x10,0x00
	.byte 0x00,0x7c,0xc1,0x09,0x00,0x00,0x01,0x97
	.byte 0x03,0x00,0x08,0x00,0x00,0x01,0x89,0x10
	.byte 0x00,0x00,0x7c,0xd2,0x09,0x00,0x00,0x01
	.byte 0x97,0x03,0x00,0x08,0x00,0x00,0x01,0x89
	.byte 0x10,0x00,0x00,0x7c,0xe3,0x09,0x00,0x00
	.byte 0x01,0x97,0x03,0x00,0x08,0x00,0x00,0x01
	.byte 0x89,0x10,0x00,0x00,0x7c,0xf4,0x09,0x00
	.byte 0x00,0x01,0x97,0x03,0x00,0x10
	.ascii "gl_light\0"
	.byte 0x10,0xe4,0x02,0x00,0x00,0x7e,0xb6,0x0d
	.ascii "Ambient\0"
	.byte 0x00,0x00,0x7c,0x9f,0x02,0x23,0x00,0x0d
	.ascii "Diffuse\0"
	.byte 0x00,0x00,0x7c,0xb0,0x02,0x23,0x10,0x0d
	.ascii "Specular\0"
	.byte 0x00,0x00,0x7c,0xc1,0x02,0x23,0x20,0x0d
	.ascii "Position\0"
	.byte 0x00,0x00,0x7c,0xd2,0x02,0x23,0x30,0x0d
	.ascii "Direction\0"
	.byte 0x00,0x00,0x7c,0xe3,0x02,0x23,0x40,0x0d
	.ascii "SpotExponent\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x50,0x0d
	.ascii "SpotCutoff\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x54,0x0d
	.ascii "CosCutoff\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x58,0x0d
	.ascii "ConstantAttenuation\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x5c,0x0d
	.ascii "LinearAttenuation\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x60,0x0d
	.ascii "QuadraticAttenuation\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x64,0x0d
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x68,0x0d
	.ascii "NextEnabled\0"
	.byte 0x00,0x00,0x7e,0xb6,0x02,0x23,0x6c,0x0d
	.ascii "VP_inf_norm\0"
	.byte 0x00,0x00,0x7e,0xbb,0x02,0x23,0x70,0x0d
	.ascii "h_inf_norm\0"
	.byte 0x00,0x00,0x7e,0xcc,0x02,0x23,0x7c,0x0d
	.ascii "NormDirection\0"
	.byte 0x00,0x00,0x7e,0xdd,0x03,0x23,0x88,0x01
	.byte 0x0d
	.ascii "SpotExpTable\0"
	.byte 0x00,0x00,0x7e,0xff,0x03,0x23,0x94,0x01
	.byte 0x0d
	.ascii "MatAmbient\0"
	.byte 0x00,0x00,0x7f,0x23,0x03,0x23,0x94,0x21
	.byte 0x0d
	.ascii "MatDiffuse\0"
	.byte 0x00,0x00,0x7f,0x45,0x03,0x23,0xac,0x21
	.byte 0x0d
	.ascii "MatSpecular\0"
	.byte 0x00,0x00,0x7f,0x67,0x03,0x23,0xc4,0x21
	.byte 0x0d
	.ascii "dli\0"
	.byte 0x00,0x00,0x01,0x89,0x03,0x23,0xdc,0x21
	.byte 0x0d
	.ascii "sli\0"
	.byte 0x00,0x00,0x01,0x89,0x03,0x23,0xe0,0x21
	.byte 0x00,0x07,0x00,0x00,0x7c,0xf4,0x08,0x00
	.byte 0x00,0x01,0x89,0x0c,0x00,0x00,0x7e,0xcc
	.byte 0x09,0x00,0x00,0x01,0x97,0x02,0x00,0x08
	.byte 0x00,0x00,0x01,0x89,0x0c,0x00,0x00,0x7e
	.byte 0xdd,0x09,0x00,0x00,0x01,0x97,0x02,0x00
	.byte 0x08,0x00,0x00,0x01,0x89,0x0c,0x00,0x00
	.byte 0x7e,0xee,0x09,0x00,0x00,0x01,0x97,0x02
	.byte 0x00,0x08,0x00,0x00,0x01,0x80,0x08,0x00
	.byte 0x00,0x7e,0xff,0x09,0x00,0x00,0x01,0x97
	.byte 0x01,0x00,0x0e,0x00,0x00,0x7e,0xee,0x10
	.byte 0x00,0x00,0x00,0x7f,0x12,0x0f,0x00,0x00
	.byte 0x01,0x97,0x01,0xff,0x00,0x08,0x00,0x00
	.byte 0x01,0x80,0x0c,0x00,0x00,0x7f,0x23,0x09
	.byte 0x00,0x00,0x01,0x97,0x02,0x00,0x08,0x00
	.byte 0x00,0x7f,0x12,0x18,0x00,0x00,0x7f,0x34
	.byte 0x09,0x00,0x00,0x01,0x97,0x01,0x00,0x08
	.byte 0x00,0x00,0x01,0x80,0x0c,0x00,0x00,0x7f
	.byte 0x45,0x09
	.byte 0x00,0x00,0x01,0x97,0x02,0x00,0x08,0x00
	.byte 0x00,0x7f,0x34,0x18,0x00,0x00,0x7f,0x56
	.byte 0x09,0x00,0x00,0x01,0x97,0x01,0x00,0x08
	.byte 0x00,0x00,0x01,0x80,0x0c,0x00,0x00,0x7f
	.byte 0x67,0x09,0x00,0x00,0x01,0x97,0x02,0x00
	.byte 0x08,0x00,0x00,0x7f,0x56,0x18,0x00,0x00
	.byte 0x7f,0x78,0x09,0x00,0x00,0x01,0x97,0x01
	.byte 0x00,0x0e,0x00,0x00,0x7c,0xf4,0x87,0x20
	.byte 0x00,0x00,0x7f,0x8a,0x09,0x00,0x00,0x01
	.byte 0x97,0x07,0x00,0x08,0x00,0x00,0x01,0x89
	.byte 0x10,0x00,0x00,0x7f,0x9b,0x09,0x00,0x00
	.byte 0x01,0x97,0x03,0x00,0x0c
	.ascii "gl_lightmodel\0"
	.byte 0x14,0x02,0x00,0x00,0x7f,0xe5,0x0d
	.ascii "Ambient\0"
	.byte 0x00,0x00,0x7f,0x8a,0x02,0x23,0x00,0x0d
	.ascii "LocalViewer\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x10,0x0d
	.ascii "TwoSide\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x11,0x00
	.byte 0x08,0x00,0x00,0x01,0x89,0x10,0x00,0x00
	.byte 0x7f,0xf6,0x09,0x00,0x00,0x01,0x97,0x03
	.byte 0x00,0x08,0x00,0x00,0x01,0x89,0x10,0x00
	.byte 0x00,0x80,0x07,0x09,0x00,0x00,0x01,0x97
	.byte 0x03,0x00,0x08,0x00,0x00,0x01,0x89,0x10
	.byte 0x00,0x00,0x80,0x18,0x09,0x00,0x00,0x01
	.byte 0x97,0x03,0x00,0x08,0x00,0x00,0x01,0x89
	.byte 0x10,0x00,0x00,0x80,0x29,0x09,0x00,0x00
	.byte 0x01,0x97,0x03,0x00,0x0e,0x00,0x00,0x01
	.byte 0x89,0x03,0x20,0x00,0x00,0x80,0x3c,0x0f
	.byte 0x00,0x00,0x01,0x97,0x00,0xc7,0x00,0x10
	.ascii "gl_material\0"
	.byte 0x03,0x70,0x02,0x00,0x00,0x80,0xf8,0x0d
	.ascii "Ambient\0"
	.byte 0x00,0x00,0x7f,0xe5,0x02,0x23,0x00,0x0d
	.ascii "Diffuse\0"
	.byte 0x00,0x00,0x7f,0xf6,0x02,0x23,0x10,0x0d
	.ascii "Specular\0"
	.byte 0x00,0x00,0x80,0x07,0x02,0x23,0x20,0x0d
	.ascii "Emission\0"
	.byte 0x00,0x00,0x80,0x18,0x02,0x23,0x30,0x0d
	.ascii "Shininess\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x40,0x0d
	.ascii "AmbientIndex\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x44,0x0d
	.ascii "DiffuseIndex\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x48,0x0d
	.ascii "SpecularIndex\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x4c,0x0d
	.ascii "ShineTable\0"
	.byte 0x00,0x00,0x80,0x29,0x02,0x23,0x50,0x00
	.byte 0x0e,0x00,0x00,0x80,0x3c,0x06,0xe0,0x00
	.byte 0x00,0x81,0x0a,0x09,0x00,0x00,0x01,0x97
	.byte 0x01,0x00,0x08,0x00,0x00,0x01,0x80,0x10
	.byte 0x00,0x00,0x81,0x1b,0x09,0x00,0x00,0x01
	.byte 0x97,0x03,0x00,0x08,0x00,0x00,0x81,0x0a
	.byte 0x20,0x00,0x00,0x81,0x2c,0x09,0x00,0x00
	.byte 0x01,0x97,0x01,0x00,0x10
	.ascii "gl_light_attrib\0"
	.byte 0x8e,0x54,0x02,0x00,0x00,0x82,0x4d,0x0d
	.ascii "Light\0"
	.byte 0x00,0x00,0x7f,0x78,0x02,0x23,0x00,0x0d
	.ascii "Model\0"
	.byte 0x00,0x00,0x7f,0x9b,0x04,0x23,0xa0,0x8e
	.byte 0x02,0x0d
	.ascii "Material\0"
	.byte 0x00,0x00,0x80,0xf8,0x04,0x23,0xb4,0x8e
	.byte 0x02,0x0d
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0x94,0x9c
	.byte 0x02,0x0d
	.ascii "ShadeModel\0"
	.byte 0x00,0x00,0x31,0x4c,0x04,0x23,0x98,0x9c
	.byte 0x02,0x0d
	.ascii "ColorMaterialFace\0"
	.byte 0x00,0x00,0x31,0x4c,0x04,0x23,0x9c,0x9c
	.byte 0x02,0x0d
	.ascii "ColorMaterialMode\0"
	.byte 0x00,0x00,0x31,0x4c,0x04,0x23,0xa0,0x9c
	.byte 0x02,0x0d
	.ascii "ColorMaterialBitmask\0"
	.byte 0x00,0x00,0x01,0x73,0x04,0x23,0xa4,0x9c
	.byte 0x02,0x0d
	.ascii "ColorMaterialEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0xa8,0x9c
	.byte 0x02,0x0d
	.ascii "FirstEnabled\0"
	.byte 0x00,0x00,0x7e,0xb6,0x04,0x23,0xac,0x9c
	.byte 0x02,0x0d
	.ascii "Fast\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0xb0,0x9c
	.byte 0x02,0x0d
	.ascii "BaseColor\0"
	.byte 0x00,0x00,0x81,0x1b,0x04,0x23,0xb4,0x9c
	.byte 0x02,0x00,0x05,0x00,0x00,0x48,0x18
	.ascii "GLushort\0"
	.byte 0x03,0x0c
	.ascii "gl_line_attrib\0"
	.byte 0x0c,0x02,0x00,0x00,0x82,0xd5,0x0d
	.ascii "SmoothFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x00,0x0d
	.ascii "StippleFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x01,0x0d
	.ascii "StipplePattern\0"
	.byte 0x00,0x00,0x82,0x4d,0x02,0x23,0x02,0x0d
	.ascii "StippleFactor\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x04,0x0d
	.ascii "Width\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x08,0x00
	.byte 0x0c
	.ascii "gl_list_attrib\0"
	.byte 0x04,0x02,0x00,0x00,0x82,0xfd,0x0d
	.ascii "ListBase\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x00,0x00
	.byte 0x0e,0x00,0x00,0x01,0x4a,0x04,0x00,0x00
	.byte 0x00,0x83,0x10,0x0f,0x00,0x00,0x01,0x97
	.byte 0x00,0xff,0x00,0x0e,0x00,0x00,0x01,0x4a
	.byte 0x04,0x00,0x00,0x00,0x83,0x23,0x0f,0x00
	.byte 0x00,0x01,0x97,0x00,0xff,0x00,0x0e,0x00
	.byte 0x00,0x01,0x89,0x04,0x00,0x00,0x00,0x83
	.byte 0x36,0x0f,0x00,0x00,0x01,0x97,0x00,0xff
	.byte 0x00,0x0e,0x00,0x00,0x01,0x89,0x04,0x00
	.byte 0x00,0x00,0x83,0x49,0x0f,0x00,0x00,0x01
	.byte 0x97,0x00,0xff,0x00,0x0e,0x00,0x00,0x01
	.byte 0x89,0x04,0x00,0x00,0x00,0x83,0x5c,0x0f
	.byte 0x00,0x00,0x01,0x97,0x00,0xff,0x00,0x0e
	.byte 0x00,0x00,0x01,0x89,0x04,0x00,0x00,0x00
	.byte 0x83,0x6f,0x0f,0x00,0x00,0x01,0x97,0x00
	.byte 0xff,0x00,0x0e,0x00,0x00,0x01,0x89,0x04
	.byte 0x00,0x00,0x00,0x83,0x82,0x0f,0x00,0x00
	.byte 0x01,0x97,0x00,0xff,0x00,0x0e,0x00,0x00
	.byte 0x01,0x89,0x04,0x00,0x00,0x00,0x83,0x95
	.byte 0x0f,0x00,0x00,0x01,0x97,0x00,0xff,0x00
	.byte 0x0e,0x00,0x00,0x01,0x89,0x04,0x00,0x00
	.byte 0x00,0x83,0xa8,0x0f,0x00,0x00,0x01,0x97
	.byte 0x00,0xff,0x00,0x0e,0x00,0x00,0x01,0x89
	.byte 0x04,0x00,0x00,0x00,0x83,0xbb,0x0f,0x00
	.byte 0x00,0x01,0x97,0x00,0xff,0x00,0x10
	.ascii "gl_pixel_attrib\0"
	.byte 0x28,0x68,0x02,0x00,0x00,0x86,0x7a,0x0d
	.ascii "ReadBuffer\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x00,0x0d
	.ascii "RedBias\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x04,0x0d
	.ascii "RedScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x08,0x0d
	.ascii "GreenBias\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x0c,0x0d
	.ascii "GreenScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x10,0x0d
	.ascii "BlueBias\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x14,0x0d
	.ascii "BlueScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x18,0x0d
	.ascii "AlphaBias\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x1c,0x0d
	.ascii "AlphaScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x20,0x0d
	.ascii "DepthBias\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x24,0x0d
	.ascii "DepthScale\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x28,0x0d
	.ascii "IndexShift\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x2c,0x0d
	.ascii "IndexOffset\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x30,0x0d
	.ascii "MapColorFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x34,0x0d
	.ascii "MapStencilFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x35,0x0d
	.ascii "ZoomX\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x38,0x0d
	.ascii "ZoomY\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x3c,0x0d
	.ascii "MapStoSsize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x40,0x0d
	.ascii "MapItoIsize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x44,0x0d
	.ascii "MapItoRsize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x48,0x0d
	.ascii "MapItoGsize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x4c,0x0d
	.ascii "MapItoBsize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x50,0x0d
	.ascii "MapItoAsize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x54,0x0d
	.ascii "MapRtoRsize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x58,0x0d
	.ascii "MapGtoGsize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x5c,0x0d
	.ascii "MapBtoBsize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x60,0x0d
	.ascii "MapAtoAsize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x64,0x0d
	.ascii "MapStoS\0"
	.byte 0x00,0x00,0x82,0xfd,0x02,0x23,0x68,0x0d
	.ascii "MapItoI\0"
	.byte 0x00,0x00,0x83,0x10,0x03,0x23,0xe8,0x08
	.byte 0x0d
	.ascii "MapItoR\0"
	.byte 0x00,0x00,0x83,0x23,0x03,0x23,0xe8,0x10
	.byte 0x0d
	.ascii "MapItoG\0"
	.byte 0x00,0x00,0x83,0x36,0x03,0x23,0xe8,0x18
	.byte 0x0d
	.ascii "MapItoB\0"
	.byte 0x00,0x00,0x83,0x49,0x03,0x23,0xe8,0x20
	.byte 0x0d
	.ascii "MapItoA\0"
	.byte 0x00,0x00,0x83,0x5c,0x03,0x23,0xe8,0x28
	.byte 0x0d
	.ascii "MapRtoR\0"
	.byte 0x00,0x00,0x83,0x6f,0x03,0x23,0xe8,0x30
	.byte 0x0d
	.ascii "MapGtoG\0"
	.byte 0x00,0x00,0x83,0x82,0x03,0x23,0xe8,0x38
	.byte 0x0d
	.ascii "MapBtoB\0"
	.byte 0x00,0x00,0x83,0x95,0x03,0x23,0xe8,0x40
	.byte 0x0d
	.ascii "MapAtoA\0"
	.byte 0x00,0x00,0x83,0xa8,0x03,0x23,0xe8,0x48
	.byte 0x00,0x08,0x00,0x00,0x01,0x89,0x0c,0x00
	.byte 0x00,0x86,0x8b,0x09,0x00,0x00,0x01,0x97
	.byte 0x02,0x00,0x0c
	.ascii "gl_point_attrib\0"
	.byte 0x20,0x02,0x00,0x00,0x87,0x04,0x0d
	.ascii "SmoothFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x00,0x0d
	.ascii "Size\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x04,0x0d
	.ascii "Params\0"
	.byte 0x00,0x00,0x86,0x7a,0x02,0x23,0x08,0x0d
	.ascii "MinSize\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x14,0x0d
	.ascii "MaxSize\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x18,0x0d
	.ascii "Threshold\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x1c,0x00
	.byte 0x0c
	.ascii "gl_polygon_attrib\0"
	.byte 0x28,0x02,0x00,0x00,0x88,0x37,0x0d
	.ascii "FrontFace\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x00,0x0d
	.ascii "FrontMode\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x04,0x0d
	.ascii "BackMode\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x08,0x0d
	.ascii "Unfilled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x0c,0x0d
	.ascii "CullFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x0d,0x0d
	.ascii "CullFaceMode\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x10,0x0d
	.ascii "CullBits\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x14,0x0d
	.ascii "SmoothFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x18,0x0d
	.ascii "StippleFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x19,0x0d
	.ascii "OffsetFactor\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x1c,0x0d
	.ascii "OffsetUnits\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x20,0x0d
	.ascii "OffsetPoint\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x24,0x0d
	.ascii "OffsetLine\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x25,0x0d
	.ascii "OffsetFill\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x26,0x0d
	.ascii "OffsetAny\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x27,0x00
	.byte 0x08,0x00,0x00,0x01,0x73,0x80,0x00,0x00
	.byte 0x88,0x48,0x09,0x00,0x00,0x01,0x97,0x1f
	.byte 0x00,0x05,0x00,0x00,0x01,0x43
	.ascii "GLsizei\0"
	.byte 0x03,0x0c
	.ascii "gl_scissor_attrib\0"
	.byte 0x14,0x02,0x00,0x00,0x88,0xb1,0x0d
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x00,0x0d
	.ascii "X\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x04,0x0d
	.ascii "Y\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x08,0x0d
	.ascii "Width\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x0c,0x0d
	.ascii "Height\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x10,0x00
	.byte 0x0c
	.ascii "gl_stencil_attrib\0"
	.byte 0x18,0x02,0x00,0x00,0x89,0x5f,0x0d
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x00,0x0d
	.ascii "Function\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x04,0x0d
	.ascii "FailFunc\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x08,0x0d
	.ascii "ZPassFunc\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x0c,0x0d
	.ascii "ZFailFunc\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x10,0x0d
	.ascii "Ref\0"
	.byte 0x00,0x00,0x65,0xba,0x02,0x23,0x14,0x0d
	.ascii "ValueMask\0"
	.byte 0x00,0x00,0x65,0xba,0x02,0x23,0x15,0x0d
	.ascii "Clear\0"
	.byte 0x00,0x00,0x65,0xba,0x02,0x23,0x16,0x0d
	.ascii "WriteMask\0"
	.byte 0x00,0x00,0x65,0xba,0x02,0x23,0x17,0x00
	.byte 0x08,0x00,0x00,0x01,0x89,0x10,0x00,0x00
	.byte 0x89,0x70,0x09,0x00,0x00,0x01,0x97,0x03
	.byte 0x00,0x08,0x00,0x00,0x01,0x89,0x10,0x00
	.byte 0x00,0x89,0x81,0x09,0x00,0x00,0x01,0x97
	.byte 0x03,0x00,0x08,0x00,0x00,0x01,0x89,0x10
	.byte 0x00,0x00,0x89,0x92,0x09,0x00,0x00,0x01
	.byte 0x97,0x03,0x00,0x08,0x00,0x00,0x01,0x89
	.byte 0x10,0x00,0x00,0x89,0xa3,0x09,0x00,0x00
	.byte 0x01,0x97,0x03,0x00,0x08,0x00,0x00,0x01
	.byte 0x89,0x10,0x00,0x00,0x89,0xb4,0x09,0x00
	.byte 0x00,0x01,0x97,0x03,0x00,0x08,0x00,0x00
	.byte 0x01,0x89,0x10,0x00,0x00,0x89,0xc5,0x09
	.byte 0x00,0x00,0x01,0x97,0x03,0x00,0x08,0x00
	.byte 0x00,0x01,0x89,0x10,0x00,0x00,0x89,0xd6
	.byte 0x09,0x00,0x00,0x01,0x97,0x03,0x00,0x08
	.byte 0x00,0x00,0x01,0x89,0x10,0x00,0x00,0x89
	.byte 0xe7,0x09,0x00,0x00,0x01,0x97,0x03,0x00
	.byte 0x08,0x00,0x00,0x01,0x89,0x10,0x00,0x00
	.byte 0x89,0xf8,0x09,0x00,0x00,0x01,0x97,0x03
	.byte 0x00,0x0e,0x00,0x00,0x31,0x6a,0x04,0x00
	.byte 0x00,0x00,0x8a,0x0b,0x0f,0x00,0x00,0x01
	.byte 0x97,0x03,0xff,0x00,0x10
	.ascii "gl_texture_attrib\0"
	.byte 0x04,0xd8,0x02,0x00,0x00,0x8c,0x3a,0x0d
	.ascii "Enabled\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x00,0x0d
	.ascii "EnvMode\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x04,0x0d
	.ascii "EnvColor\0"
	.byte 0x00,0x00,0x89,0x5f,0x02,0x23,0x08,0x0d
	.ascii "TexGenEnabled\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x18,0x0d
	.ascii "GenModeS\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x1c,0x0d
	.ascii "GenModeT\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x20,0x0d
	.ascii "GenModeR\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x24,0x0d
	.ascii "GenModeQ\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x28,0x0d
	.ascii "ObjectPlaneS\0"
	.byte 0x00,0x00,0x89,0x70,0x02,0x23,0x2c,0x0d
	.ascii "ObjectPlaneT\0"
	.byte 0x00,0x00,0x89,0x81,0x02,0x23,0x3c,0x0d
	.ascii "ObjectPlaneR\0"
	.byte 0x00,0x00,0x89,0x92,0x02,0x23,0x4c,0x0d
	.ascii "ObjectPlaneQ\0"
	.byte 0x00,0x00,0x89,0xa3,0x02,0x23,0x5c,0x0d
	.ascii "EyePlaneS\0"
	.byte 0x00,0x00,0x89,0xb4,0x02,0x23,0x6c,0x0d
	.ascii "EyePlaneT\0"
	.byte 0x00,0x00,0x89,0xc5,0x02,0x23,0x7c,0x0d
	.ascii "EyePlaneR\0"
	.byte 0x00,0x00,0x89,0xd6,0x03,0x23,0x8c,0x01
	.byte 0x0d
	.ascii "EyePlaneQ\0"
	.byte 0x00,0x00,0x89,0xe7,0x03,0x23,0x9c,0x01
	.byte 0x0d
	.ascii "Current1D\0"
	.byte 0x00,0x00,0x34,0xe9,0x03,0x23,0xac,0x01
	.byte 0x0d
	.ascii "Current2D\0"
	.byte 0x00,0x00,0x34,0xe9,0x03,0x23,0xb0,0x01
	.byte 0x0d
	.ascii "Current3D\0"
	.byte 0x00,0x00,0x34,0xe9,0x03,0x23,0xb4,0x01
	.byte 0x0d
	.ascii "Current\0"
	.byte 0x00,0x00,0x34,0xe9,0x03,0x23,0xb8,0x01
	.byte 0x0d
	.ascii "Proxy1D\0"
	.byte 0x00,0x00,0x34,0xe9,0x03,0x23,0xbc,0x01
	.byte 0x0d
	.ascii "Proxy2D\0"
	.byte 0x00,0x00,0x34,0xe9,0x03,0x23,0xc0,0x01
	.byte 0x0d
	.ascii "Proxy3D\0"
	.byte 0x00,0x00,0x34,0xe9,0x03,0x23,0xc4,0x01
	.byte 0x0d
	.ascii "SharedPalette\0"
	.byte 0x00,0x00,0x32,0xbc,0x03,0x23,0xc8,0x01
	.byte 0x0d
	.ascii "Palette\0"
	.byte 0x00,0x00,0x89,0xf8,0x03,0x23,0xc9,0x01
	.byte 0x0d
	.ascii "PaletteSize\0"
	.byte 0x00,0x00,0x01,0x73,0x03,0x23,0xcc,0x09
	.byte 0x0d
	.ascii "PaletteIntFormat\0"
	.byte 0x00,0x00,0x31,0x4c,0x03,0x23,0xd0,0x09
	.byte 0x0d
	.ascii "PaletteFormat\0"
	.byte 0x00,0x00,0x31,0x4c,0x03,0x23,0xd4,0x09
	.byte 0x00,0x08,0x00,0x00,0x01,0x80,0x10,0x00
	.byte 0x00,0x8c,0x4b,0x09,0x00,0x00,0x01,0x97
	.byte 0x03,0x00,0x08,0x00,0x00,0x8c,0x3a,0x60
	.byte 0x00,0x00,0x8c,0x5c,0x09,0x00,0x00,0x01
	.byte 0x97,0x05,0x00,0x08,0x00,0x00,0x32,0xbc
	.byte 0x06,0x00,0x00,0x8c,0x6d,0x09,0x00,0x00
	.byte 0x01,0x97,0x05,0x00,0x0c
	.ascii "gl_transform_attrib\0"
	.byte 0x6c,0x02,0x00,0x00,0x8c,0xe7,0x0d
	.ascii "MatrixMode\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x00,0x0d
	.ascii "ClipEquation\0"
	.byte 0x00,0x00,0x8c,0x4b,0x02,0x23,0x04,0x0d
	.ascii "ClipEnabled\0"
	.byte 0x00,0x00,0x8c,0x5c,0x02,0x23,0x64,0x0d
	.ascii "AnyClip\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x6a,0x0d
	.ascii "Normalize\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x6b,0x00
	.byte 0x0c
	.ascii "gl_viewport_attrib\0"
	.byte 0x30,0x02,0x00,0x00,0x8d,0x8e,0x0d
	.ascii "X\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x00,0x0d
	.ascii "Y\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x04,0x0d
	.ascii "Width\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x08,0x0d
	.ascii "Height\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x0c,0x0d
	.ascii "Near\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x10,0x0d
	.ascii "Far\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x14,0x0d
	.ascii "Sx\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x18,0x0d
	.ascii "Sy\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x1c,0x0d
	.ascii "Sz\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x20,0x0d
	.ascii "Tx\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x24,0x0d
	.ascii "Ty\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x28,0x0d
	.ascii "Tz\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x2c,0x00
	.byte 0x08,0x00,0x00,0x75,0x2e,0x40,0x00,0x00
	.byte 0x8d,0x9f,0x09,0x00,0x00,0x01,0x97,0x0f
	.byte 0x00,0x07,0x00,0x00,0x32,0xbc,0x0c
	.ascii "gl_array_attrib\0"
	.byte 0x80,0x02,0x00,0x00,0x90,0x4f,0x0d
	.ascii "VertexSize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x00,0x0d
	.ascii "VertexType\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x04,0x0d
	.ascii "VertexStride\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x08,0x0d
	.ascii "VertexStrideB\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x0c,0x0d
	.ascii "VertexPtr\0"
	.byte 0x00,0x00,0x31,0x85,0x02,0x23,0x10,0x0d
	.ascii "VertexEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x14,0x0d
	.ascii "NormalType\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x18,0x0d
	.ascii "NormalStride\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x1c,0x0d
	.ascii "NormalStrideB\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x20,0x0d
	.ascii "NormalPtr\0"
	.byte 0x00,0x00,0x31,0x85,0x02,0x23,0x24,0x0d
	.ascii "NormalEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x28,0x0d
	.ascii "ColorSize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x2c,0x0d
	.ascii "ColorType\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x30,0x0d
	.ascii "ColorStride\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x34,0x0d
	.ascii "ColorStrideB\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x38,0x0d
	.ascii "ColorPtr\0"
	.byte 0x00,0x00,0x31,0x85,0x02,0x23,0x3c,0x0d
	.ascii "ColorEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x40,0x0d
	.ascii "IndexType\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x44,0x0d
	.ascii "IndexStride\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x48,0x0d
	.ascii "IndexStrideB\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x4c,0x0d
	.ascii "IndexPtr\0"
	.byte 0x00,0x00,0x31,0x85,0x02,0x23,0x50,0x0d
	.ascii "IndexEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x54,0x0d
	.ascii "TexCoordSize\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x58,0x0d
	.ascii "TexCoordType\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x5c,0x0d
	.ascii "TexCoordStride\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x60,0x0d
	.ascii "TexCoordStrideB\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x64,0x0d
	.ascii "TexCoordPtr\0"
	.byte 0x00,0x00,0x31,0x85,0x02,0x23,0x68,0x0d
	.ascii "TexCoordEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x6c,0x0d
	.ascii "EdgeFlagStride\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x70,0x0d
	.ascii "EdgeFlagStrideB\0"
	.byte 0x00,0x00,0x88,0x48,0x02,0x23,0x74,0x0d
	.ascii "EdgeFlagPtr\0"
	.byte 0x00,0x00,0x8d,0x9f,0x02,0x23,0x78,0x0d
	.ascii "EdgeFlagEnabled\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x7c,0x00
	.byte 0x0c
	.ascii "gl_pixelstore_attrib\0"
	.byte 0x1c,0x02,0x00,0x00,0x90,0xfe,0x0d
	.ascii "Alignment\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x00,0x0d
	.ascii "RowLength\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x04,0x0d
	.ascii "SkipPixels\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x08,0x0d
	.ascii "SkipRows\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x0c,0x0d
	.ascii "ImageHeight\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x10,0x0d
	.ascii "SkipImages\0"
	.byte 0x00,0x00,0x01,0x4a,0x02,0x23,0x14,0x0d
	.ascii "SwapBytes\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x18,0x0d
	.ascii "LsbFirst\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x19,0x00
	.byte 0x07,0x00,0x00,0x01,0x89,0x0c
	.ascii "gl_1d_map\0"
	.byte 0x14,0x02,0x00,0x00,0x91,0x57,0x0d
	.ascii "Order\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x00,0x0d
	.ascii "u1\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x04,0x0d
	.ascii "u2\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x08,0x0d
	.ascii "Points\0"
	.byte 0x00,0x00,0x90,0xfe,0x02,0x23,0x0c,0x0d
	.ascii "Retain\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x10,0x00
	.byte 0x0c
	.ascii "gl_2d_map\0"
	.byte 0x20,0x02,0x00,0x00,0x91,0xd1,0x0d
	.ascii "Uorder\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x00,0x0d
	.ascii "Vorder\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x04,0x0d
	.ascii "u1\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x08,0x0d
	.ascii "u2\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x0c,0x0d
	.ascii "v1\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x10,0x0d
	.ascii "v2\0"
	.byte 0x00,0x00,0x01,0x89,0x02,0x23,0x14,0x0d
	.ascii "Points\0"
	.byte 0x00,0x00,0x90,0xfe,0x02,0x23,0x18,0x0d
	.ascii "Retain\0"
	.byte 0x00,0x00,0x32,0xbc,0x02,0x23,0x1c,0x00
	.byte 0x10
	.ascii "gl_evaluators\0"
	.byte 0x01,0xd4,0x02,0x00,0x00,0x93,0x5b,0x0d
	.ascii "Map1Vertex3\0"
	.byte 0x00,0x00,0x91,0x03,0x02,0x23,0x00,0x0d
	.ascii "Map1Vertex4\0"
	.byte 0x00,0x00,0x91,0x03,0x02,0x23,0x14,0x0d
	.ascii "Map1Index\0"
	.byte 0x00,0x00,0x91,0x03,0x02,0x23,0x28,0x0d
	.ascii "Map1Color4\0"
	.byte 0x00,0x00,0x91,0x03,0x02,0x23,0x3c,0x0d
	.ascii "Map1Normal\0"
	.byte 0x00,0x00,0x91,0x03,0x02,0x23,0x50,0x0d
	.ascii "Map1Texture1\0"
	.byte 0x00,0x00,0x91,0x03,0x02,0x23,0x64,0x0d
	.ascii "Map1Texture2\0"
	.byte 0x00,0x00,0x91,0x03,0x02,0x23,0x78,0x0d
	.ascii "Map1Texture3\0"
	.byte 0x00,0x00,0x91,0x03,0x03,0x23,0x8c,0x01
	.byte 0x0d
	.ascii "Map1Texture4\0"
	.byte 0x00,0x00,0x91,0x03,0x03,0x23,0xa0,0x01
	.byte 0x0d
	.ascii "Map2Vertex3\0"
	.byte 0x00,0x00,0x91,0x57,0x03,0x23,0xb4,0x01
	.byte 0x0d
	.ascii "Map2Vertex4\0"
	.byte 0x00,0x00,0x91,0x57,0x03,0x23,0xd4,0x01
	.byte 0x0d
	.ascii "Map2Index\0"
	.byte 0x00,0x00,0x91,0x57,0x03,0x23,0xf4,0x01
	.byte 0x0d
	.ascii "Map2Color4\0"
	.byte 0x00,0x00,0x91,0x57,0x03,0x23,0x94,0x02
	.byte 0x0d
	.ascii "Map2Normal\0"
	.byte 0x00,0x00,0x91,0x57,0x03,0x23,0xb4,0x02
	.byte 0x0d
	.ascii "Map2Texture1\0"
	.byte 0x00,0x00,0x91,0x57,0x03,0x23,0xd4,0x02
	.byte 0x0d
	.ascii "Map2Texture2\0"
	.byte 0x00,0x00,0x91,0x57,0x03,0x23,0xf4,0x02
	.byte 0x0d
	.ascii "Map2Texture3\0"
	.byte 0x00,0x00,0x91,0x57,0x03,0x23,0x94,0x03
	.byte 0x0d
	.ascii "Map2Texture4\0"
	.byte 0x00,0x00,0x91,0x57,0x03,0x23,0xb4,0x03
	.byte 0x00,0x0c
	.ascii "gl_feedback\0"
	.byte 0x14,0x02,0x00,0x00,0x93,0xb9,0x0d
	.ascii "Type\0"
	.byte 0x00,0x00,0x31,0x4c,0x02,0x23,0x00,0x0d
	.ascii "Mask\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x04,0x0d
	.ascii "Buffer\0"
	.byte 0x00,0x00,0x90,0xfe,0x02,0x23,0x08,0x0d
	.ascii "BufferSize\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x0c,0x0d
	.ascii "Count\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x10,0x00
	.byte 0x07,0x00,0x00,0x01,0x73,0x0e,0x00,0x00
	.byte 0x01,0x73,0x01,0x00,0x00,0x00,0x93,0xd0
	.byte 0x09,0x00,0x00,0x01,0x97,0x3f,0x00,0x10
	.ascii "gl_selection\0"
	.byte 0x01,0x20,0x02,0x00,0x00,0x94,0x85,0x0d
	.ascii "Buffer\0"
	.byte 0x00,0x00,0x93,0xb9,0x02,0x23,0x00,0x0d
	.ascii "BufferSize\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x04,0x0d
	.ascii "BufferCount\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x08,0x0d
	.ascii "Hits\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x0c,0x0d
	.ascii "NameStackDepth\0"
	.byte 0x00,0x00,0x01,0x73,0x02,0x23,0x10,0x0d
	.ascii "NameStack\0"
	.byte 0x00,0x00,0x93,0xbe,0x02,0x23,0x14,0x0d
	.ascii "HitFlag\0"
	.byte 0x00,0x00,0x32,0xbc,0x03,0x23,0x94,0x02
	.byte 0x0d
	.ascii "HitMinZ\0"
	.byte 0x00,0x00,0x01,0x89,0x03,0x23,0x98,0x02
	.byte 0x0d
	.ascii "HitMaxZ\0"
	.byte 0x00,0x00,0x01,0x89,0x03,0x23,0x9c,0x02
	.byte 0x00,0x06
	.ascii "vertex_buffer\0"
	.byte 0x01,0x07,0x00,0x00,0x94,0x85,0x0e,0x00
	.byte 0x00,0x01,0x4a,0x4b,0x00,0x00,0x00,0x94
	.byte 0xad,0x0f,0x00,0x00,0x01,0x97,0x12,0xbf
	.byte 0x00,0x0e,0x00,0x00,0x01,0x4a,0x4b,0x00
	.byte 0x00,0x00,0x94,0xc0,0x0f,0x00,0x00,0x01
	.byte 0x97,0x12,0xbf,0x00,0x0e,0x00,0x00,0x65
	.byte 0xa7,0x25,0x80,0x00,0x00,0x94,0xd3,0x0f
	.byte 0x00,0x00,0x01,0x97,0x12,0xbf,0x00,0x0e
	.byte 0x00,0x00,0x31,0x6a,0x12,0xc0,0x00,0x00
	.byte 0x94,0xe6,0x0f,0x00,0x00,0x01,0x97,0x12
	.byte 0xbf,0x00,0x0e,0x00,0x00,0x31,0x6a,0x12
	.byte 0xc0,0x00,0x00,0x94,0xf9,0x0f,0x00,0x00
	.byte 0x01,0x97,0x12,0xbf,0x00,0x0e,0x00,0x00
	.byte 0x31,0x6a,0x12,0xc0,0x00,0x00,0x95,0x0c
	.byte 0x0f,0x00,0x00,0x01,0x97,0x12,0xbf,0x00
	.byte 0x0e,0x00,0x00,0x31,0x6a,0x12,0xc0,0x00
	.byte 0x00,0x95,0x1f,0x0f,0x00,0x00,0x01,0x97
	.byte 0x12,0xbf,0x00,0x0e,0x00,0x00,0x01,0x73
	.byte 0x4b,0x00,0x00,0x00,0x95,0x32,0x0f,0x00
	.byte 0x00,0x01,0x97,0x12,0xbf,0x00,0x0e,0x00
	.byte 0x00,0x01,0x89,0x4b,0x00,0x00,0x00,0x95
	.byte 0x45,0x0f,0x00,0x00,0x01,0x97,0x12,0xbf
	.byte 0x00,0x0e,0x00,0x00,0x01,0x89,0x4b,0x00
	.byte 0x00,0x00,0x95,0x58,0x0f,0x00,0x00,0x01
	.byte 0x97,0x12,0xbf,0x00,0x0e,0x00,0x00,0x01
	.byte 0x89,0x4b,0x00,0x00,0x00,0x95,0x6b,0x0f
	.byte 0x00,0x00,0x01,0x97,0x12,0xbf,0x00,0x0e
	.byte 0x00,0x00,0x01,0x89,0x4b,0x00,0x00,0x00
	.byte 0x95,0x7e,0x0f,0x00,0x00,0x01,0x97,0x12
	.byte 0xbf,0x00,0x08,0x00,0x00,0x01,0x4a,0x10
	.byte 0x00,0x00,0x95,0x8f,0x09,0x00,0x00,0x01
	.byte 0x97,0x03,0x00,0x16
	.ascii "pixel_buffer\0"
	.byte 0x00,0x02,0x7d,0xa0,0x05,0x00,0x00,0x96
	.byte 0x8d,0x0d
	.ascii "x\0"
	.byte 0x00,0x00,0x94,0x9a,0x02,0x23,0x00,0x0d
	.ascii "y\0"
	.byte 0x00,0x00,0x94,0xad,0x04,0x23,0x80,0x96
	.byte 0x01,0x0d
	.ascii "z\0"
	.byte 0x00,0x00,0x94,0xc0,0x04,0x23,0x80,0xac
	.byte 0x02,0x0d
	.ascii "r\0"
	.byte 0x00,0x00,0x94,0xd3,0x04,0x23,0x80,0xf7
	.byte 0x02,0x0d
	.ascii "g\0"
	.byte 0x00,0x00,0x94,0xe6,0x04,0x23,0xc0,0x9c
	.byte 0x03,0x0d
	.ascii "b\0"
	.byte 0x00,0x00,0x94,0xf9,0x04,0x23,0x80,0xc2
	.byte 0x03,0x0d
	.ascii "a\0"
	.byte 0x00,0x00,0x95,0x0c,0x04,0x23,0xc0,0xe7
	.byte 0x03,0x0d
	.ascii "i\0"
	.byte 0x00,0x00,0x95,0x1f,0x04,0x23,0x80,0x8d
	.byte 0x04,0x0d
	.ascii "s\0"
	.byte 0x00,0x00,0x95,0x32,0x04,0x23,0x80,0xa3
	.byte 0x05,0x0d
	.ascii "t\0"
	.byte 0x00,0x00,0x95,0x45,0x04,0x23,0x80,0xb9
	.byte 0x06,0x0d
	.ascii "u\0"
	.byte 0x00,0x00,0x95,0x58,0x04,0x23,0x80,0xcf
	.byte 0x07,0x0d
	.ascii "lambda\0"
	.byte 0x00,0x00,0x95,0x6b,0x04,0x23,0x80,0xe5
	.byte 0x08,0x0d
	.ascii "color\0"
	.byte 0x00,0x00,0x95,0x7e,0x04,0x23,0x80,0xfb
	.byte 0x09,0x0d
	.ascii "index\0"
	.byte 0x00,0x00,0x01,0x73,0x04,0x23,0x90,0xfb
	.byte 0x09,0x0d
	.ascii "count\0"
	.byte 0x00,0x00,0x01,0x73,0x04,0x23,0x94,0xfb
	.byte 0x09,0x0d
	.ascii "mono\0"
	.byte 0x00,0x00,0x32,0xbc,0x04,0x23,0x98,0xfb
	.byte 0x09,0x0d
	.ascii "primitive\0"
	.byte 0x00,0x00,0x31,0x4c,0x04,0x23,0x9c,0xfb
	.byte 0x09,0x00,0x07,0x00,0x00,0x95,0x8f,0x05
	.byte 0x00,0x00,0x35,0x8f
	.ascii "GLcontext\0"
	.byte 0x02,0x07,0x00,0x00,0x96,0x92,0x02
	.ascii "gl_logicop_ci_span\0"
	.byte 0x01,0x02,0x01,0x6b
	.uaword gl_logicop_ci_span
	.uaword .L462
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x97,0x46
	.byte 0x03,0x00,0x00,0x96,0xa2
	.ascii "ctx\0"
	.byte 0x01,0x69,0x03,0x91,0xc4,0x00,0x03,0x00
	.byte 0x00,0x01,0x73
	.ascii "n\0"
	.byte 0x01,0x69,0x03,0x91,0xc8,0x00,0x03,0x00
	.byte 0x00,0x01,0x4a
	.ascii "x\0"
	.byte 0x01,0x69,0x03,0x91,0xcc,0x00,0x03,0x00
	.byte 0x00,0x01,0x4a
	.ascii "y\0"
	.byte 0x01,0x69,0x03,0x91,0xd0,0x00,0x03,0x00
	.byte 0x00,0x93,0xb9
	.ascii "index\0"
	.byte 0x01,0x6a,0x03,0x91,0xd4,0x00,0x03,0x00
	.byte 0x00,0x31,0x78
	.ascii "mask\0"
	.byte 0x01,0x6a,0x03,0x91,0xd8,0x00,0x17
	.ascii "dest\0"
	.byte 0x00,0x00,0x97,0x46,0x01,0x01,0x6c,0x03
	.byte 0x91,0x80,0x4e,0x17
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x73,0x01,0x01,0x6d,0x03
	.byte 0x91,0xfc,0x4d,0x00,0x0e,0x00,0x00,0x01
	.byte 0x73,0x19,0x00,0x00,0x00,0x97,0x59,0x0f
	.byte 0x00,0x00,0x01,0x97,0x06,0x3f,0x00,0x02
	.ascii "gl_logicop_ci_pixels\0"
	.byte 0x01,0x02,0x01,0xed
	.uaword gl_logicop_ci_pixels
	.uaword .L861
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x97,0xfc
	.byte 0x03,0x00,0x00,0x96,0xa2
	.ascii "ctx\0"
	.byte 0x01,0xea,0x03,0x91,0xc4,0x00,0x03,0x00
	.byte 0x00,0x01,0x73
	.ascii "n\0"
	.byte 0x01,0xeb,0x03,0x91,0xc8,0x00,0x03,0x00
	.byte 0x00,0x98,0x01
	.ascii "x\0"
	.byte 0x01,0xeb,0x03,0x91,0xcc,0x00,0x03,0x00
	.byte 0x00,0x98,0x0b
	.ascii "y\0"
	.byte 0x01,0xeb,0x03,0x91,0xd0,0x00,0x03,0x00
	.byte 0x00,0x93,0xb9
	.ascii "index\0"
	.byte 0x01,0xec,0x03,0x91,0xd4,0x00,0x03,0x00
	.byte 0x00,0x31,0x78
	.ascii "mask\0"
	.byte 0x01,0xec,0x03,0x91,0xd8,0x00,0x17
	.ascii "dest\0"
	.byte 0x00,0x00,0x98,0x10,0x01,0x01,0xee,0x04
	.byte 0x91,0x80,0xea,0x7e,0x17
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x73,0x01,0x01,0xef,0x04
	.byte 0x91,0xfc,0xe9,0x7e,0x00,0x11,0x00,0x00
	.byte 0x01,0x4a,0x07,0x00,0x00,0x97,0xfc,0x11
	.byte 0x00,0x00,0x01,0x4a,0x07,0x00,0x00,0x98
	.byte 0x06,0x0e,0x00,0x00,0x01,0x73,0x4b,0x00
	.byte 0x00,0x00,0x98,0x23,0x0f,0x00,0x00,0x01
	.byte 0x97,0x12,0xbf,0x00,0x18
	.ascii "gl_logicop_rgba_span\0"
	.byte 0x01,0x02,0x01,0x01,0x71
	.uaword gl_logicop_rgba_span
	.uaword .L1309
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x99,0x9e
	.byte 0x19,0x00,0x00,0x96,0xa2
	.ascii "ctx\0"
	.byte 0x01,0x01,0x6c,0x03,0x91,0xc4,0x00,0x19
	.byte 0x00,0x00,0x01,0x73
	.ascii "n\0"
	.byte 0x01,0x01,0x6d,0x03,0x91,0xc8,0x00,0x19
	.byte 0x00,0x00,0x01,0x4a
	.ascii "x\0"
	.byte 0x01,0x01,0x6d,0x03,0x91,0xcc,0x00,0x19
	.byte 0x00,0x00,0x01,0x4a
	.ascii "y\0"
	.byte 0x01,0x01,0x6d,0x03,0x91,0xd0,0x00,0x19
	.byte 0x00,0x00,0x31,0x78
	.ascii "red\0"
	.byte 0x01,0x01,0x6e,0x03,0x91,0xd4,0x00,0x19
	.byte 0x00,0x00,0x31,0x78
	.ascii "green\0"
	.byte 0x01,0x01,0x6e,0x03,0x91,0xd8,0x00,0x19
	.byte 0x00,0x00,0x31,0x78
	.ascii "blue\0"
	.byte 0x01,0x01,0x6f,0x03,0x91,0xdc,0x00,0x19
	.byte 0x00,0x00,0x31,0x78
	.ascii "alpha\0"
	.byte 0x01,0x01,0x6f,0x03,0x91,0xe0,0x00,0x19
	.byte 0x00,0x00,0x31,0x78
	.ascii "mask\0"
	.byte 0x01,0x01,0x70,0x03,0x91,0xe4,0x00,0x1a
	.ascii "rdest\0"
	.byte 0x00,0x00,0x99,0x9e,0x01,0x01,0x01,0x72
	.byte 0x03,0x91,0xc0,0x73,0x1a
	.ascii "gdest\0"
	.byte 0x00,0x00,0x99,0xb1,0x01,0x01,0x01,0x72
	.byte 0x03,0x91,0x80,0x67,0x1a
	.ascii "bdest\0"
	.byte 0x00,0x00,0x99,0xc4,0x01,0x01,0x01,0x73
	.byte 0x03,0x91,0xc0,0x5a,0x1a
	.ascii "adest\0"
	.byte 0x00,0x00,0x99,0xd7,0x01,0x01,0x01,0x73
	.byte 0x03,0x91,0x80,0x4e,0x1a
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x73,0x01,0x01,0x01,0x74
	.byte 0x03,0x91,0xfc,0x4d,0x1b
	.uaword .L868
	.uaword .L1307
	.byte 0x1b
	.uaword .L872
	.uaword .L1304
	.byte 0x1b
	.uaword .L873
	.uaword .L1303
	.byte 0x1b
	.uaword .L900
	.uaword .L931
	.byte 0x1a
	.ascii "r\0"
	.byte 0x00,0x00,0x31,0x6a,0x01,0x01,0x01,0x84
	.byte 0x03,0x91,0xfb,0x4d,0x1a
	.ascii "g\0"
	.byte 0x00,0x00,0x31,0x6a,0x01,0x01,0x01,0x85
	.byte 0x03,0x91,0xfa,0x4d,0x1a
	.ascii "b\0"
	.byte 0x00,0x00,0x31,0x6a,0x01,0x01,0x01,0x86
	.byte 0x03,0x91,0xf9,0x4d,0x1a
	.ascii "a\0"
	.byte 0x00,0x00,0x31,0x6a,0x01,0x01,0x01,0x87
	.byte 0x03,0x91,0xf8,0x4d,0x00,0x00,0x00,0x00
	.byte 0x00,0x0e,0x00,0x00,0x31,0x6a,0x06,0x40
	.byte 0x00,0x00,0x99,0xb1,0x0f,0x00,0x00,0x01
	.byte 0x97,0x06,0x3f,0x00,0x0e,0x00,0x00,0x31
	.byte 0x6a,0x06,0x40,0x00,0x00,0x99,0xc4,0x0f
	.byte 0x00,0x00,0x01,0x97,0x06,0x3f,0x00,0x0e
	.byte 0x00,0x00,0x31,0x6a,0x06,0x40,0x00,0x00
	.byte 0x99,0xd7,0x0f,0x00,0x00,0x01,0x97,0x06
	.byte 0x3f,0x00,0x0e,0x00,0x00,0x31,0x6a,0x06
	.byte 0x40,0x00,0x00,0x99,0xea,0x0f,0x00,0x00
	.byte 0x01,0x97,0x06,0x3f,0x00,0x18
	.ascii "gl_logicop_rgba_pixels\0"
	.byte 0x01,0x02,0x01,0x02,0x29
	.uaword gl_logicop_rgba_pixels
	.uaword .L1767
	.byte 0x01,0x6e,0x01,0x01,0x00,0x00,0x9b,0x6f
	.byte 0x19,0x00,0x00,0x96,0xa2
	.ascii "ctx\0"
	.byte 0x01,0x02,0x24,0x03,0x91,0xc4,0x00,0x19
	.byte 0x00,0x00,0x01,0x73
	.ascii "n\0"
	.byte 0x01,0x02,0x25,0x03,0x91,0xc8,0x00,0x19
	.byte 0x00,0x00,0x9b,0x74
	.ascii "x\0"
	.byte 0x01,0x02,0x25,0x03,0x91,0xcc,0x00,0x19
	.byte 0x00,0x00,0x9b,0x7e
	.ascii "y\0"
	.byte 0x01,0x02,0x25,0x03,0x91,0xd0,0x00,0x19
	.byte 0x00,0x00,0x31,0x78
	.ascii "red\0"
	.byte 0x01,0x02,0x26,0x03,0x91,0xd4,0x00,0x19
	.byte 0x00,0x00,0x31,0x78
	.ascii "green\0"
	.byte 0x01,0x02,0x26,0x03,0x91,0xd8,0x00,0x19
	.byte 0x00,0x00,0x31,0x78
	.ascii "blue\0"
	.byte 0x01,0x02,0x27,0x03,0x91,0xdc,0x00,0x19
	.byte 0x00,0x00,0x31,0x78
	.ascii "alpha\0"
	.byte 0x01,0x02,0x27,0x03,0x91,0xe0,0x00,0x19
	.byte 0x00,0x00,0x31,0x78
	.ascii "mask\0"
	.byte 0x01,0x02,0x28,0x03,0x91,0xe4,0x00,0x1a
	.ascii "rdest\0"
	.byte 0x00,0x00,0x9b,0x83,0x01,0x01,0x02,0x2a
	.byte 0x03,0x91,0xc0,0x5a,0x1a
	.ascii "gdest\0"
	.byte 0x00,0x00,0x9b,0x96,0x01,0x01,0x02,0x2a
	.byte 0x04,0x91,0x80,0xb5,0x7f,0x1a
	.ascii "bdest\0"
	.byte 0x00,0x00,0x9b,0xa9,0x01,0x01,0x02,0x2a
	.byte 0x04,0x91,0xc0,0x8f,0x7f,0x1a
	.ascii "adest\0"
	.byte 0x00,0x00,0x9b,0xbc,0x01,0x01,0x02,0x2a
	.byte 0x04,0x91,0x80,0xea,0x7e,0x1a
	.ascii "i\0"
	.byte 0x00,0x00,0x01,0x73,0x01,0x01,0x02,0x2b
	.byte 0x04,0x91,0xfc,0xe9,0x7e,0x1b
	.uaword .L1326
	.uaword .L1765
	.byte 0x1b
	.uaword .L1330
	.uaword .L1762
	.byte 0x1b
	.uaword .L1331
	.uaword .L1761
	.byte 0x1b
	.uaword .L1358
	.uaword .L1389
	.byte 0x1a
	.ascii "r\0"
	.byte 0x00,0x00,0x31,0x6a,0x01,0x01,0x02,0x3e
	.byte 0x04,0x91,0xfb,0xe9,0x7e,0x1a
	.ascii "g\0"
	.byte 0x00,0x00,0x31,0x6a,0x01,0x01,0x02,0x3f
	.byte 0x04,0x91,0xfa,0xe9,0x7e,0x1a
	.ascii "b\0"
	.byte 0x00,0x00,0x31,0x6a,0x01,0x01,0x02,0x40
	.byte 0x04,0x91,0xf9,0xe9,0x7e,0x1a
	.ascii "a\0"
	.byte 0x00,0x00,0x31,0x6a,0x01,0x01,0x02,0x41
	.byte 0x04,0x91,0xf8,0xe9,0x7e,0x00,0x00,0x00
	.byte 0x00,0x00,0x11,0x00,0x00,0x01,0x4a,0x07
	.byte 0x00,0x00,0x9b,0x6f,0x11,0x00,0x00,0x01
	.byte 0x4a,0x07,0x00,0x00,0x9b,0x79,0x0e,0x00
	.byte 0x00,0x31,0x6a,0x12,0xc0,0x00,0x00,0x9b
	.byte 0x96,0x0f,0x00,0x00,0x01,0x97,0x12,0xbf
	.byte 0x00,0x0e,0x00,0x00,0x31,0x6a,0x12,0xc0
	.byte 0x00,0x00,0x9b,0xa9,0x0f,0x00,0x00,0x01
	.byte 0x97,0x12,0xbf,0x00,0x0e,0x00,0x00,0x31
	.byte 0x6a,0x12,0xc0,0x00,0x00,0x9b,0xbc,0x0f
	.byte 0x00,0x00,0x01,0x97,0x12,0xbf,0x00,0x0e
	.byte 0x00,0x00,0x31,0x6a,0x12,0xc0,0x00,0x00
	.byte 0x9b,0xcf,0x0f,0x00,0x00,0x01,0x97,0x12
	.byte 0xbf,0x00,0x1c
	.ascii "gl_read_color_span\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0x9c,0x14
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0x67,0x13,0x00,0x00,0x01,0x43,0x13
	.byte 0x00,0x00,0x01,0x43,0x13,0x00,0x00,0x34
	.byte 0x8d,0x13,0x00,0x00,0x34,0x8d,0x13,0x00
	.byte 0x00,0x34,0x8d,0x13,0x00,0x00,0x34,0x8d
	.byte 0x00,0x11,0x00,0x00,0x66,0xdb,0x07,0x00
	.byte 0x00,0x9c,0x14,0x1c
	.ascii "gl_error\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0x9c,0x40
	.byte 0x13,0x00,0x00,0x3c,0x5c,0x13,0x00,0x00
	.byte 0x01,0xb0,0x13,0x00,0x00,0x9c,0x19,0x00
	.byte 0x11,0x00,0x00,0x35,0x8f,0x07,0x00,0x00
	.byte 0x9c,0x40,0x11,0x00,0x00,0x66,0xdb,0x07
	.byte 0x00,0x00,0x9c,0x4a,0x1c
	.ascii "gl_problem\0"
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0x9c,0x73
	.byte 0x13,0x00,0x00,0x9c,0x45,0x13,0x00,0x00
	.byte 0x9c,0x4f,0x00,0x11,0x00,0x00,0x01,0x43
	.byte 0x07,0x00,0x00,0x9c,0x73,0x11,0x00,0x00
	.byte 0x01,0x43,0x07,0x00,0x00,0x9c,0x7d,0x11
	.byte 0x00,0x00,0x31,0x59,0x07,0x00,0x00,0x9c
	.byte 0x87,0x1d
	.ascii "gl_read_alpha_pixels\0"
	.byte 0x01,0x01,0x01,0x01,0x13,0x00,0x00,0x3c
	.byte 0x5c,0x13,0x00,0x00,0x01,0x67,0x13,0x00
	.byte 0x00,0x9c,0x78,0x13,0x00,0x00,0x9c,0x82
	.byte 0x13,0x00,0x00,0x34,0x8d,0x13,0x00,0x00
	.byte 0x9c,0x8c,0x00,0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_line
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=0, off=133, siz=4, lab1=gl_LogicOp, lab2=, loff=0
!   reloc[1]: knd=0, off=140, siz=4, lab1=.L18, lab2=, loff=0
!   reloc[2]: knd=0, off=152, siz=4, lab1=.L22, lab2=, loff=0
!   reloc[3]: knd=0, off=160, siz=4, lab1=.L24, lab2=, loff=0
!   reloc[4]: knd=0, off=168, siz=4, lab1=.L31, lab2=, loff=0
!   reloc[5]: knd=0, off=176, siz=4, lab1=.L50, lab2=, loff=0
!   reloc[6]: knd=0, off=186, siz=4, lab1=.L51, lab2=, loff=0
!   reloc[7]: knd=0, off=194, siz=4, lab1=.L52, lab2=, loff=0
!   reloc[8]: knd=0, off=202, siz=4, lab1=.L54, lab2=, loff=0
!   reloc[9]: knd=0, off=210, siz=4, lab1=.L56, lab2=, loff=0
!   reloc[10]: knd=0, off=218, siz=4, lab1=.L59, lab2=, loff=0
!   reloc[11]: knd=0, off=228, siz=4, lab1=.L62, lab2=, loff=0
!   reloc[12]: knd=0, off=243, siz=4, lab1=gl_logicop_ci_span, lab2=, loff=0
!   reloc[13]: knd=0, off=250, siz=4, lab1=.L69, lab2=, loff=0
!   reloc[14]: knd=0, off=262, siz=4, lab1=.L73, lab2=, loff=0
!   reloc[15]: knd=0, off=270, siz=4, lab1=.L78, lab2=, loff=0
!   reloc[16]: knd=0, off=278, siz=4, lab1=.L87, lab2=, loff=0
!   reloc[17]: knd=0, off=286, siz=4, lab1=.L91, lab2=, loff=0
!   reloc[18]: knd=0, off=294, siz=4, lab1=.L97, lab2=, loff=0
!   reloc[19]: knd=0, off=304, siz=4, lab1=.L100, lab2=, loff=0
!   reloc[20]: knd=0, off=314, siz=4, lab1=.L103, lab2=, loff=0
!   reloc[21]: knd=0, off=322, siz=4, lab1=.L112, lab2=, loff=0
!   reloc[22]: knd=0, off=330, siz=4, lab1=.L116, lab2=, loff=0
!   reloc[23]: knd=0, off=338, siz=4, lab1=.L122, lab2=, loff=0
!   reloc[24]: knd=0, off=348, siz=4, lab1=.L125, lab2=, loff=0
!   reloc[25]: knd=0, off=358, siz=4, lab1=.L127, lab2=, loff=0
!   reloc[26]: knd=0, off=368, siz=4, lab1=.L130, lab2=, loff=0
!   reloc[27]: knd=0, off=376, siz=4, lab1=.L139, lab2=, loff=0
!   reloc[28]: knd=0, off=384, siz=4, lab1=.L143, lab2=, loff=0
!   reloc[29]: knd=0, off=392, siz=4, lab1=.L149, lab2=, loff=0
!   reloc[30]: knd=0, off=402, siz=4, lab1=.L152, lab2=, loff=0
!   reloc[31]: knd=0, off=412, siz=4, lab1=.L155, lab2=, loff=0
!   reloc[32]: knd=0, off=420, siz=4, lab1=.L164, lab2=, loff=0
!   reloc[33]: knd=0, off=428, siz=4, lab1=.L168, lab2=, loff=0
!   reloc[34]: knd=0, off=436, siz=4, lab1=.L174, lab2=, loff=0
!   reloc[35]: knd=0, off=446, siz=4, lab1=.L177, lab2=, loff=0
!   reloc[36]: knd=0, off=456, siz=4, lab1=.L180, lab2=, loff=0
!   reloc[37]: knd=0, off=464, siz=4, lab1=.L189, lab2=, loff=0
!   reloc[38]: knd=0, off=472, siz=4, lab1=.L193, lab2=, loff=0
!   reloc[39]: knd=0, off=480, siz=4, lab1=.L199, lab2=, loff=0
!   reloc[40]: knd=0, off=490, siz=4, lab1=.L202, lab2=, loff=0
!   reloc[41]: knd=0, off=500, siz=4, lab1=.L205, lab2=, loff=0
!   reloc[42]: knd=0, off=508, siz=4, lab1=.L214, lab2=, loff=0
!   reloc[43]: knd=0, off=516, siz=4, lab1=.L218, lab2=, loff=0
!   reloc[44]: knd=0, off=524, siz=4, lab1=.L224, lab2=, loff=0
!   reloc[45]: knd=0, off=534, siz=4, lab1=.L227, lab2=, loff=0
!   reloc[46]: knd=0, off=544, siz=4, lab1=.L230, lab2=, loff=0
!   reloc[47]: knd=0, off=552, siz=4, lab1=.L239, lab2=, loff=0
!   reloc[48]: knd=0, off=560, siz=4, lab1=.L243, lab2=, loff=0
!   reloc[49]: knd=0, off=568, siz=4, lab1=.L249, lab2=, loff=0
!   reloc[50]: knd=0, off=578, siz=4, lab1=.L252, lab2=, loff=0
!   reloc[51]: knd=0, off=588, siz=4, lab1=.L255, lab2=, loff=0
!   reloc[52]: knd=0, off=596, siz=4, lab1=.L264, lab2=, loff=0
!   reloc[53]: knd=0, off=604, siz=4, lab1=.L268, lab2=, loff=0
!   reloc[54]: knd=0, off=612, siz=4, lab1=.L274, lab2=, loff=0
!   reloc[55]: knd=0, off=622, siz=4, lab1=.L277, lab2=, loff=0
!   reloc[56]: knd=0, off=632, siz=4, lab1=.L280, lab2=, loff=0
!   reloc[57]: knd=0, off=640, siz=4, lab1=.L289, lab2=, loff=0
!   reloc[58]: knd=0, off=648, siz=4, lab1=.L293, lab2=, loff=0
!   reloc[59]: knd=0, off=656, siz=4, lab1=.L299, lab2=, loff=0
!   reloc[60]: knd=0, off=666, siz=4, lab1=.L302, lab2=, loff=0
!   reloc[61]: knd=0, off=676, siz=4, lab1=.L305, lab2=, loff=0
!   reloc[62]: knd=0, off=684, siz=4, lab1=.L314, lab2=, loff=0
!   reloc[63]: knd=0, off=692, siz=4, lab1=.L318, lab2=, loff=0
!   reloc[64]: knd=0, off=700, siz=4, lab1=.L324, lab2=, loff=0
!   reloc[65]: knd=0, off=710, siz=4, lab1=.L327, lab2=, loff=0
!   reloc[66]: knd=0, off=720, siz=4, lab1=.L330, lab2=, loff=0
!   reloc[67]: knd=0, off=728, siz=4, lab1=.L339, lab2=, loff=0
!   reloc[68]: knd=0, off=736, siz=4, lab1=.L343, lab2=, loff=0
!   reloc[69]: knd=0, off=744, siz=4, lab1=.L349, lab2=, loff=0
!   reloc[70]: knd=0, off=754, siz=4, lab1=.L352, lab2=, loff=0
!   reloc[71]: knd=0, off=764, siz=4, lab1=.L355, lab2=, loff=0
!   reloc[72]: knd=0, off=772, siz=4, lab1=.L364, lab2=, loff=0
!   reloc[73]: knd=0, off=780, siz=4, lab1=.L368, lab2=, loff=0
!   reloc[74]: knd=0, off=788, siz=4, lab1=.L374, lab2=, loff=0
!   reloc[75]: knd=0, off=798, siz=4, lab1=.L377, lab2=, loff=0
!   reloc[76]: knd=0, off=808, siz=4, lab1=.L380, lab2=, loff=0
!   reloc[77]: knd=0, off=816, siz=4, lab1=.L389, lab2=, loff=0
!   reloc[78]: knd=0, off=824, siz=4, lab1=.L393, lab2=, loff=0
!   reloc[79]: knd=0, off=832, siz=4, lab1=.L399, lab2=, loff=0
!   reloc[80]: knd=0, off=842, siz=4, lab1=.L402, lab2=, loff=0
!   reloc[81]: knd=0, off=852, siz=4, lab1=.L405, lab2=, loff=0
!   reloc[82]: knd=0, off=860, siz=4, lab1=.L414, lab2=, loff=0
!   reloc[83]: knd=0, off=868, siz=4, lab1=.L418, lab2=, loff=0
!   reloc[84]: knd=0, off=876, siz=4, lab1=.L424, lab2=, loff=0
!   reloc[85]: knd=0, off=886, siz=4, lab1=.L427, lab2=, loff=0
!   reloc[86]: knd=0, off=896, siz=4, lab1=.L430, lab2=, loff=0
!   reloc[87]: knd=0, off=904, siz=4, lab1=.L439, lab2=, loff=0
!   reloc[88]: knd=0, off=912, siz=4, lab1=.L443, lab2=, loff=0
!   reloc[89]: knd=0, off=920, siz=4, lab1=.L449, lab2=, loff=0
!   reloc[90]: knd=0, off=930, siz=4, lab1=.L452, lab2=, loff=0
!   reloc[91]: knd=0, off=940, siz=4, lab1=.L454, lab2=, loff=0
!   reloc[92]: knd=0, off=948, siz=4, lab1=.L458, lab2=, loff=0
!   reloc[93]: knd=0, off=959, siz=4, lab1=.L461, lab2=, loff=0
!   reloc[94]: knd=0, off=975, siz=4, lab1=gl_logicop_ci_pixels, lab2=, loff=0
!   reloc[95]: knd=0, off=982, siz=4, lab1=.L468, lab2=, loff=0
!   reloc[96]: knd=0, off=994, siz=4, lab1=.L472, lab2=, loff=0
!   reloc[97]: knd=0, off=1002, siz=4, lab1=.L477, lab2=, loff=0
!   reloc[98]: knd=0, off=1010, siz=4, lab1=.L486, lab2=, loff=0
!   reloc[99]: knd=0, off=1018, siz=4, lab1=.L490, lab2=, loff=0
!   reloc[100]: knd=0, off=1026, siz=4, lab1=.L496, lab2=, loff=0
!   reloc[101]: knd=0, off=1036, siz=4, lab1=.L499, lab2=, loff=0
!   reloc[102]: knd=0, off=1046, siz=4, lab1=.L502, lab2=, loff=0
!   reloc[103]: knd=0, off=1054, siz=4, lab1=.L511, lab2=, loff=0
!   reloc[104]: knd=0, off=1062, siz=4, lab1=.L515, lab2=, loff=0
!   reloc[105]: knd=0, off=1070, siz=4, lab1=.L521, lab2=, loff=0
!   reloc[106]: knd=0, off=1080, siz=4, lab1=.L524, lab2=, loff=0
!   reloc[107]: knd=0, off=1090, siz=4, lab1=.L526, lab2=, loff=0
!   reloc[108]: knd=0, off=1100, siz=4, lab1=.L529, lab2=, loff=0
!   reloc[109]: knd=0, off=1108, siz=4, lab1=.L538, lab2=, loff=0
!   reloc[110]: knd=0, off=1116, siz=4, lab1=.L542, lab2=, loff=0
!   reloc[111]: knd=0, off=1124, siz=4, lab1=.L548, lab2=, loff=0
!   reloc[112]: knd=0, off=1134, siz=4, lab1=.L551, lab2=, loff=0
!   reloc[113]: knd=0, off=1144, siz=4, lab1=.L554, lab2=, loff=0
!   reloc[114]: knd=0, off=1152, siz=4, lab1=.L563, lab2=, loff=0
!   reloc[115]: knd=0, off=1160, siz=4, lab1=.L567, lab2=, loff=0
!   reloc[116]: knd=0, off=1168, siz=4, lab1=.L573, lab2=, loff=0
!   reloc[117]: knd=0, off=1178, siz=4, lab1=.L576, lab2=, loff=0
!   reloc[118]: knd=0, off=1188, siz=4, lab1=.L579, lab2=, loff=0
!   reloc[119]: knd=0, off=1196, siz=4, lab1=.L588, lab2=, loff=0
!   reloc[120]: knd=0, off=1204, siz=4, lab1=.L592, lab2=, loff=0
!   reloc[121]: knd=0, off=1212, siz=4, lab1=.L598, lab2=, loff=0
!   reloc[122]: knd=0, off=1222, siz=4, lab1=.L601, lab2=, loff=0
!   reloc[123]: knd=0, off=1232, siz=4, lab1=.L604, lab2=, loff=0
!   reloc[124]: knd=0, off=1240, siz=4, lab1=.L613, lab2=, loff=0
!   reloc[125]: knd=0, off=1248, siz=4, lab1=.L617, lab2=, loff=0
!   reloc[126]: knd=0, off=1256, siz=4, lab1=.L623, lab2=, loff=0
!   reloc[127]: knd=0, off=1266, siz=4, lab1=.L626, lab2=, loff=0
!   reloc[128]: knd=0, off=1276, siz=4, lab1=.L629, lab2=, loff=0
!   reloc[129]: knd=0, off=1284, siz=4, lab1=.L638, lab2=, loff=0
!   reloc[130]: knd=0, off=1292, siz=4, lab1=.L642, lab2=, loff=0
!   reloc[131]: knd=0, off=1300, siz=4, lab1=.L648, lab2=, loff=0
!   reloc[132]: knd=0, off=1310, siz=4, lab1=.L651, lab2=, loff=0
!   reloc[133]: knd=0, off=1320, siz=4, lab1=.L654, lab2=, loff=0
!   reloc[134]: knd=0, off=1328, siz=4, lab1=.L663, lab2=, loff=0
!   reloc[135]: knd=0, off=1336, siz=4, lab1=.L667, lab2=, loff=0
!   reloc[136]: knd=0, off=1344, siz=4, lab1=.L673, lab2=, loff=0
!   reloc[137]: knd=0, off=1354, siz=4, lab1=.L676, lab2=, loff=0
!   reloc[138]: knd=0, off=1364, siz=4, lab1=.L679, lab2=, loff=0
!   reloc[139]: knd=0, off=1372, siz=4, lab1=.L688, lab2=, loff=0
!   reloc[140]: knd=0, off=1380, siz=4, lab1=.L692, lab2=, loff=0
!   reloc[141]: knd=0, off=1388, siz=4, lab1=.L698, lab2=, loff=0
!   reloc[142]: knd=0, off=1398, siz=4, lab1=.L701, lab2=, loff=0
!   reloc[143]: knd=0, off=1408, siz=4, lab1=.L704, lab2=, loff=0
!   reloc[144]: knd=0, off=1416, siz=4, lab1=.L713, lab2=, loff=0
!   reloc[145]: knd=0, off=1424, siz=4, lab1=.L717, lab2=, loff=0
!   reloc[146]: knd=0, off=1432, siz=4, lab1=.L723, lab2=, loff=0
!   reloc[147]: knd=0, off=1442, siz=4, lab1=.L726, lab2=, loff=0
!   reloc[148]: knd=0, off=1452, siz=4, lab1=.L729, lab2=, loff=0
!   reloc[149]: knd=0, off=1460, siz=4, lab1=.L738, lab2=, loff=0
!   reloc[150]: knd=0, off=1468, siz=4, lab1=.L742, lab2=, loff=0
!   reloc[151]: knd=0, off=1476, siz=4, lab1=.L748, lab2=, loff=0
!   reloc[152]: knd=0, off=1486, siz=4, lab1=.L751, lab2=, loff=0
!   reloc[153]: knd=0, off=1496, siz=4, lab1=.L754, lab2=, loff=0
!   reloc[154]: knd=0, off=1504, siz=4, lab1=.L763, lab2=, loff=0
!   reloc[155]: knd=0, off=1512, siz=4, lab1=.L767, lab2=, loff=0
!   reloc[156]: knd=0, off=1520, siz=4, lab1=.L773, lab2=, loff=0
!   reloc[157]: knd=0, off=1530, siz=4, lab1=.L776, lab2=, loff=0
!   reloc[158]: knd=0, off=1540, siz=4, lab1=.L779, lab2=, loff=0
!   reloc[159]: knd=0, off=1548, siz=4, lab1=.L788, lab2=, loff=0
!   reloc[160]: knd=0, off=1556, siz=4, lab1=.L792, lab2=, loff=0
!   reloc[161]: knd=0, off=1564, siz=4, lab1=.L798, lab2=, loff=0
!   reloc[162]: knd=0, off=1574, siz=4, lab1=.L801, lab2=, loff=0
!   reloc[163]: knd=0, off=1584, siz=4, lab1=.L804, lab2=, loff=0
!   reloc[164]: knd=0, off=1592, siz=4, lab1=.L813, lab2=, loff=0
!   reloc[165]: knd=0, off=1600, siz=4, lab1=.L817, lab2=, loff=0
!   reloc[166]: knd=0, off=1608, siz=4, lab1=.L823, lab2=, loff=0
!   reloc[167]: knd=0, off=1618, siz=4, lab1=.L826, lab2=, loff=0
!   reloc[168]: knd=0, off=1628, siz=4, lab1=.L829, lab2=, loff=0
!   reloc[169]: knd=0, off=1636, siz=4, lab1=.L838, lab2=, loff=0
!   reloc[170]: knd=0, off=1644, siz=4, lab1=.L842, lab2=, loff=0
!   reloc[171]: knd=0, off=1652, siz=4, lab1=.L848, lab2=, loff=0
!   reloc[172]: knd=0, off=1662, siz=4, lab1=.L851, lab2=, loff=0
!   reloc[173]: knd=0, off=1672, siz=4, lab1=.L853, lab2=, loff=0
!   reloc[174]: knd=0, off=1680, siz=4, lab1=.L857, lab2=, loff=0
!   reloc[175]: knd=0, off=1691, siz=4, lab1=.L860, lab2=, loff=0
!   reloc[176]: knd=0, off=1707, siz=4, lab1=gl_logicop_rgba_span, lab2=, loff=0
!   reloc[177]: knd=0, off=1714, siz=4, lab1=.L867, lab2=, loff=0
!   reloc[178]: knd=0, off=1726, siz=4, lab1=.L871, lab2=, loff=0
!   reloc[179]: knd=0, off=1736, siz=4, lab1=.L876, lab2=, loff=0
!   reloc[180]: knd=0, off=1744, siz=4, lab1=.L885, lab2=, loff=0
!   reloc[181]: knd=0, off=1752, siz=4, lab1=.L889, lab2=, loff=0
!   reloc[182]: knd=0, off=1760, siz=4, lab1=.L895, lab2=, loff=0
!   reloc[183]: knd=0, off=1770, siz=4, lab1=.L898, lab2=, loff=0
!   reloc[184]: knd=0, off=1780, siz=4, lab1=.L901, lab2=, loff=0
!   reloc[185]: knd=0, off=1790, siz=4, lab1=.L902, lab2=, loff=0
!   reloc[186]: knd=0, off=1798, siz=4, lab1=.L903, lab2=, loff=0
!   reloc[187]: knd=0, off=1806, siz=4, lab1=.L904, lab2=, loff=0
!   reloc[188]: knd=0, off=1814, siz=4, lab1=.L906, lab2=, loff=0
!   reloc[189]: knd=0, off=1822, siz=4, lab1=.L915, lab2=, loff=0
!   reloc[190]: knd=0, off=1830, siz=4, lab1=.L919, lab2=, loff=0
!   reloc[191]: knd=0, off=1838, siz=4, lab1=.L920, lab2=, loff=0
!   reloc[192]: knd=0, off=1846, siz=4, lab1=.L921, lab2=, loff=0
!   reloc[193]: knd=0, off=1854, siz=4, lab1=.L922, lab2=, loff=0
!   reloc[194]: knd=0, off=1862, siz=4, lab1=.L928, lab2=, loff=0
!   reloc[195]: knd=0, off=1872, siz=4, lab1=.L932, lab2=, loff=0
!   reloc[196]: knd=0, off=1882, siz=4, lab1=.L934, lab2=, loff=0
!   reloc[197]: knd=0, off=1892, siz=4, lab1=.L937, lab2=, loff=0
!   reloc[198]: knd=0, off=1900, siz=4, lab1=.L946, lab2=, loff=0
!   reloc[199]: knd=0, off=1908, siz=4, lab1=.L950, lab2=, loff=0
!   reloc[200]: knd=0, off=1916, siz=4, lab1=.L951, lab2=, loff=0
!   reloc[201]: knd=0, off=1924, siz=4, lab1=.L952, lab2=, loff=0
!   reloc[202]: knd=0, off=1932, siz=4, lab1=.L953, lab2=, loff=0
!   reloc[203]: knd=0, off=1940, siz=4, lab1=.L959, lab2=, loff=0
!   reloc[204]: knd=0, off=1950, siz=4, lab1=.L962, lab2=, loff=0
!   reloc[205]: knd=0, off=1960, siz=4, lab1=.L965, lab2=, loff=0
!   reloc[206]: knd=0, off=1968, siz=4, lab1=.L974, lab2=, loff=0
!   reloc[207]: knd=0, off=1976, siz=4, lab1=.L978, lab2=, loff=0
!   reloc[208]: knd=0, off=1984, siz=4, lab1=.L979, lab2=, loff=0
!   reloc[209]: knd=0, off=1992, siz=4, lab1=.L980, lab2=, loff=0
!   reloc[210]: knd=0, off=2000, siz=4, lab1=.L981, lab2=, loff=0
!   reloc[211]: knd=0, off=2008, siz=4, lab1=.L987, lab2=, loff=0
!   reloc[212]: knd=0, off=2018, siz=4, lab1=.L990, lab2=, loff=0
!   reloc[213]: knd=0, off=2028, siz=4, lab1=.L993, lab2=, loff=0
!   reloc[214]: knd=0, off=2036, siz=4, lab1=.L1002, lab2=, loff=0
!   reloc[215]: knd=0, off=2044, siz=4, lab1=.L1006, lab2=, loff=0
!   reloc[216]: knd=0, off=2052, siz=4, lab1=.L1007, lab2=, loff=0
!   reloc[217]: knd=0, off=2060, siz=4, lab1=.L1008, lab2=, loff=0
!   reloc[218]: knd=0, off=2068, siz=4, lab1=.L1009, lab2=, loff=0
!   reloc[219]: knd=0, off=2076, siz=4, lab1=.L1015, lab2=, loff=0
!   reloc[220]: knd=0, off=2086, siz=4, lab1=.L1018, lab2=, loff=0
!   reloc[221]: knd=0, off=2096, siz=4, lab1=.L1021, lab2=, loff=0
!   reloc[222]: knd=0, off=2104, siz=4, lab1=.L1030, lab2=, loff=0
!   reloc[223]: knd=0, off=2112, siz=4, lab1=.L1034, lab2=, loff=0
!   reloc[224]: knd=0, off=2120, siz=4, lab1=.L1035, lab2=, loff=0
!   reloc[225]: knd=0, off=2128, siz=4, lab1=.L1036, lab2=, loff=0
!   reloc[226]: knd=0, off=2136, siz=4, lab1=.L1037, lab2=, loff=0
!   reloc[227]: knd=0, off=2144, siz=4, lab1=.L1043, lab2=, loff=0
!   reloc[228]: knd=0, off=2154, siz=4, lab1=.L1046, lab2=, loff=0
!   reloc[229]: knd=0, off=2164, siz=4, lab1=.L1049, lab2=, loff=0
!   reloc[230]: knd=0, off=2172, siz=4, lab1=.L1058, lab2=, loff=0
!   reloc[231]: knd=0, off=2180, siz=4, lab1=.L1062, lab2=, loff=0
!   reloc[232]: knd=0, off=2188, siz=4, lab1=.L1063, lab2=, loff=0
!   reloc[233]: knd=0, off=2196, siz=4, lab1=.L1064, lab2=, loff=0
!   reloc[234]: knd=0, off=2204, siz=4, lab1=.L1065, lab2=, loff=0
!   reloc[235]: knd=0, off=2212, siz=4, lab1=.L1071, lab2=, loff=0
!   reloc[236]: knd=0, off=2222, siz=4, lab1=.L1074, lab2=, loff=0
!   reloc[237]: knd=0, off=2232, siz=4, lab1=.L1077, lab2=, loff=0
!   reloc[238]: knd=0, off=2240, siz=4, lab1=.L1086, lab2=, loff=0
!   reloc[239]: knd=0, off=2248, siz=4, lab1=.L1090, lab2=, loff=0
!   reloc[240]: knd=0, off=2256, siz=4, lab1=.L1091, lab2=, loff=0
!   reloc[241]: knd=0, off=2264, siz=4, lab1=.L1092, lab2=, loff=0
!   reloc[242]: knd=0, off=2272, siz=4, lab1=.L1093, lab2=, loff=0
!   reloc[243]: knd=0, off=2280, siz=4, lab1=.L1099, lab2=, loff=0
!   reloc[244]: knd=0, off=2290, siz=4, lab1=.L1102, lab2=, loff=0
!   reloc[245]: knd=0, off=2300, siz=4, lab1=.L1105, lab2=, loff=0
!   reloc[246]: knd=0, off=2308, siz=4, lab1=.L1114, lab2=, loff=0
!   reloc[247]: knd=0, off=2316, siz=4, lab1=.L1118, lab2=, loff=0
!   reloc[248]: knd=0, off=2324, siz=4, lab1=.L1119, lab2=, loff=0
!   reloc[249]: knd=0, off=2332, siz=4, lab1=.L1120, lab2=, loff=0
!   reloc[250]: knd=0, off=2340, siz=4, lab1=.L1121, lab2=, loff=0
!   reloc[251]: knd=0, off=2348, siz=4, lab1=.L1127, lab2=, loff=0
!   reloc[252]: knd=0, off=2358, siz=4, lab1=.L1130, lab2=, loff=0
!   reloc[253]: knd=0, off=2368, siz=4, lab1=.L1133, lab2=, loff=0
!   reloc[254]: knd=0, off=2376, siz=4, lab1=.L1142, lab2=, loff=0
!   reloc[255]: knd=0, off=2384, siz=4, lab1=.L1146, lab2=, loff=0
!   reloc[256]: knd=0, off=2392, siz=4, lab1=.L1147, lab2=, loff=0
!   reloc[257]: knd=0, off=2400, siz=4, lab1=.L1148, lab2=, loff=0
!   reloc[258]: knd=0, off=2408, siz=4, lab1=.L1149, lab2=, loff=0
!   reloc[259]: knd=0, off=2416, siz=4, lab1=.L1155, lab2=, loff=0
!   reloc[260]: knd=0, off=2426, siz=4, lab1=.L1158, lab2=, loff=0
!   reloc[261]: knd=0, off=2436, siz=4, lab1=.L1161, lab2=, loff=0
!   reloc[262]: knd=0, off=2444, siz=4, lab1=.L1170, lab2=, loff=0
!   reloc[263]: knd=0, off=2452, siz=4, lab1=.L1174, lab2=, loff=0
!   reloc[264]: knd=0, off=2460, siz=4, lab1=.L1175, lab2=, loff=0
!   reloc[265]: knd=0, off=2468, siz=4, lab1=.L1176, lab2=, loff=0
!   reloc[266]: knd=0, off=2476, siz=4, lab1=.L1177, lab2=, loff=0
!   reloc[267]: knd=0, off=2484, siz=4, lab1=.L1183, lab2=, loff=0
!   reloc[268]: knd=0, off=2494, siz=4, lab1=.L1186, lab2=, loff=0
!   reloc[269]: knd=0, off=2504, siz=4, lab1=.L1189, lab2=, loff=0
!   reloc[270]: knd=0, off=2512, siz=4, lab1=.L1198, lab2=, loff=0
!   reloc[271]: knd=0, off=2520, siz=4, lab1=.L1202, lab2=, loff=0
!   reloc[272]: knd=0, off=2528, siz=4, lab1=.L1203, lab2=, loff=0
!   reloc[273]: knd=0, off=2536, siz=4, lab1=.L1204, lab2=, loff=0
!   reloc[274]: knd=0, off=2544, siz=4, lab1=.L1205, lab2=, loff=0
!   reloc[275]: knd=0, off=2552, siz=4, lab1=.L1211, lab2=, loff=0
!   reloc[276]: knd=0, off=2562, siz=4, lab1=.L1214, lab2=, loff=0
!   reloc[277]: knd=0, off=2572, siz=4, lab1=.L1217, lab2=, loff=0
!   reloc[278]: knd=0, off=2580, siz=4, lab1=.L1226, lab2=, loff=0
!   reloc[279]: knd=0, off=2588, siz=4, lab1=.L1230, lab2=, loff=0
!   reloc[280]: knd=0, off=2596, siz=4, lab1=.L1231, lab2=, loff=0
!   reloc[281]: knd=0, off=2604, siz=4, lab1=.L1232, lab2=, loff=0
!   reloc[282]: knd=0, off=2612, siz=4, lab1=.L1233, lab2=, loff=0
!   reloc[283]: knd=0, off=2620, siz=4, lab1=.L1239, lab2=, loff=0
!   reloc[284]: knd=0, off=2630, siz=4, lab1=.L1242, lab2=, loff=0
!   reloc[285]: knd=0, off=2640, siz=4, lab1=.L1245, lab2=, loff=0
!   reloc[286]: knd=0, off=2648, siz=4, lab1=.L1254, lab2=, loff=0
!   reloc[287]: knd=0, off=2656, siz=4, lab1=.L1258, lab2=, loff=0
!   reloc[288]: knd=0, off=2664, siz=4, lab1=.L1259, lab2=, loff=0
!   reloc[289]: knd=0, off=2672, siz=4, lab1=.L1260, lab2=, loff=0
!   reloc[290]: knd=0, off=2680, siz=4, lab1=.L1261, lab2=, loff=0
!   reloc[291]: knd=0, off=2688, siz=4, lab1=.L1267, lab2=, loff=0
!   reloc[292]: knd=0, off=2698, siz=4, lab1=.L1270, lab2=, loff=0
!   reloc[293]: knd=0, off=2708, siz=4, lab1=.L1273, lab2=, loff=0
!   reloc[294]: knd=0, off=2716, siz=4, lab1=.L1282, lab2=, loff=0
!   reloc[295]: knd=0, off=2724, siz=4, lab1=.L1286, lab2=, loff=0
!   reloc[296]: knd=0, off=2732, siz=4, lab1=.L1287, lab2=, loff=0
!   reloc[297]: knd=0, off=2740, siz=4, lab1=.L1288, lab2=, loff=0
!   reloc[298]: knd=0, off=2748, siz=4, lab1=.L1289, lab2=, loff=0
!   reloc[299]: knd=0, off=2756, siz=4, lab1=.L1295, lab2=, loff=0
!   reloc[300]: knd=0, off=2766, siz=4, lab1=.L1298, lab2=, loff=0
!   reloc[301]: knd=0, off=2776, siz=4, lab1=.L1300, lab2=, loff=0
!   reloc[302]: knd=0, off=2786, siz=4, lab1=.L1302, lab2=, loff=0
!   reloc[303]: knd=0, off=2794, siz=4, lab1=.L1305, lab2=, loff=0
!   reloc[304]: knd=0, off=2805, siz=4, lab1=.L1308, lab2=, loff=0
!   reloc[305]: knd=0, off=2821, siz=4, lab1=gl_logicop_rgba_pixels, lab2=, loff=0
!   reloc[306]: knd=0, off=2828, siz=4, lab1=.L1315, lab2=, loff=0
!   reloc[307]: knd=0, off=2840, siz=4, lab1=.L1318, lab2=, loff=0
!   reloc[308]: knd=0, off=2848, siz=4, lab1=.L1322, lab2=, loff=0
!   reloc[309]: knd=0, off=2856, siz=4, lab1=.L1329, lab2=, loff=0
!   reloc[310]: knd=0, off=2866, siz=4, lab1=.L1334, lab2=, loff=0
!   reloc[311]: knd=0, off=2874, siz=4, lab1=.L1343, lab2=, loff=0
!   reloc[312]: knd=0, off=2882, siz=4, lab1=.L1347, lab2=, loff=0
!   reloc[313]: knd=0, off=2890, siz=4, lab1=.L1353, lab2=, loff=0
!   reloc[314]: knd=0, off=2900, siz=4, lab1=.L1356, lab2=, loff=0
!   reloc[315]: knd=0, off=2910, siz=4, lab1=.L1359, lab2=, loff=0
!   reloc[316]: knd=0, off=2920, siz=4, lab1=.L1360, lab2=, loff=0
!   reloc[317]: knd=0, off=2928, siz=4, lab1=.L1361, lab2=, loff=0
!   reloc[318]: knd=0, off=2936, siz=4, lab1=.L1362, lab2=, loff=0
!   reloc[319]: knd=0, off=2944, siz=4, lab1=.L1364, lab2=, loff=0
!   reloc[320]: knd=0, off=2952, siz=4, lab1=.L1373, lab2=, loff=0
!   reloc[321]: knd=0, off=2960, siz=4, lab1=.L1377, lab2=, loff=0
!   reloc[322]: knd=0, off=2968, siz=4, lab1=.L1378, lab2=, loff=0
!   reloc[323]: knd=0, off=2976, siz=4, lab1=.L1379, lab2=, loff=0
!   reloc[324]: knd=0, off=2984, siz=4, lab1=.L1380, lab2=, loff=0
!   reloc[325]: knd=0, off=2992, siz=4, lab1=.L1386, lab2=, loff=0
!   reloc[326]: knd=0, off=3002, siz=4, lab1=.L1390, lab2=, loff=0
!   reloc[327]: knd=0, off=3012, siz=4, lab1=.L1392, lab2=, loff=0
!   reloc[328]: knd=0, off=3022, siz=4, lab1=.L1395, lab2=, loff=0
!   reloc[329]: knd=0, off=3030, siz=4, lab1=.L1404, lab2=, loff=0
!   reloc[330]: knd=0, off=3038, siz=4, lab1=.L1408, lab2=, loff=0
!   reloc[331]: knd=0, off=3046, siz=4, lab1=.L1409, lab2=, loff=0
!   reloc[332]: knd=0, off=3054, siz=4, lab1=.L1410, lab2=, loff=0
!   reloc[333]: knd=0, off=3062, siz=4, lab1=.L1411, lab2=, loff=0
!   reloc[334]: knd=0, off=3070, siz=4, lab1=.L1417, lab2=, loff=0
!   reloc[335]: knd=0, off=3080, siz=4, lab1=.L1420, lab2=, loff=0
!   reloc[336]: knd=0, off=3090, siz=4, lab1=.L1423, lab2=, loff=0
!   reloc[337]: knd=0, off=3098, siz=4, lab1=.L1432, lab2=, loff=0
!   reloc[338]: knd=0, off=3106, siz=4, lab1=.L1436, lab2=, loff=0
!   reloc[339]: knd=0, off=3114, siz=4, lab1=.L1437, lab2=, loff=0
!   reloc[340]: knd=0, off=3122, siz=4, lab1=.L1438, lab2=, loff=0
!   reloc[341]: knd=0, off=3130, siz=4, lab1=.L1439, lab2=, loff=0
!   reloc[342]: knd=0, off=3138, siz=4, lab1=.L1445, lab2=, loff=0
!   reloc[343]: knd=0, off=3148, siz=4, lab1=.L1448, lab2=, loff=0
!   reloc[344]: knd=0, off=3158, siz=4, lab1=.L1451, lab2=, loff=0
!   reloc[345]: knd=0, off=3166, siz=4, lab1=.L1460, lab2=, loff=0
!   reloc[346]: knd=0, off=3174, siz=4, lab1=.L1464, lab2=, loff=0
!   reloc[347]: knd=0, off=3182, siz=4, lab1=.L1465, lab2=, loff=0
!   reloc[348]: knd=0, off=3190, siz=4, lab1=.L1466, lab2=, loff=0
!   reloc[349]: knd=0, off=3198, siz=4, lab1=.L1467, lab2=, loff=0
!   reloc[350]: knd=0, off=3206, siz=4, lab1=.L1473, lab2=, loff=0
!   reloc[351]: knd=0, off=3216, siz=4, lab1=.L1476, lab2=, loff=0
!   reloc[352]: knd=0, off=3226, siz=4, lab1=.L1479, lab2=, loff=0
!   reloc[353]: knd=0, off=3234, siz=4, lab1=.L1488, lab2=, loff=0
!   reloc[354]: knd=0, off=3242, siz=4, lab1=.L1492, lab2=, loff=0
!   reloc[355]: knd=0, off=3250, siz=4, lab1=.L1493, lab2=, loff=0
!   reloc[356]: knd=0, off=3258, siz=4, lab1=.L1494, lab2=, loff=0
!   reloc[357]: knd=0, off=3266, siz=4, lab1=.L1495, lab2=, loff=0
!   reloc[358]: knd=0, off=3274, siz=4, lab1=.L1501, lab2=, loff=0
!   reloc[359]: knd=0, off=3284, siz=4, lab1=.L1504, lab2=, loff=0
!   reloc[360]: knd=0, off=3294, siz=4, lab1=.L1507, lab2=, loff=0
!   reloc[361]: knd=0, off=3302, siz=4, lab1=.L1516, lab2=, loff=0
!   reloc[362]: knd=0, off=3310, siz=4, lab1=.L1520, lab2=, loff=0
!   reloc[363]: knd=0, off=3318, siz=4, lab1=.L1521, lab2=, loff=0
!   reloc[364]: knd=0, off=3326, siz=4, lab1=.L1522, lab2=, loff=0
!   reloc[365]: knd=0, off=3334, siz=4, lab1=.L1523, lab2=, loff=0
!   reloc[366]: knd=0, off=3342, siz=4, lab1=.L1529, lab2=, loff=0
!   reloc[367]: knd=0, off=3352, siz=4, lab1=.L1532, lab2=, loff=0
!   reloc[368]: knd=0, off=3362, siz=4, lab1=.L1535, lab2=, loff=0
!   reloc[369]: knd=0, off=3370, siz=4, lab1=.L1544, lab2=, loff=0
!   reloc[370]: knd=0, off=3378, siz=4, lab1=.L1548, lab2=, loff=0
!   reloc[371]: knd=0, off=3386, siz=4, lab1=.L1549, lab2=, loff=0
!   reloc[372]: knd=0, off=3394, siz=4, lab1=.L1550, lab2=, loff=0
!   reloc[373]: knd=0, off=3402, siz=4, lab1=.L1551, lab2=, loff=0
!   reloc[374]: knd=0, off=3410, siz=4, lab1=.L1557, lab2=, loff=0
!   reloc[375]: knd=0, off=3420, siz=4, lab1=.L1560, lab2=, loff=0
!   reloc[376]: knd=0, off=3430, siz=4, lab1=.L1563, lab2=, loff=0
!   reloc[377]: knd=0, off=3438, siz=4, lab1=.L1572, lab2=, loff=0
!   reloc[378]: knd=0, off=3446, siz=4, lab1=.L1576, lab2=, loff=0
!   reloc[379]: knd=0, off=3454, siz=4, lab1=.L1577, lab2=, loff=0
!   reloc[380]: knd=0, off=3462, siz=4, lab1=.L1578, lab2=, loff=0
!   reloc[381]: knd=0, off=3470, siz=4, lab1=.L1579, lab2=, loff=0
!   reloc[382]: knd=0, off=3478, siz=4, lab1=.L1585, lab2=, loff=0
!   reloc[383]: knd=0, off=3488, siz=4, lab1=.L1588, lab2=, loff=0
!   reloc[384]: knd=0, off=3498, siz=4, lab1=.L1591, lab2=, loff=0
!   reloc[385]: knd=0, off=3506, siz=4, lab1=.L1600, lab2=, loff=0
!   reloc[386]: knd=0, off=3514, siz=4, lab1=.L1604, lab2=, loff=0
!   reloc[387]: knd=0, off=3522, siz=4, lab1=.L1605, lab2=, loff=0
!   reloc[388]: knd=0, off=3530, siz=4, lab1=.L1606, lab2=, loff=0
!   reloc[389]: knd=0, off=3538, siz=4, lab1=.L1607, lab2=, loff=0
!   reloc[390]: knd=0, off=3546, siz=4, lab1=.L1613, lab2=, loff=0
!   reloc[391]: knd=0, off=3556, siz=4, lab1=.L1616, lab2=, loff=0
!   reloc[392]: knd=0, off=3566, siz=4, lab1=.L1619, lab2=, loff=0
!   reloc[393]: knd=0, off=3574, siz=4, lab1=.L1628, lab2=, loff=0
!   reloc[394]: knd=0, off=3582, siz=4, lab1=.L1632, lab2=, loff=0
!   reloc[395]: knd=0, off=3590, siz=4, lab1=.L1633, lab2=, loff=0
!   reloc[396]: knd=0, off=3598, siz=4, lab1=.L1634, lab2=, loff=0
!   reloc[397]: knd=0, off=3606, siz=4, lab1=.L1635, lab2=, loff=0
!   reloc[398]: knd=0, off=3614, siz=4, lab1=.L1641, lab2=, loff=0
!   reloc[399]: knd=0, off=3624, siz=4, lab1=.L1644, lab2=, loff=0
!   reloc[400]: knd=0, off=3634, siz=4, lab1=.L1647, lab2=, loff=0
!   reloc[401]: knd=0, off=3642, siz=4, lab1=.L1656, lab2=, loff=0
!   reloc[402]: knd=0, off=3650, siz=4, lab1=.L1660, lab2=, loff=0
!   reloc[403]: knd=0, off=3658, siz=4, lab1=.L1661, lab2=, loff=0
!   reloc[404]: knd=0, off=3666, siz=4, lab1=.L1662, lab2=, loff=0
!   reloc[405]: knd=0, off=3674, siz=4, lab1=.L1663, lab2=, loff=0
!   reloc[406]: knd=0, off=3682, siz=4, lab1=.L1669, lab2=, loff=0
!   reloc[407]: knd=0, off=3692, siz=4, lab1=.L1672, lab2=, loff=0
!   reloc[408]: knd=0, off=3702, siz=4, lab1=.L1675, lab2=, loff=0
!   reloc[409]: knd=0, off=3710, siz=4, lab1=.L1684, lab2=, loff=0
!   reloc[410]: knd=0, off=3718, siz=4, lab1=.L1688, lab2=, loff=0
!   reloc[411]: knd=0, off=3726, siz=4, lab1=.L1689, lab2=, loff=0
!   reloc[412]: knd=0, off=3734, siz=4, lab1=.L1690, lab2=, loff=0
!   reloc[413]: knd=0, off=3742, siz=4, lab1=.L1691, lab2=, loff=0
!   reloc[414]: knd=0, off=3750, siz=4, lab1=.L1697, lab2=, loff=0
!   reloc[415]: knd=0, off=3760, siz=4, lab1=.L1700, lab2=, loff=0
!   reloc[416]: knd=0, off=3770, siz=4, lab1=.L1703, lab2=, loff=0
!   reloc[417]: knd=0, off=3778, siz=4, lab1=.L1712, lab2=, loff=0
!   reloc[418]: knd=0, off=3786, siz=4, lab1=.L1716, lab2=, loff=0
!   reloc[419]: knd=0, off=3794, siz=4, lab1=.L1717, lab2=, loff=0
!   reloc[420]: knd=0, off=3802, siz=4, lab1=.L1718, lab2=, loff=0
!   reloc[421]: knd=0, off=3810, siz=4, lab1=.L1719, lab2=, loff=0
!   reloc[422]: knd=0, off=3818, siz=4, lab1=.L1725, lab2=, loff=0
!   reloc[423]: knd=0, off=3828, siz=4, lab1=.L1728, lab2=, loff=0
!   reloc[424]: knd=0, off=3838, siz=4, lab1=.L1731, lab2=, loff=0
!   reloc[425]: knd=0, off=3846, siz=4, lab1=.L1740, lab2=, loff=0
!   reloc[426]: knd=0, off=3854, siz=4, lab1=.L1744, lab2=, loff=0
!   reloc[427]: knd=0, off=3862, siz=4, lab1=.L1745, lab2=, loff=0
!   reloc[428]: knd=0, off=3870, siz=4, lab1=.L1746, lab2=, loff=0
!   reloc[429]: knd=0, off=3878, siz=4, lab1=.L1747, lab2=, loff=0
!   reloc[430]: knd=0, off=3886, siz=4, lab1=.L1753, lab2=, loff=0
!   reloc[431]: knd=0, off=3896, siz=4, lab1=.L1756, lab2=, loff=0
!   reloc[432]: knd=0, off=3906, siz=4, lab1=.L1758, lab2=, loff=0
!   reloc[433]: knd=0, off=3916, siz=4, lab1=.L1760, lab2=, loff=0
!   reloc[434]: knd=0, off=3924, siz=4, lab1=.L1763, lab2=, loff=0
!   reloc[435]: knd=0, off=3935, siz=4, lab1=.L1766, lab2=, loff=0
	.section ".debug_line"
	.byte 0x00,0x00,0x0f,0x68,0x00,0x02,0x00,0x00
	.byte 0x00,0x78,0x04,0x00,0xff,0x04,0x0a,0x00
	.byte 0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x01
	.byte 0x2f,0x68,0x6f,0x6d,0x65,0x2f,0x66,0x61
	.byte 0x63,0x75,0x6c,0x74,0x79,0x2f,0x6b,0x6f
	.byte 0x70,0x70,0x65,0x6c,0x2f,0x74,0x65,0x61
	.byte 0x63,0x68,0x2f,0x67,0x70,0x63,0x6f,0x6d
	.byte 0x2f,0x67,0x70,0x75,0x70,0x2f,0x72,0x73
	.byte 0x69,0x6d,0x2f,0x6d,0x65,0x73,0x61,0x2f
	.byte 0x6e,0x6f,0x2d,0x6f,0x70,0x74,0x00,0x47
	.byte 0x4c,0x00,0x00,0x6c,0x6f,0x67,0x69,0x63
	.byte 0x2e,0x63,0x00,0x01,0x00,0x00,0x74,0x79
	.byte 0x70,0x65,0x73,0x2e,0x68,0x00,0x01,0x00
	.byte 0x00,0x67,0x6c,0x2e,0x68,0x00,0x02,0x00
	.byte 0x00,0x64,0x64,0x2e,0x68,0x00,0x01,0x00
	.byte 0x00,0x70,0x62,0x2e,0x68,0x00,0x01,0x00
	.byte 0x00,0x00,0x00,0x05,0x02
	.uaword gl_LogicOp
	.byte 0x00,0x05,0x02
	.uaword .L18
	.byte 0x06,0x03,0xc3,0x00,0x01,0x00,0x05,0x02
	.uaword .L22
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L24
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L31
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L50
	.byte 0x03,0x11,0x01,0x00,0x05,0x02
	.uaword .L51
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L52
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L54
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L56
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L59
	.byte 0x03,0x6a,0x01,0x00,0x05,0x02
	.uaword .L62
	.byte 0x03,0x18,0x01,0x02,0x01,0x00,0x01,0x01
	.byte 0x00,0x05,0x02
	.uaword gl_logicop_ci_span
	.byte 0x00,0x05,0x02
	.uaword .L69
	.byte 0x06,0x03,0xef,0x00,0x01,0x00,0x05,0x02
	.uaword .L73
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L78
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L87
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L91
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L97
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L100
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L103
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L112
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L116
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L122
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L125
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L127
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L130
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L139
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L143
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L149
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L152
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L155
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L164
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L168
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L174
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L177
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L180
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L189
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L193
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L199
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L202
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L205
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L214
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L218
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L224
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L227
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L230
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L239
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L243
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L249
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L252
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L255
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L264
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L268
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L274
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L277
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L280
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L289
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L293
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L299
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L302
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L305
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L314
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L318
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L324
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L327
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L330
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L339
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L343
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L349
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L352
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L355
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L364
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L368
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L374
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L377
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L380
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L389
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L393
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L399
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L402
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L405
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L414
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L418
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L424
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L427
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L430
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L439
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L443
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L449
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L452
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L454
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L458
	.byte 0x03,0x92,0x7f,0x01,0x00,0x05,0x02
	.uaword .L461
	.byte 0x03,0xf0,0x00,0x01,0x02,0x01,0x00,0x01
	.byte 0x01,0x00,0x05,0x02
	.uaword gl_logicop_ci_pixels
	.byte 0x00,0x05,0x02
	.uaword .L468
	.byte 0x06,0x03,0xf1,0x01,0x01,0x00,0x05,0x02
	.uaword .L472
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L477
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L486
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L490
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L496
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L499
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L502
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L511
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L515
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L521
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L524
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L526
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L529
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L538
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L542
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L548
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L551
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L554
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L563
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L567
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L573
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L576
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L579
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L588
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L592
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L598
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L601
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L604
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L613
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L617
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L623
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L626
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L629
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L638
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L642
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L648
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L651
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L654
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L663
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L667
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L673
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L676
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L679
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L688
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L692
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L698
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L701
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L704
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L713
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L717
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L723
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L726
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L729
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L738
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L742
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L748
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L751
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L754
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L763
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L767
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L773
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L776
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L779
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L788
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L792
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L798
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L801
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L804
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L813
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L817
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L823
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L826
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L829
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L838
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L842
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L848
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L851
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L853
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L857
	.byte 0x03,0x92,0x7f,0x01,0x00,0x05,0x02
	.uaword .L860
	.byte 0x03,0xf0,0x00,0x01,0x02,0x01,0x00,0x01
	.byte 0x01,0x00,0x05,0x02
	.uaword gl_logicop_rgba_span
	.byte 0x00,0x05,0x02
	.uaword .L867
	.byte 0x06,0x03,0xf6,0x02,0x01,0x00,0x05,0x02
	.uaword .L871
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L876
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L885
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L889
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L895
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L898
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L901
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L902
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L903
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L904
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L906
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L915
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L919
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L920
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L921
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L922
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L928
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L932
	.byte 0x03,0x09,0x01,0x00,0x05,0x02
	.uaword .L934
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L937
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L946
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L950
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L951
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L952
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L953
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L959
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L962
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L965
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L974
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L978
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L979
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L980
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L981
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L987
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L990
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L993
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1002
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1006
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1007
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1008
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1009
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1015
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1018
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1021
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1030
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1034
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1035
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1036
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1037
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1043
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1046
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1049
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1058
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1062
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1063
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1064
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1065
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1071
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1074
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1077
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1086
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1090
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1091
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1092
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1093
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1099
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1102
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1105
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1114
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1118
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1119
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1120
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1121
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1127
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1130
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1133
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1142
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1146
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1147
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1148
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1149
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1155
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1158
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1161
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1170
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1174
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1175
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1176
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1177
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1183
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1186
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1189
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1198
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1202
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1203
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1204
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1205
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1211
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1214
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1217
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1226
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1230
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1231
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1232
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1233
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1239
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1242
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1245
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1254
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1258
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1259
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1260
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1261
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1267
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1270
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1273
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1282
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1286
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1287
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1288
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1289
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1295
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1298
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1300
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1302
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1305
	.byte 0x03,0xe0,0x7e,0x01,0x00,0x05,0x02
	.uaword .L1308
	.byte 0x03,0xa2,0x01,0x01,0x02,0x01,0x00,0x01
	.byte 0x01,0x00,0x05,0x02
	.uaword gl_logicop_rgba_pixels
	.byte 0x00,0x05,0x02
	.uaword .L1315
	.byte 0x06,0x03,0xad,0x04,0x01,0x00,0x05,0x02
	.uaword .L1318
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1322
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1329
	.byte 0x03,0x04,0x01,0x00,0x05,0x02
	.uaword .L1334
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1343
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1347
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1353
	.byte 0x03,0x7e,0x01,0x00,0x05,0x02
	.uaword .L1356
	.byte 0x03,0x05,0x01,0x00,0x05,0x02
	.uaword .L1359
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1360
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1361
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1362
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1364
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1373
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1377
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1378
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1379
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1380
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1386
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1390
	.byte 0x03,0x09,0x01,0x00,0x05,0x02
	.uaword .L1392
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1395
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1404
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1408
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1409
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1410
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1411
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1417
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1420
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1423
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1432
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1436
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1437
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1438
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1439
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1445
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1448
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1451
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1460
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1464
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1465
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1466
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1467
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1473
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1476
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1479
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1488
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1492
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1493
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1494
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1495
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1501
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1504
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1507
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1516
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1520
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1521
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1522
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1523
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1529
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1532
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1535
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1544
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1548
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1549
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1550
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1551
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1557
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1560
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1563
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1572
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1576
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1577
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1578
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1579
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1585
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1588
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1591
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1600
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1604
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1605
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1606
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1607
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1613
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1616
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1619
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1628
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1632
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1633
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1634
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1635
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1641
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1644
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1647
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1656
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1660
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1661
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1662
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1663
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1669
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1672
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1675
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1684
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1688
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1689
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1690
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1691
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1697
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1700
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1703
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1712
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1716
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1717
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1718
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1719
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1725
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1728
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1731
	.byte 0x0d,0x00,0x05,0x02
	.uaword .L1740
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1744
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1745
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1746
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1747
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1753
	.byte 0x03,0x7b,0x01,0x00,0x05,0x02
	.uaword .L1756
	.byte 0x03,0x08,0x01,0x00,0x05,0x02
	.uaword .L1758
	.byte 0x03,0x03,0x01,0x00,0x05,0x02
	.uaword .L1760
	.byte 0x0c,0x00,0x05,0x02
	.uaword .L1763
	.byte 0x03,0xe0,0x7e,0x01,0x00,0x05,0x02
	.uaword .L1766
	.byte 0x03,0xa2,0x01,0x01,0x02,0x01,0x00,0x01
	.byte 0x01
!  End sdCreateSection
!  Begin sdCreateSection : .debug_abbrev
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
	.section ".debug_abbrev"
	.byte 0x01,0x11,0x01,0x03,0x08,0x13,0x0b,0x1b
	.byte 0x08,0x85,0x44,0x08,0x87,0x44,0x08,0x25
	.byte 0x08,0x10,0x06,0x00,0x00,0x02,0x2e,0x01
	.byte 0x03,0x08,0x3f,0x0c,0x17,0x0b,0x3a,0x0b
	.byte 0x3b,0x0b,0x11,0x01,0x12,0x01,0x40,0x0a
	.byte 0x27,0x0c,0x88,0x44,0x0b,0x01,0x13,0x00
	.byte 0x00,0x03,0x05,0x00,0x49,0x13,0x03,0x08
	.byte 0x3a,0x0b,0x3b,0x0b,0x02,0x0a,0x00,0x00
	.byte 0x04,0x24,0x00,0x03,0x08,0x3e,0x0b,0x0b
	.byte 0x0b,0x00,0x00,0x05,0x16,0x00,0x49,0x13
	.byte 0x03,0x08,0x3a,0x0b,0x00,0x00,0x06,0x13
	.byte 0x00,0x03,0x08,0x3c,0x0c,0x00,0x00,0x07
	.byte 0x0f,0x00,0x49,0x13,0x00,0x00,0x08,0x01
	.byte 0x01,0x49,0x13,0x0b,0x0b,0x01,0x13,0x00
	.byte 0x00,0x09,0x21,0x00,0x49,0x13,0x2f,0x0b
	.byte 0x00,0x00,0x0a,0x04,0x01,0x0b,0x0b,0x3a
	.byte 0x0b,0x01,0x13,0x00,0x00,0x0b,0x28,0x00
	.byte 0x03,0x08,0x1c,0x0d,0x00,0x00,0x0c,0x13
	.byte 0x01,0x03,0x08,0x0b,0x0b,0x3a,0x0b,0x01
	.byte 0x13,0x00,0x00,0x0d,0x0d,0x00,0x03,0x08
	.byte 0x49,0x13,0x38,0x0a,0x00,0x00,0x0e,0x01
	.byte 0x01,0x49,0x13,0x0b,0x05,0x01,0x13,0x00
	.byte 0x00,0x0f,0x21,0x00,0x49,0x13,0x2f,0x05
	.byte 0x00,0x00,0x10,0x13,0x01,0x03,0x08,0x0b
	.byte 0x05,0x3a,0x0b,0x01,0x13,0x00,0x00,0x11
	.byte 0x26,0x00,0x49,0x13,0x00,0x00,0x12,0x15
	.byte 0x01,0x27,0x0c,0x88,0x44,0x0b,0x01,0x13
	.byte 0x00,0x00,0x13,0x05,0x00,0x49,0x13,0x00
	.byte 0x00,0x14,0x15,0x01,0x27,0x0c,0x49,0x13
	.byte 0x88,0x44,0x0b,0x01,0x13,0x00,0x00,0x15
	.byte 0x15,0x00,0x27,0x0c,0x49,0x13,0x88,0x44
	.byte 0x0b,0x00,0x00,0x16,0x13,0x01,0x03,0x08
	.byte 0x0b,0x06,0x3a,0x0b,0x01,0x13,0x00,0x00
	.byte 0x17,0x34,0x00,0x03,0x08,0x49,0x13,0x17
	.byte 0x0b,0x3a,0x0b,0x3b,0x0b,0x02,0x0a,0x00
	.byte 0x00,0x18,0x2e,0x01,0x03,0x08,0x3f,0x0c
	.byte 0x17,0x0b,0x3a,0x0b,0x3b,0x05,0x11,0x01
	.byte 0x12,0x01,0x40,0x0a,0x27,0x0c,0x88,0x44
	.byte 0x0b,0x01,0x13,0x00,0x00,0x19,0x05,0x00
	.byte 0x49,0x13,0x03,0x08,0x3a,0x0b,0x3b,0x05
	.byte 0x02,0x0a,0x00,0x00,0x1a,0x34,0x00,0x03
	.byte 0x08,0x49,0x13,0x17,0x0b,0x3a,0x0b,0x3b
	.byte 0x05,0x02,0x0a,0x00,0x00,0x1b,0x0b,0x01
	.byte 0x11,0x01,0x12,0x01,0x00,0x00,0x1c,0x2e
	.byte 0x01,0x03,0x08,0x3f,0x0c,0x3c,0x0c,0x27
	.byte 0x0c,0x88,0x44,0x0b,0x01,0x13,0x00,0x00
	.byte 0x1d,0x2e,0x01,0x03,0x08,0x3f,0x0c,0x3c
	.byte 0x0c,0x27,0x0c,0x88,0x44,0x0b,0x00,0x00
	.byte 0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_pubnames
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_info, lab2=, loff=0
	.section ".debug_pubnames"
	.byte 0x00,0x00,0x00,0x84,0x00,0x02
	.uaword %section_symbol(".debug_info")
	.byte 0x00,0x00,0x9c,0xcc,0x00,0x00,0x01,0x01
	.byte 0x67,0x6c,0x5f,0x4c,0x6f,0x67,0x69,0x63
	.byte 0x4f,0x70,0x00,0x00,0x00,0x96,0xa7,0x67
	.byte 0x6c,0x5f,0x6c,0x6f,0x67,0x69,0x63,0x6f
	.byte 0x70,0x5f,0x63,0x69,0x5f,0x73,0x70,0x61
	.byte 0x6e,0x00,0x00,0x00,0x97,0x59,0x67,0x6c
	.byte 0x5f,0x6c,0x6f,0x67,0x69,0x63,0x6f,0x70
	.byte 0x5f,0x63,0x69,0x5f,0x70,0x69,0x78,0x65
	.byte 0x6c,0x73,0x00,0x00,0x00,0x98,0x23,0x67
	.byte 0x6c,0x5f,0x6c,0x6f,0x67,0x69,0x63,0x6f
	.byte 0x70,0x5f,0x72,0x67,0x62,0x61,0x5f,0x73
	.byte 0x70,0x61,0x6e,0x00,0x00,0x00,0x99,0xea
	.byte 0x67,0x6c,0x5f,0x6c,0x6f,0x67,0x69,0x63
	.byte 0x6f,0x70,0x5f,0x72,0x67,0x62,0x61,0x5f
	.byte 0x70,0x69,0x78,0x65,0x6c,0x73,0x00,0x00
	.byte 0x00,0x00,0x00,0x00,0x00,0x00
!  End sdCreateSection
!  Begin sdCreateSection : .debug_typenames
!  Section Info: link_name/strtab=, entsize=0x1, adralign=0x1, flags=0x0
!  Section Data Blocks:
!   reloc[0]: knd=2, off=6, siz=4, lab1=.debug_info, lab2=, loff=0
	.section ".debug_typenames"
	.byte 0x00,0x00,0x04,0x34,0x00,0x02
	.uaword %section_symbol(".debug_info")
	.byte 0x00,0x00,0x9c,0xcc,0x00,0x00,0x01,0x4a
	.byte 0x47,0x4c,0x69,0x6e,0x74,0x00,0x00,0x00
	.byte 0x01,0x73,0x47,0x4c,0x75,0x69,0x6e,0x74
	.byte 0x00,0x00,0x00,0x01,0x89,0x47,0x4c,0x66
	.byte 0x6c,0x6f,0x61,0x74,0x00,0x00,0x00,0x01
	.byte 0xb0,0x00,0x00,0x00,0x31,0x4c,0x47,0x4c
	.byte 0x65,0x6e,0x75,0x6d,0x00,0x00,0x00,0x31
	.byte 0x6a,0x47,0x4c,0x75,0x62,0x79,0x74,0x65
	.byte 0x00,0x00,0x00,0x31,0x8a,0x67,0x6c,0x5f
	.byte 0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f
	.byte 0x69,0x6d,0x61,0x67,0x65,0x00,0x00,0x00
	.byte 0x32,0xbc,0x47,0x4c,0x62,0x6f,0x6f,0x6c
	.byte 0x65,0x61,0x6e,0x00,0x00,0x00,0x34,0xd1
	.byte 0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x53
	.byte 0x61,0x6d,0x70,0x6c,0x65,0x46,0x75,0x6e
	.byte 0x63,0x00,0x00,0x00,0x32,0xcc,0x67,0x6c
	.byte 0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65
	.byte 0x5f,0x6f,0x62,0x6a,0x65,0x63,0x74,0x00
	.byte 0x00,0x00,0x34,0xee,0x67,0x6c,0x5f,0x73
	.byte 0x68,0x61,0x72,0x65,0x64,0x5f,0x73,0x74
	.byte 0x61,0x74,0x65,0x00,0x00,0x00,0x3d,0x12
	.byte 0x47,0x4c,0x76,0x6f,0x69,0x64,0x00,0x00
	.byte 0x00,0x3d,0x24,0x67,0x6c,0x5f,0x69,0x6d
	.byte 0x61,0x67,0x65,0x00,0x00,0x00,0x55,0x47
	.byte 0x67,0x6c,0x5f,0x61,0x70,0x69,0x5f,0x74
	.byte 0x61,0x62,0x6c,0x65,0x00,0x00,0x00,0x63
	.byte 0xeb,0x67,0x6c,0x5f,0x76,0x69,0x73,0x75
	.byte 0x61,0x6c,0x00,0x00,0x00,0x65,0x93,0x47
	.byte 0x4c,0x76,0x69,0x73,0x75,0x61,0x6c,0x00
	.byte 0x00,0x00,0x65,0xa7,0x47,0x4c,0x64,0x65
	.byte 0x70,0x74,0x68,0x00,0x00,0x00,0x65,0xba
	.byte 0x47,0x4c,0x73,0x74,0x65,0x6e,0x63,0x69
	.byte 0x6c,0x00,0x00,0x00,0x65,0xd8,0x47,0x4c
	.byte 0x61,0x63,0x63,0x75,0x6d,0x00,0x00,0x00
	.byte 0x65,0xeb,0x67,0x6c,0x5f,0x66,0x72,0x61
	.byte 0x6d,0x65,0x5f,0x62,0x75,0x66,0x66,0x65
	.byte 0x72,0x00,0x00,0x00,0x66,0xc2,0x47,0x4c
	.byte 0x66,0x72,0x61,0x6d,0x65,0x62,0x75,0x66
	.byte 0x66,0x65,0x72,0x00,0x00,0x00,0x6d,0x20
	.byte 0x70,0x6f,0x69,0x6e,0x74,0x73,0x5f,0x66
	.byte 0x75,0x6e,0x63,0x00,0x00,0x00,0x6d,0x53
	.byte 0x6c,0x69,0x6e,0x65,0x5f,0x66,0x75,0x6e
	.byte 0x63,0x00,0x00,0x00,0x6d,0x89,0x74,0x72
	.byte 0x69,0x61,0x6e,0x67,0x6c,0x65,0x5f,0x66
	.byte 0x75,0x6e,0x63,0x00,0x00,0x00,0x6d,0xc8
	.byte 0x71,0x75,0x61,0x64,0x5f,0x66,0x75,0x6e
	.byte 0x63,0x00,0x00,0x00,0x6d,0xfe,0x72,0x65
	.byte 0x63,0x74,0x5f,0x66,0x75,0x6e,0x63,0x00
	.byte 0x00,0x00,0x6f,0xe5,0x64,0x64,0x5f,0x66
	.byte 0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x5f
	.byte 0x74,0x61,0x62,0x6c,0x65,0x00,0x00,0x00
	.byte 0x75,0x1d,0x47,0x4c,0x62,0x69,0x74,0x66
	.byte 0x69,0x65,0x6c,0x64,0x00,0x00,0x00,0x75
	.byte 0x33,0x67,0x6c,0x5f,0x61,0x74,0x74,0x72
	.byte 0x69,0x62,0x5f,0x6e,0x6f,0x64,0x65,0x00
	.byte 0x00,0x00,0x75,0x93,0x67,0x6c,0x5f,0x61
	.byte 0x63,0x63,0x75,0x6d,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x75,0xe0
	.byte 0x67,0x6c,0x5f,0x63,0x6f,0x6c,0x6f,0x72
	.byte 0x62,0x75,0x66,0x66,0x65,0x72,0x5f,0x61
	.byte 0x74,0x74,0x72,0x69,0x62,0x00,0x00,0x00
	.byte 0x77,0xf5,0x67,0x6c,0x5f,0x63,0x75,0x72
	.byte 0x72,0x65,0x6e,0x74,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x78,0xdf
	.byte 0x67,0x6c,0x5f,0x64,0x65,0x70,0x74,0x68
	.byte 0x62,0x75,0x66,0x66,0x65,0x72,0x5f,0x61
	.byte 0x74,0x74,0x72,0x69,0x62,0x00,0x00,0x00
	.byte 0x79,0x32,0x67,0x6c,0x5f,0x65,0x76,0x61
	.byte 0x6c,0x5f,0x61,0x74,0x74,0x72,0x69,0x62
	.byte 0x00,0x00,0x00,0x7b,0xa8,0x67,0x6c,0x5f
	.byte 0x66,0x6f,0x67,0x5f,0x61,0x74,0x74,0x72
	.byte 0x69,0x62,0x00,0x00,0x00,0x7c,0x21,0x67
	.byte 0x6c,0x5f,0x68,0x69,0x6e,0x74,0x5f,0x61
	.byte 0x74,0x74,0x72,0x69,0x62,0x00,0x00,0x00
	.byte 0x7c,0xf4,0x67,0x6c,0x5f,0x6c,0x69,0x67
	.byte 0x68,0x74,0x00,0x00,0x00,0x7f,0x9b,0x67
	.byte 0x6c,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d
	.byte 0x6f,0x64,0x65,0x6c,0x00,0x00,0x00,0x80
	.byte 0x3c,0x67,0x6c,0x5f,0x6d,0x61,0x74,0x65
	.byte 0x72,0x69,0x61,0x6c,0x00,0x00,0x00,0x81
	.byte 0x2c,0x67,0x6c,0x5f,0x6c,0x69,0x67,0x68
	.byte 0x74,0x5f,0x61,0x74,0x74,0x72,0x69,0x62
	.byte 0x00,0x00,0x00,0x82,0x4d,0x47,0x4c,0x75
	.byte 0x73,0x68,0x6f,0x72,0x74,0x00,0x00,0x00
	.byte 0x82,0x5c,0x67,0x6c,0x5f,0x6c,0x69,0x6e
	.byte 0x65,0x5f,0x61,0x74,0x74,0x72,0x69,0x62
	.byte 0x00,0x00,0x00,0x82,0xd5,0x67,0x6c,0x5f
	.byte 0x6c,0x69,0x73,0x74,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x83,0xbb
	.byte 0x67,0x6c,0x5f,0x70,0x69,0x78,0x65,0x6c
	.byte 0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x00
	.byte 0x00,0x00,0x86,0x8b,0x67,0x6c,0x5f,0x70
	.byte 0x6f,0x69,0x6e,0x74,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x87,0x04
	.byte 0x67,0x6c,0x5f,0x70,0x6f,0x6c,0x79,0x67
	.byte 0x6f,0x6e,0x5f,0x61,0x74,0x74,0x72,0x69
	.byte 0x62,0x00,0x00,0x00,0x88,0x48,0x47,0x4c
	.byte 0x73,0x69,0x7a,0x65,0x69,0x00,0x00,0x00
	.byte 0x88,0x56,0x67,0x6c,0x5f,0x73,0x63,0x69
	.byte 0x73,0x73,0x6f,0x72,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x88,0xb1
	.byte 0x67,0x6c,0x5f,0x73,0x74,0x65,0x6e,0x63
	.byte 0x69,0x6c,0x5f,0x61,0x74,0x74,0x72,0x69
	.byte 0x62,0x00,0x00,0x00,0x8a,0x0b,0x67,0x6c
	.byte 0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65
	.byte 0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x00
	.byte 0x00,0x00,0x8c,0x6d,0x67,0x6c,0x5f,0x74
	.byte 0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d
	.byte 0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x00
	.byte 0x00,0x00,0x8c,0xe7,0x67,0x6c,0x5f,0x76
	.byte 0x69,0x65,0x77,0x70,0x6f,0x72,0x74,0x5f
	.byte 0x61,0x74,0x74,0x72,0x69,0x62,0x00,0x00
	.byte 0x00,0x8d,0xa4,0x67,0x6c,0x5f,0x61,0x72
	.byte 0x72,0x61,0x79,0x5f,0x61,0x74,0x74,0x72
	.byte 0x69,0x62,0x00,0x00,0x00,0x90,0x4f,0x67
	.byte 0x6c,0x5f,0x70,0x69,0x78,0x65,0x6c,0x73
	.byte 0x74,0x6f,0x72,0x65,0x5f,0x61,0x74,0x74
	.byte 0x72,0x69,0x62,0x00,0x00,0x00,0x91,0x03
	.byte 0x67,0x6c,0x5f,0x31,0x64,0x5f,0x6d,0x61
	.byte 0x70,0x00,0x00,0x00,0x91,0x57,0x67,0x6c
	.byte 0x5f,0x32,0x64,0x5f,0x6d,0x61,0x70,0x00
	.byte 0x00,0x00,0x91,0xd1,0x67,0x6c,0x5f,0x65
	.byte 0x76,0x61,0x6c,0x75,0x61,0x74,0x6f,0x72
	.byte 0x73,0x00,0x00,0x00,0x93,0x5b,0x67,0x6c
	.byte 0x5f,0x66,0x65,0x65,0x64,0x62,0x61,0x63
	.byte 0x6b,0x00,0x00,0x00,0x93,0xd0,0x67,0x6c
	.byte 0x5f,0x73,0x65,0x6c,0x65,0x63,0x74,0x69
	.byte 0x6f,0x6e,0x00,0x00,0x00,0x95,0x8f,0x70
	.byte 0x69,0x78,0x65,0x6c,0x5f,0x62,0x75,0x66
	.byte 0x66,0x65,0x72,0x00,0x00,0x00,0x35,0x8f
	.byte 0x67,0x6c,0x5f,0x63,0x6f,0x6e,0x74,0x65
	.byte 0x78,0x74,0x00,0x00,0x00,0x96,0x92,0x47
	.byte 0x4c,0x63,0x6f,0x6e,0x74,0x65,0x78,0x74
	.byte 0x00,0x00,0x00,0x00,0x00,0x00
!  End sdCreateSection
